      Program Auto
      real C(1:20),xb(1:20),C1(1:20),fb,fp,porc,a,b,w,keff,flux,Pmax
      Integer m,nf,p,k,i,r,seed,j,int,j1,i1,n1,cont,aa
      integer,dimension(1,20) :: order
      real,allocatable,dimension (:,:):: x,v,xp,xb1          ! Declara a variável com dimensão não definida
      real,allocatable,dimension (:):: fit              ! Declara a variável com dimensão não definida
      integer:: NP
      real kmin,kmax,fmin,fmax,Pmi,Pma
      kmin=2.0
      kmax=0.0
      fmin=1.0E+16
      fmax=0.0
      Pmi=5.0
      Pma=0.0                                       ! Número de partículas NP = 100 (Definida inicialmente)
      fb=0
      aa=0
      vmax=0
      vmin=0
      seed=46
      open(155, File='fits.dat')
      open(166, File='limites.dat')
      open(167, File='velocidades.dat')
      open(168,File='picodepotencia.dat')
      open(169,File='keffsaida.dat')
      Write (*,*) ' Utilizar Rotina de I.A. para otimizacao de recarga?'
      Write (*,*) ' Ativar essa rotina ir  gerar calculos 2D!'
      Write (*,*) ' (1) Sim'
      Write (*,*) ' (2) Nao'
      write (*,*) '                 '
      Read  (*,*) k
      Write (*,*) ' Escolha uma opcao:'
      Write (*,*) ' (1) Elementos Combustiveis '
      Write (*,*) ' (2) Elementos nao combustiveis '
      Write (*,*) ' (3) Calculos 2D'
      Write (*,*) ' (4) Calculos 3D '
      write (*,*) '                 '
      Read  (*,*) i
      Write (*,*) ' Entre com o numero de particulas:'
      write (*,*) '                                  '
      Read  (*,*) NP
      write (*,*) 'O EC possui miniplacas digite?(0) para nÆo e (1) sim'
      read (*,*) aa
      allocate (x  (NP,20))   ! Alocação dinâmica
      allocate (v  (NP,20))   ! Alocação dinâmica
      allocate (xp (NP,20))   ! Alocação dinâmica
      allocate (fit(NP))      ! Alocação dinâmica
      
      If (k.eq.1)Write (*,*) 'Numero de interacoes do PSO?'
      write (*,*) '                 '
      If (k.eq.1)Read (*,*)int
      If(k.eq.1)write(*,*)'Digite um numero inteiro para usar de seed'
      write (*,*) '                 '
      if(k.eq.1)Read(*,*)seed
      If(k.ne.1)r=0
      If(k.eq.1)r=1
      If(k.eq.1)j=0
      If(k.eq.1)cont=0
      If (i.eq.1) go to 1
      If (i.eq.3) go to 3
      If (i.eq.4.and.k.eq.1) go to 3
      If (i.eq.4.and.k.eq.2) go to 4
2     nf=0
      open(125, File='inp1twodb.dat')
110   nf=nf+1
      call elemham(nf)
      call Elemhamsai (nf)
      write(*,*) 'elemenham ok'
      call hamtec
      Close(1)
      Close(2)
      Close(3)
      Close(7)
      Close(8)
      Close(11)
      Close(12)
      Close(13)
      Close(16)
      Close(18)
      Close(19)
      Close(20)
      Close(55)
      Close(60)
      Close(61)
      Close(5)
      write(*,*) 'Hammer ok'
      rewind(6)
      call HAMIPUT2DB (nf,6,125)
      rewind(6)
      Close(6)
      if (nf.lt.16) go to 110
      call Hamfinal(125)
      Close(125)
C     Abri o arquivo correspondente a biblioteca do 2DB
1     nf=0
      open(666,FILE='INP2A2DB.DAT')
111   nf=nf+1
      call elemleo (nf)
      Call LEOPD4
      Close(1)
      Close(3)
      Close(7)
      Close(5)
      Close(6)
      Close(8)
      Close(10)
      Write (*,*) 'Leo ok'
      Call Linxs
      Close(1)
      close(4)
      Close(5)
      Close(7)
      Close(8)
      Write (*,*) ' LINXS ok '
      Call autoConverd
      Write (*,*) 'CONVERD ok'
      Close(1)
      Close(2)
      call elemen2db (666)
      if(nf.lt.10) go to 111
      close (666)
      Call autoConverb
      Write (*,*) ' CONVERB ok'
      Close(1)
      Close(2)
3     if(r.ne.1) go to 101
      if(r.eq.1) go to 102
101   continue
      go to 103
C     Inicia rotina PSO
102   j=j+1
C     Puxa as queimas de combust¡vel do input original
      if(j.eq.1)call combust(C,aa)
      if(j.gt.1) go to 6661
C     gera as velocidades iniciais e posi‡äes iniciais
      do j1=1,NP,1
      do i1=1,20,1
      x(j1,i1)=-1+2*ran(seed)
      xp(j1,i1)=x(j1,i1)
      v(j1,i1)= 0.1*x(j1,i1)
      end do
      end do
6661  n1=0
104   n1=n1+1
      call ordern(x,order,n1)
      call reorgcom(C,C1,order)
      call input2dbcomb(C1,aa)
      close(1)
      close(2)
      close(3)

103   Call TWODBU


      Close(5)
      Close(3)
      Close(4)
      Close(6)
      Close(8)
      Close(9)
      Close(10)
      Close(14)
      Close(15)
      Close(17)
      Close(18)
      Close(19)
      Close(20)
      Close(22)
      Close(30)
      Close(55)
      if(r.ne.1) go to 105
C     Calcula fitness
      call fitness(C1,fp,keff,flux,Pmax)
      write(168,*)Pmax
      write(169,*)keff
      if(j.eq.1)then
      kmin=keff
      kmax=keff
      Pmi=Pmax
      Pma=Pmax
      fmax=flux
      fmin=flux
      end if
      if(keff.lt.kmin)kmin=keff
      if(flux.lt.fmin)fmin=flux
      if(Pmax.lt.Pmi)Pmi=Pmax
      if(keff.gt.kmax)kmax=keff
      if(flux.gt.fmax)fmax=flux
      if(Pmax.gt.Pma)Pma=Pmax

      write(155,*)fp
C     atualiza fitness mudei
      if(int.eq.1)then
C      if(j.eq.1)then
      fit(n1)=fp
      do i1=1,20,1
      xp(n1,i1)=x(n1,i1)
      end do
      end if
C     mudei
      if(int.gt.1.and.fb.gt.fit(n1)) then
C      if(j.gt.1.and.fb.gt.fit(n1)) then
      fit(n1)=fp
      do i1=1,20,1
      xp(n1,i1)=x(n1,i1)
      end do
      end if
      if(n1.lt.NP) go to 104
C     inicia avalia‡Æo da fitness e PSO
      do i1=1,NP,1
      if(fit(i1).gt.fb) then
      do j1=1,20,1
      fb=fit(i1)
      xb(j1)=x(i1,j1)
      xb1(1,j1)=x(i1,j1)
      end do
      end if
      end do
C     inicial PSO atualizando velocidade e posi‡Æo
      w= 1.1
      do i1=1,NP,1
      do j1=1,20,1
      a=ran(seed)
      b=ran(seed)
      v(i1,j1)=w*v(i1,j1)+2*a*(xp(i1,j1)-x(i1,j1))+2*b*(xb(j1)-x(i1,j1))
      a=1
      b=-1
      if(v(i1,j1).lt.b.or.v(i1,j1).gt.a)v(i1,j1)=(1-2*ran(seed))*0.1
C     Limitantes de velocidade
      VMA=0.9
      VMI=-0.9
      if(v(i1,j1).lt.VMI.or.v(i1,j1).gt.VMA)v(i1,j1)=v(i1,j1)*0.1
C     Fim dos limitantes
      x(i1,j1)=x(i1,j1)+v(i1,j1)
      if(x(i1,j1).lt.b.or.x(i1,j1).gt.a)x(i1,j1)=(1-2*ran(seed))
      if(v(i1,j1).gt.vmax)vmax=v(i1,j1)
      if(v(i1,j1).lt.vmin)vmin=v(i1,j1)
      end do
      end do
      write(167,*)'vmin vmax'
      write(167,*)vmin
      write(167,*)vmax
      porc=100*j/int
      write(*,*)'----------------------------------->'
      write(*,*)porc
      write(*,*)'% conclu¡do'
      write(*,*)'----------------------------------->'

      if(j.lt.int) go to 102
      write(*,*)'rodando melhor configura‡Æo'
      open(6660,FILE='RodoutudoPSO.txt')
      write(6660,*)'N£mero de intera‡äes'
      write(6660,*)int
      write(6660,*)'N£mero de part¡ulas'
      write(6660,*)NP
      r=0
      n1=0
      do i1=1,20,1
      x(1,i1)=xb(i1)
      end do
      go to 104
      
105   Write (*,*) ' TWODB OK'
      CALL TDBCIT1
      Write (*,*) ' TDBCIT1 OK'
      CLOSE(1)
      CLOSE(2)
      Call Crinp2bcit
      Write (*,*) ' CRINP ok'
4     Call CITAT

      Close(1)
      Close(2)
      Close(5)
      Close(3)
      Close(4)
      Close(6)
      Close(7)
      Close(8)
      Close(9)
      Close(10)
      Close(11)
      Close(12)
      Close(13)
      Close(14)
      Close(15)
      Close(16)
      Close(17)
      Close(18)
      Close(19)
      Close(20)
      Close(21)
      Close(22)
      Close(23)
      Close(24)
      Close(25)
      Close(26)
      Close(27)
      Close(28)
      Close(29)
      Close(30)
      Close(31)
      Close(32)
      Close(33)
      Close(34)
      Close(35)
      Close(36)
      Close(37)
      Close(38)
      Close(55)
      close(155)
      write(166,*)'Keff'
      write(166,*)kmin
      write(166,*)kmax
      write(166,*)'Fluxo'
      write(166,*)fmin
      write(166,*)fmax
      write(166,*)'Pico de potencia'
      write(166,*)Pmi
      write(166,*)Pma
      close(166)
      close(167)
      close(168)
      close(169)
      write(*,*) 'Citation ok'
      Call DENS_BE
      write(*,*) 'Dens ok'
      call Inputcobra
      write(*,*) 'input ok'
      STOP
10000 Format(F6.2)
      end
C     PSO
      subroutine pso(x1,v1,w,xp1,xb1)
      real w,xb1(1:20),a,b,c,d
      real  x1(1:20),v1(1:20),xp1(1:20)
      integer i
      a=-1
      b=1
      do i=1,20,1
      c=ran(seed)
      d=ran(seed)
      v1(i)=w*v1(i)+2*c*(xb1(i)-x1(i))+2*d*(xp1(i)-x1(i))
      if(v1(i).lt.a.or.v1(i).gt.b)v1(i)= (-0.1+0.2*ran(seed))
      x1(i)=x1(i)+v1(i)
      if(x1(i).lt.a.or.x1(i).gt.b)x1(i)= (-1+2*ran(seed))
      end do
      return
      end

C     Fun‡Æo Fitness e penalidade da Fitness para PSO
      subroutine penalidade(C,E)
      real C(1:20),E
      integer In(1:12)
      integer j,i
      In(1)=2
      In(2)=4
      In(3)=6
      In(4)=7
      In(5)=8
      In(6)=10
      In(7)=11
      In(8)=13
      In(9)=14
      In(10)=15
      In(11)=17
      In(12)=19

      E=1
      do i=1,12,1
      j=In(i)
      if(C(j).le.1)E=E*0.1
      if(C(j).gt.1.and.C(j).le.2.5)E=E*0.25
      if(C(j).gt.2.5.and.C(j).le.5)E=E*0.40
      if(C(j).gt.5.and.C(j).le.7.5)E=E*0.60
      if(C(j).gt.7.5.and.C(j).le.10)E=E*0.80
      if(C(j).gt.10.and.C(j).le.12.5)E=E*0.90
      if(C(j).gt.12.5.and.C(j).le.15)E=E*0.95
      if(C(j).gt.15)E=E*1
      end do

      end

C     resgata as informa‡äes no output para determinar a fitness
      subroutine fitness(x,fit,keff,flux,Pmax)
      real x(1:20),d(1:97),a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,flux,keff
      real dmax,P,Pmax,fit,E
      character (len=134) HOL,HOLB,HOLF
      character*9 HOL9,HOL9A
      character*4 HOL4,HOL4A,HOL4B
      character*12 HOL12
      character*1 HOL1
      character*10 HOL10,HOL10A
      character*5 HOL5,HOL5A,HOL5B
      character*8 HOL8,HOL8A
      character*134 HOL134
      character*16 HOLK,HOLKA
      integer k,i
      open(1, File='out1twodb.out')
      open(2, File='keff.out')
      HOL10='POWER FRAC'
      HOL4='FLUX'
      HOL5='CYCLE'
      HOL9='EXECUTION'
      HOL8='TOT LEAK'
      HOLK='0 EXECUTION TIME'
      k=0
      Do while (k.lt.9)

      read(1,1000)HOL
      do j=1,100,1
      HOL10A=HOL(j:j+9)
      if(HOL10A.eq.HOL10)then
      k=k+1

      if(k.lt.9)read(1,1000)HOL
      if(k.lt.9)write(2,*)HOL(j+10:j+129)
      if(k.lt.9)rewind(2)
      if(k.lt.9)read(2,*)d(k*10+1),d(k*10+2),d(k*10+3),d(k*10+4),
     + d(k*10+5),d(k*10+6),d(k*10+7),d(k*10+8),d(k*10+9),d(k*10+10)
      if(k.lt.9)rewind(2)
      if(k.eq.9)read(1,1000)HOL
      if(k.eq.9)write(2,*)HOL(j+10:j+96)
      if(k.eq.9)rewind(2)
      if(k.eq.9)read(2,*)d(k*10+1),d(k*10+2),d(k*10+3),
     + d(k*10+4),d(k*10+5),d(k*10+6),d(k*10+7)
      if(k.eq.9)rewind(2)
      if(k.eq.1)then
      do i=1,11,1
      read(1,1000)HOL
      end do
      read(1,*)a1,a2,a3,a4,flux,a6,a7,a8,a9,a10,a11
      end if
      end if
      end do


      end do

      HOL5='CYCLE'
      Do while(k.le.9)
      read(1,1000)HOL
      do j=1,100,1
      HOL5A=HOL(j:j+4)
      if(HOL5A.eq.HOL5)k=1+k
      end do
      end do


      HOL9='EXECUTION'
      HOL4='BURN'
      i=0
      Do while(k.le.10)
      read(1,1000)HOL
      do j=1,100,1
      HOL9A=HOL(j:j+8)
      HOL4A=HOL(j:j+3)
      if(HOL9A.eq.HOL9)k=k+1
      if(HOL4A.eq.HOL4)write(2,1000)HOL
      if(HOL4A.eq.HOL4)i=i+1
      end do
      end do
      rewind(2)
      do j=1,i,1
      read(2,1000)HOL
      end do
      do j=1,100,1
      HOL4A=HOL(j:j+3)
      if(HOL4A.eq.HOL4)k=j+3
      end do
      HOL8=HOL(k+10:k+18)
      rewind(2)
      WRITE(2,*)HOL8
      rewind(2)
      READ(2,*)keff
      Pmax=0
      dmax=0
      P=0
      i=0
      do j=1,97,1
      if(d(j).ne.0)i=i+1
      dmax=dmax+d(j)
      end do
      dmax=dmax/i
      do j=1,97,1
      pdp=d(j)/dmax
      if(pdp.ge.Pmax)Pmax=pdp
      end do
      
      do j=1,97,1
      if(d(j).ne.0)then
      P=(((d(j)/dmax-Pmax)**2)/i)+P
      end if
      end do
      Pmax=P
      
      fit=(keff*flux/1.0E+13)/Pmax
      call penalidade(x,E)
      fit=fit*E
C      write  (*,*) fit
      close(1)
      close(2)


1000  Format(A134)
1001  Format(A12,10(1P,(1X,E10.4,1X)))
1002  Format(A12,7(1P,(1X,E10.4,1X)))
      return

      end
C     recoloca os combust¡veis do 2DB para utilizar no PSO
      subroutine input2dbcomb(x,aa)
      real x(1:20),x1(1:20)
      integer i,aa
      character (len=100) HOL
      character*4 HOLA
      character(LEN=4) HOL4
      character*1 HOL1
      open(1, File='inp1twodb.dat')
      open(2, File='inp2twodb.dat')
      open(3, File='inp3twodb.dat')
      HOLA='17**'
      HOL1=''
      do while(HOL(1:4).ne.HOLA)
      read(2,1000)HOL(1:100)
      read(1,1000)HOL(1:100)
      i=100
      do while(HOL(i:i).eq.HOL1)
      i=i-1
      end do
      write(3,*)HOL(1:i)
      end do
      read(1,1000)HOL(1:100)
      read(2,1000)HOL(1:100)
      i=100
      do while(HOL(i:i).eq.HOL1)
      i=i-1
      end do
      write(3,*)HOL(1:i)
      read(2,1000)HOL(1:100)
      read(1,1000)HOL(1:100)
      i=100
      do while(HOL(i:i).eq.HOL1)
      i=i-1
      end do
      write(3,*)HOL(1:i)
      read(2,1000)HOL(1:100)
      read(1,1000)HOL(1:100)
      i=100
      do while(HOL(i:i).eq.HOL1)
      i=i-1
      end do
      write(3,*)HOL(1:i)
      if(aa.ne.1) go to 33333
      read(2,1000)HOL(1:100)
      read(1,1000)HOL(1:100)
      i=100
      do while(HOL(i:i).eq.HOL1)
      i=i-1
      end do
      write(3,*)HOL(1:i)
33333 continue
      read(2,1000)HOL(1:100)
      read(1,1000)HOL(1:100)
      write(3,1001)x(1),x(2),x(3),x(4),x(5)
      read(2,1000)HOL(1:100)
      read(1,1000)HOL(1:100)
      write(3,1002)x(6),x(7),x(8)
      read(2,1000)HOL(1:100)
      read(1,1000)HOL(1:100)
      write(3,1003)x(9),x(10),x(11),x(12)
      read(2,1000)HOL(1:100)
      read(1,1000)HOL(1:100)
      write(3,1002)x(13),x(14),x(15)
      read(2,1000)HOL(1:100)
      read(1,1000)HOL(1:100)
      write(3,1001)x(16),x(17),x(18),x(19),x(20)
      read(2,1000)HOL(1:100)
      read(1,1000)HOL(1:100)
      i=100
      do while(HOL(i:i).eq.HOL1)
      i=i-1
      end do
      write(3,*)HOL(1:i)
      HOLA='91$$'
      HOL1=''
      do while(HOL(1:4).ne.HOLA)
      read(2,1000)HOL(1:100)
      read(1,1000)HOL(1:100)
      i=100
      do while(HOL(i:i).eq.HOL1)
      i=i-1
      end do
      write(3,*)HOL(1:i)
      end do
      do while(HOL(2:2).ne.HOL1)
      read(2,1000)HOL(1:100)
      read(1,1000)HOL(1:100)
      i=100
      do while(HOL(i:i).eq.HOL1)
      i=i-1
      end do
      write(3,*)HOL(1:i)
      end do

      close(1)
      close(2)
      close(3)
1000  Format(A100)
1001  Format(8x,4(F6.3,4X),F6.3,4X)
1002  Format(8x,2(F6.3,14X),F6.3)
1003  Format(8x,2(F6.3,4X),14X,F6.3,4X,F6.3)
      return
      end

C     reorganiza o combust¡vel de acordo com o random key gerado
      subroutine reorgcom(x,x2,order)
      integer,dimension(1,20) :: order
      real x(1:20),x2(1:20)
      integer j
      do i=1,20,1
      j=order(1,i)
      x2(i)=x(j)
      end do
      return
      end

C     Extrai os combust¡veis do 2DB para utilizar no PSO
      subroutine combust(x,aa)
      real x(1:20)
      character (len=100) HOL
      character*4 HOLA
      open(1, File='inp1twodb.dat')
      HOLA='17**'
      HOL=''
      do while(HOL(1:4).ne.HOLA)
      read(1,1000)HOL(1:100)
      end do
      read(1,1000)HOL(1:100)
      read(1,1000)HOL(1:100)
      read(1,1000)HOL(1:100)
      if (aa.eq.0)  go to 33331
      read(1,1000)HOL(1:100)
33331 continue
      read(1,*)x(1),x(2),x(3),x(4),x(5)
      read(1,*)x(6),x(7),x(8)
      read(1,*)x(9),x(10),x(11),x(12)
      read(1,*)x(13),x(14),x(15)
      read(1,*)x(16),x(17),x(18),x(19),x(20)
      close(1)
1000  Format(A100)
      close(1)
      return
      end


C     ordena as random keys geradas
      subroutine ordern(x,order,n1)
      real,dimension(100,20):: x
      integer seed,ct,i,j,n,k
      integer,dimension(1,20) :: order
      Real order1(1:20), max,a

C      do i=1,20,1
C      x(i)= ran(seed)
C      end do
      ct=20
      do i=1,20,1
      order1(i)=x(n1,i)
      end do

      do i=1,20,1
         max=-10
         n=i
         do j=1,20,1
         a=order1(j)
         if(a.gt.max)n=j
         if(a.gt.max)max=x(n1,j)
         end do
         order1(n)=-10
         order(1,n)=ct
         ct=ct-1
      end do
      return
      end



	FUNCTION ran(idum)
	IMPLICIT NONE
	INTEGER, PARAMETER :: K4B=selected_int_kind(9)
	INTEGER(K4B), INTENT(INOUT) :: idum
	REAL :: ran
	INTEGER(K4B), PARAMETER :: IA=16807,IM=2147483647,IQ=127773,IR=2836
	REAL, SAVE :: am
	INTEGER(K4B), SAVE :: ix=-1,iy=-1,k
	if (idum <= 0 .or. iy < 0) then
		am=nearest(1.0,-1.0)/IM
		iy=ior(ieor(888889999,abs(idum)),1)
		ix=ieor(777755555,abs(idum))
		idum=abs(idum)+1
	end if
	ix=ieor(ix,ishft(ix,13))
	ix=ieor(ix,ishft(ix,-17))
	ix=ieor(ix,ishft(ix,5))
	k=iy/IQ
	iy=IA*(iy-k*IQ)-IR*k
	if (iy < 0) iy=iy+IM
	ran=am*ior(iand(IM,ieor(ix,iy)),1)
	END FUNCTION ran


C     Usando um input antigo do TWODB esse programa acaba de montar a
C     estrutura do arquivo que ser  o INPUT novo
      subroutine hamfinal(nout)

      integer i
      Character*100 HOLA
      open(235,File='inp2twodb.DAT')
      i = 0
1     i=i+1
      read(235,1001)HOLA
      if(i.lt.358) go to 1
      i = 0
2     i=i+1
      read(235,1001)HOLA
      write(nout,1001)HOLA
C      if(i.lt.458) go to 2
      if(i.lt.452) go to 2
      close (235)
      return
1001  Format (A100)
      end
C     Programa responsavel pela montagem do input do twodb em relacao
C     aos elementos nÆo combustiveis
      subroutine HAMIPUT2DB(nf,nin,nout)
      CHARACTER*100 HOLA, HOLCOMP
      CHARACTER*29 HOLB
      CHARACTER*40 HOLC
      CHARACTER*12 HOLD
      CHARACTER*2 A
      CHARACTER*11 HOLDE, HOLDF
      Real SF,NSF,SA,STR,SS,SIN,DIF
      integer i,j,k,A1
C     Arquivo de entrada que deve conter na primeira e segunda linha:
C       MACROSCOPIC CROSS-SECTIONS FOR THE SUPER-REGION
C     ' ---- ZONA
C     Isso ir  garantir que o programa monte o input do TWODB certinho!
      OPEN (876,FILE='COMP.DAT')
      Read(876,1000) HOLCOMP
      Read(876,1007) HOLDE
      i=0
      if(nf.NE.1) go to 4
1     i=i+1
      Read(nout,1000)HOLA
      if(i.lt.310)go to 1
      i = 0
4     i=i+1
      Read(nin,1000) HOLA
      if(i.lt.12) go to 4
      Read(nin,1002) HOLB,HOLC, HOLDF
2     Read(nin,1000) HOLA
      if(HOLCOMP.NE.HOLA) go to 2
      i = 0
3     i=i+1
      Read(nin,1000) HOLA
      if(i.lt.5) go to 3
      write(nout,1001) HOLDE, nf, HOLC
      Read(nin,1003)j,A,k,SF,NSF,SA,STR,SS,SIN,DIF
      Write(nout,1004)SF,SA,NSF,STR,SIN,SS
      Read(nin,1003)j,A,k,SF,NSF,SA,STR,SS,SIN,DIF
      Write(nout,1004)SF,SA,NSF,STR,SIN,SS
      close(876)
      return
1000  Format(A100)
1001  Format(A11,1X,I2,1X,'-',A40,1X,'-----')
1002  Format(A29,A40,A11)
1004  Format(6(1P,(1X,E11.5)))
1007  FORMAT (A11)
1003  Format(2X,I1,1X,A2,1X,I1,2X,
     + (1P,(1X,E11.5)),3X,(1P,(1X,E11.5)),3X,(1P,(1X,E11.5)),
     + 3X,(1P,(1X,E11.5)),3X,(1P,(1X,E11.5)),3X,(1P,(1X,E11.5)),3X,
     + (1P,(1X,E11.5)))

      return

      end

      subroutine LEOPD4
C=======================================================================
C                          ****** LEOPARD ******
C  VERSAO MODIFICADO PARA COMPILADOR Lahey Fortran 90 31/08/2009
C  ROTINAS ALTERADAS = INPUT vari vel (elemenleo) e OUTOUT fixo
C=======================================================================
C  VERSAO MODIFICADO PARA MICRO 386 COMPILADOR NDP FORTRAN DA MICRO WAY - 11/92.
C  ROTINAS ALTERADAS = INPUT, INGR, RESINT. INDICADOS POR COMENTARIO CMODF.
C------360 FORTRAN-H VERSION OF LEOPARD. RF BARRY 1968
C
C------CONTAINS MODIFICATIONS TO ALLOW SLAB GEOMETRY, RESTARTS,
C          LATTICE/NONLATTICE EDITS, SEPARATE XENON CROSS SECTIONS,
C          SPECIAL BINARY BURNUP-LIBRARY OUTPUT FOR LINX/2DBUM, ETC
C
C------THIS VERSION HAS BEEN HEAVILY MODIFIED BY:
C          G.VAN TUYLE, F.BROWN, D.LOSEY, J.LEE, W.MARTIN
C
C------MOST SUBROUTINES IN THIS VERSION MAY BE COMPILED IN
C          FORTRAN H FOR FASTER EXECUTION.  THE SUBROUTINE MOVEAA
C          SEEMS TO HAVE A BUG WHICH CAUSES ERRORS WHEN H COMPILED.
C
C=======================================================================
C
C     *  *  *  *  *  L O G I C A L   U N I T S  *  *  *  *  *
C
C           1 = LEOPARD INPUT LIBRARY
C           3 = RESTART OUTPUT FILE
C           4 = RESTART INPUT FILE
C           5 = INPUT FILE (ELEMENLEO)
C           6 = OUTPUT FILE
C           7 = BINARY CROSS SECTIONS FOR 2DBUM
C           8 = FORMATTED CROSS SECTIONS FOR 2DBUM
C
C=======================================================================
C
C
      COMMON /HEAD/ TITLE(20), NOSTEP, TIMBOS, BUBOS, TIMEOS, BUEOS,
     1       NSTEPS
      COMMON /LNL/ NSTART, VPLN(25,2), TD(4,2)
      COMMON /INDATA/ ICON(1), RDATA(549)
      COMMON /FPBUF/ FPBUF
      COMMON /X2DB/ I2DB, PFRAC, IXSEC, PCBU, PCU235, PRINT(40),
     1       XSEC(3,8,6),VERSIN(10)
C
      OPEN (1,FILE='LIBFILE.BIN',STATUS='OLD',FORM='UNFORMATTED')
      OPEN (3,FILE='FORT.3',STATUS='SCRATCH',FORM='UNFORMATTED')
      OPEN (6,FILE='LEOPARD.SAI')
      OPEN (7,FILE='LEOPARD.BIN',FORM='UNFORMATTED')
      OPEN (8,FILE='LEOPARD.OUT')
      OPEN (10,FILE='FORT.10',STATUS='SCRATCH',FORM='FORMATTED')
C
      CALL HEADER(0,0)
   10 NOSTEP = 0
C
      CALL INPUTLEO
C
      MAX = MAX0(1,NSTEPS)
      DO 20 N = 1, MAX
        IF (NSTEPS .NE. 0) NOSTEP = N
        NCON = -1
        IF (NSTART .NE. 0) NCON = (N/NSTART) * NSTART - N
        CALL THRMAL
        CALL MUFT
        CALL THREE
        IF ((N .EQ. MAX) .OR. (NCON .EQ. 0)) WRITE (3) PCBU, PCU235
        IF ((N .EQ. MAX) .OR. (NCON .EQ. 0)) WRITE (3) RDATA, BUEOS,
     1        TIMEOS, FPBUF
        CALL HEADER(1, 6)
   20 CONTINUE
C      GO TO 10

      END
C=======================================================================
C
      BLOCK DATA
C
      COMMON /X2DB/ I2DB, PFRAC, IXSEC, PCBU, PCU235, PRINT(40),
     1       XSEC(3,8,6),VERSIN(10)
C
C
      CHARACTER*4 VERSIN
      CHARACTER * 8 LIBLBL
      COMMON /LIBTYP/LIBLBL(2),LIBFLG
      COMMON /EXTRA/ INC
C
C-------------------------------------------------------------------
C
       DATA VERSIN/'  LE','OPAR','D VE','RSIO','N #8','.6, ',
     *             '8/15','/83 ','    ','    '/
C
C-------------------------------------------------------------------
C
      DATA LIBLBL(1)/'ORIGINAL'/
      DATA LIBLBL(2)/'ENDF/BIV'/
      DATA INC /1/
      END
C
C=======================================================================
CHEADER
      SUBROUTINE HEADER(N,NUNIT)
C
C-----------------------------------------------------------------------
C                     HEADER   OPTIONS
C
C           N               OUTPUT
C
C           0       INITIALIZATION OF COST AND TIME
C           1       CPU TIME AND COST
C           2       TIME AND DATE
C
C           5       PAGE HEADING
C           6       DASH LINE
C           7       EQUAL LINE
C           8       STARS LINE
C           9       TWO SPACES
C
C-----------------------------------------------------------------------
      CHARACTER*4 DATEM1,DATEM2,DATEX,TIMEX
      CHARACTER * 8 LIBLBL
      INTEGER PAGE
      COMMON /HEAD/ TITLE(20), NOSTEP, TIMBOS, BUBOS, TIMEOS, BUEOS,
     1       NSTEPS
C
      COMMON /LIBTYP/LIBLBL(2),LIBFLG
      COMMON /INIT/ SCST
      DIMENSION DATEX(3), TIMEX(2)
C
      DATA    PAGE /0/
	DATA DATEM1 /'    '/, DATEM2 /'    '/
      DATA DATEX /3*'    '/, TIMEX /2*'    '/
C-----------------------------------------------------------------------
C
      IF(NUNIT.LE.0) NUNIT=6
      NN = N + 1
   10 GO TO (20, 40, 90, 150, 150, 110, 120, 130, 140, 142), NN
C
C     INTIALIZATION                                    N=0
C
C  20 SCST = SECNDS(0.0)
   20 SCST = 0.0
      GO TO 150
C
C     COST AND TIME                                    N=1
C
C  40 TIM = SECNDS(0.0)
   40 TIM = 0.0
      TME = TIM - SCST
      WRITE (NUNIT,80) TME
   80 FORMAT ( 1H0, ' EXECUTION TIME = ', F8.0, ' (SEC.) ' )
      GO TO 150
C
C     TIME AND DATE                                    N=2
C
   90 IF (NUNIT .NE. 7) GO TO 95
C     DATEM1 = '    '
C     DATEM2 = '    '
      WRITE(NUNIT) DATEM1, DATEM2
      GO TO 150
C  95 CALL DATE( DATEX )
C     CALL TIME( TIMEX )
   95 CONTINUE
      WRITE (NUNIT,100) DATEX, TIMEX
  100 FORMAT ( ' DATE - ', 2A4, A1, ' TIME - ', 2A4 )
      GO TO 150
C
C     PAGE HEADING                                     N=5
C
C 110 IF(PAGE.EQ.0) CALL DATE( DATEX )
  110 CONTINUE
C     CALL TIME( TIMEX )
      PAGE = PAGE + 1
      WRITE(NUNIT,112)
  112 FORMAT('1',130('='))
      K = LIBFLG + 1
      WRITE (NUNIT,111) TITLE,LIBLBL(K),DATEX,TIMEX,PAGE
  111 FORMAT ('  ',20A4,1X,A8,6X,2A4,A1,' - ',2A4,5X,'PAGE',I4)
      IF (NOSTEP .EQ. 0) GO TO 114
      DAYBOS = TIMBOS / 24.0
      DAYEOS = TIMEOS / 24.0
      WRITE (NUNIT,113)NOSTEP,TIMBOS,DAYBOS,BUBOS,TIMEOS,DAYEOS,BUEOS
  113 FORMAT ('     TIME-STEP ', I2, ' BEGINS AT ', F7.1, ' HOURS =',
     1       F8.2, ' DAYS', 15X, 'BURNUP =', F10.1, ' MWD/TONNE'/, 18X,
     2       'ENDS   AT ', F7.1, ' HOURS =', F8.2, ' DAYS', 15X,
     3       'BURNUP =', F10.1, ' MWD/TONNE')
  114 WRITE(NUNIT,131)
      GO TO 150
C
C     DASHED LINE                                      N=6
C
  120 WRITE (NUNIT,121)
  121 FORMAT(1X,130(1H-))
      GO TO 150
C
C     EQUAL  LINE                                      N=7
C
  130 WRITE (NUNIT,131)
  131 FORMAT(1X,130(1H=))
      GO TO 150
C
C     STARS LINE                                       N=8
C
  140 WRITE (NUNIT,141)
  141 FORMAT(1X,130(1H*))
      GO TO 150
C
C     TWO BLANK SPACES                                 N=9
C
  142 WRITE(NUNIT,143)
  143 FORMAT(//)
      GO TO 150
C
  150 CONTINUE
C
      RETURN
      END
C=======================================================================
C ADD
      SUBROUTINE ADD(N)
      COMMON /EXTRA/ INC
      INC = N
      RETURN
      END
C MOVEAA
      SUBROUTINE MOVEAA(N, A, B)
      DIMENSION A(1), B(1)
      DO 10 I = 1, N
   10 B(I) = A(I)
      RETURN
      END
C MOVEKA
      SUBROUTINE MOVEKA(N,K,A)
      REAL                   K
      DIMENSION A(1)
      DO 20 I = 1, N
   20 A(I) = K
      RETURN
      END
C ACCUM1
      FUNCTION ACCUM1(A,N)
      DIMENSION A(1)
      ACCUM1 = 0.0
      DO 30 I = 1, N
   30 ACCUM1 = ACCUM1 + A(I)
      RETURN
      END
C ACCUM2
      FUNCTION ACCUM2(A,B,N)
      COMMON /EXTRA/ INC
      DIMENSION A(1),B(1)
      J = 1
      ACCUM2 = 0.0
      DO 40 I = 1, N
        ACCUM2 = ACCUM2 + A(J) * B(I)
   40 J = J + INC
      RETURN
      END
C ACCUM3
      FUNCTION ACCUM3(A,B,C,N)
      DIMENSION A(1),B(1),C(1)
      ACCUM3 = 0.0
      DO 50 I = 1, N
   50 ACCUM3 = ACCUM3 + A(I) * B(I) * C(I)
      RETURN
      END
C PSUBCF
      FUNCTION PSUBCF(X)
      IF (X .EQ. 0.0) PSUBCF = 1.0
      IF (X .NE. 0.0) PSUBCF = 1.0 + (EXP(-4.58*ALOG(1.0 + X/2.29)) - 1.
     10) * 0.5 / X
      RETURN
      END
C ERFF
      FUNCTION ERFF(X)
      Y = 1.0 / (1.0 + 0.3275911*X)
      ERFF = 0.225836846 + Y * (-0.252128668 + Y*(1.259695130 + Y*(-1.
     128782245 + Y*(0.940646070))))
      ERFF = 1.0 - 1.128379167 * ERFF * Y * EXP(-X**2)
      RETURN
      END
C TERP
      FUNCTION TERP(X,A,B)
      DIMENSION A(1),B(1)
      I = 2
   60 IF (X .LE. A(I + 1) .OR. A(I + 2) .LT. A(I + 1)) GO TO 70
      I = I + 1
      GO TO 60
   70 WT1 = (X - A(I + 1)) / (A(I - 1) - A(I + 1)) * (X - A(I)) / (A(I -
     1 1) - A(I))
      WT2 = (X - A(I + 1)) / (A(I) - A(I + 1)) * (X - A(I - 1)) / (A(I)
     1- A(I - 1))
      WT3 = (X - A(I - 1)) / (A(I + 1) - A(I - 1)) * (X - A(I)) / (A(I +
     1 1) - A(I))
      TERP = WT1 * B(I - 1) + WT2 * B(I) + WT3 * B(I + 1)
      RETURN
      END
C TBLF
      FUNCTION TBLF(A,B,X)
      DIMENSION A(1),B(1)
      I = 2
   60 IF (X .LE. A(I + 1) .OR. A(I + 2) .LT. A(I + 1)) GO TO 70
      I = I + 1
      GO TO 60
   70 WT1 = (X - A(I + 1)) / (A(I - 1) - A(I + 1)) * (X - A(I)) / (A(I -
     1 1) - A(I))
      WT2 = (X - A(I + 1)) / (A(I) - A(I + 1)) * (X - A(I - 1)) / (A(I)
     1- A(I - 1))
      WT3 = (X - A(I - 1)) / (A(I + 1) - A(I - 1)) * (X - A(I)) / (A(I +
     1 1) - A(I))
      TBLF = WT1 * B(I - 1) + WT2 * B(I) + WT3 * B(I + 1)
      RETURN
      END
C=======================================================================
CINPUT
      SUBROUTINE INPUTLEO
C
      CHARACTER * 1 LINE
      LOGICAL BTESTE, FIRST
      CHARACTER * 8 LIBLBL
      REAL NLPF
      COMMON INDEX(35), E(172), RTE(172), BASE(35), SS(25), XSS(25),
     1       CKABSR(25,172), CKTRAN(25,172), CKFSN(25,172), GNUTH(25),
     2       BUCARG(29), BUCVAL(29), ALFTBL(8), BTATBL(7), RX(15),
     3       BTABLE(14), AARG(153), ATABLE(152), TX(11), ALPH36(10)
      COMMON /INDATA/ ICON(24), MACRO, MACX(35), DENMAC(35,4), MICRO,
     1       MICX(35), DENMIC(35), TEFC, TEM(3), REFBUC, GBUCKL, BSQARE,
     2       HEDGE, RAD(3), PITCH, SHARE, RHOH2O, RHOD2O, RHOUO2,
     3       RHOPO2, RHOTO2, PRESSH, PRESSD, CUTOFF, PUTINL, VOLUME,
     4       PDNSTY, LOADNG, FPSCAL, STEPS(40), POISON(40), PUREN(35,4),
     5       VFAST(27), HXIS, FRACVL(3),FUELTX,CLADTX
      COMMON /HEAD/ TITLE(20), NOSTEP, TIMBOS, BUBOS, TIMEOS, BUEOS,
     1       NSTEPS
       COMMON /LNL/ NSTART, VPLN(25,2), TD(4,2)
      COMMON /HELPIN/ LINE(72)
      COMMON /FPBUF/ FPBUF
      COMMON /JGS/ NLPF(40),HEDGE1
C
      COMMON /LIBTYP/LIBLBL(2),LIBFLG
C
C
C     I2DB IS FLAG FOR 2DB CARD IMAGES ON UNIT 8
C       (0=NO EFFECT,1=2 GROUP,2=2 GROUP MND,3=4 GROUP,4=4 GROUP MND)
C     PFRAC IS POWER FRACTION FOR INTERPOLATION
C     IXSEC IS FLAG FOR COMPLETE BINARY
C         CROSS SECTION TAPE ON UNIT 7
C
      COMMON /X2DB/ I2DB, PFRAC, IXSEC, PCBU, PCU235, PRINT(40),
     1       XSEC(3,8,6),VERSIN(10)
      COMMON AX(6), NAX(24)
      DIMENSION R(3)
      DIMENSION WT(25)
      DIMENSION RDATA(549)
      EQUIVALENCE (XOADNG,LOADNG), (BURNUP,BUBOS)
      EQUIVALENCE (RDATA(1),ICON(2))
      EQUIVALENCE (RAD(1),R(1))
C  THERMAL EXPANSION COEFF.
      DATA ALPH4/8.2E-6/, ALPH3/2.90E-6/, ALPH7/1.48E-5/, ALPHSS/9.8E-6/
      DATA FIRST / .TRUE. /
C
C
C  CINDER FISSION PRODUCT CORRELATION REVISION--JR 1/83
C  MOLECULAR WEIGHTS
      CALL MOVEKA(25,0.0,WT)
      WT(10) = 235.04394
      WT(11) = 236.04558
      WT(12) = 238.05082
      WT(13) = 239.05218
      WT(14) = 240.05383
      WT(15) = 241.05687
      WT(21) = 232.03807
      WT(22) = 233.041
      WT(23) = 233.03965
      WT(24) = 234.04098
      WT(25) = 242.05877
C
C  JR 1/83
      REWIND 1
      READ (1) E, RTE, INDEX, BASE, SS, XSS, CKABSR, CKTRAN, CKFSN,
     1     GNUTH, BUCARG, BUCVAL, ALFTBL, BTATBL, RX, BTABLE, AARG,
     2     ATABLE, TX, ALPH36

C
C  LIBRARY TYPE DETERMINATION      --JR 4/81
      LIBFLG = 0
CMODF IF(SS(3).EQ.8.4460001) LIBFLG = 1
      IF( ABS(SS(3)-8.4460001) .LE. 0.1E-05 ) LIBFLG = 1
C  LIBFLG=1 :   LIBRARY IS ENDF/B-IV
      NFLAG = 0
   10 READ (5,20,END=40) TITLE
   20 FORMAT ( 20A4 )
      CALL HEADER(5,6)
      WRITE (6,25) VERSIN
   25 FORMAT(//1X,10A4//)
      CALL HEADER(7,6)
      WRITE (6,30) TITLE
   30 FORMAT (//' INPUT CHECK FOR CASE', T25, 20A4 )
      GO TO 50
   40 RETURN
   50 READ (5,60) NAX, LINE
   60 FORMAT (24I3, T1, 72A1)
      WRITE (6,70) LINE
   70 FORMAT (T25, 72A1)
      ICON(11) = 0
      ICON(12) = 0
      IF ( NAX(1) .LE. 0) GO TO 90
C
C      ERASE THE 'INDATA' COMMON BLOCK FOR THE FIRST CASE AND ALL R-C'S.
C
   80 CALL MOVEKA(377, 0, ICON)
      BURNUP = 0.0
      RHOUO2 = .96000
      RHOTO2 = .96
      RHOPO2 = .96
      RHOH2O = .754
      RHOD2O = .754
   90 CONTINUE
      IF ( NAX(1) .LT. 0 ) GO TO 91
      PCBU = 0.0
      PCU235 = 0.0
      GO TO 95
C
C     RESTART FILE READ IN HERE, JCL, 9/79.
C

   91 REWIND 4
C     M=(NAX(24)-1)*2000
C     FIND(4'M)
      M = 2*(NAX(24)-1)
      DO 92 I=1,M
   92 READ(4)
      READ(4) RDATA,BURNUP,TIMBOS,FPBUF
      READ(4) PCBU,PCU235
      IF( NAX(1) .EQ. -2) CALL RESTRT
   95 FIRST = .FALSE.
      DO 100 I = 1, 24
  100 IF ( .NOT. BTESTE(3*I - 2,3)) ICON(I) = NAX(I)
      MACROP = 0
      IF (ICON(1) .EQ. - 1) GO TO 360
      I2DB = ICON(11)
      IXSEC = ICON(12)
  110 READ (5,120) IKE, (AX(I),I=1,5), LINE
  120 FORMAT (I12, 5E12.0, T1, 72A1)
      WRITE (6,70) LINE
      IF (IKE .EQ. 0) GO TO 110
      IF (IKE .EQ. 777) GO TO 170
      IF (MACRO .EQ. 0) GO TO 140
      DO 130 I = 1, MACRO
        IF (IKE .EQ. MACX(I)) GO TO 150
  130 CONTINUE
  140 MACRO = MACRO + 1
      I = MACRO
  150 CONTINUE
      MACROP = MACROP + 1
      DO 160 J = 1, 4
  160 IF ( .NOT. BTESTE(12*J + 1,12)) DENMAC(I,J) = AX(J)
      MACX(I) = IKE
      GO TO 110
  170 READ (5,120) IKE, (AX(I),I=1,5), LINE
      WRITE (6,70) LINE
      IF (IKE .EQ. 0) GO TO 170
      IF (IKE .EQ. 777) GO TO 220
      IF (MICRO .EQ. 0) GO TO 190
      DO 180 I = 1, MICRO
        IF (IKE .EQ. MICX(I)) GO TO 200
  180 CONTINUE
  190 MICRO = MICRO + 1
      I = MICRO
  200 IF (BTESTE(13,12)) GO TO 170
  209 IF(IKE.EQ.18 .AND. AX(1).LT. 0.0) AX(1)=1./(1.+.98737
     1*(1./ABS(AX(1))-1.))
C  0.98737 = MASS(U23502)/MASS(U23802).   JCL 1987
  210 DENMIC(I) = AX(1)
      MICX(I) = IKE
      GO TO 170
  220 A = 1.0
      IF (ICON(2) .GE. 2) A = 1.8
      B = 0.0
      IF (ICON(2) .GT. 0) B = 459.7
      IF (ICON(2) .EQ. 3) B = -32.0
      READ (5,440) AX, LINE
      WRITE (6,70) LINE
      IF ( .NOT. BTESTE(1,12)) TEFC = A * AX(1) - B
      IF ( .NOT. BTESTE(13,12)) TEM(1) = A * AX(2) - B
      IF ( .NOT. BTESTE(25,12)) TEM(2) = A * AX(3) - B
      IF ( .NOT. BTESTE(37,12)) TEM(3) = A * AX(4) - B
      IF ( .NOT. BTESTE(49,12)) GBUCKL = AX(5)
      IF ( .NOT. BTESTE(49,12)) REFBUC = AX(5)
      IF ( .NOT. BTESTE(61,12)) HEDGE = AX(6)
      IF (HEDGE .EQ. 0.0) HEDGE=1.0
      READ (5,440) AX, LINE
      WRITE (6,70) LINE
      A = 1.0 + 1.54 * ICON(3)
      XCLADE = 0.0
      XPELE = 0.0
      TBLF99 = TBLF(TX,ALPH36,TEM(1))
C
C     EFFECTIVE PELLET AND CLAD THERMAL EXPANSION COEFFICIENTS
C
      DO 240 J = 1, MACRO
        IF (DENMAC(J,2) .EQ. 0.0) GO TO 230
        XCLDEE = 0.0
        IF (MACX(J) .EQ. 3) XCLDEE = ALPH3
        IF (MACX(J) .EQ. 9) XCLDEE = ALPH7
        IF (MACX(J) .GE. 304 .AND. MACX(J) .LE. 348) XCLDEE = ALPHSS
        XCLADE = XCLADE + ABS(DENMAC(J,2))*XCLDEE
  230   IF (DENMAC(J,1) .EQ. 0.0) GO TO 240
        XPELEE = 0.0
        IF (MACX(J) .EQ. 3) XPELEE = ALPH3
        IF (MACX(J) .EQ. 9) XPELEE = ALPH7
        IF (MACX(J) .EQ. 4) XPELEE = ALPH4
        IF (MACX(J) .GE. 97 .AND. MACX(J) .LE. 99) XPELEE = TBLF99
        XPELE = XPELE + DENMAC(J,1) * XPELEE
  240 CONTINUE
      X = XCLADE * ICON(6) * (TEM(2) - 68.0)
      Y = XPELE * ICON(6) * (TEM(1) - 68.0)
      XCLAD = 1.0 + X
      XPEL = 1.0 + Y
      FUELTX = 1.0 - 3.* Y
      CLADTX = 1.0 - 3.* X
      IF ( .NOT. BTESTE(1,12)) R(1) = A * AX(1) * XPEL
      IF ( .NOT. BTESTE(13,12)) R(2) = A * AX(2) * XCLAD
      IF (ICON(4) .EQ. 2) GO TO 250
      IF ( .NOT. BTESTE(25,12)) PITCH = A * AX(3) * (1.0 + ICON(6)*
     1ALPHSS*(TEM(3) - 68.0))
      GO TO 260
  250 IF ( .NOT. BTESTE(25,12)) PITCH = A * AX(3) * (1.0 + ICON(6)*
     1XCLADE*(TEM(3) - 68.0))
  260 CONTINUE
      IF ( .NOT. BTESTE(37,12)) PFRAC = AX(4)
      IF ( .NOT. BTESTE(49,12)) HEIGHT = AX(5) * A
      IF ( .NOT. BTESTE(61,12)) SHARE = AX(6)
      READ (5,440) AX, LINE
      WRITE (6,70) LINE
      IF ( .NOT. BTESTE(1,12)) RHOH2O = AX(1)
      IF ( .NOT. BTESTE(13,12)) RHOD2O = AX(2)
      IF ( .NOT. BTESTE(25,12)) RHOUO2 = AX(3)
      IF ( .NOT. BTESTE(37,12)) RHOPO2 = AX(4)
      IF ( .NOT. BTESTE(49,12)) RHOTO2 = AX(5)
      IF ( .NOT. BTESTE(61,12) .AND. AX(6) .GE. 0.0) CUTOFF = AX(6)
      IF ( .NOT. BTESTE(61,12) .AND. AX(6) .LT. 0.0) PUTINL = -AX(6)
      IF (RHOUO2 .GT. 2.0) RHOUO2 = RHOUO2 / 10.95
      IF (RHOPO2 .GT. 2.0) RHOPO2 = RHOPO2 / 11.46
      IF (RHOTO2 .GT. 2.0) RHOTO2 = RHOTO2 / 10.03
  270 IF (RHOH2O - 2.0) 290, 290, 280
  280 PRESSH = RHOH2O
      RHOH2O = 0.0160185 / VCL(PRESSH,AMAX1(50.1,TEM(3)))
  290 IF (RHOD2O - 2.0) 310, 310, 300
  300 PRESSD = RHOD2O
      RHOD2O = 0.0160185 / VCL(PRESSD,AMAX1(50.1,TEM(3)))
  310 CONTINUE
C
C             TEMPERATURE CORRECT THE CLAD INNER-RADIUS IF ENTERED.
C
      IR = 0
      DO 320 I = 1, MACRO
        IF (DENMAC(I,2) .LT. 0.0) GO TO 330
  320 CONTINUE
      GO TO 350
  330 CLADIR = -A * DENMAC(I,2) * XCLAD
      IR = I
      R(1) = AMIN1(R(1),CLADIR)
      IF (ICON(4) .EQ. 2) GO TO 340
      DENMAC(I,2) = (R(2)**2 - CLADIR**2) / (R(2)**2 - R(1)**2)
      GO TO 350
  340 DENMAC(I,2) = (R(2) - CLADIR) / (R(2) - R(1))
  350 CONTINUE
      IF (ICON(14) .EQ. 0) GO TO 380
      READ (5,440) AX, LINE
      WRITE (6,70) LINE
      IF (VOLUME .EQ. 0.0) VOLUME = 1.0
      IF ( .NOT. BTESTE(1,12)) VOLUME = AX(1)
      IF ( .NOT. BTESTE(13,12)) PDNSTY = AX(2) / VOLUME
      IF ( .NOT. BTESTE(25,12)) XOADNG = AX(3) / VOLUME
      IF ( .NOT. BTESTE(37,12)) BURNUP = AX(4)
      IF ( .NOT. BTESTE(49,12)) FPSCAL = AX(5)
C
C   USE BURNUP FACTOR FOR LUMPED FISSION PRODUCT CORRELATION
C
      FPBUF = 1.0
      IF ( .NOT. BTESTE(61,12)) FPBUF = AX(6)
  360 CONTINUE
      LZERO = 1
      PRINT(1) = 4.0
  370 READ (5,120) IKE, (AX(I),I=1,5), LINE
      WRITE (6,70) LINE
C
C      RESTART CONTROL SET HERE. JCL, 9/79.
C
      NSTART = 0
      IF ((IKE .EQ. 777) .AND. (AX(1) .GT. 0.0)) NSTART = AX(1)
      IF (IKE .EQ. 777) GO TO 380
      IF (IKE .LT. LZERO) GO TO 370
      IF ( .NOT. BTESTE(13,12)) CALL MOVEKA(IKE + 1 - LZERO, AX(1),
     1     STEPS(LZERO))
      IF ( .NOT. BTESTE(25,12)) CALL MOVEKA(IKE + 1 - LZERO, AX(2),
     1     POISON(LZERO))
      IF (AX(3) .LE. 0.0) AX(3) = 4.0
      CALL MOVEKA(IKE + 1 - LZERO, AX(3), PRINT(LZERO))
      IF (AX(4) .LE. 0.0) AX(4) = HEDGE
      CALL MOVEKA(IKE + 1 - LZERO, AX(4), NLPF(LZERO))
      LZERO = IKE + 1
      GO TO 370
  380 IF (FPSCAL .EQ. 0.0) FPSCAL = 1.0
      IF (ICON(14) .NE. 0) STEPS(LZERO)=0.0
C
C      RESTART CASE WITHOUT MODIFICATION, GO TO 710 DIRECTLY.
C
      IF (ICON(1) .EQ. - 1) GO TO 710
      IF (R(2) .GE. R(1)) GO TO 400
  390 WRITE (6,420) (I,R(I),I=1,2)
      NFLAG = 1
  400 R(3) = 0.525034 * PITCH
      IF (ICON(4) .EQ. 0) R(3) = 0.564204 * PITCH
      IF (ICON(4) .EQ. 2) R(3) = PITCH * .5
      IF (R(3) - R(2)) 410, 410, 430
  410 WRITE (6,420) ( I,R(I) ,I=2,3)
      NFLAG = 1
  420 FORMAT ('0ERROR IN RADIUS ',I1, ', WHICH IS ',G15.5)
  430 CONTINUE
  440 FORMAT (6E12.0, T1, 72A1)
C 450  IF (ICON(1) .GE. 0) CALL MOVEKA(140, 0, PUREN)
  450  IF (ICON(1) .LT. 0) GO TO 453
       DO 452 II=1,35
       DO 451 IJ=1,4
       PUREN(II,IJ) = 0.0
  451  CONTINUE
  452  CONTINUE
C       USE NUMBER DENSITIES READ IN, IF ANY.
C        PROPER INITIALIZATION PERFORMED AS NEEDED.
C
  453 CONTINUE
       IF (MACROP.LE.0) GO TO 710
       IF (ICON(1).GE.1) GO TO 455
       DO 445 L=1,21
       IF((L.EQ.4).OR.(L.EQ.7)) GO TO 445
       IF((L.GT.9).AND.(L.LT.20)) GO TO 445
       DO 454 I=1,4
       PUREN(L,I)=0.0
 454   CONTINUE
 445   CONTINUE
 455    DO 500 I = 1, MACRO
        DO 460 J = 1, 35
          IF (INDEX(J) - MACX(I)) 460, 480, 460
  460   CONTINUE
        WRITE (6,470) MACX(I)
  470   FORMAT ('0ERROR IN INDEX, NAMELY ',I6)
        NFLAG = 1
        GO TO 500
  480   DO 490 N = 1, 4
  490   PUREN(J,N) = BASE(J) * DENMAC(I,N)
  500 CONTINUE
      IF(IR.EQ.0) GO TO 505
      DO 502 J=1,35
       IF(INDEX(J).EQ.MACX(IR)) GO TO 504
  502  CONTINUE
      GO TO 505
  504 IR = J
  505 CONTINUE
      DO 508 N=1,2
      ALPHAT = FUELTX
      IF (N .EQ. 2) ALPHAT=CLADTX
      DO 506 J=1,35
       IF(J.EQ.4 .OR. (J.GT.27 .AND. J.LT.33)) GO TO 506
       IF(N.EQ.2 .AND. J.EQ.IR) GO TO 506
       PUREN(J,N) = PUREN(J,N) * ALPHAT
  506  CONTINUE
  508 CONTINUE
      DO 510 L = 1, 4
        J = MIN0(L,3)
        SNAKE = 1. - 3.*(TEM(J) - 68.0)*ICON(6)*TBLF(TX,ALPH36,TEM(J))
        IF (L .EQ. 1) SNAKE =  FUELTX
        IF (L .EQ. 2) SNAKE = CLADTX
        PUREN(28,L) = PUREN(28,L) * RHOUO2 * SNAKE
        PUREN(29,L) = PUREN(29,L) * RHOPO2 * SNAKE
        PUREN(30,L) = PUREN(30,L) * RHOTO2 * SNAKE
        IF(L.GE.3) SNAKE = 1.0 - 3.0*ALPH4*ICON(6)*(TEM(J)-68.0)
        PUREN(4,L) = PUREN(4,L) * SNAKE
        PUREN(31,L) = PUREN(31,L) * RHOH2O
  510 PUREN(32,L) = PUREN(32,L) * RHOD2O
      IF (MICRO .EQ. 0) GO TO 630
      DO 620 I = 1, MICRO
        DO 530 J = 1, 35, 1
          IF (INDEX(J) .EQ. IABS(MICX(I))) GO TO 540
  530   CONTINUE
        WRITE (6,470) MICX(I)
        NFLAG = 1
        GO TO 620
C
C       CHECK FOR ZEROING OF APPROPRIATE NUMBER DENSITIES INPUT AS
C       TRACE ELEMENTS IN RESTART CASE
C
  540   CONTINUE
        IF(ICON(1) .GE. 0) GO TO 549
        DO 545 NN=1,MACRO
        IF(MACX(NN) .EQ. MICX(I)) GO TO 549
  545   CONTINUE
        DO 547 KK=1,4
  547   PUREN(J,KK)=0.0
  549   IF (J .EQ. 19) GO TO 560
        IF (J .EQ. 32) GO TO 600
        DO 550 L = 1, 4
          SNAKE = PUREN(28,L)
          IF (SNAKE .EQ. 0.0) SNAKE = PUREN(29,L)
          IF (SNAKE .EQ. 0.0) SNAKE = PUREN(30,L)
  550   PUREN(J,L) = PUREN(J,L) + SNAKE * DENMIC(I)
        GO TO 620
  560   IF (DENMIC(I) .GT. 0.0) GO TO 580
        DO 570 L = 1, 4
  570   PUREN(J,L) = PUREN(J,L) - DENMIC(I) * PUREN(28,L) * 4.942131E-6
        GO TO 620
  580   DO 590 L = 1, 4
  590   PUREN(J,L) = PUREN(J,L) + .329756E-6 * DENMIC(I) * (PUREN(31,L)
     1  + PUREN(32,L))
        GO TO 620
  600   DO 610 L = 1, 4
          WATER = PUREN(31,L) + PUREN(32,L)
          PUREN(31,L) = WATER / (1.0 + DENMIC(I))
  610   PUREN(32,L) = WATER - PUREN(31,L)
  620 CONTINUE
  630 CONTINUE
      IF (NFLAG .EQ. 0) GO TO 650
      NFLAG = 0
      WRITE (6,640)
  640 FORMAT (44H0EXECUTION OF THIS CASE HAS BEEN SUPPRESSED.)
      GO TO 10
  650 CONTINUE
      DO 680 L = 1, 4
        LX = MIN0(L,3)
        A = 1.0 - 3.0*ALPHSS * (TEM(LX) - 68.0)
        PUREN(1,L) = PUREN(1,L) + 2. * PUREN(31,L)
        PUREN(2,L) = PUREN(2,L) + PUREN(31,L) + PUREN(32,L) + 2. * (
     1  PUREN(28,L) + PUREN(29,L) + PUREN(30,L))
        PUREN(3,L) = PUREN(3,L) * (1. - 3.0*ALPH3*(TEM(LX) - 68.0))
        PUREN(5,L) = PUREN(5,L) + .6861 * A * PUREN(33,L) + .6503 * A *
     1  PUREN(34,L) + .6743 * A * PUREN(35,L)
        PUREN(6,L) = PUREN(6,L) + .0950 * A * PUREN(33,L) + .1250 * A *
     1  PUREN(34,L) + .1100 * A * PUREN(35,L)
        PUREN(8,L) = PUREN(8,L) + .1900 * A * PUREN(33,L) + .1700 * A *
     1  PUREN(34,L) + .1850 * A * PUREN(35,L)
        PUREN(9,L) = PUREN(9,L) + .020 * A * (PUREN(33,L) + PUREN(34,L)
     1  + PUREN(35,L))
        IF (PUREN(28,L) .LE. 0.0 .OR. ICON(1) .LT. 0) GO TO 670

  660   PUREN(12,L) = PUREN(28,L) - PUREN(10,L) - PUREN(11,L) - PUREN(
     1  23,L) - PUREN(24,L)
  670   PUREN(20,L) = PUREN(20,L) + 2. * PUREN(32,L)
  680 PUREN(21,L) = PUREN(21,L) + PUREN(30,L)
      IF (ICON(4) .EQ. 2) GO TO 690
      FRACVL(1) = (R(1)/R(3)) ** 2
      FRACVL(2) = (R(2)/R(3)) ** 2 - FRACVL(1)
      GO TO 700
  690 FRACVL(1) = R(1) / R(3)
      FRACVL(2) = R(2) / R(3) - FRACVL(1)
  700 CONTINUE
      FRACVL(3) = 1. - FRACVL(1) - FRACVL(2)
  710 CONTINUE
C
C  CINDER FISSION PRODUCT CORRELATION REVISION--JR 1/83
C  CALCULATE ENRICHMENT
C
      FPBUF = WT(10)*PUREN(10,1)/(WT(10)*PUREN(10,1)
     1                          + WT(11)*PUREN(11,1)
     1                          + WT(12)*PUREN(12,1)
     1                          + WT(23)*PUREN(23,1)
     1                          + WT(24)*PUREN(24,1))
CWRM  ALLOW OLD FP CORRELATION FOR LWR FUEL  WRM 4/86
      IF(FPBUF.GT.0.1)GOTO 712
      WRITE(6,771)
  771 FORMAT(1H0,5X,'OLD LEOPARD FISSION PRODUCT CORRELATION USED')
      FPBUF=1.0
      FPSCAL=1.0
      GOTO 778
  712 CONTINUE
      WRITE (6,713)
  713   FORMAT('0  ENDF/B-IV CINDER FISSION PRODUCT CORRELATION USED'/
     1 5X,'FPBUF/FPSCAL INPUTS IGNORED - ENRICHMENT AND H/235 RATIO',
     2 ' USED FOR FP CORRELATION FOR HEU/LEU FUEL')
      VF1 = (1.0 - SHARE) *
     1           (FRACVL(1)*PUREN(1,1)
     2          + FRACVL(2)*PUREN(1,2)
     3          + FRACVL(3)*PUREN(1,3))
     4         + SHARE * PUREN(1,4)
      VF10 = (1.0 - SHARE) *
     1           (FRACVL(1)*PUREN(10,1)
     2          + FRACVL(2)*PUREN(10,2)
     3          + FRACVL(3)*PUREN(10,3))
     4         + SHARE * PUREN(10,4)
      FPSCAL = VF1/VF10
CWRM 4/86
  778 CONTINUE
C
C  JR 1/83
      NSTEPS = 0
      IF (PDNSTY .EQ. 0.0 .OR. ICON(14) .EQ. 0 .OR. STEPS(1) .EQ. 0.0)
     1       RETURN
      DO 720 NSTEPS = 1, 40
         IF (STEPS(NSTEPS + 1) .EQ. 0.0) RETURN
  720 CONTINUE
      NSTEPS = 40
C
      RETURN
      END
      LOGICAL FUNCTION BTESTE(N, M)
      CHARACTER * 1 BLANK, LINE
      LOGICAL BTST
      COMMON /HELPIN/ LINE(72)
      DATA    BLANK /' '/
      BTESTE = .FALSE.
      DO 10 I = 1, M
        J = N - 1 + I
        BTST=LINE(J).NE.BLANK
   10 BTESTE = BTESTE .OR. BTST
      BTESTE = .NOT. BTESTE
      RETURN
      END
C=======================================================================
CRESTRT
      SUBROUTINE RESTRT
C
      COMMON INDEX(35), E(172), RTE(172), BASE(35), SS(25), XSS(25),
     1      CKABSR(25,172), CKTRAN(25,172), CKFSN(25,172), GNUTH(25),
     2      BUCARG(29), BUCVAL(29), ALFTBL(8), BTATBL(7), RX(15),
     3      BTABLE(14), AARG(153), ATABLE(152), TX(11), ALPH36(10)
      COMMON /INDATA/ ICON(24), MACRO, MACX(35), DENMAC(35,4), MICRO,
     1       MICX(35), DENMIC(35), TEFC, TEM(3), REFBUC, GBUCKL, BSQARE,
     2       HEDGE, RAD(3), PITCH, SHARE, RHOH2O, RHOD2O, RHOUO2,
     3       RHOPO2, RHOTO2, PRESSH, PRESSD, CUTOFF, PUTINL, VOLUME,
     4       PDNSTY, LOADNG, FPSCAL, STEPS(40), POISON(40), PUREN(35,4),
     5       VFAST(27), HXIS, FRACVL(3),FUELTX,CLADTX
C  THERMAL EXPANSION COEFF.
      DATA ALPH4/8.2E-6/, ALPH3/2.90E-6/
C
      DO 263 N=1,2
        ALPHAT=FUELTX
        IF (N .EQ. 2) ALPHAT=CLADTX
       DO 100 J=1,35
       IF(J.EQ.4 .OR. (J.GT.27 .AND. J.LT.33)) GO TO 100
C WARNING: PROVISION FOR NEGATIVE CLAD RADIUS INPUT NOT MADE
  100  PUREN(J,N)=PUREN(J,N)/ALPHAT
  263 CONTINUE
      DO 600 L=1,4
        J=MIN0(L,3)
        SNAKE=1. - 3.*(TEM(J) - 68.)*ICON(6)*TBLF(TX,ALPH36,TEM(J))
        IF (L.EQ.1) SNAKE=FUELTX
        IF (L.EQ.2) SNAKE=CLADTX
        PUREN(28,L) = PUREN(28,L)/(RHOUO2*SNAKE)
        PUREN(29,L) = PUREN(29,L)/(RHOPO2*SNAKE)
        PUREN(30,L) = PUREN(30,L)/(RHOTO2*SNAKE)
        IF(L.GE.3) SNAKE = 1.0 - 3.0*ALPH4*ICON(6)*(TEM(J)-68.0)
        PUREN(4,L) = PUREN(4,L) / SNAKE
        PUREN(31,L) = PUREN(31,L) / RHOH2O
  600 PUREN(32,L) = PUREN(32,L) / RHOD2O
      DO 265 I=1,MACRO
      DO 265 J=1,35
        IF(INDEX(J) .NE. MACX(I)) GO TO 265
      DO 264 N=1,4
  264   DENMAC(I,N)=PUREN(J,N)/BASE(J)
  265 CONTINUE
      DO 300 I=1,MICRO
      DO 270 J=1,35
        IF(INDEX(J) .EQ. MICX(I)) GO TO 280
  270   CONTINUE
  280   IF(J .EQ. 19) GO TO 285
        IF(J .EQ. 32) GO TO 300
      DO 282 L=1,4
        FLAG=PUREN(28,L)
        IF(FLAG .EQ. 0.) FLAG=PUREN(29,L)
        IF(FLAG .EQ. 0.) FLAG=PUREN(30,L)
        IF (FLAG .EQ. 0.) GO TO 282
        DENMIC(I)=PUREN(J,L)/FLAG
        GO TO 300
  282   CONTINUE
  285   IF(DENMIC(I) .GE. 0.) GO TO 300
      DO 290 L=1,4
        IF(PUREN(28,L).GT.0.0)
     X  DENMIC(I)=-PUREN(J,L)/(PUREN(28,L)*4.942131E-6)
  290   CONTINUE
  300   CONTINUE
      RETURN
      END
C=======================================================================
CTO2DB
      SUBROUTINE TO2DB
C
C     CHARACTER * 8 WORD, OTE, ALPH2, ALPH3
      CHARACTER * 8 WORD, OTE, ALPH2, ALPH3, ALPH1
      COMMON INDEX(35), FACTOR(5,7), WORD(35,2), OTE(4,3,6),
     1       YIELD(27,27), TFUGE(4,2), SSMOD(25), SSCAPA(25),
     2       CORREL(25), SPVOLM(25)
      COMMON ONEVRV, TWOVRV, SSAMND(25), SSFMND(25), SSGMND(25), SAMND,
     1       SFMND, SGMND, BIGA(4), FSTFLX, F1SA, F1SD, F1FX, F1GX,
     2       F1SR, TAU(4), ONEFST(25,5), FLUX(2), XST(5,6), XSA(5,7),
     3       XSREM(5,4), BALNCE(30,5), PNL, CFISN(6), CELHTX, CORHTX,
     4       CORERA, CORERB, CORERC, CORERD, OMEGAM, STOM, CAYINF,
     5       SPWRX, PDX, VIE, ENEOS(27), TEMX(4), RADX(4), FLUXED(2)
      COMMON /INDATA/ ICON(24), MACRO, MACX(35), DENMAC(35,4), MICRO,
     1       MICX(35), DENMIC(35), TEFC, TEM(3), REFBUC, GBUCKL, BSQARE,
     2       HEDGE, RAD(3), PITCH, SHARE, RHOH2O, RHOD2O, RHOUO2,
     3       RHOPO2, RHOTO2, PRESSH, PRESSD, CUTOFF, PUTINL, VOLUME,
     4       PDNSTY, XOADNG, FPSCAL, STEPS(40), POISON(40), PUREN(35,4),
     5       VFAST(27), HXIS, FRACVL(3), FUELTX, CLADTX
      COMMON /TRSLT/ SDMND, SSTMND(25), SDCON, SSTCON(25), SSACON(25),
     1       SSFCON(25), SSGCON(25), RELPHI(3), DL25NT, DL28NT, PHI,
     2       VP(27), SACON, SFCON, SGCON
      COMMON /MRSLT/ OMEGAC, OMEGAS, EL, NQZWL, DEFC, DOPLRD, RI28,
     1       PSUB28, TPOIS, QPOIS, SEARCH, GAMM(3), D(3), SIGMA(3),
     2       SX(3), GNUSX(3), SR(3), ST(25,3), SA(25,3), SIGFX(25,3),
     3       GSX(25,3), SRA(25,3), SREM(25,3), HOLDK(5), ZERNL
      COMMON /HEAD/ TITLE(20), NOSTEP, TIMBOS, BUBOS, TIMEOS, BUEOS,
     1       NSTEPS
      COMMON CR1, CR2, CR3, CR4, DEL25N, DEL25U, DLTA28, RHO28N, RHO28U,
     1       CHORD, PR3CUR, WTOUO2, HWTUO2, HWTM, WTOM
      COMMON /JCL/ FLT(34), FLF(54), ET(34), EF(54)
      COMMON /LNL/ NSTART,VPLN(25,2),TD(4,2)
      COMMON /FPBUF/ FPBUF
      COMMON /X2DB/ I2DB, PFRAC, IXSEC, PCBU, PCU235, PRINT(40),
     1       XSEC(3,8,6),VERSIN(10)
      DIMENSION ALPH2(4),ALPH3(3)
      DIMENSION SIGTRL(3), SIGTRN(3), SIGABL(3), SIGABN(3), SIGMOL(3),
     1          SIGFIL(3), SIGFIN(3), SIGVFL(3), SIGVFN(3), DN(3),
     2          DL(3), PL(3), PN(3), SIGREL(3), SIGREN(3), SIGMON(3),
     3          ALPH1(3)
      DATA ALPH1, ALPH2 /'-T', '-L', '-N', '2 GP REG', '2 GP MND',
     1     '4 GP REG', '4 GP MND'/
      DATA ALPH3 / 'TOTAL ', 'LATTIC', 'NONLAT'/
C
C     WRITE COMPLETE LEOPARD LIBRARY BINARY TAPE ON UNIT 7
C
      IF (IXSEC .EQ. 0) GO TO 80
      IF ( NOSTEP .EQ. 0 .AND. ICON(1) .GT. 0 ) TIMBOS = 0.0

      DAYS = TIMBOS / 24.0
    9 WRITE (6,10) DAYS, BUBOS, PCBU, PCU235
   10 FORMAT (//,' BINARY CROSS SECTIONS SAVED ON UNIT 7', /5X, 'TIME=',
     1       F6.1, ' DAYS', 5X, 'BURNUP=', F10.2, ' MWD/T', 5X,
     2       'PERCENT BURNUP=', F8.2, 5X, 'U235 PERCENT BURNUP=', F8.2,
     3       /)
      IF (NOSTEP .GT. 1) GO TO 60
C     IF (ICON(1) .LT. 0) GO TO 60
      IF (ICON(23) .EQ. 1) GO TO 60
      XOADT = XOADNG * 1.E-06
      XOADL = XOADT / (1 - SHARE)
      XOADN = 0.0
      IRR = 3
      IF (SHARE .LE. 0.0) IRR = 1
      WRITE (7) TITLE
      CALL HEADER(2, 7)
      WRITE (7) (TITLE(1),ALPH1(I),I=1,3)
      WRITE (7) NSTEPS, IRR
      WRITE (7) XOADT, XOADL, XOADN
   60 WRITE (7) BUBOS, PCBU, PCU235, PFRAC, TEMX, RHOH2O, DAYS
      WRITE (7) XSEC
C
C     WRITE FORMATTED CARD CROSS SECTIONS ON UNIT 8
C
   80 IF (I2DB .EQ. 0) GO TO 160
      IF (I2DB .GT. 2) I2DB = 1
      IF (NOSTEP .NE. 1 .AND. NOSTEP .NE. NSTEPS) GO TO 100
      WRITE (6,90) TITLE(1)
   90 FORMAT (/'  FORMATTED 2DBUM CROSS SECTIONS ',
     1       'WRITTEN ON UNIT 8 - MATERIAL NAME = ', A4)
      IRR = 3
      IF (SHARE .LE. 0.0) IRR = 1
  100 CONTINUE
      IG2 = 5
      IG1 = 4 + I2DB
      DO 155 II = I2DB,4,2
      IG2 = IG2 - 1
      DO 150 IR = 1, IRR
        WRITE (8,110) ALPH2(II), ALPH3(IR), (TITLE(I),I=1,9)
  110   FORMAT (2H'  , A8,2X,A6,2X,9A4)
        XSEC(IR,6,IG1) = XSEC(IR,6,IG2)
        IF (II .GT. 2) GO TO 130
C
C     2 GROUP CROSS SECTIONS
C
        XSEC(IR,6,IG2) = 0.0
        WRITE (8,120) (XSEC(IR,IT,4),IT=1,6)
        WRITE (8,120) (XSEC(IR,IT,IG1),IT=1,6)
  120   FORMAT (7(1PE12.5))
        GO TO 150
C
C     4 GROUP CROSS SECTIONS
C
  130   XSEC(IR,6,3) = XSEC(IR,6,2)
        XSEC(IR,6,2) = XSEC(IR,6,1)
        XSEC(IR,6,1) = 0.0
        DO 140 IGG = 1, 5
          IF (IGG .EQ. 4) GO TO 140
          IG = IGG
          IF (IGG .EQ. 5 .AND. I2DB .EQ. 2) IG = 6
          WRITE (8,120) (XSEC(IR,IT,IG),IT=1,6)
  140   CONTINUE
  150 CONTINUE
  155 CONTINUE
  160 RETURN
      END
C=======================================================================
CVCL
      FUNCTION VCL(P, T)
C
      DIMENSION A(10)
      DATA A     /7.46908269, -7.50675994E-3, -.46203229E-8,
     1     -.1215470111E-2, 0.0, 7.70517043, -5.29739118E-2,
     2     -2.96725673E-9, -.766360055E-2, 1.439870206E-11/
      IF (T .LT. 50.0 .OR. T .GT. 705.4) GO TO 10
      X = T - 705.398
      X3 = X ** 3
      I = 0
      IF (T .GE. 200.0) I = 5
      PSL = EXP(X*(A(I + 1) + A(I + 2)*X + A(I + 3)*X3 + A(I + 5)*X3*X)/
     1((1. + A(I + 4)*X)*(T + 459.688)) + 8.0728362)
      IF (P .LE. PSL) GO TO 10
      E1 = ALOG(P - PSL) - 2.68756849
      E3 = E1 * 2.
      E4 = E1 / 2.
      E2 = -T * .55555555 + 391.88778
      E5 = E2 ** (1.0/6.0)
      E6 = E5 * E5
      E7 = E6 * E5
      E5 = E7 / (-8.21761572) * E5
      E5 =  EXP((E7*1.05467592E-3 - .0160537197)*E2 + E5 - 3.7166732 +
     1E1 + 4.13401091) + 62.4278183
      E8 =  EXP(((E7*1.35599875E-3 - .0297916028)*E7 - .22389889)*E7 -
     12.97626224 + E1)
      E8 =  EXP(E2*(-6.85078156E-2) - 11.4147912 + E3) - E8
      E8 =  EXP(E7*(-.92085142) - .9504583 + E4) + E8
      E7 = 1.0 + 0.1342489 * E6 - 0.003946263 * E2
      E4 = E2 * (E2**3/1.33527748E12-1.203374E-3)
      VCL = ((E6*(-.3151548) + E4 + 3.1975)/E7 - E8) / E5
      RETURN
   10 WRITE (6,20) P, T
   20 FORMAT ('0 P=',E15.7, ', T=',E15.7, ' NOT SUBCOOLED. PUNT.')
      RETURN
      END
C=======================================================================
CTHRMAL
      SUBROUTINE THRMAL
C
      REAL NLPF, NA
      COMMON INDEX(35), E(172), RTE(172), BASE(35), SS(25), XSS(25),
     1       CKABSR(25,172), CKTRAN(25,172), CKFSN(25,172), GNUTH(25),
     2       BUCARG(29), BUCVAL(29), ALFTBL(8), BTATBL(7), RX(15),
     3       BTABLE(14), AARG(153), ATABLE(152), TX(11), ALPH36(10)
      COMMON /INDATA/ ICON(24), MACRO, MACX(35), DENMAC(35,4), MICRO,
     1       MICX(35), DENMIC(35), TEFC, TEM(3), REFBUC, GBUCKL, BSQARE,
     2       HEDGE, RAD(3), PITCH, SHARE, RHOH2O, RHOD2O, RHOUO2,
     3       RHOPO2, RHOTO2, PRESSH, PRESSD, CUTOFF, PUTINL, VOLUME,
     4       PDNSTY, LOADNG, FPSCAL, STEPS(40), POISON(40), PUREN(35,4),
     5       VFAST(27), HXIS, FRACVL(3)
      COMMON /HEAD/ TITLE(20), NOSTEP, TIMBOS, BUBOS, TIMEOS, BUEOS,
     1       NSTEPS
      COMMON T(172), G(172), GN(172), ROOTED(172), FLUX(3,172), YY(6),
     1       DYY(6), XA(31), YS(7), DYS(7), XAA(31), XHH(31), XD(31),
     2       XC(31), XB(31), XBB(31), XDD(31), SIGMAA(3), DEE(3),
     3       FLUXL(3)
      COMMON /TRSLT/ SDMND, SSTMND(25), SDCON, SSTCON(25), SSACON(25),
     1       SSFCON(25), SSGCON(25), RELPHI(3), DL25NT, DL28NT, PHI,
     2       VP(27), SACON, SFCON, SGCON
      COMMON /FPBUF/ FPBUF
      COMMON /JCL/ FLT(34), FLF(54), ET(34), EF(54)
      COMMON/JGS/ NLPF(40),HEDGE1
       COMMON/LNL/NSTART, VPLN(25,2),TD(4,2)
      DIMENSION WT(25)
       DIMENSION FWT(172), PHLT(172), TDT(4)
      EQUIVALENCE (XOADNG,LOADNG), (BURNUP,BUBOS)
      EQUIVALENCE (HEDGE,HEGX)
C
C  CONSTANTS
      DATA EMAX /0.625/
      DATA PI/3.1415926536/, NA/0.6022045/, BOLTZK/4.7874087443E-5/
C  MOLECULAR WEIGHTS
      CALL MOVEKA(25,0.0,WT)
      WT(10) = 235.04394
      WT(11) = 236.04558
      WT(12) = 238.05082
      WT(13) = 239.05218
      WT(14) = 240.05383
      WT(15) = 241.05687
      WT(21) = 232.03807
      WT(22) = 233.041
      WT(23) = 233.03965
      WT(24) = 234.04098
      WT(25) = 242.05877
C
      RT2 = SQRT(2.0)
      RTPI = SQRT(PI)
C
      IF (NOSTEP .GT. 1) REWIND 1
      IF (NOSTEP .GT. 1) READ (1) E, RTE, INDEX, BASE, SS, XSS, CKABSR,
     1     CKTRAN, CKFSN, GNUTH, BUCARG, BUCVAL, ALFTBL, BTATBL, RX,
     2     BTABLE, AARG, ATABLE, TX, ALPH36
      IF(ICON(14).GT.0) HEDGE=NLPF(NOSTEP)
      BETA = SQRT(1.0/2.0/BOLTZK/(TEM(3) + 459.4))
      BU = BUBOS / 1000.0
      IF (NOSTEP .GT. 1) BU = BUEOS / 1000.0
      BU = BU / FPBUF
CWRM 4/86 FP CORRELATION
      IF(FPBUF.LT.1.0)GOTO 775
C   LWR FUEL
      FPSIG = 0.1591 * FPSCAL * (123.13 - 2.934*BU + 0.06303*BU**2 -5.
     151E-4*BU**3)
      GOTO 777
  775 CONTINUE
C
C  CINDER FISSION PRODUCT CORRELATION REVISION--JR 1/83
C          FOR HEU AND LEU MTR FUEL
      FPSIG = 0.1591 * (74.918 + BU*(-0.14845 + BU*(0.28169E-3
     1                         + BU*(-0.20039E-6))))
C
C  H/U235 CORRECTION
C
      FPSIG = FPSIG * 0.99856 * (1.0 + 0.9065 *
     1                           EXP(-0.0071009 * FPSCAL))
C  JR 1/83
C
  777 CONTINUE
      BU = BU * FPBUF
      DO 10 L = 1, 172
   10 CKABSR(18,L) = FPSIG
      DO 20 N = 1, 27
   20 VFAST(N) = (1.0 - SHARE) * (FRACVL(1)*PUREN(N,1) + FRACVL(2)*
     1PUREN(N,2) + FRACVL(3)*PUREN(N,3)) + SHARE * PUREN(N,4)
      IF (XOADNG .EQ. 0.0) XOADNG = ACCUM2(WT,VFAST,25)/NA
      IF (ICON(18) .GT. 0) GBUCKL = REFBUC + ABS(REFBUC) ** 0.25 * 0.
     1001 * TERP(BU,BUCARG,BUCVAL)
      BSQARE = GBUCKL
      HXIS = ACCUM2(XSS,VFAST,25)
      CALL MOVEKA(27, 0, VP)
      CALL INGR(BETA)
C
C     THERMAL FLUX EDIT ADDED 1976 JC LEE
C
      JL = 0
      DO 30 L = 1, 172
        T(L) = GN(L) * RTE(L)
        IF (MOD(L,5) .NE. 0) GO TO 30
        JL = JL + 1
        FLT(JL) = T(L)
        ET(JL) = E(L)
   30 CONTINUE
C
      WRITE (10,40) TITLE, NOSTEP
   40 FORMAT (  20A4, I3)
   41 FORMAT (  10F10.6 )
      CALL HEADER(2,10)
      WRITE (10,41) RTE
      WRITE (10,41) GN
C**************************
      PHI = QD(EMAX)
   50 SNAKE = .1591
      DO 70 I = 1, 3
        DO 60 L = 1, 172
   60   T(L) = GN(L) * SNAKE * FLUX(I,L)
   70 RELPHI(I) = QD(EMAX) / PHI
   80 DO 90 L = 2, 172
   90 T(L) = ROOTED(L) * GN(L)
      SDCON = QD(EMAX) / PHI
      DO 110 I = 1, 25
        DO 100 L = 2, 172
  100   T(L) = GN(L) * CKABSR(I,L)
  110 SSACON(I) = QD(EMAX) / PHI
      DO 130 I = 1, 25
        DO 120 L = 2, 172
  120   T(L) = GN(L) * CKFSN(I,L)
        SSFCON(I) = QD(EMAX) / PHI
  130 CONTINUE
      DO 160 I = 1, 25
        IF (VFAST(I) .EQ. 0.0) GO TO 160
        DO 140 L = 2, 172
          SNAKE = HEGX * FLUX(3,L)
       PHLT(L)=GN(L)/(1.0+SHARE*(SNAKE-1.0))
C  PHLT IS THE LATTICE FLUX SPECTRUM/RTE(L).
C  MODIFIED FOR L/NL EDIT, JCL, 6/80.
C
  140   T(L) = CKABSR(I,L) * ((1. - SHARE)*(FRACVL(1)*FLUX(1,L)*
     1  PUREN(I,1) + FRACVL(2)*FLUX(2,L)*PUREN(I,2) + FRACVL(3)*FLUX(3,
     2  L)*PUREN(I,3)) + SHARE*SNAKE*PUREN(I,4)) *PHLT(L)
        VP(I) = QD(EMAX) / PHI / SSACON(I)
        IF (I .EQ. 12) DL28NT = QD(CUTOFF)
        DO 150 L = 2, 172
  150   T(L) = T(L) * CKFSN(I,L) / CKABSR(I,L)
        SSFCON(I) = QD(EMAX) / PHI / VP(I)
        IF (I .EQ. 10) DL25NT = QD(CUTOFF)
  160 CONTINUE
      DO 210 I = 1, 25
        DO 200 L = 2, 172
  200   T(L) = GN(L) * E(L) / (CKABSR(I,L) + CKTRAN(I,L))
  210 SSTCON(I) = PHI / QD(EMAX)
C
C   LATTICE/NON-LATTICE EDIT, JCL, 6/80.
       CALL MOVEKA(58, 0, VPLN)
       KED=2
       DO 180 K=1,KED
       DO 170 L=1,172
       T(L)=RTE(L)*PHLT(L)
       IF (K.EQ.2) T(L)=T(L)*HEGX*FLUX(3,L)
  170  CONTINUE
       PHIT=QD(EMAX)
C   PHIT IS THE INGEGRATED THERMAL FLUX IN EACH REGION.
       DO 190 I=1,25
       IF ((K.EQ.1).AND.(PUREN(I,1)+PUREN(I,2)+PUREN(I,3).LE.0.0))
     *  GO TO 190
       IF((K.EQ.2).AND.(PUREN(I,4).LE.0.0)) GO TO 190
       DO 182 L=2,172
       IF(K.EQ.1) FWT(L)=(FRACVL(1)*FLUX(1,L)*PUREN(I,1)+FRACVL(2)
     X *FLUX(2,L)*PUREN(I,2) +FRACVL(3)*FLUX(3,L)*PUREN(I,3))*PHLT(L)
       IF(K.EQ.2) FWT(L)=HEGX*FLUX(3,L)*PHLT(L)*PUREN(I,4)
       T(L)=CKABSR(I,L)*FWT(L)
  182  CONTINUE
       QDSUM=QD(EMAX)
       TD(1,K)=TD(1,K)+QDSUM
       VPLN(I,K)=QDSUM/PHIT/SSACON(I)
C  VPLN IS THE FLUX-WEIGHTED NUMBER DENSITY FOR L/NL REGIONS.
       DO 188 L=2,172
       T(L)=CKFSN(I,L)*FWT(L)
  188  CONTINUE
       QDSUM=QD(EMAX)
       TD(2,K)=TD(2,K)+QDSUM
       TD(3,K)=TD(3,K)+QDSUM*GNUTH(I)
  190  CONTINUE
       DO 194 J=1,3
       TD(J,K)=TD(J,K)/PHIT
  194  CONTINUE
       DO 192 L=2,172
       IF(K.GT.1) GO TO 196
       DO 198 J=1,3
       TDT(J)=ACCUM2(PUREN(1,J),CKABSR(1,L),25)+ACCUM2(PUREN(1,J),
     X CKTRAN(1,L),25)
  198  CONTINUE
  196  CONTINUE
       IF(K.EQ.2)TDT(4)=ACCUM2(PUREN(1,4),CKABSR(1,L),25)+ACCUM2
     X (PUREN(1,4),CKTRAN(1,L),25)
       IF(K.EQ.1)T(L)=E(L)*PHLT(L)/ACCUM3(FRACVL(1),FLUX(1,L),TDT(1),3)
       IF(K.EQ.2.AND.TDT(4).NE.0.0)T(L)=E(L)*PHLT(L)*HEGX*FLUX(3,L)/
     * TDT(4)
  192  CONTINUE
       TD(4,K)=QD(EMAX)/(3.0*PHIT)
  180  CONTINUE
C
C     GENERATE A MAXWELLIAN SPECTRUM FOR MND EDIT.
C
      DO 220 L = 2, 172
      GN(L) = 8.0/RT2/RTPI*BETA**3*RTE(L)*EXP(-2.0*E(L)*BETA**2)
  220 T(L) = GN(L) * ROOTED(L)
      PHIM = RT2/RTPI / BETA * (1.0 - (1.0 + 2.0*EMAX*BETA**2)*EXP(-2.
     10*EMAX*BETA**2))
      SDMND = QD(EMAX) / PHIM
      DO 240 I = 1, 25
        DO 230 L = 2, 172
  230   T(L) = GN(L) / (CKABSR(I,L) + CKTRAN(I,L)) * E(L)
        SSTMND(I) = PHIM / QD(EMAX)
  240 SSGCON(I) = SSFCON(I) * GNUTH(I)
      SACON = ACCUM2(VP,SSACON,25)
      SFCON = ACCUM2(VP,SSFCON,25)
      SGCON = ACCUM2(VP,SSGCON,25)
      RETURN
      END
C=======================================================================
CINGR
      SUBROUTINE INGR(BETA)
C
      COMMON INDEX(35), E(172), RTE(172), BASE(35), SS(25), XSS(25),
     1       CKABSR(25,172), CKTRAN(25,172), CKFSN(25,172), GNUTH(25),
     2       BUCARG(29), BUCVAL(29), ALFTBL(8), BTATBL(7), RX(15),
     3       BTABLE(14), AARG(153), ATABLE(152), TX(11), ALPH36(10)
      COMMON /INDATA/ ICON(24), MACRO, MACX(35), DENMAC(35,4), MICRO,
     1       MICX(35), DENMIC(35), TEFC, TEM(3), REFBUC, GBUCKL, BSQARE,
     2       HEDGE, RAD(3), PITCH, SHARE, RHOH2O, RHOD2O, RHOUO2,
     3       RHOPO2, RHOTO2, PRESSH, PRESSD, CUTOFF, PUTINL, VOLUME,
     4       PDNSTY, LOADNG, FPSCAL, STEPS(40), POISON(40), PUREN(35,4),
     5       VFAST(27), HXIS, FRACVL(3)
      COMMON T(172), G(172), GN(172), ROOTED(172), FLUX(3,172), YY(6),
     1       DYY(6), XA(31), YS(7), DYS(7), XAA(31), XHH(31), XD(31),
     2       XC(31), XB(31), XBB(31), XDD(31), SIGMAA(3), DEE(3),
     3       FLUXL(3)
      DIMENSION R(3)
      DIMENSION ARGTBL(8),ALFTBS(8),BTATBS(7),PCO(5),CCO(5)
      EQUIVALENCE (R(1),RAD(1))
      DATA ARGTBL    /0.0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 0.0/
      DATA ALFTBS    /0.0, 0.05, 0.14, 0.23, 0.32, 0.41, 0.50, 0.0/
      DATA BTATBS    /0.0, 0.002, 0.035, 0.04, 0.04, 0.04, 0.04/
C      PREDICTOR AND CORRECTOR WEIGHTING FACTORS
      DATA PCO    /251.0, -1274.0, 2616.0, -2774.0, 1901.0/
      DATA CCO    /-19.0, 106.0, -264.0, 646.0, 251.0/
      AAAF(B,C) = B ** 2 / (B**2 - C**2) * (C**2/B**2/4. - .75 + B**2/(
     1B**2 - C**2)*ALOG(B/C))
C
      DATA PI/3.1415926536/, XLAMB/0.71/
      RT2 = SQRT(2.0)
      RTPI = SQRT(PI)
      THQPI = PI**0.75
C
      CALL MOVEKA(688, 0, T)
      FLUX(1,1) = 1.0
      FLUX(2,1) = 1.0
      FLUX(3,1) = 1.0
      DO 60 L = 2, 172
        DO 10 LL = 1, 3
          SIGMAA(LL) = ACCUM2(PUREN(1,LL),CKABSR(1,L),25) / RTE(L)
   10   DEE(LL) = 1.0 / 3.0 / (SIGMAA(LL) + ACCUM2(PUREN(1,LL),CKTRAN(1,
     1  L),25)/RTE(L))
        OPT = R(1) / 3.0 / DEE(1)
        IF (ICON(4) .NE. 2) GO TO 20
        CTH = R(2) - R(1)
        CKAP = SQRT(SIGMAA(2)/DEE(2))
        CTHK = CTH * CKAP
        SCATX = 1.0 - 3.0 * DEE(1) * SIGMAA(1)
        X = 2.0 * OPT
        TABLE2 = TBLF(ARGTBL,ALFTBS,OPT)
        TABLE3 = TBLF(ARGTBL,BTATBS,OPT)
        F = 1.0 + ASLAB(X) * (1.0 + SCATX*(SCATX*TABLE3 + TABLE2)) * 3.
     1  0 * DEE(1) * SIGMAA(1)
        FCLAD = F * ((COSH(CTHK) - 1.)/(2.13132*SIGMAA(2)*CTH) + SINH(
     1  CTHK)/CTHK)
        ARE = 1.0 + FRACVL(2) * SIGMAA(2) / FRACVL(1) / SIGMAA(1) *
     1  FCLAD
        WTH = R(3) - R(2)
        WKAP = SQRT(SIGMAA(3)/DEE(3))
        WTHK = WTH * WKAP
        FCS = F * (SINH(CTHK)/(2.13132*CKAP*DEE(2)) + COSH(CTHK))
        FRATIO = FCS + R(1) * SIGMAA(1) * ARE * ((WTHK/TANH(WTHK) - 1.)/
     1  SIGMAA(3)/WTH + .13132)
        GO TO 50
   20   CONTINUE
        IF (OPT .GT. 2.5) GO TO 30
        TABLE1 = TBLF(AARG,ATABLE,OPT)
        TABLE2 = TBLF(ARGTBL,ALFTBL,OPT)
        TABLE3 = TBLF(ARGTBL,BTATBL,OPT)
        SCATX = 1.0 - 3.0 * DEE(1) * SIGMAA(1)
        F = 1.0 + 3.0 * DEE(1) * SIGMAA(1) * TABLE1 * (1.0 + SCATX*
     1  TABLE2 + SCATX**2*TABLE3)
        GO TO 40
   30   PZEROX = 1.0 / (1.0/PSUBCF(OPT) - 1.0) - OPT
        F = 1.0 + 3.0 * DEE(1) * SIGMAA(1) * PZEROX
   40   WYE = SIGMAA(1) / DEE(2) * (R(2) - R(1)) ** 2
        FCLAD = F + .5 * WYE
        ARE = 1.0 + (FRACVL(2)*SIGMAA(2)) / (FRACVL(1)*SIGMAA(1)) *
     1  FCLAD
        OPM = R(2) / 3.0 / DEE(3)
        IF (OPM .GT. 3.47) TABLE4 = (XLAMB - 2.0/3.0) / R(2)
        IF (OPM .LE. 3.47) TABLE4 = 2.0 / 3.0 / R(2) * (1.0 + TBLF(RX,
     1  BTABLE,OPM))
        FRATIO = F + WYE + 1.5 * R(1) ** 2 * SIGMAA(1) * ARE * (OPM*
     1  AAAF(R(3),R(2))/R(2) + TABLE4)
   50   CONTINUE
        FLUXL(1) = 1.0 / (FRACVL(1) + FCLAD*FRACVL(2) + FRATIO*FRACVL(3)
     1  )
        FLUXL(2) = FLUXL(1) * FCLAD
        FLUXL(3) = FLUXL(1) * FRATIO
        FLUX(1,L) = FLUXL(1)
        FLUX(2,L) = FLUXL(2)
        FLUX(3,L) = FLUXL(3)
        HX = FLUXL(3) * HEDGE
        HX1 = (1.0 - SHARE) / (1.0 + SHARE*(HX - 1.0))
        HX2 = SHARE * HX / (1.0 + SHARE*(HX - 1.0))
        A4 = ACCUM2(PUREN(1,4),CKABSR(1,L),25)
        G(L) = RTE(L) * HX1 * ACCUM3(FLUXL,SIGMAA,FRACVL,3) + HX2 * A4
        TR4 = ACCUM2(PUREN(1,4),CKTRAN(1,L),25)
        ROOTED(L) = RTE(L) / (HX1*(FRACVL(1)*FLUXL(1)/DEE(1) + FRACVL(2)
     1  *FLUXL(2)/DEE(2) + FRACVL(3)*FLUXL(3)/DEE(3)) + 3.0*(A4 + TR4)/
     2  RTE(L)*HX2)
   60 CONTINUE
      L = 1
   70 L = L + 1
      DEL = RTPI/RT2/2.0 * BETA * G(L) / HXIS
      XA(1) = 1.0
      XA(2) = -1.33333333 * (1. + DEL) / (1. + 2.*DEL)
      XA(3) = (103. + 380.*DEL + 364.*DEL**2 + 45.119327*BETA*BSQARE*
     1ROOTED(L)/E(L)/HXIS) / (90.*(1. + 2.*DEL)**2)
      FLIP = -1.
      FACT = 1.
      N = 0
   80 N = N + 1
      FLIP = -FLIP
      FM = N - 1
      IF (N .EQ. 3) FACT = 2.0
      IKE = 1
      GO TO 440
   90 IF (N .LT. 3) GO TO 80
  100 N = 0
  110 N = N + 1
      FN = N
      M = N - 1
      FM = M
      GO TO 340
  120 IF (N .LT. 30) GO TO 110
      Y = XA(30)
      BET = BETA * RT2 * RTE(L)
      BETT = BETA ** 2 / BET
      BETG = (BETA*RT2*(G(L) + BSQARE*ROOTED(L))) / HXIS
      BET2 = BET ** 2
      DO 130 IX = 2, 30
        JX = 31 - IX
  130 Y = Y * BET2 + XA(JX)
      Y = Y / BET
  140 YS(L - 1) = Y
      EX = EXP(-BET2)
      ERR = ERFF(BET)
      VBAR = (0.5 + BET2) / BET * ERR + EX / RTPI
      P = 1. / (EX + RTPI*BET*ERR)
      RR = P * (P*EX - BET2)
      DYA = -BETT * (RR + 4.0/RTPI/(VBAR + BETG))
      DYB = BETT / P
      DYS(L - 1) = -Y ** 2 * DYB + DYA
      T(L) = BETT * Y / P - .5 / E(L)
      FMU = 4.0/THQPI * BET
      FNU = FMU / (VBAR + BETG)
      GGM = (8.0*BETA**3) / RT2/RTPI * RTE(L) * EXP(-BET2)
      GN(L) = FNU * SQRT(GGM*BETT)
  150 IF (L .LT. 7) GO TO 70
      LM = 1
CMODF EPSLN = .4E-7
      EPSLN = .4E-5
      FH = 1.E-4
      DO 320 L = 8, 172
        SQ = RT2 * RTE(L)
        BET = BETA * SQ
        BET2 = BET ** 2
        BETT = BETA / SQ
        BETG = RT2 * BETA * (G(L) + ROOTED(L)*BSQARE) / HXIS
        EX = EXP(-BET2)
        ERR = ERFF(BET)
        VBAR = (0.5 + BET2) / BET * ERR + EX / RTPI
        P = 1.0 / (EX + RTPI*BET*ERR)
        RR = P * (P*EX - BET2)
        DYA = -BETT * (RR + 4./(RTPI*(VBAR + BETG)))
        DYB = BETT / P
        IF (L - 62) 160, 170, 160
  160   IF (L - 116) 210, 180, 210
  170   FH = .001
        LM = 55
        GO TO 190
  180   FH = .01
  190   DO 200 IS = 1, 6
          YS(IS) = YY(IS)
          DYS(IS) = DYY(IS)
  200   CONTINUE
  210   YS(7) = 0.
        DO 220 IS = 1, 5
          YS(7) = YS(7) + DYS(IS + 1) * PCO(IS)
  220   CONTINUE
        YS(7) = YS(7) * 1.3888889E-3 * FH + YS(6)
        DYS(7) = -YS(7) ** 2 * DYB + DYA
        DO 240 ISS = 1, 20
          TY = YS(7)
          YS(7) = 0.
          DO 230 IS = 1, 5
            YS(7) = YS(7) + DYS(IS + 2) * CCO(IS)
  230     CONTINUE
          YS(7) = YS(7) * 1.3888889E-3 * FH + YS(6)
          DYS(7) = -YS(7) ** 2 * DYB + DYA
          IF (ISS .GT. 1 .AND. ABS(YS(7)/TY - 1.0) .LE. EPSLN)
     1       GO TO 270
  240   CONTINUE
C
C  SOLUTION NOT CONVERGED. PRINT MESSAGE, THEN GENERATE MAXWELLIAN
C
        WRITE(6,250) L, E(L)
  250   FORMAT ('0THERMAL SPECTRUM FAILS TO CONVERGE FOR LEVEL ',I3,
     1         ', ENERGY=',F6.4, '. MAXWELLIAN ASSUMED.')
        DO 260 LX = 1, 172
  260   GN(LX) = 8.0/RT2/RTPI*BETA**3*RTE(L)*EXP(-2.0*BETA**2*E(L))
        RETURN
  270   Y = YS(7)
        IF (L - 117) 280, 280, 300
  280   IF (MOD(L - LM,10)) 300, 290, 300
  290   LL = (L - LM) / 10
        YY(LL) = YS(7)
        DYY(LL) = DYS(7)
  300   DO 310 IS = 1, 6
          YS(IS) = YS(IS + 1)
          DYS(IS) = DYS(IS + 1)
  310   CONTINUE
        T(L) = BETT * Y / P - .5 / E(L)
        GN(L) =4.0/THQPI*BET/(VBAR + BETG) * SQRT(BETT*8.0/RT2/RTPI*(
     1  BETA**3)*RTE(L)*EXP(-BET2))
  320 CONTINUE
      DO 330 L = 2, 172
  330 GN(L) = GN(L) * EXP(QD(E(L)))
      RETURN
C
C     GENERAL COEFFICIENT GENERATOR
C
  340 IF (N - 3) 120, 120, 350
  350 FLIP = -FLIP
      FACT = FACT * FM
      IKE = 2
      GO TO 440
  360 XFFE = 0.0
      DO 370 K = 1, M
        NCOG = N - K + 1
        XFFE = XFFE + (2.* FLOAT(K) - 3.) * XA(K) * XB(NCOG)
  370 CONTINUE
      XGGG = 0.0
      DO 380 K = 1, M
        NCOG = N - K + 1
        XGGG = XGGG + XAA(K) * XDD(NCOG)
  380 CONTINUE
      XHHH = XFFE + XGGG
      XAAA = 0.0
      DO 390 K = 2, M
        NCOG = N - K + 1
        XAAA = XAAA + XA(K) * XA(NCOG)
  390 CONTINUE
      XIII = 0.0
      DO 400 K = 1, M
        NCOG = N - K + 1
  400 XIII = XIII + XHH(K) * XB(NCOG)
      XJJJ = 0.
      DO 410 K = 1, M
        NCOG = N - K
  410 XJJJ = XJJJ + XD(K) * XB(NCOG)
      XLLL = 0.0
      DO 420 K = 1, N
        NCOG = N - K + 1
  420 XLLL = XLLL + XD(K) * XB(NCOG)
  430 XA(N) = -.5 / (FM + .5) * (XAAA + XHHH + (1./(1. + 2.*DEL))*(2.*
     1DEL*(XD(M) - XC(M - 1)) + (RTPI/RT2*BETA*BSQARE*ROOTED(L)/(E(L)*
     2HXIS))*(XHH(M) + XD(M - 1) - XC(M - 2)) + 2.*XBB(M) + XIII + XJJJ
     3- XLLL))
      GO TO 470
  440 XB(N) = -FLIP / (4.*FM**2 - 1.) / FACT
      XC(N) = -FLIP / (2.*FM - 1.) / FACT
      XD(N) = +FLIP / FACT
      XBB(N) = 0.0
      DO 450 K = 1, N
        NCOG = N - K + 1
  450 XBB(N) = XBB(N) + XC(K) * XC(NCOG)
      XDD(N) = 0.0
      DO 460 K = 1, N
        NCOG = N - K + 1
  460 XDD(N) = XDD(N) + XBB(K) + XC(NCOG)
      GO TO (470, 360), IKE
  470 XAA(N) = 0.0
      DO 480 K = 1, N
        NCOG = N - K + 1
  480 XAA(N) = XAA(N) + XA(K) * XA(NCOG)
      XFF = 0.0
      DO 490 K = 1, N
        FK = K
        NCOG = N - K + 1
  490 XFF = XFF + (2.*FK - 3.) * XA(K) * XBB(NCOG)
      XGG = 0.0
      DO 500 K = 1, N
        NCOG = N - K + 1
  500 XGG = XGG + XAA(K) * XDD(NCOG)
      XHH(N) = XFF + XGG
      GO TO (90, 120), IKE
      RETURN
      END
C=======================================================================
CQD
      FUNCTION QD(ULIM)
C
      COMMON INDEX(35), E(172), RTE(172), BASE(35), SS(25), XSS(25),
     1       CKABSR(25,172), CKTRAN(25,172), CKFSN(25,172), GNUTH(25),
     2       BUCARG(29), BUCVAL(29), ALFTBL(8), BTATBL(7), RX(15),
     3       BTABLE(14), AARG(153), ATABLE(152), XX(11), ALPH36(10)
      COMMON T(172), G(172), GN(172), ROOTED(172), FLUX(3,172), YY(6),
     1       DYY(6), XA(31), YS(7), DYS(7), XAA(31), XHH(31), XD(31),
     2       XC(31), XB(31), XBB(31), XDD(31), SIGMAA(3), DEE(3),
     3       FLUXL(3)
C
      QD = 0.0
      IF (ULIM .EQ. 0.0) RETURN
      DO 10 L = 2, 172
        IF (ULIM .LE. E(L)) GO TO 20
   10 QD = QD + 0.5 * (T(L) + T(L - 1)) * (E(L) - E(L - 1))
   20 TX = T(L - 1) + (ULIM - E(L - 1)) / (E(L) - E(L - 1)) * (T(L) - T(
     1L - 1))
      QD = QD + 0.5 * (TX + T(L - 1)) * (ULIM - E(L - 1))
      RETURN
      END
C=======================================================================
CMUFT
      SUBROUTINE MUFT
C
      REAL TARGET
      CHARACTER * 8 LIBLBL
      COMMON INDEX(35), PROB(325,25), X(54), DELTA(54), NSCAT(25),
     1       SIGX(25,54), GNU(25,54), SIGCAP(25,54), SSC(25,54),
     2       SIGIN(25,54), SD(25,54), AN(25,54), S1(25,54), NRIG(20,30),
     3       LRIG(20,30), NOR(25), EM(650), R(650), ALPHA(650),
     4       ELPH(25), FOURK(4), BIGK, GAMMA(54), ETA(54), ES(25,54),
     5       TEE(25,54), G(54), PA, PF, GNFRCP
      COMMON /INDATA/ ICON(24), MACRO, MACX(35), DENMAC(35,4), MICRO,
     1       MICX(35), DENMIC(35), TEFC, TEM(3), REFBUC, GBUCKL, BSQARE,
     2       HEDGE, RAD(3), PITCH, SHARE, RHOH2O, RHOD2O, RHOUO2,
     3       RHOPO2, RHOTO2, PRESSH, PRESSD, CUTOFF, PUTINL, VOLUME,
     4       PDNSTY, LOADNG, FPSCAL, STEPS(40), POISON(40), PUREN(35,4),
     5       VFAST(27), HXIS, FRACVL(3)
      COMMON /TRSLT/ SDMND, SSTMND(25), SDCON, SSTCON(25), SSACON(25),
     1       SSFCON(25), SSGCON(25), RELPHI(3), DL25NT, DL28NT, PHI,
     2       VP(27), SACON, SFCON, SGCON
      COMMON /MRSLT/ OMEGAC, OMEGAS, EL, NQZWL, DEFC, DOPLRD, RI28,
     1       PSUB28, TPOIS, QPOIS, SEARCH, GAMM(3), D(3), SIGMA(3),
     2       SX(3), GNUSX(3), SR(3), ST(25,3), SA(25,3), SIGFX(25,3),
     3       GSX(25,3), SRA(25,3), SREM(25,3), HOLDK(5), ZERNL
      COMMON /HEAD/ TITLE(20), NOSTEP, TIMBOS, BUBOS, TIMEOS, BUEOS,
     1       NSTEPS
      COMMON /SIGREM/ SHUDI, SREMOV(25,3)
      COMMON /FPBUF/ FPBUF
      COMMON /JCL/ FLT(34), FLF(54), ET(34), EF(54)
C
      COMMON /LIBTYP/LIBLBL(2),LIBFLG
      DIMENSION EN(25), RAG(3), BAG(3), SS(25), RIA(4,2)
      EQUIVALENCE (EN(1),VFAST(1)), (SS(1),SSC(1,45))
C
      DATA TARGET / 1.0 /
      DATA RIA /2.5547, 2.1638, 0.0279, -0.0537, 2.72, 1.285, 0.0249,
     1     0.0237/
C
C     TAUF(Y,Z) = (SQRT(.785398208/(1. - .133948*Z)*(1. + Y)) - 1.) /
C    1Y - .08 - .04 * Z
C     GONEF(X,Y,Z) = 1. -  EXP(-X*TAUF(Y,Z)) / (1. + (1. - TAUF(Y,Z))*X)
C
C  DOUBLE LIBRARY COMPATIBILITY       --JR 4/81
      NYMAX = 16
      NMAX = 10
      JMAX = 200
      IF(LIBFLG.NE.1) GO TO 5
      NYMAX = 25
      NMAX = 20
      JMAX = 650
    5  CONTINUE
      READ (1) ((PROB(NX,NY), NX=1,325), NY=1,NYMAX),
     *     X, DELTA, NSCAT, SIGX, GNU, SIGCAP, SSC, SIGIN, SD, AN, S1,
     *    ((NRIG(N,M), N=1,NMAX), M=1,30),
     *    ((LRIG(N,M), N=1,NMAX), M=1,30),
     *    NOR,
     *    (EM(J), J=1,JMAX),
     *    (R(J), J=1,JMAX),
     *    (ALPHA(J), J=1,JMAX)
      SHUDI = 0.0
      TPOIS = 0.0
      QPOIS = 0.0
      SEARCH = 0.0
      RI28 = 0.0
      DOPLRD = 0.0
      DEFC = 1.0
      PSUB28 = 1.0
      IF (PUREN(12,1) .EQ. 0.0 .AND. PUREN(21,1) .EQ. 0.0)
     1   GO TO 30
      VMOD = FRACVL(2) + FRACVL(3)
      SIGRES = ACCUM2(PUREN(1,2),SS,25) * FRACVL(2) / VMOD + ACCUM2(
     1PUREN(1,3),SS,25) * FRACVL(3) / VMOD
      PSCAT = ACCUM2(PUREN(1,1),SS,25)
      OPM = 2.0 * RAD(1) * SIGRES * VMOD / FRACVL(1)
      IF (ICON(4) .LT. 2) GO TO 10
      W = 2.0 * (RAD(3) - RAD(1)) * SIGRES
      F = 2.0 * RAD(1) * PSCAT
      OPM = 2.0 * OPM
      DEFC = 1. - 2. * EXPI3(W)
      SNAKE = PSCAT * (1.0 - PCSLAB(F)) + DEFC / RAD(1) * 0.25
      GO TO 20
   10 CONTINUE
      XX = OPM
      Y = VMOD/FRACVL(1)
      Z = FLOAT(ICON(4))
      TAUF = (SQRT(.785398208/(1. - .133948*Z)*(1. + Y)) - 1.) /
     1Y - .08 - .04 * Z
      GONEF = 1. -  EXP(-XX*TAUF) / (1. + (1. - TAUF)*XX)
C     DEFC = GONEF(OPM,VMOD/FRACVL(1),FLOAT(ICON(4)))
      DEFC = GONEF
      SNAKE = PSCAT * (1.0 - PSUBCF(RAD(1)*PSCAT)) + 0.5 * DEFC / RAD(1)
   20 CONTINUE
      L = 1
      IF (PUREN(21,1) .GT. PUREN(12,1)) L = 2
      N = 12 + 9 * (L - 1)
C      IF THE 'CLAD' HAS U-238 (TH-232), USE HOMOGENEOUS FORM.
      IF (PUREN(N,2) .NE. 0.0) SNAKE = PSCAT
      SNAKE = SQRT(SNAKE/PUREN(N,1))
      DOPLRD = (RIA(4,L) + SNAKE*RIA(3,L)) * SQRT(5.0*(TEFC + 459.4)/9.
     10)
      RI28 = DOPLRD + RIA(1,L) + SNAKE * RIA(2,L)
      PSUB28 =  EXP(-VFAST(N)*RI28/HXIS)
   30 DO 40 NQZWL = 1, 25
        IF (ICON(7) .EQ. INDEX(NQZWL)) GO TO 50
   40 CONTINUE
      NQZWL = 0
   50 OMEGAC = (1.0 - PSUB28) / PSUB28
      HOM = 1.0 + VMOD * SIGRES / FRACVL(1) / PSCAT
      HET = 1.0 + VMOD * SIGRES / FRACVL(1) / PSCAT / (1.0 + OPM)
      ZERNL = SQRT(HET/HOM) * (1.0 + 0.0011*SQRT(4.22222*HET*(TEFC +
     1459.4)))
      EL = ZERNL
      IF (ICON(5) .GT. 0 .AND. PUTINL .GT. 0.0) EL = PUTINL
      CALL MOVEKA(25, 1.0, ELPH)
      ELPH(14) = EL
      BU = BUBOS/1000.0
      IF (NOSTEP .GT. 1) BU = BUEOS/1000.0
      BU = BU / FPBUF
      IF(FPBUF.LT.1.0)GOTO 775
C  LWR FUEL
      SIGAFP = FPSCAL * (28.43 - 0.3174*BU + 2.463E-3*BU**2)
      DO 60 N = 26, 54
   60 SIGCAP(18,N) = SIGAFP
      GOTO 777
  775 CONTINUE
C
C  CINDER FISSION PRODUCT CORRELATION REVISION--JR 1/83
C       HEU AND LEU MTR FUEL
      SIGAF1 = 0.053554 + BU*(0.42007E-5
     1                  + BU*(-0.24417E-7
     1                  + BU* 0.21091E-10))
      SIGAF2 = 0.24427  + BU*(0.19466E-4
     2                  + BU*(-0.11774E-6
     2                  + BU* 0.10015E-9))
      SIGAF3 = 19.120   + BU*(0.55326E-2
     3                  + BU*(-0.28928E-4
     3                  + BU* 0.25370E-7))
      BU = BU*FPBUF
      DO 61 N=1,10
   61   SIGCAP(18,N) = SIGAF1
      DO 62 N=11,25
   62   SIGCAP(18,N) = SIGAF2
      DO 63 N=26,54
   63   SIGCAP(18,N) = SIGAF3
C
C  JR--1/83
C
  777 CONTINUE
      OMEGAS = 0.0
      IF (ICON(5) .NE. 0 .OR. OMEGAC .EQ. 0.0) GO TO 90
C
C     TWO-STEP SEARCH
C
      BSQARE = 0.0
      CALL SLITE(1)
      CALL SLOW(OOMEG)
      BELL = EL
      EL = 0.9 * EL
      DO 70 NPASS = 1, 5
        CALL SLOW(OMEG)
        IF (ABS(OMEG/OMEGAC - 1.0) .LE. 0.001) GO TO 80
      EL = BELL + (EL - BELL) * (OOMEG - OMEGAC) / (OOMEG - OMEG)
   70 CONTINUE
      OMEG = -OMEG
   80 OMEGAS = OMEG
   90 CALL SLITE(0)
      BSQARE = GBUCKL
      CALL SLOW(OMEG)
      CALL ED34(1)
      CALL MOVEAA(4, FOURK, HOLDK(2))
      HOLDK(1) = BIGK
      IF (ICON(17) .GT. 0) TPOIS = 0.01 * ICON(17)
      IF (ICON(17) .NE. 0) SEARCH = 1.0
      IF (ICON(17) + 2 .EQ. 0) SEARCH = -1.0
      IF (FOURK(1) .LE. 0.0) GO TO 220
  100 IF (SEARCH) 220, 200, 110
  110 IF (TPOIS) 220, 120, 150
  120 SNAKE = BIGK - TARGET
      IF (SNAKE) 130, 130, 140
  130 SEARCH = -1.0
      GO TO 220
  140 QPOIS = SNAKE / (FOURK(4) - SNAKE) * (SACON + SDCON*BSQARE)
      GO TO 220
  150 CONTINUE
C
C     SEARCH FOR CRITICAL POISON
C
      RAG(1) = BIGK - TARGET
      IF (RAG(1) .GT. 0.0) GO TO 170
  160 SEARCH = -1.0
      GO TO 220
  170 BAG(1) = SACON
      QPOIS = 0.05
      DO 180 I = 1, 10
        SACON = BAG(1) + QPOIS
        CALL SLOW(OMEG)
        CALL ED34(1)
        IF (ABS(BIGK - TARGET) - 0.001) 190, 190, 180
  180 QPOIS = RAG(1) * QPOIS / (RAG(1) + 1.0 - BIGK)
  190 CONTINUE
      GO TO 220
  200 CONTINUE
C
C      COMPUTE UNBUCKLED K.
C
      BAG(1) = BSQARE
      BAG(2) = BIGK
      BSQARE = 0.0
      CALL ED34(1)
      RAG(1) = BIGK
      BSQARE = BAG(1)
      BIGK = BAG(2)
      DO 210 I = 1, 5
        BSQARE = (RAG(1) - TARGET) * BSQARE / (RAG(1) - BIGK)
        CALL SLOW(OMEG)
        CALL ED34(1)
        IF (ABS(BIGK - TARGET) - 0.001) 220, 220, 210
  210 CONTINUE
      CALL HEADER(8,6)
      WRITE(6,213)
  213 FORMAT(/40X,'  WARNING BUCKLING SEARCH DID NOT CONVERGE',/
     1        40X,'TRY A MORE ACCURATE VALUE FOR INPUT BUCKLING'/)
      CALL HEADER(8,6)
  220 CONTINUE
      CALL MOVEKA(75, 0, SREM)
C
C     INCLUDE LATTICE/NL EDIT GJ VANTUYLE 1976
C
      SHUDI = 1.0
      CALL SLOW(OMEG)
      DO 240 I = 1, 25
        DO 230 J = 1, 3
  230   SREM(I,J) = SREMOV(I,J)
  240 CONTINUE
C
C     FAST FLUX EDIT JC LEE 1976
C
      DEL = 0.0
      E0 = 1.0E+7
      DO 250 N = 1, 54
        DEL = DEL + DELTA(N) * 0.5
        EF(N) = E0 * EXP(-DEL)
        FLF(N) = GAMMA(N) / DELTA(N)
        DEL = DEL + DELTA(N) * 0.5
  250 CONTINUE
C
C     FLF=FAST FLUX IN N/CM2/SEC/LETHARGY, EF=E IN EV.
C
      CALL ED34(0)
  260 RETURN
      END
C=======================================================================
CSLOW
      SUBROUTINE SLOW(OMEG)
C
      COMMON INDEX(35), PROB(325,25), X(54), DELTA(54), NSCAT(25),
     1       SIGX(25,54), GNU(25,54), SIGCAP(25,54), SSC(25,54),
     2       SIGIN(25,54), SD(25,54), AN(25,54), S1(25,54), NRIG(20,30),
     3       LRIG(20,30), NOR(25), EM(650), R(650), ALPHA(650),
     4       ELPH(25), FOURK(4), BIGK, GAMMA(54), ETA(54), ES(25,54),
     5       TEE(25,54), G(54), PA, PF, GNFRCP
      COMMON /INDATA/ ICON(24), MACRO, MACX(35), DENMAC(35,4), MICRO,
     1       MICX(35), DENMIC(35), TEFC, TEM(3), REFBUC, GBUCKL, BSQARE,
     2       HEDGE, RAD(3), PITCH, SHARE, RHOH2O, RHOD2O, RHOUO2,
     3       RHOPO2, RHOTO2, PRESSH, PRESSD, CUTOFF, PUTINL, VOLUME,
     4       PDNSTY, LOADNG, FPSCAL, STEPS(40), POISON(40), PUREN(35,4),
     5       VFAST(27), HXIS, FRACVL(3)
      COMMON /MRSLT/ OMEGAC, OMEGAS, EL, NQZWL, DEFC, DOPLRD, RI28,
     1       PSUB28, TPOIS, QPOIS, SEARCH, GAMM(3), D(3), SIGMA(3),
     2       SX(3), GNUSX(3), SR(3), ST(25,3), SA(25,3), SIGFX(25,3),
     3       GSX(25,3), SRA(25,3), SREM(25,3), HOLDK(5)
      COMMON /SIGREM/ SHUDI, SREMOV(25,3)
      DIMENSION TOPMOD(25,3), SUMDEL(3), SIGMOD(3)
      DIMENSION EN(25)
      EQUIVALENCE (EN(1),VFAST(1))
      DO 20 J = 1, 3
        DO 10 I = 1, 25
   10   TOPMOD(I,J) = 0.0
   20 SUMDEL(J) = 0.0
      CALL MOVEKA(393, 0, GAMM)
      SAB = SQRT(ABS(BSQARE))
      L1 = 12
      IF (EN(21) .GT. EN(12)) L1 = 21
      CALL SLITET(1, ISITON)
      IF (ISITON .EQ. 1) CALL SLITE(1)
      J = 1
      DO 200 N = 1, 54
        IF (N .EQ. 11) J = 2
        IF (N .EQ. 26) J = 3
        PF = 1.
        PA = 1.
        S = 0.0
        T = 0.0
        GNFRCP = 0.0
        SIGI = 0.0
        XISS = 0.0
        XILA = 0.0
        COSSS = 0.0
        SS = 0.0
        SIGA = 0.0
        IF (J .EQ. 3) SIGA = TPOIS * QPOIS
        DO 30 I = 1, 25
          S = S + EN(I) * SIGX(I,N)
          T = T + EN(I) * SIGX(I,N) * GNU(I,N)
          SIGA = SIGA + EN(I) * (SIGCAP(I,N) + SIGX(I,N))
          SS = SS + EN(I) * SSC(I,N)
          SIGI = SIGI + EN(I) * SIGIN(I,N)
          XISS = XISS + EN(I) * SD(I,N)
          XILA = XILA + EN(I) * SD(I,N) * AN(I,N)
   30   COSSS = COSSS + EN(I) * S1(I,N)
        IF (ISITON .EQ. 1) SIGA = EN(L1) * SIGCAP(L1,N)
   40   IF (N .GE. 26) CALL RESINT(SSOLD + BSQARE/3.0/CAYOLD,
     1       (EN(1)*SSC(1,N) + XISS)/SS, N, ISITON, L1)
   50   CAY1 = 2. * EN(1) * SSC(1,N) / (2. + DELTA(N))
        CAY2 = XISS / (.5*DELTA(N) + XILA/XISS)
        CAY3 = (2. - DELTA(N)) / (2. + DELTA(N))
        CAY4 = XILA / XISS
        CAY4 = (CAY4 - .5*DELTA(N)) / (CAY4 + .5*DELTA(N))
        CAY5 = EN(1) * SSC(1,N) / (1. + .75*DELTA(N))
        CAY6 = 3. / (1. + .75*DELTA(N))
        CAY7 = (1. - .75*DELTA(N)) / (1. + .75*DELTA(N))
        A11 = SIGA + SIGI + CAY1 + CAY2
        A22 = SAB / (SIGI + SIGA + SS)
        IF (A22 - .5) 60, 60, 70
   60   A22 = A22 ** 2
        A22 = 1. + A22 * (.266666666 + A22*(-.06857143 + A22*(.03504762
     1  + A22*(-.02231095 + A22*(.015869)))))
        GO TO 80
   70   AT22 = ATAN(A22)
        A22 = A22 ** 2 * AT22 / 3.0 / (A22 - AT22)
   80   G(N) = A22
        CAY = A22 * (SIGI + SS + SIGA) - COSSS
        A22 = CAY * 3.0 + CAY5 * 2.0
        IF (N - 1) 90, 90, 100
   90   GAMMA(1) = X(1) * A22 * DELTA(1) / (A11*A22 + BSQARE)
        GAMM(1) = GAMMA(1)
        D(1) = DELTA(1) * X(1) * SAB / (A11*A22 + BSQARE)
        ETA(1) = 0.0
        ETA(2) = GAMMA(1) * (CAY1 + CAY2)
        RAG = CAY2 * GAMMA(1)
        RHO = CAY5 * D(1)
        GO TO 190
  100   BAG = 0.0
        IF (N - 25) 110, 110, 150
  110   MUPPER = N - 1
        DO 140 M = 1, MUPPER
          TRANS = 0.0
          NX = M + (N**2 - N) / 2
          DO 130 MM = 1, 25
            NY = NSCAT(MM)
            IF (NY) 130, 130, 120
  120       TRANS = EN(MM) * PROB(NX,NY) + TRANS
  130     CONTINUE
  140   BAG = BAG + TRANS / DELTA(N) * GAMMA(M)
  150   A13 = X(N) + BAG + (PA*ETA(N) - CAY3*(ETA(N) - RAG) - CAY4*RAG)
     1  / DELTA(N)
        A23 = CAY6 * RHO
        GAMMA(N) = DELTA(N) * (A13*A22 - SIGN(SAB,BSQARE)*A23) / (A11*
     1  A22 + BSQARE)
        BAMBI = DELTA(N) * (A11*A23 + A13*SAB) / (A11*A22 + BSQARE)
        RHO = RHO * CAY7 + CAY5 * BAMBI
        IF (N - 54) 160, 170, 170
  160   ETA(N + 1) = CAY3 * (ETA(N) - RAG) + (CAY1 + CAY2) * GAMMA(N) +
     1  CAY4 * RAG
        RAG = RAG * CAY4 + CAY2 * GAMMA(N)
  170   GAMM(J) = GAMM(J) + GAMMA(N)
        DO 180 I = 1, 25
  180   TOPMOD(I,J) = TOPMOD(I,J) + SD(I,N) * GAMMA(N)
        SUMDEL(J) = SUMDEL(J) + DELTA(N)
        D(J) = D(J) + BAMBI
  190   SIGMA(J) = SIGMA(J) + SIGA * GAMMA(N) + (1. - PA) * ETA(N)
        GNUSX(J) = GNUSX(J) + T * GAMMA(N) + GNFRCP * ETA(N)
        SR(J) = SR(J) + X(N) * DELTA(N)
        SX(J) = SX(J) + S * GAMMA(N) + (1.0 - PF) * ETA(N)
        SSOLD = SS
  200 CAYOLD = CAY
      DO 220 J = 1, 3
        SIGMA(J) = SIGMA(J) / GAMM(J)
        DO 210 I = 1, 25
  210   SREMOV(I,J) = TOPMOD(I,J) / (SUMDEL(J)*GAMM(J))
        SX(J) = SX(J) / GAMM(J)
        GNUSX(J) = GNUSX(J) / GAMM(J)
        IF (SAB .EQ. 0.0) D(J) = 0.0
  220 IF (SAB .NE. 0.0) D(J) = D(J) / SAB / GAMM(J)
      SR(1) = SR(1) / GAMM(1) - D(1) * BSQARE - SIGMA(1)
      DO 230 J = 2, 3
  230 SR(J) = (SR(J) + SR(J - 1)*GAMM(J - 1)) / GAMM(J) - SIGMA(J) - D(
     1J) * BSQARE
      OMEG = 0.0
      I = L1
  240 DO 250 N = 1, 54
  250 OMEG = OMEG + SIGCAP(I,N) * GAMMA(N)
      OMEG = OMEG * EN(I)
      DO 260 N = 26, 54
  260 OMEG = OMEG + ETA(N) * (1. - TEE(I,N))
      OMEG = OMEG / (SR(3)*GAMM(3))
C
C     THIS SECTION ADDED 4-76 BY G. VAN TUYLE/JCL
C
      IF (SHUDI .EQ. 0) GO TO 300
      DO 270 J = 1, 3
  270 SIGMOD(J) = SIGMA(J) / ALOG(1. + SIGMA(J)/SR(J))
      DO 290 J = 1, 3
        SIGMWO = 0.0
        DO 280 I = 2, 25
  280   SIGMWO = SIGMWO + EN(I) * SREMOV(I,J)
  290 SREMOV(1,J) = (SIGMOD(J) - SIGMWO) / EN(1)
  300 CONTINUE
      RETURN
      END
C=======================================================================
CRESINT
      SUBROUTINE RESINT(DENOM, SQUIG, N, ISITON, L1)
C
      COMMON /INDATA/ ICON(24), MACRO, MACX(35), DENMAC(35,4), MICRO,
     1       MICX(35), DENMIC(35), TEFC, TEM(3), REFBUC, GBUCKL, BSQARE,
     2       HEDGE, RAD(3), PITCH, SHARE, RHOH2O, RHOD2O, RHOUO2,
     3       RHOPO2, RHOTO2, PRESSH, PRESSD, CUTOFF, PUTINL, VOLUME,
     4       PDNSTY, LOADNG, FPSCAL, STEPS(40), POISON(40), PUREN(35,4),
     5       VFAST(27), HXIS, FRACVL(3)
      COMMON INDEX(35), PROB(325,25), X(54), DELTA(54), NSCAT(25),
     1       SIGX(25,54), GNU(25,54), SIGCAP(25,54), SSC(25,54),
     2       SIGIN(25,54), SD(25,54), AN(25,54), S1(25,54), NRIG(20,30),
     3       LRIG(20,30), NOR(25), EM(650), R(650), ALPHA(650),
     4       ELPH(25), FOURK(4), BIGK, GAMMA(54), ETA(54), ES(25,54),
     5       TEE(25,54), G(54), PA, PF, GNFRCP
      COMMON /MRSLT/ OMEGAC, OMEGAS, EL, NQZWL, DEFC, DOPLRD, RI28,
     1       PSUB28, TPOIS, QPOIS, SEARCH, GAMM(3), D(3), SIGMA(3),
     2       SX(3), GNUSX(3), SR(3), ST(25,3), SA(25,3), SIGFX(25,3),
     3       GSX(25,3), SRA(25,3), SREM(25,3), HOLDK(5), ZERNL
      DIMENSION EN(25)
      EQUIVALENCE (EN(1),VFAST(1))
C
      DATA PI/3.1415926536/
C
      SRXLIT = 1.0
      IF (ISITON .EQ. 1) SRXLIT = 0.0
      CALL MOVEKA(25, 1.0, TEE(1,N))
      CALL MOVEKA(25, 1.0, ES(1,N))
      PA = 0.0
      PF = 0.0
      DO 20 I = 1, 25
        ENEL = EN(I) * ELPH(I) * SRXLIT
        IF (I .EQ. L1) ENEL = EN(I) * EL
        NORX = NOR(I)
        IF (ENEL .EQ. 0.0 .OR. NORX .EQ. 0) GO TO 20
        LR = LRIG(NORX,N - 25)
        NR = NRIG(NORX,N - 25)
        IF (NR .EQ. 0) GO TO 20
        BAG = 0.0
        RAG = 0.0
        DO 10 M = 1, NR
          J = LR + M
          TX = PI/2.0 * ENEL * EM(J) / SQUIG / SQRT(DENOM**2 + EN(I)*
     1    DENOM*R(J))
          BAG = BAG + TX
   10   RAG = RAG + TX * ALPHA(J)
        PA = PA + BAG
        PF = PF + RAG
        TEE(I,N) = EXP(-BAG)
        ES(I,N) = EXP(-RAG)
   20 CONTINUE
      PA = EXP(-PA)
      FGEA = 1.0
CMODF IF( ABS( PA - 1.0 ) .LE. 0.1E-04 ) GO TO 21
      IF( ABS( PA - 1.0 ) .LE. 0.1E-04 ) GO TO 21
CMODF IF (PA .NE. 1.0) FGEA = (1.0 - PA) / (25.0 - ACCUM1(TEE(1,N),25))
      FGEA = (1.0 - PA) / (25.0 - ACCUM1(TEE(1,N),25))
21    PF = EXP(-PF)
      FGEF = 1.0
CMODF IF( ABS( PF - 1.0 ) .LE. 0.1E-04 ) GO TO 22
      IF( ABS( PF - 1.0 ) .LE. 0.1E-04 ) GO TO 22
CMODF IF (PF .NE. 1.0) FGEF = (1.0 - PF) / (25.0 - ACCUM1(ES(1,N),25))
      FGEF = (1.0 - PF) / (25.0 - ACCUM1(ES(1,N),25))
22    GNFRCP = 0.0
      DO 30 I = 1, 25
        TEE(I,N) = 1.0 - FGEA + FGEA * TEE(I,N)
        ES(I,N) = 1.0 - FGEF + FGEF * ES(I,N)
   30 GNFRCP = GNFRCP + GNU(I,N) * (1.0 - ES(I,N))
      RETURN
      END
C=======================================================================
CED34
      SUBROUTINE ED34(LONG)
C
      COMMON /INDATA/ ICON(24), MACRO, MACX(35), DENMAC(35,4), MICRO,
     1       MICX(35), DENMIC(35), TEFC, TEM(3), REFBUC, GBUCKL, BSQARE,
     2       HEDGE, RAD(3), PITCH, SHARE, RHOH2O, RHOD2O, RHOUO2,
     3       RHOPO2, RHOTO2, PRESSH, PRESSD, CUTOFF, PUTINL, VOLUME,
     4       PDNSTY, LOADNG, FPSCAL, STEPS(40), POISON(40), PUREN(35,4),
     5       VFAST(27), HXIS, FRACVL(3)
      COMMON INDEX(35), PROB(325,25), X(54), DELTA(54), NSCAT(25),
     1       SIGX(25,54), GNU(25,54), SIGCAP(25,54), SSC(25,54),
     2       SIGIN(25,54), SD(25,54), AN(25,54), S1(25,54), NRIG(20,30),
     3       LRIG(20,30), NOR(25), EM(650), R(650), ALPHA(650),
     4       ELPH(25), FOURK(4), BIGK, GAMMA(54), ETA(54), ES(25,54),
     5       TEE(25,54), G(54), PA, PF, GNFRCP
      COMMON /MRSLT/ OMEGAC, OMEGAS, EL, NQZWL, DEFC, DOPLRD, RI28,
     1       PSUB28, TPOIS, QPOIS, SEARCH, GAMM(3), D(3), SIGMA(3),
     2       SX(3), GNUSX(3), SR(3), ST(25,3), SA(25,3), SIGFX(25,3),
     3       GSX(25,3), SRA(25,3), SREM(25,3), HOLDK(5)
      COMMON /TRSLT/ SDMND, SSTMND(25), SDCON, SSTCON(25), SSACON(25),
     1       SSFCON(25), SSGCON(25), RELPHI(3), DL25NT, DL28NT, PHI,
     2       VP(27), SACON, SFCON, SGCON
      DIMENSION EN(25)
      EQUIVALENCE (EN(1),VFAST(1))
      DIMENSION BIGAC(4)
C
      IF (LONG .GT. 0) GO TO 80
      CALL MOVEKA(375, 0.0, ST)
      DO 20 I = 1, 25
        J = 1
        DO 10 N = 1, 54
          IF (N .EQ. 11) J = 2
          IF (N .EQ. 26) J = 3
          SA(I,J) = SA(I,J) + GAMMA(N) * SIGCAP(I,N)
          SIGFX(I,J) = SIGFX(I,J) + GAMMA(N) * SIGX(I,N)
          GSX(I,J) = GSX(I,J) + GAMMA(N) * SIGX(I,N) * GNU(I,N)
   10   IF (SSC(I,N) + SIGCAP(I,N) .NE. 0.0) ST(I,J) = ST(I,J) + GAMMA(
     1  N) / (-S1(I,N) + G(N)*(SSC(I,N) + SIGIN(I,N) + SIGCAP(I,N) +
     2  SIGX(I,N)))
        DO 20 J = 1, 3
          SA(I,J) = (SA(I,J) + SIGFX(I,J)) / GAMM(J)
          SIGFX(I,J) = SIGFX(I,J) / GAMM(J)
          GSX(I,J) = GSX(I,J) / GAMM(J)
   20 IF (ST(I,J) .NE. 0.0) ST(I,J) = GAMM(J) / ST(I,J)
      DO 50 I = 1, 25
        IF (EN(I)) 50, 50, 30
   30   SNEEK = 0.0
        SNAKE = 0.0
        DO 40 N = 26, 54
          SRA(I,3) = SRA(I,3) + ETA(N) * (1. - TEE(I,N))
          SNAKE = SNAKE + ETA(N) * (1. - ES(I,N))
   40   SNEEK = SNEEK + ETA(N) * (1. - ES(I,N)) * GNU(I,N)
        SRA(I,3) = SRA(I,3) / (EN(I)*GAMM(3))
        SIGFX(I,3) = SIGFX(I,3) + SNAKE / (EN(I)*GAMM(3))
        GSX(I,3) = GSX(I,3) + SNEEK / (EN(I)*GAMM(3))
        ST(I,3) = ST(I,3) + SRA(I,3)
   50 CONTINUE
      DO 70 I = 1, 25
        IF (EN(I) .GT. 0.0 .OR. NOR(I) .EQ. 0) GO TO 70
        L = NOR(I)
        DO 60 N = 1, 29
          IF (NRIG(L,N) .EQ. 0) GO TO 60
          J = LRIG(L,N)
          BLOB = 1.5707963 * GAMMA(N + 25) / DELTA(N + 25) / GAMM(3)
          BLA = ACCUM1(EM(J + 1),NRIG(L,N))
          BLF = ACCUM2(EM(J + 1),ALPHA(J + 1),NRIG(L,N))
          SRA(I,3) = SRA(I,3) + BLA * BLOB
          ST(I,3) = ST(I,3) + BLA * BLOB
          SIGFX(I,3) = SIGFX(I,3) + BLF * BLOB
          GSX(I,3) = GSX(I,3) + BLF * BLOB * GNU(I,N + 25)
   60   CONTINUE
   70 CONTINUE
   80 CONTINUE
      CALL MOVEKA(4, 0, BIGAC)
      BIGAC(1) = SIGMA(1) + SR(1) + D(1) * BSQARE
      BIGAC(2) = SIGMA(2) + SR(2) + D(2) * BSQARE
      BIGAC(3) = SIGMA(3) + SR(3) + D(3) * BSQARE
      BIGAC(4) = SACON + SDCON * BSQARE
      FOURK(1) = (ACCUM2(X(1),DELTA(1),10)) / BIGAC(1)
      FOURK(2) = (ACCUM2(X(11),DELTA(11),15) + SR(1)*FOURK(1)) / BIGAC(
     12)
      FOURK(3) = (ACCUM2(X(26),DELTA(26),29) + SR(2)*FOURK(2)) / BIGAC(
     13)
      FOURK(4) = (+SR(3)*FOURK(3)) / BIGAC(4)
      FOURK(1) = FOURK(1) * GNUSX(1)
      FOURK(2) = FOURK(2) * GNUSX(2)
      FOURK(3) = FOURK(3) * GNUSX(3)
      FOURK(4) = FOURK(4) * SGCON
      BIGK = ACCUM1(FOURK,4)
      RETURN
      END
C=======================================================================
CTHREE
      SUBROUTINE THREE
C
      COMMON /HEAD/ TITLE(20), NOSTEP, TIMBOS, BUBOS, TIMEOS, BUEOS,
     1       NSTEPS
      CHARACTER * 8 WORD, OTE
C
   10 CALL WORKS
      CALL OUTPUT
      IF (NOSTEP .EQ. 0) GO TO 20
      CALL BURN
      CALL MASSED
   20 CALL TO2DB
      RETURN
      END
C=======================================================================
CWORKS
      SUBROUTINE WORKS
C
      CHARACTER * 8 WORD, OTE
      CHARACTER * 8 LIBLBL
      REAL   NA
      COMMON INDEX(35), FACTOR(5,7), WORD(35,2), OTE(4,3,6),
     1       YIELD(27,27), TFUGE(4,2), SSMOD(25), SSCAPA(25),
     2       CORREL(25), SPVOLM(25)
      COMMON ONEVRV, TWOVRV, SSAMND(25), SSFMND(25), SSGMND(25), SAMND,
     1       SFMND, SGMND, BIGA(4), FSTFLX, F1SA, F1SD, F1FX, F1GX,
     2       F1SR, TAU(4), ONEFST(25,5), FLUX(2), XST(5,6), XSA(5,7),
     3       XSREM(5,4), BALNCE(30,5), PNL, CFISN(6), CELHTX, CORHTX,
     4       CORERA, CORERB, CORERC, CORERD, OMEGAM, STOM, CAYINF,
     5       SPWRX, PDX, VIE, ENEOS(27), TEMX(4), RADX(4), FLUXED(2)
      COMMON CR1, CR2, CR3, CR4, DEL25N, DEL25U, DLTA28, RHO28N, RHO28U,
     1       CHORD, PR3CUR, WTOUO2, HWTUO2, HWTM, WTOM
      COMMON /HEAD/ TITLE(20), NOSTEP, TIMBOS, BUBOS, TIMEOS, BUEOS,
     1       NSTEPS
      COMMON /INDATA/ ICON(24), MACRO, MACX(35), DENMAC(35,4), MICRO,
     1       MICX(35), DENMIC(35), TEFC, TEM(3), REFBUC, GBUCKL, BSQARE,
     2       HEDGE, RAD(3), PITCH, SHARE, RHOH2O, RHOD2O, RHOUO2,
     3       RHOPO2, RHOTO2, PRESSH, PRESSD, CUTOFF, PUTINL, VOLUME,
     4       PDNSTY, LOADNG, FPSCAL, STEPS(40), POISON(40), PUREN(35,4),
     5       VFAST(27), HXIS, FRACVL(3)
      COMMON /MRSLT/ OMEGAC, OMEGAS, EL, NQZWL, DEFC, DOPLRD, RI28,
     1       PSUB28, TPOIS, QPOIS, SEARCH, GAMM(3), D(3), SIGMA(3),
     2       SX(3), GNUSX(3), SR(3), ST(25,3), SA(25,3), SIGFX(25,3),
     3       GSX(25,3), SRA(25,3), SREM(25,3), HOLDK(5)
      COMMON /TRSLT/ SDMND, SSTMND(25), SDCON, SSTCON(25), SSACON(25),
     1       SSFCON(25), SSGCON(25), RELPHI(3), DL25NT, DL28NT, PHI,
     2       VP(27), SACON, SFCON, SGCON
C
      COMMON /LIBTYP/LIBLBL(2),LIBFLG
C
      DIMENSION CHI(3)
      DIMENSION R(3)
      EQUIVALENCE (XOADNG,LOADNG), (BURNUP,BUBOS)
      EQUIVALENCE (R(1),RAD(1))
C
      DATA PI/3.1415926536/, NA/0.6022045/, WT12/238.05082/
      DATA CAPCLU, FISCLU /1.0, 2.0/
      DATA CHI/0.7516,0.2484,0.0/
C
      IF(LIBFLG.NE.1) GO TO 5
       CHI(1) = 0.75179
       CHI(2) = 0.24821
C
  5   RTPI = SQRT(PI)
      READ (1) FACTOR, WORD, OTE, YIELD, TFUGE, SSMOD, SSCAPA, CORREL,
     1     SPVOLM
      SNAKE = PHI
      PHI = GAMM(3) * SR(3) / (BSQARE*SDCON + ACCUM2(VP,SSACON,25) +
     1QPOIS)
      DL25NT = PHI / SNAKE * DL25NT
      DL28NT = PHI / SNAKE * DL28NT
      ONEVRV = RTPI/2.0 * SQRT((459.4 + 68.0)/(459.4 + TEM(3)))
C     TWOVRV = SSACON(11) / 6.0
C
C  JR--1/83
C  U236 ABSORPTION CROSS-SECTION (SSACON(11)) IN ENDF/B-IV IS NOT 1/V
C   AND NOT NORMALIZED TO 6.0.
C  USING B-10 (SSACON(19)) INSTEAD.
C
      TWOVRV = SSACON(19)/3839.71
C
C  JR--1/83
      SDMND = SDMND / ONEVRV
      DO 10 I = 1, 25
        SSTMND(I) = SSTMND(I) * ONEVRV
        SSAMND(I) = SSACON(I) / TWOVRV
        SSFMND(I) = SSFCON(I) / TWOVRV
   10 SSGMND(I) = SSGCON(I) / TWOVRV
      SAMND = SACON / TWOVRV
      SFMND = SFCON / TWOVRV
      SGMND = SGCON / TWOVRV
   20 BIGA(1) = D(1) * BSQARE + SIGMA(1) + SR(1)
      BIGA(2) = D(2) * BSQARE + SIGMA(2) + SR(2)
      BIGA(3) = D(3) * BSQARE + SIGMA(3) + SR(3)
      BIGA(4) = SDCON * BSQARE + SACON
      GUM = ACCUM1(GAMM,3)
      FSTFLX = GUM
      F1SA = ACCUM2(SIGMA,GAMM,3) / GUM
      F1SD = ACCUM2(D,GAMM,3) / GUM
      F1FX = ACCUM2(SX,GAMM,3) / GUM
      F1GX = ACCUM2(GNUSX,GAMM,3) / GUM
      F1SR = ACCUM2(SR(3),GAMM(3),1) / GUM
      TAU(1) = D(1) / (SIGMA(1) + SR(1))
      TAU(2) = D(2) / (SIGMA(2) + SR(2))
      TAU(3) = D(3) / (SIGMA(3) + SR(3))
      TAU(4) = F1SD / (F1SR + F1SA)
      CALL ADD(25)
      DO 30 I = 1, 25
        ONEFST(I,2) = 0.0
        IF (ST(I,1)*ST(I,2)*ST(I,3) .NE. 0.0) ONEFST(I,2) = GUM / (GAMM(
     1  1)/ST(I,1) + GAMM(2)/ST(I,2) + GAMM(3)/ST(I,3))
        ONEFST(I,1) = (ACCUM2(SA(I,1),GAMM,3) + SRA(I,3)*GAMM(3)) / GUM
        ONEFST(I,3) = ACCUM2(SIGFX(I,1),GAMM,3) / GUM
        ONEFST(I,4) = ACCUM2(GSX(I,1),GAMM,3) / GUM
   30 ONEFST(I,5) = SREM(I,3) * GAMM(3) / GUM
      CALL ADD(1)
      IF (VFAST(1) .LE. 0.0 .OR. BSQARE .EQ. 0.0) GO TO 50
      DO 40 J = 1, 3
   40 ST(1,J) = (1.0/3.0/D(J) - ACCUM2(ST(2,J),VFAST(2),24)) / VFAST(1)
      ONEFST(1,2) = (1.0/3.0/F1SD - ACCUM2(ONEFST(2,2),VFAST(2),24)) /
     1VFAST(1)
      SSTMND(1) = (1.0/3.0/SDMND - ACCUM2(SSTMND(2),VP(2),24)) / VP(1)
      SSTCON(1) = (1.0/3.0/SDCON - ACCUM2(SSTCON(2),VP(2),24)) / VP(1)
   50 CONTINUE
      FLUX(1) = FSTFLX
      FLUX(2) = PHI
      FLUXED(1) = FSTFLX
      FLUXED(2) = PHI
      DO 70 I = 1, 5
        DO 60 J = 1, 3
          XSREM(I,J) = COMPOS(SREM(1,J),I,FACTOR)
          XSA(I,J) = COMPOS(SA(1,J),I,FACTOR)
   60   XST(I,J) = COMPOS(ST(1,J),I,FACTOR)
        XST(I,4) = COMPOS(SSTCON,I,FACTOR)
        XST(I,5) = COMPOS(SSTMND,I,FACTOR)
        XSA(I,5) = COMPOS(SSACON,I,FACTOR)
        XSA(I,6) = COMPOS(SSAMND,I,FACTOR)
        XSREM(I,4) = COMPOS(ONEFST(1,5),I,FACTOR)
        XST(I,6) = COMPOS(ONEFST(1,2),I,FACTOR)
        XSA(I,7) = COMPOS(ONEFST(1,1),I,FACTOR)
   70 CONTINUE
      CALL SLITE(1)
      CALL MOVEKA(150, 0, BALNCE)
      DO 80 I = 1, 25
        SNAKE = FLUX(2)
        FLUX(2) = 0.0
        BALNCE(I,1) = AKTVAN(CAPCLU,I)
        BALNCE(I,2) = AKTVAN(FISCLU,I)
        FLUX(2) = SNAKE
        SNAKE = FLUX(1)
        FLUX(1) = 0.0
        BALNCE(I,3) = AKTVAN(CAPCLU,I)
        BALNCE(I,4) = AKTVAN(FISCLU,I)
        FLUX(1) = SNAKE
   80 BALNCE(I,5) = BALNCE(I,1) + BALNCE(I,2) + BALNCE(I,3) + BALNCE(I,
     14)
C
C     INCLUDE POISON IN NEUTRON BALANCE
C
      BALNCE(29,1) = TPOIS * QPOIS * FLUX(1) * GAMM(3) / (GAMM(1) +
     1GAMM(2) + GAMM(3))
      BALNCE(29,3) = QPOIS * FLUX(2)
      BALNCE(29,5) = BALNCE(29,1) + BALNCE(29,3)
      BALNCE(30,1) = F1SD * BSQARE * FLUX(1)
      BALNCE(30,3) = SDCON * BSQARE * FLUX(2)
      BALNCE(30,5) = BALNCE(30,1) + BALNCE(30,3)
      SNAKE = ACCUM1(BALNCE(1,5),30)
      DO 90 I = 1, 150
   90 BALNCE(I,1) = BALNCE(I,1) / SNAKE
      WTOUO2 = FRACVL(3) / FRACVL(1)
      HWTUO2 = RHOH2O * WTOUO2
      VMETAL = FRACVL(1) * ACCUM2(PUREN(1,1),SPVOLM,25) + FRACVL(2) *
     1ACCUM2(PUREN(1,2),SPVOLM,25) + FRACVL(3) * ACCUM2(PUREN(1,3),
     2SPVOLM,25)
      VWATER = (FRACVL(1)*PUREN(1,1) + FRACVL(2)*PUREN(1,2) + FRACVL(3)*
     1PUREN(1,3)) / 0.06688
      HWTM = 0.0
      IF (VMETAL .NE. 0.0) HWTM = VWATER / VMETAL
      WTOM = HWTM / RHOH2O
      RHO28U = (ONEFST(12,1) - ONEFST(12,3)) * FLUX(1) / (SSACON(12)*
     1FLUX(2))
      IF (VP(12) .NE. 0.0) RHO28U = VFAST(12) * RHO28U / VP(12)
      RHO28N = 0.0
      IF (CUTOFF .NE. 0.0 .AND. VP(12) .NE. 0.0) RHO28N = (VFAST(12)*(
     1ONEFST(12,1) - ONEFST(12,3))*FLUX(1) + VP(12)*SSACON(12)*FLUX(2) -
     2 DL28NT) / DL28NT
      DEL25U = ONEFST(10,3) * FLUX(1) / (SSFCON(10)*FLUX(2))
      IF (VP(10) .NE. 0.0) DEL25U = VFAST(10) * DEL25U / VP(10)
      DEL25N = 0.0
      IF (CUTOFF .NE. 0.0 .AND. VP(10) .NE. 0.0) DEL25N = (VFAST(10)*
     1ONEFST(10,3)*FLUX(1) + VP(10)*SSFCON(10)*FLUX(2) - DL25NT) /
     2DL25NT
      DLTA28 = 0.0
      IF (SFCON .NE. 0.0) DLTA28 = VFAST(12) * ONEFST(12,3) * FLUX(1) /
     1(F1FX*FLUX(1) + SFCON*FLUX(2) - VFAST(12)*ONEFST(12,3)*FLUX(1))
      FISABS = AKTVAN(3.0,23) + AKTVAN(3.0,10) + AKTVAN(3.0,13) +
     1AKTVAN(3.0,15)
      CR1 = 0.0
      IF (FISABS .NE. 0.0) CR1 = (AKTVAN(1.0,21) + AKTVAN(1.0,24) +
     1AKTVAN(1.0,12) + AKTVAN(1.0,14)) / FISABS
      CR2 = 0.0
      IF (FISABS .NE. 0.0) CR2 = AKTVAN(1.0,12) / FISABS
      CR3 = 0.0
      IF (VFAST(10) .NE. 0.0) CR3 = AKTVAN(1.0,12) / AKTVAN(2.0,10)
      CR4 = 0.0
      IF (FISABS .NE. 0.0) CR4 = (AKTVAN(2.0,21) + AKTVAN(2.0,24) +
     1AKTVAN(2.0,12) + AKTVAN(2.0,14)) / FISABS
      CALL SLITE(0)
      PNL = 1.0 / (1.0 + TAU(4)*BSQARE)
      DO 100 I = 1, 3
  100 CFISN(I) = 1.93 * PNL * GNUSX(I) * GAMM(I)
      CFISN(5) = 1.93 * PNL * SGCON * PHI
      DO 110 I = 1, 3
  110 CFISN(I) = CFISN(I) + GAMM(I) * ACCUM3(VFAST,SIGFX(1,I),SSCAPA,25)
      CFISN(5) = CFISN(5) + PHI * ACCUM3(VP,SSFCON,SSCAPA,25)
      DO 130 I = 1, 25
        DO 120 L = 1, 3
C
C**** SSATOT ACCOUNTS FOR RESONANCE CAPTURE
C
          SSATOT = SA(I,L)
          IF (L .EQ. 3) SSATOT = SSATOT + SRA(I,3)
  120   CFISN(L) = CFISN(L) + GAMM(L) * VFAST(I) * (SSATOT - SIGFX(I,L))
     1   * SSMOD(I)
  130 CFISN(5) = CFISN(5) + PHI * VP(I) * (SSACON(I) - SSFCON(I)) *
     1SSMOD(I)
      IF (SEARCH) 150, 150, 140
  140 CFISN(3) = CFISN(3) + QPOIS * SSMOD(19) * GAMM(3) * TPOIS
      CFISN(5) = CFISN(5) + QPOIS * SSMOD(19) * PHI
  150 CFISN(4) = (CFISN(1) + CFISN(2) + CFISN(3)) / FSTFLX
      DO 160 L = 1, 3
  160 CFISN(L) = CFISN(L) / GAMM(L)
      CFISN(5) = CFISN(5) / PHI
      CFISN(6) = CFISN(5) / TWOVRV
      OMEGAM = VFAST(12) * (ONEFST(12,1) - ONEFST(12,3)) / F1SR
      PR3CUR = 1. / (1. + VFAST(12)*SRA(12,3)/(SR(3) + VFAST(12)*SA(12,
     13)))
      CHORD = 2.0 * RAD(1) / DEFC
      IF (ICON(4) .EQ. 2) CHORD = 2.0 * CHORD
      SPWRX = 0.0
      IF (XOADNG .NE. 0.0) SPWRX = PDNSTY / XOADNG
C
C      COMPUTE K-INFINITY
C
      PDX = PDNSTY * 28.31685
      BIGA(1) = CHI(1) / (SIGMA(1) + SR(1))
      BIGA(2) = (SR(1)*BIGA(1) + CHI(2)) / (SIGMA(2) + SR(2))
      BIGA(3) = SR(2) * BIGA(2) / (SIGMA(3) + SR(3) - TPOIS*QPOIS)
      BIGA(4) = SR(3) * BIGA(3) / (SACON - QPOIS)
      CAYINF = ACCUM2(BIGA,GNUSX,3) + BIGA(4) * SGCON
      STOM = 0.0
      IF (PUREN(12,1) .NE. 0.0) STOM = 2.0 / R(1) / (WT12*PUREN(12,1)/
     1NA)
C
C      COMPUTE CORE MODERATING RATIOS
C
      IF (PUREN(10,1) .EQ. 0.0) GO TO 170
      CELHTX = PUREN(1,3) * FRACVL(3) / PUREN(10,1) / FRACVL(1)
      CORHTX = VFAST(1) / VFAST(10)
      SNAKE = (PUREN(1,3) + PUREN(20,3)) * FRACVL(3) / PUREN(10,1) /
     1FRACVL(1)
      SNAKE = (VFAST(1) + VFAST(20)) / VFAST(10) / SNAKE
      CORERA = WTOUO2 * SNAKE
      CORERB = HWTUO2 * SNAKE
      CORERC = WTOM * SNAKE
      CORERD = HWTM * SNAKE
  170 SNAKE = 1.0 + 1.54 * ICON(3)
      RADX(1) = RAD(1) / SNAKE
      RADX(2) = RAD(2) / SNAKE
      RADX(3) = RAD(3) / SNAKE
      RADX(4) = PITCH / SNAKE
      J = ICON(2) + 1
      TEMX(1) = TFUGE(J,1) * (TEM(1) + TFUGE(J,2))
      TEMX(2) = TFUGE(J,1) * (TEM(2) + TFUGE(J,2))
      TEMX(3) = TFUGE(J,1) * (TEM(3) + TFUGE(J,2))
      TEMX(4) = TFUGE(J,1) * (TEFC + TFUGE(J,2))
      VIE = 3.01211 * SA(1,1) / (D(1)*BSQARE + SIGMA(1) + SR(1))
      VIE = VIE + 3.01211 * SA(1,2) / (D(2)*BSQARE + SIGMA(2) + SR(2)) *
     1 (1. - GNUSX(1)*GAMM(1))
      VIE = VIE + 3.01211 * SA(1,3) / (D(3)*BSQARE + SIGMA(3) + SR(3)) *
     1 (1. - GNUSX(1)*GAMM(1) - GNUSX(2)*GAMM(2))
      VIE = VIE + 3.01211 * SSACON(1) / (SDCON*BSQARE + SACON) * SGCON *
     1 PHI
      VIE = VIE / .22
      IF (PDNSTY .EQ. 0.0) RETURN
      SCAPA = CFISN(4) * FSTFLX + CFISN(5) * PHI
      FLUX(1) = PDNSTY / SCAPA * FSTFLX * 6.241924E-12
      FLUX(2) = PDNSTY / SCAPA * PHI * 6.241924E-12
      FLUXED(1) = FLUX(1) * 1.0E24
      FLUXED(2) = FLUX(2) * 1.0E24
      IF (NOSTEP .LT. 2) TIMBOS = 0.0
      IF (NOSTEP .GE. 2) TIMBOS = TIMEOS
      DELTAT = STEPS(NOSTEP)
      IF (DELTAT .LT. 0.0) DELTAT = -DELTAT * 24.0 / SPWRX
      TIMEOS = TIMBOS + DELTAT
      IF (NOSTEP .GE. 2) BUBOS = BUEOS
      BUEOS = BUBOS + DELTAT / 24.0 * SPWRX
      RETURN
      END
C=======================================================================
CAKTVAN
      FUNCTION AKTVAN(B, N)
C
      COMMON /HEAD/ TITLE(20), NOSTEP, TIMBOS, BUBOS, TIMEOS, BUEOS,
     1       NSTEPS
      COMMON INDEX(35), FACTOR(5,7), WORD(35,2), OTE(4,3,6),
     1       YIELD(27,27), TFUGE(4,2), SSMOD(25), SSCAPA(25),
     2       CORREL(25), SPVOLM(25)
      COMMON /INDATA/ ICON(24), MACRO, MACX(35), DENMAC(35,4), MICRO,
     1       MICX(35), DENMIC(35), TEFC, TEM(3), REFBUC, GBUCKL, BSQARE,
     2       HEDGE, RAD(3), PITCH, SHARE, RHOH2O, RHOD2O, RHOUO2,
     3       RHOPO2, RHOTO2, PRESSH, PRESSD, CUTOFF, PUTINL, VOLUME,
     4       PDNSTY, LOADNG, FPSCAL, STEPS(40), POISON(40), PUREN(35,4),
     5       VFAST(27), HXIS, FRACVL(3)
      COMMON /TRSLT/ SDMND, SSTMND(25), SDCON, SSTCON(25), SSACON(25),
     1       SSFCON(25), SSGCON(25), RELPHI(3), DL25NT, DL28NT, PHI,
     2       VP(27), SACON, SFCON, SGCON
      COMMON ONEVRV, TWOVRV, SSAMND(25), SSFMND(25), SSGMND(25), SAMND,
     1       SFMND, SGMND, BIGA(4), FSTFLX, F1SA, F1SD, F1FX, F1GX,
     2       F1SR, TAU(4), ONEFST(25,5), FLUX(2), XST(5,6), XSA(5,7),
     3       XSREM(5,4), BALNCE(30,5), PNL, CFISN(6), CELHTX, CORHTX,
     4       CORERA, CORERB, CORERC, CORERD, OMEGAM, STOM, CAYINF,
     5       SPWRX, PDX, VIE, ENEOS(27), TEMX(4), RADX(4), FLUXED(2)
      CHARACTER * 8 WORD, OTE
C
      G = 1.0
      IF (VFAST(N) .NE. 0.0) G = VP(N) / VFAST(N)
      AACT = ONEFST(N,1) * FLUX(1) + G * SSACON(N) * FLUX(2)
      FACT = ONEFST(N,3) * FLUX(1) + G * SSFCON(N) * FLUX(2)
      IF (B .EQ. 1) AKTVAN = AACT - FACT
      IF (B .EQ. 2) AKTVAN = FACT
      IF (B .EQ. 3) AKTVAN = AACT
      CALL SLITET(1, ISITON)
      IF (ISITON .EQ. 2) RETURN
      CALL SLITE(1)
      AKTVAN = AKTVAN * VFAST(N)
      RETURN
      END
C=======================================================================
CCOMPOS
      FUNCTION COMPOS(ARRAY, INDEX, FACTOR)
C
      DIMENSION ARRAY(25), FACTOR(5,7), J(5)
      DATA J /4, 5, 1, 2, 3/
      I = J(INDEX)
      COMPOS = FACTOR(I,1) * ARRAY(1) + FACTOR(I,2) * ARRAY(2) + FACTOR(
     1I,3) * ARRAY(5) + FACTOR(I,4) * ARRAY(6) + FACTOR(I,5) * ARRAY(8)
     2+ FACTOR(I,6) * ARRAY(9) + FACTOR(I,7) * ARRAY(20)
      RETURN
      END
C=======================================================================
COUTPUT
      SUBROUTINE OUTPUT
C
      COMMON INDEX(35), FACTOR(5,7), WORD(35,2), OTE(4,3,6),
     1       YIELD(27,27), TFUGE(4,2), SSMOD(25), SSCAPA(25),
     2       CORREL(25), SPVOLM(25)
      COMMON ONEVRV, TWOVRV, SSAMND(25), SSFMND(25), SSGMND(25), SAMND,
     1       SFMND, SGMND, BIGA(4), FSTFLX, F1SA, F1SD, F1FX, F1GX,
     2       F1SR, TAU(4), ONEFST(25,5), FLUX(2), XST(5,6), XSA(5,7),
     3       XSREM(5,4), BALNCE(30,5), PNL, CFISN(6), CELHTX, CORHTX,
     4       CORERA, CORERB, CORERC, CORERD, OMEGAM, STOM, CAYINF,
     5       SPWRX, PDX, VIE, ENEOS(27), TEMX(4), RADX(4), FLUXED(2)
      COMMON /INDATA/ ICON(24), MACRO, MACX(35), DENMAC(35,4), MICRO,
     1       MICX(35), DENMIC(35), TEFC, TEM(3), REFBUC, GBUCKL, BSQARE,
     2       HEDGE, RAD(3), PITCH, SHARE, RHOH2O, RHOD2O, RHOUO2,
     3       RHOPO2, RHOTO2, PRESSH, PRESSD, CUTOFF, PUTINL, VOLUME,
     4       PDNSTY, LOADNG, FPSCAL, STEPS(40), POISON(40), PUREN(35,4),
     5       VFAST(27), HXIS, FRACVL(3)
      EQUIVALENCE (XOADNG,LOADNG), (BURNUP,BUBOS)
      COMMON /TRSLT/ SDMND, SSTMND(25), SDCON, SSTCON(25), SSACON(25),
     1       SSFCON(25), SSGCON(25), RELPHI(3), DL25NT, DL28NT, PHI,
     2       VP(27), SACON, SFCON, SGCON
      COMMON /MRSLT/ OMEGAC, OMEGAS, EL, NQZWL, DEFC, DOPLRD, RI28,
     1       PSUB28, TPOIS, QPOIS, SEARCH, GAMM(3), D(3), SIGMA(3),
     2       SX(3), GNUSX(3), SR(3), ST(25,3), SA(25,3), SIGFX(25,3),
     3       GSX(25,3), SRA(25,3), SREM(25,3), HOLDK(5), ZERNL
      COMMON /HEAD/ TITLE(20), NOSTEP, TIMBOS, BUBOS, TIMEOS, BUEOS,
     1       NSTEPS
      CHARACTER * 8 WORD, OTE
      COMMON CR1, CR2, CR3, CR4, DEL25N, DEL25U, DLTA28, RHO28N, RHO28U,
     1       CHORD, PR3CUR, WTOUO2, HWTUO2, HWTM, WTOM
      COMMON /JCL/ FLT(34), FLF(54), ET(34), EF(54)
      COMMON /LNL/ NSTART, VPLN(25,2), SABSOT, SFISST, SNUFIT, DIFFTH,
     1       SABNLT, SFINLT, SNUNLT, DINLTH
      COMMON /FPBUF/ FPBUF
      COMMON /X2DB/ I2DB, PFRAC, IXSEC, PCBU, PCU235, PRINT(40),
     1       XSEC(3,8,6), VERSIN(10)
C
      CHARACTER * 8 LIBLBL
      COMMON /LIBTYP/LIBLBL(2),LIBFLG
C
      DIMENSION SIGTRL(3), SIGTRN(3), SIGABL(3), SIGABN(3), SIGMOL(3),
     1          SIGFIL(3), SIGFIN(3), SIGVFL(3), SIGVFN(3), DN(3),
     2          DL(3), PL(3), PN(3), SIGREL(3), SIGREN(3), SIGMON(3)
C
C-----------------------------------------------------------------
C
C   ***** CHANGES TO WRITE OUT MACROS FOR 2DB- WRM,3/79
C
C      XSEC(IR,IT,IG) CONTAINS MACRO CROSS SECTIONS FOR EVENTUAL
C      2DB USE. REMOVALS ARE WRITTEN OUT RATHER THAN IN-SCATTERS
C      BECAUSE THERMAL INSCATTER DEPENDS ON THE NUMBER OF GROUPS
C
C        IR=REGION     1=TOTAL CELL, 2=LATTICE, 3=NON-LATTICE
C        IT=TYPE       1=FISSION,  2=ABSORPTION,   3=NU-FISSION
C                      4=TRANPORT, 5=SELF-SCATTER, 6=REMOVAL
C                      7=XENON MACRO,   8=XENON MICRO
C        IG=GROUP (1=1 OF 3,2=2 OF 3,3=3 OF 3,4=1 OF 3,5=THERMAL,6=MND)
C
C-----------------------------------------------------------------
C
      CHARACTER * 8 CHARSL
      DATA   CHARSL /'SLAB'/
      IF (NOSTEP .GT. 1) GO TO 120
      CALL HEADER(5, 6)
      WRITE (6,10)
   10 FORMAT (///50X,'- MACROGROUP INPUT DATA -'//31X,'INDEX     NAME'
     1   ,'        PELLET     CLAD   MODERATOR   EXTRA'//)
      DO 30 I = 1, MACRO
        DO 20 J = 1, 35
          IF (INDEX(J) .EQ. MACX(I)) GO TO 30
   20   CONTINUE
   30 WRITE (6,40) MACX(I), WORD(J,1), WORD(J,2), (DENMAC(I,J),J=1,4)
   40 FORMAT (1X,I35, 2X, 2A6, 4F10.6)
      IF (MICRO .EQ. 0) GO TO 90
      WRITE (6,50)
   50 FORMAT (/34X, ' TRACE ELEMENTS AND CORRESPONDENCE FACTORS'//39X,
     1         ' INDEX      NAME        FACTOR'/)
      DO 70 I = 1, MICRO
        DO 60 J = 1, 35
          IF (INDEX(J) .EQ. MICX(I)) GO TO 70
   60   CONTINUE
   70 WRITE (6,80) MICX(I), WORD(J,1), WORD(J,2), DENMIC(I)
   80 FORMAT (1X,I43, 4X, 2A6, G13.6)
   90 WRITE (6,100) SHARE, HEDGE
  100 FORMAT (//10X,   'NON-LATTICE FRACTION IS ',G14.6,
     1         ' AND THE NON-LATTICE PEAKING FACTOR IS ',G14.6,//)
      IF (FPBUF .GT. 1.1) WRITE (6,110) FPBUF
  110 FORMAT ( '          NOTE- A BURNUP FACTOR  =', F8.3,
     1       '  WILL BE USED FOR THE LFP CORRELATION',//)
C
C
  120 IF (NOSTEP .GT. 0 .AND. PRINT(NOSTEP) .LE. 1.0) GO TO 530
C
C  PUREN EDIT    --JR 4/81
      MM = 2*(MACRO + MICRO)
      K = 7
      IF(NOSTEP.GT.1 .OR. MM.GT.25) K = 5
      CALL HEADER(K, 6)
      WRITE (6,121)
  121 FORMAT(/,32X,'ELEMENT',28X,'NUMBER DENSITIES',
     *  /,/,29X,'INDEX',5X,'NAME',9X,'PELLET',
     *  9X,'CLAD',7X,'MODERATOR',7X,'EXTRA',/)
      DO 125 I=1,27
       IF((VP(I)+VFAST(I)).GT.0.0) WRITE (6,123) I, INDEX(I), WORD(I,1),
     *       WORD(I,2), (PUREN(I,J), J=1,4)
  123  FORMAT(25X,I2,I6,2X,2A6,1P4G14.6)
  125  CONTINUE
      CALL HEADER(7, 6)
C
      CALL HEADER(5, 6)
      J = ICON(2) + 1
      WRITE (6,130) OTE(J,1,1), OTE(J,2,1), TEMX
  130 FORMAT (/ 39X, 'TEMPERATURES, DEGREES ',2A6//11X,  'PELLET',16X,
     1 'CLAD AND VOID              MODERATOR              RESONANCE',
     2     '-EFFECTIVE'/F17.2,  2F25.2, F28.2)
      J = ICON(3) + 1
      I = ICON(4) + 1
      IF (I .LE. 2) GO TO 140
      I = 2
      OTE(I,1,2) = CHARSL
  140 CONTINUE
      WRITE (6,150) OTE(I,1,2), OTE(J,1,6), OTE(J,2,6), RADX, FRACVL,
     1HEDGE
  150 FORMAT (/45X, A6, ' CELL GEOMETRY'/18X, 'DISTANCES IN ', 2A6, 28X,
     1       'UNIT CELL VOLUME FRACTIONS'/'    PELLET OR       CLAD OR',
     2'     MODERATOR OR       PITCH         PELLET REGION   CLAD REGION
     3  MODERATOR REGION   NLPF', /F11.5, 3F15.5, 4X, 4F15.5)
C
      IF (XOADNG .EQ. 0.0) GO TO 220
      WRITE (6,160) WTOUO2, HWTUO2, WTOM, HWTM, CELHTX, CORERA, CORERB,
     1CORERC, CORERD, CORHTX
  160 FORMAT (/47X, 'MODERATING RATIOS'/'        CELL WATER/OXIDE  CELL'
     1    , ' HOT-WATER/OXIDE  CELL WATER/METAL  CELL HOT-WATER/',
     2  'METAL    CELL H/U-235'/ 5X, 5G20.6//'        CORE WATER/OXIDE'
     3 ,'  CORE HOT-WATER/OXIDE  CORE WATER/METAL  CORE HOT-WATER',
     4    '/METAL    CORE H/U-235' /5X, 5G20.6)
      IF (ICON(5) .GT. 0) GO TO 200
      IF (VFAST(12) .GE. VFAST(21)) WRITE (6,170) DOPLRD, RI28, OMEGAC,
     1OMEGAS, OMEGAM, DEFC, STOM, EL, PSUB28, PR3CUR
  170 FORMAT (//39X, 'TWO-STEP OMEGA SEARCH PARAMETERS'/12X,
     1       'DOPPLER          U-238 RES .INT.       CALC. OMEGA',
     2      'CONVERGED OMEGA      MUFT OMEGA' /3X,5G20.6//,
     3      12X, 'DANCOFF        SURFACE/MASS U-238        L-U238',
     4      15X, 'P-28           PR3-28 (CANDLE) ',/
     4       3X,2G20.6,G21.6,G20.6,G19.6)
      IF (VFAST(21) .GT. VFAST(12)) WRITE (6,180) DOPLRD, RI28, OMEGAC,
     1OMEGAS, OMEGAM, DEFC, STOM, EL, PSUB28, PR3CUR
  180 FORMAT (//39X, 'TWO-STEP OMEGA SEARCH PARAMETERS'/12X,
     1      'DOPPLER         TH-232 RES .INT.       CALC. OMEGA',
     2      '       CONVERGED OMEGA      MUFT OMEGA' /3X,5G20.6//
     3   12X,'DANCOFF        SURFACE/MASS U-238       L-TH232',
     4   15X,'P-02          PR3-28 (CANDLE) '/3X,2G20.6,
     4    G21.6,G20.6,G19.6)
      IF (OMEGAS .LT. 0.0) WRITE (6,190)
  190 FORMAT (//' CAUTION -- MUFT SEARCH DID NOT FULLY CONVERGE')
      GO TO 220
C
C      FIXED L-FACTOR
C
  200 WRITE (6,210) ZERNL, PUTINL, EL, OMEGAS, PR3CUR
  210 FORMAT (//43X, 'FIXED L-FACTOR PARAMETERS'/,
     1 '       ZERNIK S L-FACTOR INPUT L-FACTOR  L USED BY MUFT',
     2      '    MUFT OMEGA    PR3-28(CANDLE)' /,2X, 6F16.5)
  220 WRITE (6,230) RHOH2O, RHOD2O, RHOUO2, RHOPO2, RHOTO2, ONEVRV
  230 FORMAT (/48X, '-MISCELLANEOUS-'/10X, 'H2O  DENSITY    ',
     1       'D2O  DENSITY    U-O2 DENSITY    PU O2 DENSITY    ',
     2       'THO2 DENSITY   MAXWELLIAN 1/V' /8X, 6G16.6)
      WRITE (6,240) PRESSH, PRESSD, GBUCKL, CHORD, HXIS, TWOVRV
  240 FORMAT (/10X, 'H2O PRESSURE    D2O PRESSURE      BUCKLING',
     1  '       EFF. CHORD    XI-SCATTERING WIGNER-WILKINS 1/V',
     2    /8X, 6G16.6)
      IF (XOADNG .EQ. 0.0) GO TO 340
      WRITE (6,250) HOLDK, CAYINF
  250 FORMAT (/ 11X,
     1 '4-GROUP K       K "ONE"         K "TWO"         K "THREE"'
     2,'        K "FOUR"        K INFINITY',
     3   /8X, 6G16.6)
      WRITE (6,260) XOADNG, PDNSTY, PDX, SPWRX, FLUXED
  260 FORMAT (/12X, 'LOADING    POWER DENSITY    POWER DENSITY  ',
     1  ' SPECIFIC POWER  FAST FLUX     THERMAL FLUX'/,
     2  13X, '(G/CC)     (KW/LITER)       (KW/CU. FT.)     (KW/KG)',
     3    '     (ABSOLUTE)     (ABSOLUTE)' / 4F17.5, 1P2G14.5)
      IF (SEARCH .EQ. 0.0) WRITE (6,270) BSQARE
  270 FORMAT (//'              MATERIAL BUCKLING = ',1PG12.5)
      IF (SEARCH .GT. 0.0) WRITE (6,280) QPOIS, TPOIS
  280 FORMAT (//'              THERMAL POISON = ', 1PG12.5,
     1       ' GROUP THREE T-FACTOR = ', 0PF4.2, 1H.)
      IF (SEARCH .LT. 0.0) WRITE (6,290)
  290 FORMAT (' CONTROL SEARCH BYPASSED')
      IF(LIBFLG.EQ.1) GO TO 303
      WRITE (6,300)
  300 FORMAT ('+' ,72X,'BUILT-IN K-BIAS IS 1.0036'/)
      GO TO 307
  303 WRITE (6,305)
  305 FORMAT ('+' ,72X,'NO BUILT-IN K-BIAS'/)
  307 CONTINUE
      BLOB = .625
      CALL HEADER(6, 6)
      WRITE (6,310) BLOB, RHO28U, DEL25U
  310 FORMAT (/, ' FOR CUTOFF AT', F7.3, '     RHO-28 IS', F8.4,
     1       '    AND DELTA-25 IS', F8.4)
      IF (CUTOFF .GT. 0.0) WRITE (6,310) CUTOFF, RHO28N, DEL25N
      WRITE (6,320) CR1, CR4, CR2, CR3
  320 FORMAT (/' RATIO OF FERTILE CAPTURES TO FISSILE ABSORPTIONS',
     1     F8.4, 10X, '"FERTILE" MEANS TH232+U234+U238+PU240'/
     2       ' RATIO OF FERTILE FISSIONS TO FISSILE ABSORPTIONS',F8.4,
     3       10X, '"FISSILE" MEANS U233+U235+PU239+PU241'/
     4       ' RATIO OF U-238 CAPTURES TO FISSILE ABSORPTIONS  ',F8.4/
     5       ' RATIO OF U-238 CAPTURES TO U-235 FISSIONS       ',F8.4)
      WRITE (6,330) VIE
  330 FORMAT (/' PROMPT NEUTRON LIFETIME IS ',F6.2, ' MICROSECONDS.'/)
C
      CALL HEADER(6, 6)
  340 CALL HEADER(5, 6)
      WRITE (6,350)
  350 FORMAT (/11X, 'ELEMENT             NUMBER DENSITIES',21X,
     1       'DIFFERENTIAL MODERATION CROSS SECTIONS' /
     2      '     INDEX     NAME         FLUX WTD.     VOLUME WTD.',
     3      '   RATIO       GROUP ONE      GROUP TWO     GROUP THREE'/)
      DO 380 I = 1, 25
        IF (VP(I) + VFAST(I)) 380, 380, 360
  360   SNAKE = VP(I) / VFAST(I)
        WRITE (6,370) INDEX(I), WORD(I,1), WORD(I,2), VP(I), VFAST(I),
     1  SNAKE, (SREM(I,J),J=1,3,1)
  370   FORMAT (1X,I8, 3X, 2A6, 2X, 1P2G14.6, 0PF9.5, 2X, 1P3G15.6)
  380 CONTINUE
      DO 390 I = 26, 27
  390 IF (VFAST(I) .NE. 0.0) WRITE (6,400) INDEX(I), WORD(I,1),
     1WORD(I,2), VFAST(I)
  400 FORMAT (1X,I8, 3X, 2A6, 16X, 1PG14.6)
      WRITE (6,410) (INDEX(I + 30),WORD(I + 30,1),WORD(I + 30,2),(XSREM(
     1I,J),J=1,3),I=1,5)
  410 FORMAT (1X,I8, 3X, 2A6, 41X, 1P3G15.6)
      CALL HEADER(7, 6)
      WRITE (6,420)
  420 FORMAT (/36X, 'NEUTRON BALANCE USING MATERIAL BUCKLING'/,
     1       '              ELEMENT            FAST CAPTURE  ',
     2       'FAST FISSION     SLOW CAPTURE  SLOW FISSION     TOTAL'/)
      DO 430 I = 1, 25
  430 IF (BALNCE(I,5) .NE. 0.0) WRITE (6,440) INDEX(I), WORD(I,1),
     1WORD(I,2), (BALNCE(I,J),J=1,5)
  440 FORMAT (1X,I12, 1X, 2A6, 1PG17.6, G14.6, G17.6, G14.6, G17.6)
      IF (BALNCE(29,5) .GT. 0.0) WRITE (6,450) (BALNCE(29,J),J=1,5,2)
  450 FORMAT (/'             POISON', 1PG22.6, 2G31.6)
      IF (BALNCE(30,5) .GT. 0.0) WRITE (6,460) (BALNCE(30,J),J=1,5,2)
  460 FORMAT (/'            LEAKAGE', 1PG22.6, 2G31.6)
      CALL HEADER(7, 6)
C
C
      CALL HEADER(5, 6)
      WRITE (6,470)
  470 FORMAT (// 38X, '**** THERMAL FLUX IN N/CM2/SEC/EV ****'//)
      N1 = 1
      N2 = 9
      DO 500 J = 1, 4
        WRITE (6,480) (ET(N),N=N1,N2)
        WRITE (6,490) (FLT(N),N=N1,N2)
  480   FORMAT ('0E(EV):', 1P9E12.5)
  490   FORMAT (' FLUX :', 1P9E12.5)
        N1 = N2 + 1
        N2 = N2 + 9
        IF (J .EQ. 3) N2 = N2 - 2
  500 CONTINUE
      N1 = 1
      N2 = 9
      WRITE (6,510)
  510 FORMAT (// 37X, '**** FAST FLUX IN N/CM2/SEC/LETHARGY ****'//)
      DO 520 J = 1, 6
        WRITE (6,480) (EF(N),N=N1,N2)
        WRITE (6,490) (FLF(N),N=N1,N2)
        N1 = N2 + 1
        N2 = N2 + 9
  520 CONTINUE
  530 CONTINUE
C
C     ONE FAST GROUP COLLAPSE
C
  540 SIGM3 = SIGMA(3) / (ALOG(1 + SIGMA(3)/SR(3)))
      SIGM1 = F1SA / (ALOG(1 + F1SA/F1SR))
      C2 = SIGM1 / SIGM3
      DO 550 I = 1, 25
  550 ONEFST(I,5) = SREM(I,3) * C2
      GAMTOT = GAMM(1) + GAMM(2) + GAMM(3)
      DO 560 I = 1, 5
  560 XSREM(I,4) = XSREM(I,4) * C2 * GAMTOT / GAMM(3)
      IF (NOSTEP .GT. 0 .AND. PRINT(NOSTEP) .LE. 3.0) GO TO 670
      CALL HEADER(5, 6)
      WRITE (6,570)
  570 FORMAT (//13X, 'ELEMENT', 37X,
     1  'MICROSCOPIC TRANSPORT CROSS SECTIONS'//
     1  '       INDEX   NAME',18X, 'GROUP ONE      GROUP TWO     ',
     2  'GROUP THREE      THERMAL      THERMAL MND')
      WRITE (6,580) (INDEX(I),WORD(I,1),WORD(I,2),(ST(I,J),J=1,3),
     1SSTCON(I),SSTMND(I),I=1,25)
  580 FORMAT (1X,I10, 3X, 2A6, 10X, 5G15.7)
      WRITE (6,580) (INDEX(I + 30),WORD(I + 30,1),WORD(I + 30,2),(XST(I,
     1J),J=1,5),I=1,5)
C
C      ABSORPTION PAGE
C
      CALL HEADER(5, 6)
      WRITE (6,590)
  590 FORMAT (//7X, 'ELEMENT',37X,
     1  'MICROSCOPIC ABSORPTION CROSS SECTIONS'//
     2  '  INDEX  NAME          GROUP ONE      GROUPTWO       ',
     3  '3-SMOOTH      RESONANCE       THERMAL      THERMAL MND')
      WRITE (6,600) (INDEX(I),WORD(I,1),WORD(I,2),(SA(I,J),J=1,3),SRA(I,
     13),SSACON(I),SSAMND(I),I=1,25)
  600 FORMAT (1X,I5, 2X, 2A6, 6G15.7)
      WRITE (6,600) (INDEX(I + 30),WORD(I + 30,1),WORD(I + 30,2),(XSA(I,
     1J),J=1,6),I=1,5)
C
C      FISSION,NUFISSION
C
      CALL HEADER(5, 6)
      WRITE (6,610)
  610 FORMAT (//15X, 'ELEMENT',36X,
     1 'MICROSCOPIC FISSION CROSS SECTIONS'//,'       INDEX     NAME',
     2   17X,'GROUP ONE      GROUP TWO     GROUP THREE      ',
     3       'THERMAL      THERMAL MND')
      DO 620 I = 1, 25
  620 IF (SIGFX(I,1) + SIGFX(I,2) + SIGFX(I,3) + SSFCON(I) .NE. 0.0)
     1      WRITE (6,580) INDEX(I), WORD(I,1), WORD(I,2), (SIGFX(I,J),J=
     21,3), SSFCON(I), SSFMND(I)
      CALL HEADER(9, 6)
      CALL HEADER(6, 6)
      WRITE (6,630)
  630 FORMAT (/15X, 'ELEMENT', 35X,
     1      'MICROSCOPIC NU FISSION CROSS SECTIONS'//
     1      '       INDEX     NAME                  GROUP ONE',
     2  '      GROUP TWO     GROUP THREE      THERMAL      THERMAL MND')
      DO 640 I = 1, 25
  640 IF (GSX(I,1) + GSX(I,2) + GSX(I,3) + SSGCON(I) .NE. 0.0)
     1      WRITE (6,580) INDEX(I), WORD(I,1), WORD(I,2),
     2(GSX(I,J),J=1,3), SSGCON(I), SSGMND(I)
C
C      ONE FAST
C
      CALL HEADER(5, 6)
      WRITE (6,650)
  650 FORMAT (///40X, 'ONE-FAST-GROUP MICROSCOPIC CROSS SECTIONS'///
     1   '          ELEMENT',13X,'ABSORPTION     TRANSPORT       ',
     2   'FISSION     MODERATION       NU-FISSION'//)
      WRITE (6,660) (INDEX(I),WORD(I,1),WORD(I,2),(ONEFST(I,J),J=1,3),
     1ONEFST(I,5),ONEFST(I,4),I=1,25)
  660 FORMAT (1X,I7, 3X, 2A6, 5X, 5G15.7)
      BLURP = 0.0
      WRITE (6,660) (INDEX(I + 30),WORD(I + 30,1),WORD(I + 30,2),XSA(I,
     17),XST(I,6),BLURP,XSREM(I,4),BLURP,I=1,5)
C
C          BROAD-GROUP RESUTS AND CONVERSION RATIOS.
C
  670 CALL HEADER(5, 6)
      WRITE (6,680)
  680 FORMAT (/, 50X, 'MACROSCOPIC CROSS SECTIONS', /)
      CALL HEADER(6, 6)
      WRITE (6,690)
  690 FORMAT (/56X,'TOTAL EDIT', //, ' SCHEME       DIFFUSION     ABSORP
     1TION', '       REMOVAL        FISSION        NUFISSION      AGE',
     2       '      P     FLUX      KAPPA FSN.')
      DO 700 I = 1, 3
        SNAKE = SR(I) / (SR(I) + SIGMA(I))
  700 WRITE (6,710) I, D(I), SIGMA(I), SR(I), SX(I), GNUSX(I), TAU(I),
     1SNAKE, GAMM(I), CFISN(I)
  710 FORMAT (1X,I1, ' OF 3    ', F12.7, 2X, 4G15.7, F8.3, F8.5, F8.4,
     1       F12.5)
      SNAKE = F1SR / (F1SR + F1SA)
      WRITE (6,720) F1SD, F1SA, F1SR, F1FX, F1GX, TAU(4), SNAKE, FSTFLX,
     1CFISN(4)
  720 FORMAT (' 1 OF 1    ', F12.7, 2X, 4G15.7, F8.3, F8.5, F8.4, F12.5)
      WRITE (6,730) SDCON, SACON, SFCON, SGCON, PHI, CFISN(5)
      WRITE (6,740) SDMND, SAMND, SFMND, SGMND, CFISN(6)
  730 FORMAT (' THERMAL   ', F12.7, G17.7, 15X, 2G15.7, F24.4, F12.4)
  740 FORMAT (' THERMAL MND ', F10.7, G17.7, 15X, 2G15.7, F36.4)
C
C      LATTICE AND NON-LATTICE EDITS
C      ADDED 4-20-76 BY G. VAN TUYLE
C
      IF (SHARE .EQ. 0.0) GO TO 900
      DO 750 J = 1, 3
        SIGTRL(J) = 0.0
        SIGABL(J) = 0.0
        SIGMOL(J) = 0.0
        SIGFIL(J) = 0.0
        SIGVFL(J) = 0.0
        SIGTRN(J) = 0.0
        SIGABN(J) = 0.0
        SIGMON(J) = 0.0
        SIGFIN(J) = 0.0
  750 SIGVFN(J) = 0.0
      DO 780 J = 1, 3
        DO 770 I = 1, 25
          DO 760 L = 1, 3
            SIGTRL(J) = SIGTRL(J) + PUREN(I,L) * ST(I,J) * FRACVL(L)
            SIGABL(J) = SIGABL(J) + PUREN(I,L) * (SA(I,J) + SRA(I,J)) *
     1      FRACVL(L)
            SIGMOL(J) = SIGMOL(J) + PUREN(I,L) * SREM(I,J) * FRACVL(L)
            SIGFIL(J) = SIGFIL(J) + PUREN(I,L) * SIGFX(I,J) * FRACVL(L)
  760     SIGVFL(J) = SIGVFL(J) + PUREN(I,L) * GSX(I,J) * FRACVL(L)
          SIGTRN(J) = SIGTRN(J) + PUREN(I,4) * ST(I,J)
          SIGABN(J) = SIGABN(J) + PUREN(I,4) * (SA(I,J) + SRA(I,J))
          SIGMON(J) = SIGMON(J) + PUREN(I,4) * SREM(I,J)
          SIGFIN(J) = SIGFIN(J) + PUREN(I,4) * SIGFX(I,J)
  770   SIGVFN(J) = SIGVFN(J) + PUREN(I,4) * GSX(I,J)
        DN(J) = 1.0 / (3.0*SIGTRN(J))
        DL(J) = 1.0 / (3.0*SIGTRL(J))
        PL(J) = EXP(-SIGABL(J)/SIGMOL(J))
        PN(J) = EXP(-SIGABN(J)/SIGMON(J))
        SIGREL(J) = SIGABL(J) * PL(J) / (1.0 - PL(J))
  780 SIGREN(J) = SIGABN(J) * PN(J) / (1.0 - PN(J))
      D1L    = 0.0
      SIGA1L = 0.0
      SIGA1N = 0.0
      SIGM1L = 0.0
      SIGF1L = 0.0
      SIGV1L = 0.0
      SIGV1N = 0.0
      SIGF1N = 0.0
      SIGM1N = 0.0
      D1N = 0.0
      DO 790 J = 1, 3
        D1L = D1L + GAMM(J) * DL(J) / GAMTOT
        SIGA1L = SIGA1L + GAMM(J) * SIGABL(J) / GAMTOT
        SIGF1L = SIGF1L + GAMM(J) * SIGFIL(J) / GAMTOT
        SIGV1L = SIGV1L + GAMM(J) * SIGVFL(J) / GAMTOT
        D1N = D1N + GAMM(J) * DN(J) / GAMTOT
        SIGA1N = SIGA1N + GAMM(J) * SIGABN(J) / GAMTOT
        SIGF1N = SIGF1N + GAMM(J) * SIGFIN(J) / GAMTOT
  790 SIGV1N = SIGV1N + GAMM(J) * SIGVFN(J) / GAMTOT
      SIGR1L = SIGREL(3) * GAMM(3) / GAMTOT
      SIGR1N = SIGREN(3) * GAMM(3) / GAMTOT
      P1L = SIGR1L / (SIGR1L + SIGA1L)
      P1N = SIGR1N / (SIGR1N + SIGA1N)
      STRANM = 0.0
      SABSOM = 0.0
      SFISSM = 0.0
      SNUFIM = 0.0
      DO 800 I = 1, 25
C
C     MND X-SECS ARE BASED ON FLUX-WEIGHTED CEL-AVG XSECS.
C
        IF (VPLN(I,1) .LE. 0.0) GO TO 800
        STRANM = STRANM + VPLN(I,1) * SSTMND(I)
        SABSOM = SABSOM + VPLN(I,1) * SSAMND(I)
        SFISSM = SFISSM + VPLN(I,1) * SSFMND(I)
        SNUFIM = SNUFIM + VPLN(I,1) * SSGMND(I)
C
C
  800 CONTINUE
      DIFFMN = 1.0 / (3.0*STRANM)
      STRNLM = 0.0
      SABNLM = 0.0
      SFINLM = 0.0
      SNUNLM = 0.0
      DO 810 I = 1, 25
        IF (VPLN(I,2) .LE. 0.0) GO TO 810
        STRNLM = STRNLM + VPLN(I,2) * SSTMND(I)
        SABNLM = SABNLM + VPLN(I,2) * SSAMND(I)
        SFINLM = SFINLM + VPLN(I,2) * SSFMND(I)
  810 SNUNLM = SNUNLM + VPLN(I,2) * SSGMND(I)
      DINLMN = 1.0 / (3.0*STRNLM)
      CALL HEADER(6, 6)
      WRITE (6,820)
      WRITE (6,825)
  820 FORMAT (/55X, 'LATTICE EDIT')
  825 FORMAT ( //' SCHEME          DIFFUSION          ',
     1    'ABSORPTION            REMOVAL            FISSION', 11X,
     2    'NU FISSION              P')
      DO 830 J = 1, 3
  830 WRITE (6,840) J, DL(J), SIGABL(J), SIGREL(J), SIGFIL(J),
     1SIGVFL(J), PL(J)
  840 FORMAT (1X, I1, 5H OF 3, 6G20.7)
      WRITE (6,850) D1L, SIGA1L, SIGR1L, SIGF1L, SIGV1L, P1L
  850 FORMAT (1X, 6H1 OF 1, 6G20.7)
      WRITE (6,860) DIFFTH, SABSOT, SFISST, SNUFIT
  860 FORMAT (1X, 7HTHERMAL, G19.7, G20.7, 20X, 2G20.7)
      WRITE (6,870) DIFFMN, SABSOM, SFISSM, SNUFIM
  870 FORMAT (1X, 11HTHERMAL MND, G15.7, G20.7, 20X, 2G20.7)
      CALL HEADER(6, 6)
      WRITE (6,880)
      WRITE (6,825)
  880 FORMAT (/53X, 'NON-LATTICE EDIT')
      DO 890 J = 1, 3
  890 WRITE (6,840) J, DN(J), SIGABN(J), SIGREN(J), SIGFIN(J),
     1SIGVFN(J), PN(J)
      WRITE (6,850) D1N, SIGA1N, SIGR1N, SIGF1N, SIGV1N, P1N
      WRITE (6,860) DINLTH, SABNLT, SFINLT, SNUNLT
      WRITE (6,870) DINLMN, SABNLM, SFINLM, SNUNLM
      CALL HEADER(6, 6)
  900 CONTINUE
C
C  K/B**2 EDIT    --JR 4/81
      WRITE (6,902) HOLDK, CAYINF
  902 FORMAT (/ 11X,
     1 '4-GROUP K       K "ONE"         K "TWO"         K "THREE"'
     2,'        K "FOUR"        K INFINITY',
     3   /8X, 6G16.6)
      IF (SEARCH .EQ. 0.0) WRITE (6,904) BSQARE
  904 FORMAT (/'              MATERIAL BUCKLING = ',1PG12.5)
      IF (SEARCH .GT. 0.0) WRITE (6,901) QPOIS, TPOIS
  901 FORMAT (/'              THERMAL POISON = ', 1PG12.5,
     1       ' GROUP THREE T-FACTOR = ', 0PF4.2, 1H.)
      IF (SEARCH .LT. 0.0) WRITE (6,908)
  908 FORMAT (' CONTROL SEARCH BYPASSED')
      IF(LIBFLG.EQ.1) GO TO 903
      WRITE (6,906)
  906 FORMAT ('+' ,72X,'BUILT-IN K-BIAS IS 1.0036'/)
      GO TO 907
  903 WRITE (6,905)
  905 FORMAT ('+' ,72X,'NO BUILT-IN K-BIAS'/)
  907 CONTINUE
C
      K = LIBFLG + 1
      WRITE (6,909) LIBLBL(K)
  909 FORMAT(15X,'LIBRARY USED:  ',A8)
      CALL HEADER(6, 6)
C
C     LOAD CROSS SECTION ARRAY ---XSEC
C
      IF (IXSEC .EQ. 0 .AND. I2DB .EQ. 0) RETURN
      DO 910 IR = 1, 3
        DO 910 IT = 1, 8
          DO 910 IG = 1, 6
  910 XSEC(IR,IT,IG) = 0.0
      DO 930 IG = 1, 3
        XSEC(1,1,IG) = SX(IG)
        XSEC(1,2,IG) = SIGMA(IG)
        XSEC(1,3,IG) = GNUSX(IG)
        XSEC(1,4,IG) = 1.0 / (3.0*D(IG))
        XSEC(1,6,IG) = SR(IG)
        XSEC(1,7,IG) = SA(17,IG) * VFAST(17)
        XSEC(1,8,IG) = SA(17,IG)
        IF (SHARE .EQ. 0.0) GO TO 930
        XSEC(2,1,IG) = SIGFIL(IG)
        XSEC(2,2,IG) = SIGABL(IG)
        XSEC(2,3,IG) = SIGVFL(IG)
        XSEC(2,4,IG) = SIGTRL(IG)
        XSEC(2,6,IG) = SIGREL(IG)
        DO 920 L = 1, 3
  920   XSEC(2,7,IG) = XSEC(2,7,IG) + PUREN(17,L) * (SA(17,IG) + SRA(17,
     1  IG)) * FRACVL(L)
        XSEC(2,8,IG) = SA(17,IG)
        XSEC(3,1,IG) = SIGFIN(IG)
        XSEC(3,2,IG) = SIGABN(IG)
        XSEC(3,3,IG) = SIGVFN(IG)
        XSEC(3,4,IG) = SIGTRN(IG)
        XSEC(3,6,IG) = SIGREN(IG)
        XSEC(3,7,IG) = PUREN(17,4) * (SA(17,IG) + SRA(17,IG))
        XSEC(3,8,IG) = SA(17,IG)
  930 CONTINUE
      VPXT = 1.0
      VPXL = 1.0
      IF (VFAST(17) .GT. 0.0) VPXT = VP(17) / VFAST(17)
      IF (PUREN(17,1) .GT. 0.0) VPXL = VPLN(17,1) / PUREN(17,1) /
     1FRACVL(1)
      XSEC(1,1,4) = F1FX
      XSEC(1,2,4) = F1SA
      XSEC(1,3,4) = F1GX
      XSEC(1,4,4) = 1.0 / (3.0*F1SD)
      XSEC(1,6,4) = F1SR
      XSEC(1,7,4) = ONEFST(17,1) * VFAST(17)
      XSEC(1,8,4) = ONEFST(17,1)
      XSEC(1,1,5) = SFCON
      XSEC(1,2,5) = SACON
      XSEC(1,3,5) = SGCON
      XSEC(1,4,5) = 1.0 / (3.0*SDCON)
      XSEC(1,7,5) = SSACON(17) * VP(17)
      XSEC(1,8,5) = SSACON(17) * VPXT
      XSEC(1,1,6) = SFMND
      XSEC(1,2,6) = SAMND
      XSEC(1,3,6) = SGMND
      XSEC(1,4,6) = 1.0 / (3.0*SDMND)
      XSEC(1,7,6) = SSAMND(17) * VP(17)
      XSEC(1,8,6) = SSAMND(17) * VPXT
      IF (SHARE .EQ. 0.0) GO TO 970
      XSEC(2,1,4) = SIGF1L
      XSEC(2,2,4) = SIGA1L
      XSEC(2,3,4) = SIGV1L
      XSEC(2,4,4) = 1.0 / (3.0*D1L)
      XSEC(2,6,4) = SIGR1L
      DO 940 J = 1, 3
  940 XSEC(2,7,4) = XSEC(2,7,4) + GAMM(J) * XSEC(2,7,J) / GAMTOT
      XSEC(2,8,4) = ONEFST(17,1)
      XSEC(3,1,4) = SIGF1N
      XSEC(3,2,4) = SIGA1N
      XSEC(3,3,4) = SIGV1N
  950 XSEC(3,4,4) = 1.0 / (3.0*D1N)
      XSEC(3,6,4) = SIGR1N
      DO 960 J = 1, 3
  960 XSEC(3,7,4) = XSEC(3,7,4) + GAMM(J) * XSEC(3,7,J) / GAMTOT
      XSEC(3,8,4) = ONEFST(17,1)
      XSEC(2,1,5) = SFISST
      XSEC(2,2,5) = SABSOT
      XSEC(2,3,5) = SNUFIT
      XSEC(2,4,5) = 1.0 / (3.0*DIFFTH)
      XSEC(2,7,5) = SSACON(17) * VPLN(17,1)
      XSEC(2,8,5) = SSACON(17) * VPXL
      XSEC(3,1,5) = SFINLT
      XSEC(3,2,5) = SABNLT
      XSEC(3,3,5) = SNUNLT
      XSEC(3,4,5) = 1.0 / (3.0*DINLTH)
      XSEC(3,7,5) = VPLN(17,2) * SSACON(17)
      XSEC(3,8,5) = SSACON(17)
      XSEC(2,1,6) = SFISSM
      XSEC(2,2,6) = SABSOM
      XSEC(2,3,6) = SNUFIM
      XSEC(2,4,6) = 1.0 / (3.0*DIFFMN)
      XSEC(2,7,6) = SSAMND(17) * VPLN(17,1)
      XSEC(2,8,6) = SSAMND(17) * VPXL
      XSEC(3,1,6) = SFINLM
      XSEC(3,2,6) = SABNLM
      XSEC(3,3,6) = SNUNLM
      XSEC(3,4,6) = 1.0 / (3.0*DINLMN)
      XSEC(3,7,6) = VPLN(17,2) * SSAMND(17)
      XSEC(3,8,6) = SSAMND(17)
  970 CONTINUE
      IRR = 3
      IF (SHARE .EQ. 0.0) IRR = 1
      DO 980 IR = 1, IRR
        DO 980 IG = 1, 6
  980 XSEC(IR,5,IG) = XSEC(IR,4,IG) - XSEC(IR,2,IG) - XSEC(IR,6,IG)
      RETURN
      END
C=======================================================================
CBURN
      SUBROUTINE BURN
C
      CHARACTER * 8 WORD, OTE
      DOUBLE PRECISION A, B, C, EN, EX, DELT, SNAKE
      COMMON /HEAD/ TITLE(20), NOSTEP, TIMBOS, BUBOS, TIMEOS, BUEOS,
     1       NSTEPS
      COMMON /INDATA/ ICON(24), MACRO, MACX(35), DENMAC(35,4), MICRO,
     1       MICX(35), DENMIC(35), TEFC, TEM(3), REFBUC, GBUCKL, BSQARE,
     2       HEDGE, RAD(3), PITCH, SHARE, RHOH2O, RHOD2O, RHOUO2,
     3       RHOPO2, RHOTO2, PRESSH, PRESSD, CUTOFF, PUTINL, VOLUME,
     4       PDNSTY, LOADNG, FPSCAL, STEPS(40), POISON(40), PUREN(35,4),
     5       VFAST(27), HXIS, FRACVL(3)
      COMMON INDEX(35), FACTOR(5,7), WORD(35,2), OTE(4,3,6),
     1       YIELD(27,27), TFUGE(4,2), SSMOD(25), SSCAPA(25),
     2       CORREL(25), SPVOLM(25)
      COMMON ONEVRV, TWOVRV, SSAMND(25), SSFMND(25), SSGMND(25), SAMND,
     1       SFMND, SGMND, BIGA(4), FSTFLX, F1SA, F1SD, F1FX, F1GX,
     2       F1SR, TAU(4), ONEFST(25,5), FLUX(2), XST(5,6), XSA(5,7),
     3       XSREM(5,4), BALNCE(30,5), PNL, CFISN(6), CELHTX, CORHTX,
     4       CORERA, CORERB, CORERC, CORERD, OMEGAM, STOM, CAYINF,
     5       SPWRX, PDX, VIE, ENEOS(27), TEMX(4), RADX(4), FLUXED(2)
      COMMON /TRSLT/ SDMND, SSTMND(25), SDCON, SSTCON(25), SSACON(25),
     1       SSFCON(25), SSGCON(25), RELPHI(3), DL25NT, DL28NT, PHI,
     2       VP(27), SACON, SFCON, SGCON
      DIMENSION BURNED(27), DENSTY(27), DELTAT(1)
      DIMENSION A(6), B(6,6), C(6), EN(6), EX(6)
      EQUIVALENCE (XOADNG,LOADNG), (BURNUP,BUBOS)
      EQUIVALENCE (VFAST(1),DENSTY(1)), (ENEOS(1),BURNED(1))
      DATA DCAY19, DCAY41, DCAY35, DCAY45, DCAY13 /3.626E-6, 1.464E-9,
     1     2.924E-5, 2.100E-5, 2.971E-7/
C
      DELTAT(1) = (TIMEOS - TIMBOS) * 3600.0
      DELT = DELTAT(1)
C                       THE THORIUM CHAIN
      DO 10 I = 1, 6
        EN(I) = 0.0
        A(I) = 0.0
        B(I,1) = 0.0
        C(I) = 0.0
   10 EX(I) = 0.0
      EN(1) = DENSTY(21)
      EN(2) = DENSTY(22)
      EN(3) = DENSTY(23)
      EN(4) = DENSTY(24)
      EN(5) = DENSTY(10)
      EN(6) = DENSTY(11)
      DO 20 I = 1, 27
   20 BURNED(I) = DENSTY(I)
      H = 1.0
      C(5) = AKTVAN(H,10)
      DO 30 I = 21, 24
   30 C(I - 20) = AKTVAN(H,I)
      H = 3.0
      DO 40 I = 21, 24
   40 A(I - 20) = AKTVAN(H,I)
      A(2) = A(2) + DCAY13
      C(2) = DCAY13
      DO 50 I = 10, 11
   50 A(I - 5) = AKTVAN(H,I)
      B(1,1) = EN(1)
      DO 70 N = 2, 6
        NM1 = N - 1
        SNAKE = 0.0
        DO 60 I = 1, NM1
          SNAKE = SNAKE + C(NM1) * B(NM1,I) / (A(I) - A(N))
   60   B(N,I) = C(NM1) * B(NM1,I) / (A(N) - A(I))
   70 B(N,N) = EN(N) + SNAKE
      H = 1.0
      C(2) = AKTVAN(H,22)
      B(4,4) = B(4,4) + C(2) * (B(2,1)/(A(1) - A(4)) + B(2,2)/(A(2) - A(
     14)))
      B(4,1) = B(4,1) + C(2) * B(2,1) / (A(4) - A(1))
      B(4,2) = B(4,2) + C(2) * B(2,2) / (A(4) - A(2))
      DO 80 I = 1, 6
   80 EX(I) = DEXP(-A(I)*DELT)
      DO 90 I = 1, 6
   90 A(I) = 0.0
      DO 100 I = 1, 6
        DO 100 J = 1, I
  100 A(I) = A(I) + B(I,J) * EX(J)
      DO 110 I = 1, 4
  110 BURNED(I + 20) = A(I)
      DO 120 I = 5, 6
  120 BURNED(I + 5) = A(I)
C                           NOW DO U-238 CHAIN
      DO 130 I = 1, 6
        EX(I) = 0.0
        C(I) = 0.0
        B(I,1) = 0.0
        A(I) = 0.0
        EN(I) = 0.0
  130 CONTINUE
      H = 1.0
      DO 140 I = 1, 4
  140 C(I) = AKTVAN(H,I + 11)
      H = 3.0
      DO 150 I = 1, 4
  150 A(I) = AKTVAN(H,I + 11)
      A(5) = AKTVAN(H,25)
      A(4) = A(4) + DCAY41
      DO 160 I = 1, 4
  160 EN(I) = DENSTY(I + 11)
      EN(5) = DENSTY(25)
      B(1,1) = EN(1)
      DO 180 N = 2, 5
        M = N - 1
        SNAKE = 0.0
        DO 170 I = 1, M
          SNAKE = SNAKE + C(M) * B(M,I) / (A(I) - A(N))
  170   B(N,I) = C(M) * B(M,I) / (A(N) - A(I))
  180 B(N,N) = SNAKE + EN(N)
      DO 190 I = 1, 5
  190 EX(I) = DEXP(-A(I)*DELT)
      DO 200 I = 1, 6
  200 A(I) = 0.0
      DO 210 I = 1, 5
        DO 210 J = 1, I
  210 A(I) = B(I,J) * EX(J) + A(I)
      DO 220 I = 1, 4
  220 BURNED(I + 11) = A(I)
      BURNED(25) = A(5)
      H = 3.0
      A29 = AKTVAN(H,16)
      A45 = AKTVAN(H,17) + DCAY45
      YFP = WYE(18,DENSTY,BURNED)
      Y19 = WYE(26,DENSTY,BURNED)
      Y35 = WYE(27,DENSTY,BURNED)
      Y29 = WYE(16,DENSTY,BURNED)
      Y45 = WYE(17,DENSTY,BURNED)
      D19 = DEXP(-DELT*DCAY19)
      D35 = DEXP(-DELT*DCAY35)
      D29 = DEXP(-DELT*A29)
      D45 = DEXP(-DELT*A45)
C
C           IODINE 135
      BURNED(27) = DENSTY(27) * D35 + Y35 / DCAY35 * (1.0 - D35)
C
C           XENON 135
      BURNED(17) = DENSTY(17) * D45 + (Y35 + Y45) / A45 * (1.0 - D45) +
     1(DENSTY(27)*DCAY35 - Y35) / (A45 - DCAY35) * ((1.0 - D45) - (1.0 -
     2 D35))
C
C           PROMETHIUM 149
      BURNED(26) = DENSTY(26) * D19 + Y19 / DCAY19 * (1.0 - D19)
C
C           SAMARIUM 149
      BURNED(16) = DENSTY(16) * D29 + Y19 / A29 * (1.0 - D29) + (DENSTY(
     126)*DCAY19 - Y19) / (A29 - DCAY19) * ((1.0 - D29) - (1.0 - D19))
C
C           LUMPED FISSION PRODUCTS
      BURNED(18) = DENSTY(18) + YFP * DELT
C
C           DEPLETE ANY BORON IN THE PELLET OR CLAD ZONES.
      DO 230 N = 1, 2
  230 PUREN(19,N) = PUREN(19,N) * DEXP(-DELT*(ONEFST(19,1)*FLUX(1) +
     1RELPHI(N)*SSACON(19)*FLUX(2)))
      VFAST(19) = (FRACVL(1)*PUREN(19,1) + FRACVL(2)*PUREN(19,2) +
     1FRACVL(3)*PUREN(19,3)) * (1. - SHARE) + SHARE * PUREN(19,4)
      DO 240 I = 1, 27
        IF (I .EQ. 19) GO TO 240
        PUREN(I,1) = PUREN(I,1) + (BURNED(I) - DENSTY(I)) / FRACVL(1) /
     1  (1.0 - SHARE)
  240 CONTINUE
      IF (POISON(NOSTEP + 1) .EQ. POISON(NOSTEP)) RETURN
      DO 260 J = 1, 4
        WATER = PUREN(31,J) + PUREN(32,J)
        IF (WATER .EQ. 0.0) GO TO 260
        IF (POISON(NOSTEP) .LT. 0.0) GO TO 250
        PUREN(19,J) = 3.29756E-7 * POISON(NOSTEP + 1) * WATER
        GO TO 260
  250   PUREN(31,J) = WATER / (1.0 - POISON(NOSTEP + 1))
        PUREN(32,J) = WATER - PUREN(31,J)
        PUREN(1,J) = 2.0 * PUREN(31,J)
        PUREN(20,J) = 2.0 * PUREN(32,J)
  260 CONTINUE
      RETURN
      END
C=======================================================================
CWYE
      FUNCTION WYE(N, OLD, GEN)
C
      COMMON INDEX(35), FACTOR(5,7), WORD(35,2), OTE(4,3,6),
     1       YIELD(27,27), TFUGE(4,2), SSMOD(25), SSCAPA(25),
     2       CORREL(25), SPVOLM(25)
      CHARACTER * 8 WORD, OTE
      DIMENSION OLD(25), GEN(25)
      DATA H /2.0/
C
      WYE = 0.0
      DO 10 I = 1, 25
   10 WYE = WYE + .5 * (OLD(I) + GEN(I)) * YIELD(I,N) * AKTVAN(H,I)
      RETURN
      END
C=======================================================================
CMASSED
      SUBROUTINE MASSED
C
      CHARACTER * 8 WORD, OTE
      COMMON /INDATA/ ICON(24), MACRO, MACX(35), DENMAC(35,4), MICRO,
     1       MICX(35), DENMIC(35), TEFC, TEM(3), REFBUC, GBUCKL, BSQARE,
     2       HEDGE, RAD(3), PITCH, SHARE, RHOH2O, RHOD2O, RHOUO2,
     3       RHOPO2, RHOTO2, PRESSH, PRESSD, CUTOFF, PUTINL, VOLUME,
     4       PDNSTY, LOADNG, FPSCAL, STEPS(40), POISON(40), PUREN(35,4),
     5       VFAST(27), HXIS, FRACVL(3)
      COMMON /HEAD/ TITLE(20), NOSTEP, TIMBOS, BUBOS, TIMEOS, BUEOS,
     1       NSTEPS
      COMMON /MRSLT/ OMEGAC, OMEGAS, EL, NQZWL, DEFC, DOPLRD, RI28,
     1       PSUB28, TPOIS, QPOIS, SEARCH, GAMM(3), D(3), SIGMA(3),
     2       SX(3), GNUSX(3), SR(3), ST(25,3), SA(25,3), SIGFX(25,3),
     3       GSX(25,3), SRA(25,3), SREM(25,3), HOLDK(5)
      COMMON INDEX(35), FACTOR(5,7), WORD(35,2), OTE(4,3,6),
     1       YIELD(27,27), TFUGE(4,2), SSMOD(25), SSCAPA(25),
     2       CORREL(25), SPVOLM(25)
      COMMON ONEVRV, TWOVRV, SSAMND(25), SSFMND(25), SSGMND(25), SAMND,
     1       SFMND, SGMND, BIGA(4), FSTFLX, F1SA, F1SD, F1FX, F1GX,
     2       F1SR, TAU(4), ONEFST(25,5), FLUX(2), XST(5,6), XSA(5,7),
     3       XSREM(5,4), BALNCE(30,5), PNL, CFISN(6), CELHTX, CORHTX,
     4       CORERA, CORERB, CORERC, CORERD, OMEGAM, STOM, CAYINF,
     5       SPWRX, PDX, VIE, ENEOS(27), TEMX(4), RADX(4), FLUXED(2)
      COMMON CSTART(25), FSTART(25), DSTART(25), GONE(25), GOCAP(25),
     1       GOFIS(25), GODEK(25), PSHAR(25), GANE(25), SORSS(25)
      COMMON /MSUMRY/ SORSSI(25), GANEI(25), GONEI(25), GOCAPI(25),
     1       GOFISI(25), GODEKI(25), PSHARI(25)
      COMMON /TRSLT/ SDMND, SSTMND(25), SDCON, SSTCON(25), SSACON(25),
     1       SSFCON(25), SSGCON(25), RELPHI(3), DL25NT, DL28NT, PHI,
     2       VP(27), SACON, SFCON, SGCON
      COMMON /X2DB/ I2DB, PFRAC, IXSEC, PCBU, PCU235, PRINT(40),
     1       XSEC(3,8,6),VERSIN(10)
      DIMENSION ENBOS(25), IFISSL(4)
      DIMENSION BULIST(40),ULIST(40),PULIST(40),ELIST(40),GLIST(40),
     1          GU5(40)
      EQUIVALENCE (XOADNG,LOADNG), (BURNUP,BUBOS)
      EQUIVALENCE (ENBOS(1),VFAST(1))
      DATA C, F /1.0, 2.0/
      DATA DCAY13, DCAY41, DCAY49 /2.971E-7, 1.464E-9, 9.005E-13/
      DATA IFISSL /10., 13., 15., 23./
C
      CALL SLITE(0)
      CALL MOVEKA(250, 0.0, CSTART)
      DELTAT = TIMEOS - TIMBOS
C                       THORIUM-232
      GANE(21) = ENEOS(21) - ENBOS(21)
      SNAKE = AKTVAN(F,21)
      SNEEK = AKTVAN(C,21)
      GONE(21) = SORSS(21) - GANE(21)
      GOCAP(21) = GONE(21) / (1. + SNAKE/SNEEK)
      GOFIS(21) = GONE(21) / (1. + SNEEK/SNAKE)
C                       PROTACTINIUM-233
      SORSS(22) = GOCAP(21)
      GANE(22) = ENEOS(22) - ENBOS(22)
      GONE(22) = SORSS(22) - GANE(22)
      SNAKE = AKTVAN(C,22)
      GOCAP(22) = GONE(22) / (1. + DCAY13/SNAKE)
      GODEK(22) = GONE(22) / (1. + SNAKE/DCAY13)
C                       URANIUM-233
      SORSS(23) = GODEK(22)
      GANE(23) = ENEOS(23) - ENBOS(23)
      GONE(23) = SORSS(23) - GANE(23)
      SNAKE = AKTVAN(C,23)
      SNEEK = AKTVAN(F,23)
      GOCAP(23) = GONE(23) / (1. + SNEEK/SNAKE)
      GOFIS(23) = GONE(23) / (1. + SNAKE/SNEEK)
C                       URANIUM-234
      SORSS(24) = GOCAP(23) + GOCAP(22)
      GANE(24) = ENEOS(24) - ENBOS(24)
      GONE(24) = SORSS(24) - GANE(24)
      SNAKE = AKTVAN(C,24)
      SNEEK = AKTVAN(F,24)
      GOCAP(24) = GONE(24) / (1. + SNEEK/SNAKE)
      GOFIS(24) = GONE(24) / (1. + SNAKE/SNEEK)
C                       URANIUM-235
      SORSS(10) = GOCAP(24)
      GANE(10) = ENEOS(10) - ENBOS(10)
      GONE(10) = SORSS(10) - GANE(10)
      SNAKE = AKTVAN(C,10)
      SNEEK = AKTVAN(F,10)
      GOCAP(10) = GONE(10) / (1. + SNEEK/SNAKE)
      GOFIS(10) = GONE(10) / (1. + SNAKE/SNEEK)
C                       URANIUM-236
      SORSS(11) = GOCAP(10)
      GANE(11) = ENEOS(11) - ENBOS(11)
      GONE(11) = SORSS(11) - GANE(11)
      SNAKE = AKTVAN(C,11)
      SNEEK = AKTVAN(F,11)
      GOCAP(11) = GONE(11) / (1. + SNEEK/SNAKE)
      GOFIS(11) = GONE(11) / (1. + SNAKE/SNEEK)
C                       URANIUM-238
      GANE(12) = ENEOS(12) - ENBOS(12)
      GONE(12) = SORSS(12) - GANE(12)
      SNAKE = AKTVAN(C,12)
      SNEEK = AKTVAN(F,12)
      GOCAP(12) = GONE(12) / (1. + SNEEK/SNAKE)
      GOFIS(12) = GONE(12) / (1. + SNAKE/SNEEK)
C                       PLUTONIUM-239
      SORSS(13) = GOCAP(12)
      GANE(13) = ENEOS(13) - ENBOS(13)
      GONE(13) = SORSS(13) - GANE(13)
      SNAKE = AKTVAN(C,13)
      SNEEK = AKTVAN(F,13)
      SNEEZ = SNAKE + SNEEK + DCAY49
      GODEK(13) = GONE(13) * DCAY49 / SNEEZ
      GOCAP(13) = GONE(13) * SNAKE / SNEEZ
      GOFIS(13) = GONE(13) * SNEEK / SNEEZ
C                       PLUTONIUM-240
      SORSS(14) = GOCAP(13)
      GANE(14) = ENEOS(14) - ENBOS(14)
      GONE(14) = SORSS(14) - GANE(14)
      SNAKE = AKTVAN(C,14)
      SNEEK = AKTVAN(F,14)
      GOCAP(14) = GONE(14) / (1. + SNEEK/SNAKE)
      GOFIS(14) = GONE(14) / (1. + SNAKE/SNEEK)
C                       PLUTONIUM-241
      SORSS(15) = GOCAP(14)
      GANE(15) = ENEOS(15) - ENBOS(15)
      GONE(15) = SORSS(15) - GANE(15)
      SNAKE = AKTVAN(C,15)
      SNEEK = AKTVAN(F,15)
      SNEEZ = SNAKE + SNEEK + DCAY41
      GOFIS(15) = GONE(15) * SNEEK / SNEEZ
      GOCAP(15) = GONE(15) * SNAKE / SNEEZ
      GODEK(15) = GONE(15) * DCAY41 / SNEEZ
C                       PLUTONIUM-242
      SORSS(25) = GOCAP(15)
      GANE(25) = ENEOS(25) - ENBOS(25)
      GONE(25) = SORSS(25) - GANE(25)
      SNAKE = AKTVAN(C,25)
      SNEEK = AKTVAN(F,25)
      GOCAP(25) = GONE(25) / (1. + SNEEK/SNAKE)
      GOFIS(25) = GONE(25) / (1. + SNAKE/SNEEK)
C
C                 ABOVE ARE FOR THIS TIME STEP ONLY.
C                 THE NEXT LOOP CALCULATES CORRESPONDING
C                 VALUES AVERAGED OVER ALL TIME.
C
      IF (NOSTEP .EQ. 1) CALL MOVEKA(175, 0.0, SORSSI)
      DO 10 I = 10, 25
        SORSSI(I) = SORSS(I) + SORSSI(I)
        GANEI(I) = GANE(I) + GANEI(I)
        GONEI(I) = SORSSI(I) - GANEI(I)
        GOCAPI(I) = GOCAPI(I) + GOCAP(I)
        GOFISI(I) = GOFISI(I) + GOFIS(I)
   10 GODEKI(I) = GODEKI(I) + GODEK(I)
C      GENERALIZED POWER SHARING, INCLUDING RADIATIVE CAPTURE
      DO 20 I = 1, 25
   20 PSHAR(I) = (ENBOS(I) + ENEOS(I)) * 0.5 * (AKTVAN(F,I)*SSCAPA(I) +
     1AKTVAN(C,I)*SSMOD(I) + 1.93*ONEFST(I,4)*FLUX(1) + 1.93*SSGCON(I)*
     2FLUX(2))
C
C       ADD IN THE BORON KAPPA FOR ANY POISON FROM A SEARCH
C
      IF (NOSTEP .EQ. 1) POISQI = 0.0
      POISQ = 0.0
      FLUX3 = GAMM(3) / (GAMM(1) + GAMM(2) + GAMM(3)) * FLUX(1)
      IF (SEARCH .GT. 0.0) POISQ = QPOIS * (TPOIS*FLUX3 + FLUX(2)) *
     1SSMOD(19)
      PTOTAL = POISQ + ACCUM1(PSHAR,25)
      POISQ = POISQ / PTOTAL
      DO 30 I = 1, 25
        PSHAR(I) = PSHAR(I) / PTOTAL
   30 PSHARI(I) = (PSHAR(I)*DELTAT + PSHARI(I)*TIMBOS) / TIMEOS
      POISQI = (POISQ*DELTAT + POISQI*TIMBOS) / TIMEOS
      QSHARE = 6.241624E-12 * PDNSTY / (F1FX*FLUX(1) + SFCON*FLUX(2))
      IF (NOSTEP .EQ. 1) QSHARI = 0.0
      QSHARI = (QSHARI*TIMBOS + QSHARE*DELTAT) / TIMEOS
C
C                       ALL RESULTS ARE IN ATOM - UNITS
C                       MASS - CORRECT BELOW
C
      DO 40 I = 10, 25
        SORSS(I) = SORSS(I) * CORREL(I) / XOADNG
        SORSSI(I) = SORSSI(I) * CORREL(I) / XOADNG
        GANE(I) = GANE(I) * CORREL(I) / XOADNG
        GANEI(I) = GANEI(I) * CORREL(I) / XOADNG
        GONE(I) = GONE(I) * CORREL(I) / XOADNG
        GONEI(I) = GONEI(I) * CORREL(I) / XOADNG
        GOCAP(I) = GOCAP(I) * CORREL(I) / XOADNG
        GOCAPI(I) = GOCAPI(I) * CORREL(I) / XOADNG
        GOFIS(I) = GOFIS(I) * CORREL(I) / XOADNG
        GOFISI(I) = GOFISI(I) * CORREL(I) / XOADNG
        GODEK(I) = GODEK(I) * CORREL(I) / XOADNG
   40 GODEKI(I) = GODEKI(I) * CORREL(I) / XOADNG
      IF (NOSTEP.GT.0.AND.PRINT(NOSTEP) .LE. 3.0) GO TO 110
      CALL HEADER(5,6)
      WRITE (6,50)
   50 FORMAT (//, 22X, 'CONVERSION DURING THIS TIME STEP (KG/TONNE)')
      WRITE (6,60)
   60 FORMAT (//7X, 'ELEMENT', 14X, 'PRODUCTION', 27X, 'DESTRUCTION',
     1       19X, 'POWER SHARING'/26X, 'GROSS', 9X, 'NET', 10X,
     2       'FISSION', 7X, 'CAPTURE', 8X, 'DECAY'/)
   70 FORMAT (//29X, 'CONVERSION SINCE BEGINNING OF REACTOR LIFE (KG/TON
     1NE)')
   80 FORMAT (1X,I9, 2X, 2A6, 6G14.6)
      WRITE (6,80) (INDEX(I),WORD(I,1),WORD(I,2),SORSS(I),GANE(I),GOFIS(
     1I),GOCAP(I),GODEK(I),PSHAR(I),I=1,25)
      IF (POISQ .NE. 0.0) WRITE (6,90) POISQ
   90 FORMAT (T10, 'POISON', T94, G14.6)
      WRITE (6,100) QSHARE
  100 FORMAT ('0MEAN ENERGY GENERATION=', F7.1, ' MEV/FISSION.')
      IF (NOSTEP .LE. 1) GO TO 110
      CALL HEADER(5,6)
      WRITE (6,70)
      WRITE (6,60)
      WRITE (6,80) (INDEX(I),WORD(I,1),WORD(I,2),SORSSI(I),GANEI(I),
     1GOFISI(I),GOCAPI(I),GODEKI(I),PSHARI(I),I=1,25)
      IF (POISQI .NE. 0.0) WRITE (6,90) POISQI
      WRITE (6,100) QSHARI
  110 BULIST(NOSTEP) = BUEOS
      ULIST(NOSTEP) = -GANEI(10) - GANEI(11) - GANEI(12)
      PULIST(NOSTEP) = GANEI(13) + GANEI(15)
      AMT = ACCUM2(ENEOS(10),CORREL(10),3) + ACCUM2(ENEOS(23),CORREL(23)
     1,2)
      ELIST(NOSTEP) = 100.0 * ENEOS(10) * CORREL(10) / AMT
      DO 120 I = 10, 25
        IF (CORREL(I) .EQ. 0.0) GO TO 120
        SORSSI(I) = SORSSI(I) * XOADNG / CORREL(I)
        GANEI(I) = GANEI(I) * XOADNG / CORREL(I)
        GONEI(I) = GONEI(I) * XOADNG / CORREL(I)
        GOCAPI(I) = GOCAPI(I) * XOADNG / CORREL(I)
        GOFISI(I) = GOFISI(I) * XOADNG / CORREL(I)
        GODEKI(I) = GODEKI(I) * XOADNG / CORREL(I)
  120 CONTINUE
C
C      CALCULATE PRESENT/INITIAL FISSILE IN WEIGHT PERCENT  DCL
C
      IF (NOSTEP .GT. 1) GO TO 140
      FISINI = 0.0
      DO 130 I = 1, 4
  130 FISINI = ENBOS(IFISSL(I)) * CORREL(IFISSL(I)) / XOADNG + FISINI
      U235IN = ENBOS(10) * CORREL(10) / XOADNG
  140 PCBU = 0.0
      DO 150 I = 1, 4
  150 PCBU = ENBOS(IFISSL(I)) * CORREL(IFISSL(I)) / XOADNG + PCBU
      PCBU = (1.0 - PCBU/FISINI) * 100.0
      GLIST(NOSTEP) = PCBU
      PCU235 = (1.0 - (ENBOS(10)*CORREL(10)/XOADNG)/U235IN) * 100.0
      GU5(NOSTEP) = PCU235
C
C      END OF CALCULATION PRINTOUT
C
      IF (NOSTEP .LT. NSTEPS) RETURN
      CALL HEADER(5,6)
      WRITE (6,160) (N,BULIST(N),ULIST(N),PULIST(N),ELIST(N),GLIST(N),
     1 GU5(N),N=1,NSTEPS)
  160 FORMAT (//, T30, 'SUMMARY OF DISCHARGE INVENTORIES'//T11,
     1       'BURNUP', T22, 'URANIUM LOSS,KG/T', T43,
     2       'FISSILE PU GAIN,KG/T', T67, 'DISCHARGE U235, W/O', T90,
     3       'PERCENT FISSILE BURNUP',T114,'PERCENT U235 BURN',//,(I6,
     4       T8,F10.1,T20,F14.4,T44,F15.4,T68,F11.4,T91,F11.4,T117,
     5       F11.4))
      RETURN
      END
C=======================================================================
CSLITE
      SUBROUTINE SLITE(I)
C
      COMMON /SSLLI/ LITE(4)
      DO  5 J = 1, 4
    5 LITE(J) = 2
      IF (I .GE. 1 .AND. I .LE. 4) GO TO 20
      DO 10 J = 1, 4
   10 LITE(J) = 2
      RETURN
   20 LITE(I) = 1
      RETURN
      END
C     ENTRY SLITET(I,J)
      SUBROUTINE SLITET(I,J)
C
      COMMON /SSLLI/ LITE(4)
      J = LITE(I)
      LITE(I) = 2
      RETURN
      END
      FUNCTION EXPI3(X)
      EXPI3 = .5 * ((1. - X)*EXP(-X) + X*X*EXPI1(X))
      RETURN
      END
      FUNCTION PCSLAB(X)
      PCSLAB = 1. - (.5 - EXPI3(X)) / X
      RETURN
      END
      FUNCTION ASLAB(X)
      PC = PCSLAB(X)
      ASLAB = PC / (1. - PC) - X
      RETURN
      END
C=======================================================================
CEXPI1
      FUNCTION EXPI1(X)
C
      IF (X - 1.) 20, 10, 10
   10 Y = 1. / X
      EXPI1 = Y * EXP(-X) * (1. - Y*(((Y + 3.377358E0)*Y + 2.052156E0)*
     1Y + 2.709479E-1)/((((Y*1.072553E0+5.716943E0)*Y + 6.945239E0)*Y +
     22.593888E0)*Y + 2.709496E-1))
      RETURN
C
   20 EXPI1 = X * ((((((((7.122452E-7*X - 1.766345E-6)*X + 2.928433E-5)*
     1X - 2.335379E-4)*X + 1.664156E-3)*X - 1.041576E-2)*X + 5.
     2555682E-2)*X - 2.500001E-1)*X + 9.999999E-1) - ALOG(X) - 5.
     3772157E-1
      RETURN
      END
      subroutine LINXS
C*****************************************************************
C
C                       ****** L I N X ******
C                 VERSAO REVISADO PARA MICRO 386 - NOV/92 - G.T.O.
C     POST PROCESSOR CODE TO READ IN COMPLETE LEOPARD BINARY
C     LIBRARY AND A LIMITED 2DBUM LIBRARY.
C
C     >>>>>>>>>>>>>>>>>SIMPLE INPUT INSTRUCTIONS<<<<<<<<<<<<<<<<<
C
C     IF A 2 GROUP 2DB LIBRARY IS DESIRED WITH NO RESTARTS
C     SIMPLY ENTER BLANKS FOR ALL INPUT REQUESTS.
C
C
C     >>>>>>>>>>>>>>>>>GENERAL INPUT INSTRUCTIONS<<<<<<<<<<<<<<<<
C
C     I2DB = 1/2/3/4  =  2 GP  /  2 GP MND  /  4 GP  /  4 GP MND
C
C     KIND(I) = RESTART INDEX FOR 'I' RESTART SET
C               5/7/9 = FUEL TEMP / MOD TEMP / MOD DENS
C     NRES(I) = NO. OF RESTARTS FOR THE 'I' SET
C
C        **NOTE: I2DB,KIND(I),NRES(I) ARE INPUT ON UNIT 5.
C                IF NO RESTARTS HAVE BEEN RUN LEAVE SECOND
C                LINE OF INPUT BLANK. A 0 OR BLANK ON FIRST LINE
C                WILL DEFAULT TO 2 GROUPS
C
C
C          NBU  = NO. OF BURNUP STEPS IN THE LEOPARD RUN
C          IGM  = NO. OF GROUPS
C          ITL  = CROSS SECTION TABLE LENGTH = 8
C
C          UNIT 4 = LEOPARD BINARY FILE
C          UNIT 5 = INPUT
C          UNIT 7 = 2DB LIBRARY
C          UNIT 8 = OUTPUT EDIT
C
C******************************************************************
      DIMENSION CSEC(3,8,6), XSEC(3,40,32), TITLE(20), BURN(10,40),
     1          DATE( 2), ULOAD(3), KIND(5), NRES(5) ,XID(3),NAME(3)
C     REAL*8 XID, NAME
C     INTEGER * 4 DATE
      DIMENSION DATEX(3), TIMEX(2)
      CHARACTER*8 XID, NAME
      CHARACTER*4 DATE,DATEX,TIMEX
C
      DATA NAME /'TOTAL   ', 'LATTIC  ', 'NONLAT  '/
      DATA DATE /  2*'    '       /
      DATA DATEX/3*'    '/,TIMEX/2*'    '/
C
      OPEN (4,FILE='LEOPARD.BIN',STATUS='OLD',FORM='UNFORMATTED')
      REWIND(4)
      OPEN (5,FILE='LINXS.DAT')
      OPEN (7,FILE='LINXS.BIN',FORM='UNFORMATTED')
      OPEN (8,FILE='LINXS.OUT')
      OPEN (1,FILE='FORT.1',STATUS='SCRATCH',FORM='FORMATTED')
C     TSECI = SECNDS(0.0)
      TSECI = 0.0
C      CALL DIA( DATEX )
C      CALL TIME( TIMEX )
      WRITE(6,600) DATEX, TIMEX
  600 FORMAT('1      LINXS - ', 2A4, A1, ' - ', 2A4 )
C
      PRINT 10
   10 FORMAT (' ENTER : I2DB   ---I1 FORMAT')
   20 FORMAT (' ENTER : KIND(I),NRES(I) FOR I=1,5  ---10I3 FORMAT')
      READ (5,30) I2DB
   30 FORMAT (I1)
      IF (I2DB .LE. 0) I2DB = 1
C
      KOUNT = 0
      IGM = 2
      NBL = 10
      IF (I2DB .GT. 2) IGM = 4
      IR1 = 1
      IG1 = 5
      IF (I2DB .EQ. 2 .OR. I2DB .EQ. 4) IG1 = 6
      IG2 = 4
      IF (I2DB .GT. 2) IG2 = 3
      ITL = 8
C
C     READ IN COMPLETE LEOPARD BINARY LIBRARY
C
      DO 420 NTLIBS = 1, 20
C
        READ (4,END=430) TITLE
        WRITE (8,40) TITLE
40      FORMAT (1X,20A4)
        READ (4) (DATE(I),I=1,2)
        WRITE (8,45) DATE
45      FORMAT (1X,2A10)
        READ (4) XID
        WRITE (8,50) XID
50      FORMAT (1X,3A8)
        READ (4) NBU, IR2
        WRITE (8,60) NBU,IR2
60      FORMAT (1X,2I3)
        READ (4) ULOAD
        WRITE (8,70) ULOAD
70      FORMAT (1X,3E12.5)
        PRINT 20
        READ (5,90)  (KIND(I),NRES(I) ,I=1,5)
C
        DO 80 I = 1, 5
   80   KOUNT = KOUNT + NRES(I)
C
        NCOM = NBU + KOUNT
   90   FORMAT (10I3)
C
        DO 200 K = 1, NCOM
          READ (4) (BURN(I,K),I=1,NBL)
          WRITE (8,110) (BURN(I,K),I=1,NBL)
  110     FORMAT ('1', (10X,10E12.5))
          READ (4) CSEC
C
          DO 130 IR = IR1, IR2
            WRITE (8,120)
  120       FORMAT ('0')
C
            DO 130 IT = 1, ITL
  130     WRITE (8,140) (CSEC(IR,IT,IG),IG=1,6)
C
  140     FORMAT (1X,1P6E12.4)
C
          DO 190 IR = IR1, IR2
            CSEC(IR,6,IG1) = CSEC(IR,6,IG2)
            IF (I2DB .GT. 2) GO TO 160
            CSEC(IR,6,IG2) = 0.0
C
            DO 150 IT = 1, ITL
              XSEC(IR,K,IT) = CSEC(IR,IT,4)
              XSEC(IR,K,IT + ITL) = CSEC(IR,IT,IG1)
  150       CONTINUE
C
            GO TO 190
  160       CSEC(IR,6,3) = CSEC(IR,6,2)
            CSEC(IR,6,2) = CSEC(IR,6,1)
            CSEC(IR,6,1) = 0.0
C
            DO 180 IGG = 1, 5
              IF (IGG .EQ. 4) GO TO 180
              IG = IGG
              IF (IGG .EQ. 5 .AND. I2DB .EQ. 4) IG = 6
              IIG = IG
              IF (IG .GT. 3) IIG = 4
C
              DO 170 IT = 1, ITL
                INDEX = (IIG - 1) * ITL + IT
                XSEC(IR,K,INDEX) = CSEC(IR,IT,IG)
  170         CONTINUE
C
  180       CONTINUE
C
  190     CONTINUE
C
  200   CONTINUE
C
        JBEG = NBU + 1
        JEND = NBU
        NUMX = ITL * IGM
C
        DO 260 I = 1, 5
          IF (NRES(I) .EQ. 0) GO TO 270
          JEND = JEND + NRES(I)
          J = KIND(I)
C
          DO 250 NN = JBEG, JEND
C
            DO 230 JJ = 1, NBU
              IF (IFIX(BURN(1,NN)) .NE. IFIX(BURN(1,JJ))) GO TO 220
C
              DO 210 IR = IR1, IR2
C
                DO 210 LL = 1, NUMX
                  XSEC(IR,NN,LL) = (XSEC(IR,NN,LL) - XSEC(IR,JJ,LL)) / (
     1            BURN(J,NN) - BURN(J,JJ))
  210         CONTINUE
C
              GO TO 250
  220         IF (JJ .NE. NBU) GO TO 230
              WRITE (8,240) NN
  230       CONTINUE
C
  240       FORMAT ('  ERROR IN RESTART FILE ON LINE', 2X, I3)
  250     CONTINUE
C
          JBEG = JEND + 1
  260   CONTINUE
C
  270   CONTINUE
C
C     WRITE LIMITED LIBRARY FOR 2DB
C
        NBEG = 1
        NEND = NBU
C
        DO 330 I = 1, 6
          J = I - 1
          IF (J .GT. 0) NBU = NRES(J)
          IF (NBU .EQ. 0) GO TO 340
          NVAR = NBL * NBU
          NUMX = ITL * IGM
C
          DO 320 IR = IR1, IR2
            WRITE (1,700) TITLE
            WRITE (1,710) XID(IR), NAME(IR), DATE(1)
            WRITE (1,720) NBU, IGM, I2DB, NVAR, ITL
            WRITE (1,730) ULOAD(IR)
            DO 310 LL=1,NBL
            WRITE (1,740)  (BURN(LL,NN),NN=NBEG,NEND)
  310       CONTINUE
            DO 315 N=1,NUMX
            WRITE (1,740) ( XSEC(IR,K,N),K=NBEG,NEND)
  315       CONTINUE
  320 CONTINUE
  700 FORMAT( 20A4 )
  710 FORMAT( A8,A6,A4 )
  720 FORMAT( 5I3 )
  730 FORMAT( 1PE12.5 )
  740 FORMAT( 1P6E12.5 )
C
          NBEG = NEND + 1
          IF (I .GT. 5) GO TO 330
          NEND = NEND + NRES(I)
  330   CONTINUE
C
  340   CONTINUE
C
C     OUTPUT EDIT ON UNIT 8
C
        WRITE (8,350)
  350   FORMAT ('1', 40X, ' * * * * FINAL LIBRARY * * * *'/)
        WRITE (8,280) TITLE
        WRITE (8,290) DATE
C
        DO 410 I = IR1, IR2
          WRITE (8,360) XID(I), ULOAD(I)
  360     FORMAT (///' LIBRARY ID =  ', A8, 10X, 'ULOAD (T/CC)=',
     1           1PE14.5)
          WRITE (8,370)
  370     FORMAT (/'   MWD/T        FISSION     ABSORPTION ',
     1           '  NU-FISSION   TRANSPORT    SELFSCATTER   INSCATTER',
     2           '   XENON MACRO   XENON MICRO  '/)
C
  380     DO 390 J = 1, NCOM
  390     WRITE (8,400) BURN(1,J), (XSEC(I,J,K),K=1,NUMX)
C
  400     FORMAT (1X,9E13.5/(13X,8E13.5))
  410   CONTINUE
C
  420 CONTINUE
C
  430 CONTINUE
  280 FORMAT (1X,20A4)
  290 FORMAT (1X,20A4)
      CALL CONVERB
      ENDFILE 7
C      TSECF = SECNDS(0.0) - TSECI
      TSECF = 0.0
      WRITE(6,610) TSECF
  610 FORMAT('0      LINXS - TOTAL TIME = ', F7.0, ' SECS.')

      RETURN
      END
C     SUBROUTINE DIA( X )
C     DIMENSION X(3)
C     CALL DATE(X)
C     RETURN
C     END
      SUBROUTINE CONVERB
      CHARACTER * 80 TITLE
      CHARACTER * 8 XID
      CHARACTER * 6 NAME
      CHARACTER * 4 DATE
      DIMENSION BURN(60,60),XSEC(60,90)
      DATA TITLE/'                    '/
C
      REWIND 1
      WRITE(6,601)
  601 FORMAT(1H1)
      NW=7
      NC=0
C
  998 READ(1,100,END=999) TITLE
      WRITE(NW) TITLE
      WRITE( 6,600) TITLE
  100 FORMAT( A80 )
  600 FORMAT(1X, A80 )
C
      READ(1,110) XID,NAME,DATE
      WRITE(NW) XID,NAME,DATE
      WRITE( 6,115) XID,NAME,DATE
  110 FORMAT(A8,A6,A4)
  115 FORMAT(A8,3X,A6,3X,A4)
C
      READ(1,120) NBU,IGM,I2DB,NVAR,ITL
      WRITE(NW) NBU,IGM,I2DB,NVAR,ITL
      WRITE( 6,120) NBU,IGM,I2DB,NVAR,ITL
  120 FORMAT(5I3)
C
      READ(1,130) ULOAD
      WRITE(NW) ULOAD
  130 FORMAT(1PE12.5)
C
      NBL=NVAR/NBU
      NUMX=ITL*IGM
C
      DO 150 L=1,NBL
      READ(1,140) (BURN(L,N),N=1,NBU)
  140 FORMAT(1P6E12.5)
  150 CONTINUE
      WRITE(NW) ((BURN(L,N),L=1,NBL),N=1,NBU)
C
      DO 160 N=1,NUMX
      READ(1,140) (XSEC(K,N),K=1,NBU)
  160 CONTINUE
      WRITE(NW) ((XSEC(K,N),N=1,NUMX),K=1,NBU)
C
      NC=NC+1
      WRITE(6,170) NC
  170 FORMAT(1X,'****  FIM DO CONJUNTO ',I3,'  ****',/)
C
      GO TO 998
  999 RETURN
      END
C*****************************************************************
C
C                       ****** CONVERD ******
C
C******************************************************************
      subroutine autoCONVERD
C                 VERSAO REVISADO PARA MICRO 386 - NOV/92 - G.T.O.
      CHARACTER * 80 TITLE
      CHARACTER * 8 XID
      CHARACTER * 6 NAME
      CHARACTER * 4 DATE,DATEX,TIMEX
      DIMENSION BURN(60,60),XSEC(60,90)
      DIMENSION DATEX(3), TIMEX(2)
      DATA TITLE/'                    '/
      DATA DATEX/3*'    '/,TIMEX/2*'    '/
C
      OPEN (1,FILE='TWOLIB.DAT')
      OPEN (2,FILE='LINXS.BIN',FORM='UNFORMATTED')
C     TSECI = SECNDS(0.0)
      TSECI = 0.0
C      CALL DIA( DATEX )
C      CALL TIME( TIMEX )
      WRITE(6,600) DATEX, TIMEX
  600 FORMAT('1      CONVERD - ', 2A4, A1, ' - ', 2A4 )
      NW=2
      NC=0
C
  998 READ(NW,END=999) TITLE
      WRITE(1,100) TITLE
      WRITE( 6,610) TITLE
  100 FORMAT( A80 )
  610 FORMAT(1X, A80 )
C
      READ(NW) XID,NAME,DATE
      WRITE(1,110) XID,NAME,DATE
      WRITE( 6,115) XID,NAME,DATE
  110 FORMAT(A8,A6,A4)
  115 FORMAT(A8,3X,A6,3X,A4)
C
      READ(NW) NBU,IGM,I2DB,NVAR,ITL
      WRITE(1,120) NBU,IGM,I2DB,NVAR,ITL
      WRITE( 6,120) NBU,IGM,I2DB,NVAR,ITL
  120 FORMAT(5I3)
C
      READ(NW) ULOAD
      WRITE(1,130) ULOAD
  130 FORMAT(1PE12.5)
C
      NBL=NVAR/NBU
      NUMX=ITL*IGM
C
      READ(NW) ((BURN(L,N),L=1,NBL),N=1,NBU)
      DO 150 L=1,NBL
      WRITE(1,140) (BURN(L,N),N=1,NBU)
  140 FORMAT(1P6E12.5)
  150 CONTINUE
C
      READ(NW) ((XSEC(K,N),N=1,NUMX),K=1,NBU)
      DO 160 N=1,NUMX
      WRITE(1,140) (XSEC(K,N),K=1,NBU)
  160 CONTINUE
C
      NC=NC+1
      WRITE(6,170) NC
  170 FORMAT(1X,'****  FIM DO CONJUNTO ',I3,'  ****',/)
C
      GO TO 998
C 999 TSECF = SECNDS(0.0) - TSECI
  999 TSECF = 0.0
      WRITE(6,620) TSECF
  620 FORMAT('0      CONVERD - TOTAL TIME = ', F7.0, ' SECS.')
      return
      END
C     SUBROUTINE DIA( X )
C     DIMENSION X(3)
C     CALL DATE(X)
C     RETURN
C     END
C*****************************************************************
C
C                       ****** CONVERB ******
C==================================================================
C     INPUT modificado 08/09 para o arquivo construido pelo ELEMEN2DB
C
C******************************************************************
      subroutine autoCONVERB
C                 VERSAO REVISADO PARA MICRO 386 - NOV/92 - G.T.O.
      CHARACTER * 80 TITLE
      CHARACTER * 8 XID
      CHARACTER * 6 NAME
      CHARACTER * 4 DATE,DATEX,TIMEX
      DIMENSION BURN(60,60),XSEC(60,90)
      DIMENSION DATEX(3), TIMEX(2)
      DATA TITLE/'                    '/
      DATA DATEX/3*'    '/,TIMEX/2*'    '/
C
      OPEN (1,FILE='INP2A2DB.DAT')
      OPEN (2,FILE='TWODB.LIB',FORM='UNFORMATTED')
C      TSECI = SECNDS(0.0)
      TSECI = 0.0
C      CALL DIA( DATEX )
C      CALL TIME( TIMEX )
      WRITE(6,600) DATEX, TIMEX
  600 FORMAT('1      CONVERB - ', 2A4, A1, ' - ', 2A4 )
      NW=2
      NC=0
C
  998 READ(1,100,END=999) TITLE
      WRITE(NW) TITLE
      WRITE( 6,610) TITLE
  100 FORMAT( A80 )
  610 FORMAT(1X, A80 )
C
      READ(1,110) XID,NAME,DATE
      WRITE(NW) XID,NAME,DATE
      WRITE( 6,115) XID,NAME,DATE
  110 FORMAT(A8,A6,A4)
  115 FORMAT(A8,3X,A6,3X,A4)
C
      READ(1,120) NBU,IGM,I2DB,NVAR,ITL
      WRITE(NW) NBU,IGM,I2DB,NVAR,ITL
      WRITE( 6,120) NBU,IGM,I2DB,NVAR,ITL
  120 FORMAT(5I3)
C
      READ(1,130) ULOAD
      WRITE(NW) ULOAD
  130 FORMAT(1PE12.5)
C
      NBL=NVAR/NBU
      NUMX=ITL*IGM
C
      DO 150 L=1,NBL
      READ(1,140) (BURN(L,N),N=1,NBU)
  140 FORMAT(1P6E12.5)
  150 CONTINUE
      WRITE(NW) ((BURN(L,N),L=1,NBL),N=1,NBU)
C
      DO 160 N=1,NUMX
      READ(1,140) (XSEC(K,N),K=1,NBU)
  160 CONTINUE
      WRITE(NW) ((XSEC(K,N),N=1,NUMX),K=1,NBU)
C
      NC=NC+1
      WRITE(6,170) NC
  170 FORMAT(1X,'****  FIM DO CONJUNTO ',I3,'  ****',/)
C
      GO TO 998
C 999 TSECF = SECNDS(0.0) - TSECI
  999 TSECF = 0.0
      WRITE(6,620) TSECF
  620 FORMAT('0      CONVERB - TOTAL TIME = ', F7.0, ' SECS.')
      return
      END
C      SUBROUTINE DIA( X )
C      DIMENSION X(3)
C      CALL DATE(X)
C      RETURN
C      END
      SUBROUTINE TWODBU
C VERSAO ADAPTADA PARA MICRO PC - COMPILADOR FORTRAN LAHEY 5.2 - JUL/99.
C
C        2222222   DDDDDD    BBBBBB             UU   UU   M     M
C        22   22   DD   DD   BB   BB            UU   UU   MM   MM
C            22    DD   DD   BB   BB            UU   UU   MMM MMM
C           22     DD   DD   BBBBBB     ===     UU   UU   MM M MM
C          22      DD   DD   BB   BB            UU   UU   MM   MM
C        22        DD   DD   BB   BB            UU   UU   MM   MM
C        2222222   DDDDDD    BBBBBB              UUUUU    MM   MM
C
C$======================================================================
C
C         UNIVERSITY OF MICHIGAN NUCLEAR ENGINEERING REACTOR DESIGN CODE
C                      2-D DIFFUSION WITH MACROSCOPIC DEPLETION
C                      WITH INTERNAL BLACKNESS AND EDGE CALCULATIONS. 
C                               VERSION # 10 (SEPT,86)
C
C    SEPT/86 - ORIGINALLY VERSION#7 SENT TO ANL. THE ANL IMPLEMENTED
C               FOR IBM AND VAX MACHINES, IN FORTRAN 77.
C
C               IT RUNS WELL WITH FEW MODIFICATIONS IN MTS(FORTRAN77) 
C
C$======================================================================
C
C        MAIN PROGRAM
C
C-----------------------------------------------------------------------
      CHARACTER*4 FMTTIT,FMTDSH,FMTEQL,FMTAST,FMTSP2,FMTSP3 
      CHARACTER * 8 A, B, C, D, E, F, G 
      COMMON /HEAD/ A(7), B(7), C(7), D(7), E(7), F(7), G(7)
      COMMON/UNITS/ DATIM(3), TIMEI,  KSTEP, NINP, NOUT, NDUMP,
     !           NFLUX1,NSORCE,NBULIB,NCXS,NGUESS,NSCRAT
      COMMON/UNIT1/ FMTTIT(13),
     !           FMTDSH(4),FMTEQL(4),FMTAST(4),FMTSP2(2),FMTSP3(2)
      CHARACTER*4 ID
      COMMON /UNIT3/ ID(20)
C-----------------------------------------------------------------------
      COMMON /BLOC/ 
     ! IREGAD,IEVTYP,ISERCH,  NGPS,NXDOWN,NXCARD,NXTAPE,IGUESS,
     ! MOUTER,MINNER,IALDIR,IOVLAY, IGEOM,    IM,    JM,NZONES,
     !   NMAT,NMIXCD,  IBCL,  IBCR,  IBCT,  IBCB,NIZDEL,NJZDEL,
     !   NPRT,NLIBMT,NBUSTP,IXSTRT,IXEMIC, IEDIT,IGPBUK,IDUP17,
     !  JDUM2, JDUM3, JDUM4, JDUM5,    EV,   EVM, PAREV,  BUCK,
     !   ALAL,  ALAH,   EPS,EPSPAR,EPSFLX,   POD,   ORF, POWER,
     ! FISMEV, XMWFA, ORFFS,ABLYVO,  DUM3,  DUM4, 
     ! KOUTER,KINNER,KGROUP,KIITOT, KPAGE,   K07, KDUM1, KDUM2,
     ! IBUCON,IGEOMP,   IMP,   JMP, NGPSP,NZONEP,NXSETS,IDETED,
     !  NSHUF,IBATCH,KONFLX,KONSCH,IALPHA,IDELTA,NEWOLD, IPBAR,
     !  ISBAR,  IMJM,   IHS,   IHT,   ITL,  ITL1,MAXMIN,MAXSEC,
     !  ITEMP,   MGC,  MPIC,  MPJC,ITEMP1,ITEMP2,  NUMX,IBEGIN,
     !     IP,    JP, NGOTO, INVDIR,NGPS2,NBUMAX,  NVAR, KNEG0,
     !    ALA,  ALAP, ALAPP,  ALAR,FLXCHM,   DAY,  DELT,    EQ,
     !   EVPP,   E01,   E02,   E03,  ORFP,CHISUM,  TOTV,  TEMP,
     !  TEMP2, TEMP3, TEMP4,    TI,FISSEN,SFISSP,ALFABS,GPSORS,
     !    EVP, TEMP1,FLXCHG,SERR2P,ESTKHI,ESTKLO,XTRAPK,ESTDOM
C-----------------------------------------------------------------------
      COMMON/POINT/  LPT(3),
     !        LR0,   LZ0,LIZONE,LIZMAT,LMATID,   LED,LCHIIN, LMIXN,
     !     LMIXMT,LDENMT,    LC, LCARD,  LGAM,LBMWDT,LBUPER,LVELOC,
     !       LIR2,   LR3,  LJZ2,   LZ3,   LR5,   LZ5, LFIDO,   LZ1,
     !        LR4,   LZ4,   LA0,   LA1,   LV0,  LVOL,LFLXVL,LFLUX1,
     !     LFLUX2,LFISS1,LFISS2,  LBAL, LSORS,LCHIEF, LBURN,LDENXE,
     !      LDENI,LXEABS,LULOAD,  LCXS,  LCXR,  LCXT,   LPA,  LNBU,
     !       LPED,  LTED,  LVED, LXSEC,  LXID,   LR1,  LAST 
C
C*** POINTERS UP TO LZ5 MUST NOT BE REARRANGED - THE ARRAY IDENTIFIERS
C*** IN THE FIDO INPUT ASSUME THAT THEY ARE IN THE ABOVE ORDER AND
C*** POSITION.  NEW ARRAYS TO BE INPUT BY FIDO SHOULD HAVE THEIR POINTER
C*** INSERTED IMMEDIATELY AFTER LZ5 AND THE STORAGE FOR NEW ARRAYS
C*** TO BE INPUT BY FIDO SHOULD CONTIGUOUSLY FOLLOW THAT FOR ARRAY Z5 
C
C-----------------------------------------------------------------------
      COMMON /BURNIN/ L91,L92,L93,L94,
     !                KBUCON,  KPRT,NOTUSD,KXSTRT,KDUP17,
     !                KREGAD,    K7,    K8,    K9,   K10,
     !                 BDELT,BPOWFC,    B3,    B4,    B5,
     !                    B6,    B7,    B8,    B9,   B10,
     !                KZM(2,50),
     !                EVS(152),           DAYS(152),
     !                DELTS(152),NSHUFS(152),POWERS(152)
      CHARACTER*4 STEPS
      COMMON /BURNI1/ STEPS(152)
C-----------------------------------------------------------------------
      INTEGER BASE
C
C     THE ARRAYS T(2) AND DATIM(3) ARE INTENDED FOR TIME AND DATE
C
      DIMENSION T(2)
CIBM        NO IBM *** 120000 ***
CEXP  FIXED DIMENSION 20000 - SEE ERROR STOP FOR STORAGE EXCEEDED
      DIMENSION  STORE(600000)
C-----------------------------------------------------------------------
      CHARACTER * 80 LINE
C-----------------------------------------------------------------------
      COMMON /ARRAY/  STORE
C-----------------------------------------------------------------------
C
CFILES AND UNITS
C
      OPEN(UNIT=3,FILE='FORT.3',STATUS='SCRATCH',FORM='UNFORMATTED')
      OPEN(UNIT=4,FILE='FORT.4',STATUS='SCRATCH',FORM='UNFORMATTED')
      OPEN(UNIT=5,FILE='inp3twodb.dat',STATUS='OLD',FORM='FORMATTED')
      OPEN(UNIT=6,FILE='out1twodb.out')
      OPEN(UNIT=8,FILE='FORT.8',STATUS='SCRATCH',FORM='UNFORMATTED')
      OPEN(UNIT=9,FILE='FORT.9',STATUS='SCRATCH',FORM='UNFORMATTED')
      OPEN(UNIT=10,FILE='FORT.10',STATUS='SCRATCH',FORM='UNFORMATTED')
      OPEN(UNIT=14,FILE='FORT.14',STATUS='SCRATCH',FORM='UNFORMATTED')
      OPEN(UNIT=15,FILE='TWODB.LIB',STATUS='OLD',FORM='UNFORMATTED')
      OPEN(UNIT=17,FILE='FORT.17',STATUS='SCRATCH')
      OPEN(UNIT=18,FILE='FORT.18',STATUS='SCRATCH',FORM='UNFORMATTED')
      OPEN(UNIT=19,FILE='FORT.19',STATUS='SCRATCH',FORM='UNFORMATTED')
      OPEN(UNIT=20,FILE='FORT.20',STATUS='SCRATCH',FORM='UNFORMATTED')
      OPEN(UNIT=22,FILE='FORT.21',STATUS='SCRATCH',FORM='UNFORMATTED')
      OPEN(UNIT=30,FILE='TWODB30.BIN',FORM='UNFORMATTED')
      OPEN(UNIT=55,FILE='FORT.55',STATUS='SCRATCH')
C-----------------------------------------------------------------------
C
C**** LER COMENTARIOS NA SUBROTINA LERDAT ****
	CALL LERDAT
C
C
C   TITLE PAGE, HEADING, LIST DATA FILE
C
      WRITE(NOUT,10) A,B,C,D,E,F,G
   10 FORMAT('1'/(35X,7A8))
      IBATCH=0
C     TIMEI = SECNDS(0.0)
      TIMEI = 0.0
      CALL DATE( DATIM )
      CALL TIME( T )
      WRITE(NOUT,80) DATIM, T
   80 FORMAT('-',35X,'*** INPUT DATA ***',6X,3A4,5X,2A4///)
      IF(IBATCH.EQ.1) GO TO 205
      NUM = 1
   90 CONTINUE
         READ(NINP,100,END=200) LINE
  100    FORMAT(A80 )
         WRITE(NOUT,110) NUM, LINE
  110    FORMAT(25X,I5,5X,A80 )
         NUM = NUM + 1
      GO TO 90
  200 CONTINUE
      REWIND NINP
      IBATCH=1
  205 CONTINUE
C-----------------------------------------------------------------------
C    ***INPSET IS AN ENTRY IN 'INPUT', READS DIMENSION INFO***
C    ***NUMWDS IS SET BY 'INPSET'***
C-----------------------------------------------------------------------
C
    1 CALL INPSET(NUMWDS)
C
      IF(NUMWDS.GT.600000) WRITE(NOUT,2000) NUMWDS
 2000 FORMAT(1H1,'THE STORAGE REQUEST FOR',I6,' WORDS EXCEEDS LIMIT')
      IF(NUMWDS.GT.600000) GO TO 999
C
       BASE=0
C
      PRINT 50, NUMWDS
   50 FORMAT(1X, I8, ' WORDS ALLOCATED')
C-----------------------------------------------------------------------
C     CALL 2DB, RELEASE STORAGE WHEN DONE
C
      CALL TWODB(  STORE( BASE+1),NUMWDS )
C
c      GO TO 1
C-----------------------------------------------------------------------
C     Return abaixo foi acrescentado para evitar a msg de erro sem dar o
C     erro quando o programa finalizava
      return
C     STOP IF ANY STORAGE ALLOCATION ERRORS OCCURRED ]]]
  999 PRINT 1000
 1000 FORMAT( '0***ERROR FROM ARRAY MANAGEMENT ROUTINES***'/
     !   ' EXECUTION TERMINATED--CHECK INPUT DATA & PROGRAM')
C

      return
      END
C
C **** ESTA SUBROTINA LEH OS DADOS DE ENTRADA NO FILE 5 E GRAVA  ****
C **** NO FILE 55. FEZ-SE NINP=55 (VER BLOCK DATA XYZABC).       ****
C
	SUBROUTINE LERDAT
C
	CHARACTER*80 DADOS
C
   10	READ(5,20,END=30) DADOS
   20 FORMAT(A80)
	WRITE(55,20) DADOS
      GO TO 10
   30 REWIND 55
	RETURN
	END
C
C$ TWODB ===============================================================
      SUBROUTINE TWODB(A,NUMWDS)
C
      DIMENSION A(1)
C-----------------------------------------------------------------------
      CHARACTER*4 FMTTIT,FMTDSH,FMTEQL,FMTAST,FMTSP2,FMTSP3
      COMMON/UNITS/ DATIM(3), TIMEI,  KSTEP, NINP, NOUT, NDUMP,
     !           NFLUX1,NSORCE,NBULIB,NCXS,NGUESS,NSCRAT
      COMMON/UNIT1/ FMTTIT(13),
     !           FMTDSH(4),FMTEQL(4),FMTAST(4),FMTSP2(2),FMTSP3(2)
      CHARACTER*4 ID
      COMMON /UNIT3/ ID(20)
C-----------------------------------------------------------------------
      COMMON /BLOC/
     ! IREGAD,IEVTYP,ISERCH,  NGPS,NXDOWN,NXCARD,NXTAPE,IGUESS,
     ! MOUTER,MINNER,IALDIR,IOVLAY, IGEOM,    IM,    JM,NZONES,
     !   NMAT,NMIXCD,  IBCL,  IBCR,  IBCT,  IBCB,NIZDEL,NJZDEL,
     !   NPRT,NLIBMT,NBUSTP,IXSTRT,IXEMIC, IEDIT,IGPBUK,IDUP17,
     !  JDUM2, JDUM3, JDUM4, JDUM5,    EV,   EVM, PAREV,  BUCK,
     !   ALAL,  ALAH,   EPS,EPSPAR,EPSFLX,   POD,   ORF, POWER,
     ! FISMEV, XMWFA, ORFFS,ABLYVO,  DUM3,  DUM4,
     ! KOUTER,KINNER,KGROUP,KIITOT, KPAGE,   K07, KDUM1, KDUM2,
     ! IBUCON,IGEOMP,   IMP,   JMP, NGPSP,NZONEP,NXSETS,IDETED,
     !  NSHUF,IBATCH,KONFLX,KONSCH,IALPHA,IDELTA,NEWOLD, IPBAR,
     !  ISBAR,  IMJM,   IHS,   IHT,   ITL,  ITL1,MAXMIN,MAXSEC,
     !  ITEMP,   MGC,  MPIC,  MPJC,ITEMP1,ITEMP2,  NUMX,IBEGIN,
     !     IP,    JP, NGOTO, INVDIR,NGPS2,NBUMAX,  NVAR, KNEG0,
     !    ALA,  ALAP, ALAPP,  ALAR,FLXCHM,   DAY,  DELT,    EQ,
     !   EVPP,   E01,   E02,   E03,  ORFP,CHISUM,  TOTV,  TEMP,
     !  TEMP2, TEMP3, TEMP4,    TI,FISSEN,SFISSP,ALFABS,GPSORS,
     !    EVP, TEMP1,FLXCHG,SERR2P,ESTKHI,ESTKLO,XTRAPK,ESTDOM
C-----------------------------------------------------------------------
      COMMON/POINT/  LPT(3),
     !        LR0,   LZ0,LIZONE,LIZMAT,LMATID,   LED,LCHIIN, LMIXN,
     !     LMIXMT,LDENMT,    LC, LCARD,  LGAM,LBMWDT,LBUPER,LVELOC,
     !       LIR2,   LR3,  LJZ2,   LZ3,   LR5,   LZ5, LFIDO,   LZ1,
     !        LR4,   LZ4,   LA0,   LA1,   LV0,  LVOL,LFLXVL,LFLUX1,
     !     LFLUX2,LFISS1,LFISS2,  LBAL, LSORS,LCHIEF, LBURN,LDENXE,
     !      LDENI,LXEABS,LULOAD,  LCXS,  LCXR,  LCXT,   LPA,  LNBU,
     !       LPED,  LTED,  LVED, LXSEC,  LXID,   LR1,  LAST
C
C*** POINTERS UP TO LZ5 MUST NOT BE REARRANGED - THE ARRAY IDENTIFIERS
C*** IN THE FIDO INPUT ASSUME THAT THEY ARE IN THE ABOVE ORDER AND
C*** POSITION.  NEW ARRAYS TO BE INPUT BY FIDO SHOULD HAVE THEIR POINTER
C*** INSERTED IMMEDIATELY AFTER LZ5 AND THE STORAGE FOR NEW ARRAYS
C*** TO BE INPUT BY FIDO SHOULD CONTIGUOUSLY FOLLOW THAT FOR ARRAY Z5
C
C--------------- COMMON BLOCK -BLACKREGION --------------------------
      COMMON/PTBLK/  LCXLK,LPBLK
C
C--------------- COMMON BLOCK -EDGE FLUXES --------------------------
      COMMON/PTFLX/  LFLX2H,LFLX2V,LFLX1H,LFLX1V,NFLXVH,LEDG,LPEAK
C
C-----------------------------------------------------------------------
C
      CALL INPGO( A,NUMWDS )
C
102   CALL INIT( A(LCHIEF), A(LCHIIN),  A(LMIXN), A(LMIXMT), A(LDENMT),
     !           A(LIZONE), A(LIZMAT), A(LFLUX1),    A(LR0),    A(LR1),
     !             A(LIR2),    A(LR3),    A(LR4),    A(LR5),    A(LZ0),
     !              A(LZ1),   A(LJZ2),    A(LZ3),    A(LZ4),    A(LZ5),
     !              A(LA0),    A(LA1), A(LFISS1),    A(LV0), A(LVELOC),
     !             A(LGAM),  A(LXSEC),  A(LBURN), A(LFISS2),     A(LC),
     !           A(LDENXE),  A(LDENI),            A(LXEABS), A(LBUPER),
     !           A(LBMWDT), A(LMATID), A(LULOAD),   A(LXID),   A(LBAL),
     !             A(LVOL), A(LFLXVL)  ,A(LNBU)  )
C
      CALL FISCAL( A(LFLUX1), A(LFISS1), A(LV0), A(LC), A(LCHIEF),
     !             A(LIZONE), A(LIZMAT), A(LBAL) )
C
C     CALL MONITOR PRINT
C
101   CALL S8830
C
      GO TO (100, 106, 106, 107), NGOTO
C
106   CALL ERRO2('*MONPR',106,1)
C
C     PERFORM AN OUTER ITERATION
C
107   CALL OUTER(    A(LA0),    A(LA1),     A(LC), A(LFISS1), A(LCHIEF),
     !            A(LIZONE), A(LIZMAT), A(LFLUX1), A(LFLUX2),  A(LSORS),
     !               A(LV0), A(LVELOC),    A(LZ5), A(LFISS2),   A(LCXS),
     !               A(LR5),    A(LR4),    A(LZ4),   A(LCXR),   A(LCXT),
     #            A(LCXLK),
     !               A(LPA),   A(LGAM),   A(LBAL))
C
C     PERFORM FISSION CALCULATION
C
      CALL FISCAL( A(LFLUX1), A(LFISS1), A(LV0), A(LC), A(LCHIEF),
     !             A(LIZONE), A(LIZMAT), A(LBAL) )
C
C     PERFORM CONVERGENCE AND NEW PARAMETER CALCULATIONS
C
      CALL CNNP( A(LFISS2), A(LCHIEF), A(LBAL) )
C
      GO TO (100, 101, 102), NGOTO
C
C     100/101/102=FINAL PRINT/MONITOR PRINT/SEARCH CALCULATION
C
100   CALL S8850( A(LFISS2), A(LFLUX2),    A(LR1),    A(LZ1),    A(LR4),
     !               A(LZ4),    A(LR5),    A(LZ5),     A(LC), A(LFLUX1),
     !            A(LIZONE), A(LIZMAT), A(LFISS1),    A(LV0),    A(LED),
     !              A(LTED),   A(LVED),   A(LBAL),   A(LVOL), A(LFLXVL),
     !              A(LPED),   A(LGAM), A(LCHIIN),
     #            A(LFLX2H), A(LFLX2V),   A(LEDG),  A(LPEAK),
     #            A(LFLX1H), A(LFLX1V), A(LCXLK) , A(LPBLK)  )
C
      CALL INPB( A(LIZMAT), A(LIZONE), A(LFLUX1), A(LED) )
C
      IF(IBUCON.NE.0) GO TO 102
C
C      NEXT CASE GOES TO HERE, RETURN TO MAIN PROGRAM
C
      RETURN
      END
C$ BLOCK ===============================================================
      BLOCK DATA XYZABC
C-----------------------------------------------------------------------
      CHARACTER*8 A,B,C,D,E,F,G
      CHARACTER*4 FMTTIT,FMTDSH,FMTEQL,FMTAST,FMTSP2,FMTSP3
      COMMON/UNITS/ DATIM(3), TIMEI,  KSTEP, NINP, NOUT, NDUMP,
     !           NFLUX1,NSORCE,NBULIB,NCXS,NGUESS,NSCRAT
      COMMON/UNIT1/ FMTTIT(13),
     !           FMTDSH(4),FMTEQL(4),FMTAST(4),FMTSP2(2),FMTSP3(2)
      CHARACTER*4 ID
      COMMON /UNIT3/ ID(20)
C-----------------------------------------------------------------------
      COMMON /HEAD/ A(7), B(7), C(7), D(7), E(7), F(7), G(7)
C-----------------------------------------------------------------------
      DATA  NINP,NOUT,NDUMP,NFLUX1,NSORCE,NBULIB,NCXS,NGUESS,NSCRAT/
     !        55,   6,   18,     8,     9,    15,  19,    14,     4/
C
      DATA   KSTEP/ 1 /
C
      DATA
     !  FMTTIT/'(11H','1<2D','BUM#','10>,','2X,2','0A4,','3X,3','A4,3',
     !  'X,6H','<STE','P#,I','3,1H','>)  '/,
     !  FMTDSH/'(1X,','130(','1H-)',')   '/,
     !  FMTEQL/'(1X,','130(','1H=)',')   '/,
     !  FMTAST/'(1X,','130(','1H*)',')   '/,
     !  FMTSP2/'(1H0',')   '/,     FMTSP3/'(1H-',')   '/
C
      DATA
     !A/'2222222 ','  DDDDDD','    BBBB','BB      ','       U',
     !  'U   UU  ',' M     M'/,
     !B/'22   22 ','  DD   D','D   BB  ',' BB     ','       U',
     !  'U   UU  ',' MM   MM'/,
     !C/'    22  ','  DD   D','D   BB  ',' BB     ','       U',
     !  'U   UU  ',' MMM MMM'/,
     !D/'   22   ','  DD   D','D   BBBB','BB     =','==     U',
     !  'U   UU  ',' MM M MM'/,
     !E/'  22    ','  DD   D','D   BB  ',' BB     ','       U',
     !  'U   UU  ',' MM   MM'/,
     !F/'22      ','  DD   D','D   BB  ',' BB     ','       U',
     !  'U   UU  ',' MM   MM'/,
     !G/'2222222 ','  DDDDDD','    BBBB','BB      ','        ',
     !  'UUUUU   ',' MM   MM'/
C
      END
C$ INPUT ===============================================================
C
C     ENTRY POINT 'INPSET' READS CONTROL PARAMETERS NEEDED
C          TO ALLOCATE MEMORY.
C     ENTRY POINT 'INPGO' READS ARRAY INPUT.
C
      SUBROUTINE INPUT
C
C-----------------------------------------------------------------------
      DIMENSION A(1)
C-----------------------------------------------------------------------
      COMMON/UNITS/ DATIM(3), TIMEI,  KSTEP, NINP, NOUT, NDUMP,
     !           NFLUX1,NSORCE,NBULIB,NCXS,NGUESS,NSCRAT
      CHARACTER*4 FMTTIT,FMTDSH,FMTEQL,FMTAST,FMTSP2,FMTSP3
      COMMON/UNIT1/FMTTIT(13),
     !           FMTDSH(4),FMTEQL(4),FMTAST(4),FMTSP2(2),FMTSP3(2)
      CHARACTER*4 ID
      COMMON /UNIT3/ ID(20)
C-----------------------------------------------------------------------
      COMMON /BLOC/
     ! IREGAD,IEVTYP,ISERCH,  NGPS,NXDOWN,NXCARD,NXTAPE,IGUESS,
     ! MOUTER,MINNER,IALDIR,IOVLAY, IGEOM,    IM,    JM,NZONES,
     !   NMAT,NMIXCD,  IBCL,  IBCR,  IBCT,  IBCB,NIZDEL,NJZDEL,
     !   NPRT,NLIBMT,NBUSTP,IXSTRT,IXEMIC, IEDIT,IGPBUK,IDUP17,
     !  JDUM2, JDUM3, JDUM4, JDUM5,    EV,   EVM, PAREV,  BUCK,
     !   ALAL,  ALAH,   EPS,EPSPAR,EPSFLX,   POD,   ORF, POWER,
     ! FISMEV, XMWFA, ORFFS,ABLYVO,  DUM3,  DUM4,
     ! KOUTER,KINNER,KGROUP,KIITOT, KPAGE,   K07, KDUM1, KDUM2,
     ! IBUCON,IGEOMP,   IMP,   JMP, NGPSP,NZONEP,NXSETS,IDETED,
     !  NSHUF,IBATCH,KONFLX,KONSCH,IALPHA,IDELTA,NEWOLD, IPBAR,
     !  ISBAR,  IMJM,   IHS,   IHT,   ITL,  ITL1,MAXMIN,MAXSEC,
     !  ITEMP,   MGC,  MPIC,  MPJC,ITEMP1,ITEMP2,  NUMX,IBEGIN,
     !     IP,    JP, NGOTO, INVDIR,NGPS2,NBUMAX,  NVAR, KNEG0,
     !    ALA,  ALAP, ALAPP,  ALAR,FLXCHM,   DAY,  DELT,    EQ,
     !   EVPP,   E01,   E02,   E03,  ORFP,CHISUM,  TOTV,  TEMP,
     !  TEMP2, TEMP3, TEMP4,    TI,FISSEN,SFISSP,ALFABS,GPSORS,
     !    EVP, TEMP1,FLXCHG,SERR2P,ESTKHI,ESTKLO,XTRAPK,ESTDOM
C-----------------------------------------------------------------------
      COMMON/POINT/  LPT(3),
     !        LR0,   LZ0,LIZONE,LIZMAT,LMATID,   LED,LCHIIN, LMIXN,
     !     LMIXMT,LDENMT,    LC, LCARD,  LGAM,LBMWDT,LBUPER,LVELOC,
     !       LIR2,   LR3,  LJZ2,   LZ3,   LR5,   LZ5, LFIDO,   LZ1,
     !        LR4,   LZ4,   LA0,   LA1,   LV0,  LVOL,LFLXVL,LFLUX1,
     !     LFLUX2,LFISS1,LFISS2,  LBAL, LSORS,LCHIEF, LBURN,LDENXE,
     !      LDENI,LXEABS,LULOAD,  LCXS,  LCXR,  LCXT,   LPA,  LNBU,
     !       LPED,  LTED,  LVED, LXSEC,  LXID,   LR1,  LAST
C
C----------------COMMON BLOCK -BLACKREGION---------------------------
      COMMON/PTBLK/  LCXLK,LPBLK
C
C--------------- COMMON BLOCK -EDGE FLUXES --------------------------
      COMMON/PTFLX/  LFLX2H,LFLX2V,LFLX1H,LFLX1V,NFLXVH,LEDG,LPEAK
C
C--------------------------------------------------------------------
C
C*** POINTERS UP TO LZ5 MUST NOT BE REARRANGED - THE ARRAY IDENTIFIERS
C*** IN THE FIDO INPUT ASSUME THAT THEY ARE IN THE ABOVE ORDER AND
C*** POSITION.  NEW ARRAYS TO BE INPUT BY FIDO SHOULD HAVE THEIR POINTER
C*** INSERTED IMMEDIATELY AFTER LZ5 AND THE STORAGE FOR NEW ARRAYS
C*** TO BE INPUT BY FIDO SHOULD CONTIGUOUSLY FOLLOW THAT FOR ARRAY Z5
C
C$ INPSET ==============================================================
      ENTRY INPSET(NUMWDS)
C
C     GETS POINTERS AND MEMORY SIZE FOR MAIN ARRAY
C
C     THIS SUBROUTINE CONTROLS THE READING OF ALL INPUT DATA
C
      REWIND 4
      REWIND 8
C
      READ(NINP,30,END=425) ID
   30 FORMAT(20A4)
      PRINT 20
   20 FORMAT( ' *  *  *  *   2  D  B  -  U  M   *  *  *  *')
      WRITE(NOUT,FMTTIT) ID, DATIM, KSTEP
      PRINT 45,   ID
   45 FORMAT(1X, 20A4 )
C
C     READ INTEGER DATA
C
C     CLEAR OUT COMMON /BLOC/
C
      KBATCH = IBATCH
      CALL CLEARS(0, IREGAD, 134 )
      IBATCH = KBATCH
C
CFIDO-------------INPUT 1$ & 2* ARRAYS INTO /INPUT/
      KERROR = 0
      LPT(1) = 1
      LPT(2) = 37
      LPT(3) = 55
      CALL FIDAS( IREGAD, IREGAD, LPT(1), 1,KERROR,NINP,NOUT )
         IF(KERROR.NE.0) CALL ERRO2('  FIDO ', 1, 1 )
C
C     INTEGER DEFAULT VALUES
C
      IF(NMAT  .LE.0) NMAT=NXCARD+NXTAPE
      IF(MOUTER.LE.0) MOUTER=100
      IF(MINNER.LE.0) MINNER=2
      IF(NXDOWN.LE.0) NXDOWN=1
C
C ----- TRIANGULAR GEOMETRY - PERIODIC B.C. NOT ALLOWED --------------
C
      IF(IGEOM.LT.3) GO TO 46
      IF(IBCB.NE.2 ) GO TO 46
      IF(IBCT.NE.2 ) GO TO 46
      IBCB= 1
      IBCT= 1
      WRITE(NOUT,FMTEQL)
      WRITE(NOUT,47)
47    FORMAT('   PERIODIC BOUNDARY CONDITION NOT ALLOWED IN '
     # , 'TRIANGULAR GEOMETRY: CHANGED TO SYMMETRIC B.C. ' )
      WRITE(NOUT,FMTEQL)
46    CONTINUE
C
      WRITE(NOUT,52)   IREGAD, IEVTYP, ISERCH, NGPS, NXDOWN, NXCARD
C
52    FORMAT(/
     ! 1X,I11,'   IREGAD   0/1=REGULAR CALCULATION/ADJOINT CALCULATION'/
     ! 1X,I11,'   IEVTYP   EIGENVALUE TYPE  (0/1/2/3/4/5=SOURCE/KEFF/',
     !        'ALPHA/CONCENTRATION/DELTA/BUCKLING)' /
     ! 1X,I11,'   ISERCH   PARAMETRIC EIGENVALUE TYPE  (0/1/2=NONE/',
     !        'KEFF/ALPHA)'  /
     ! 1X,I11,'   NGPS     NUMBER OF GROUPS'  /
     ! 1X,I11,'   NXDOWN   NUMBER OF DOWNSCATTERING TERMS'  /
     ! 1X,I11,'   NXCARD   NUMBER OF MATERIALS FROM CARDS'    )
C
      WRITE(NOUT,54)  NXTAPE, IGUESS, MOUTER, MINNER, IALDIR, IOVLAY
C
54    FORMAT(
     ! 1X,I11,'   NXTAPE   NUMBER OF MATERIALS FROM TAPE ',
     !        '(INTERPOLATED)'  /
     ! 1X,I11,'   IGUESS   FLUX GUESS (0/1/2/3=NONE/X(R)*X(Z)/X(R,Z,E)',
     !        '/X(R,Z,E) FROM TAPE)'   /
     ! 1X,I11,'   MOUTER   OUTER ITERATION MAX'  /
     ! 1X,I11,'   MINNER   INNER ITERATION MAX PER GROUP'  /
     ! 1X,I11,'   IALDIR   INVERSION DIRECTION (0/1=NO EFFECT/',
     !        'ALTERNATE DIRECTIONS)'  /
     ! 1X,I11,'   IOVLAY   ZONE BY MESH PT. INPUT FORMAT ( 0/1 FIDO/',
     !        'OVERLAY)'     )
C
      WRITE(NOUT,56)  IGEOM, IM, JM, NZONES, NMAT, NMIXCD
C
56    FORMAT(
     ! 1X,I11,'   IGEOM    GEOMETRY  (0/1/2/3=X-Y/R-Z/R-THETA',
     !        '/TRIANGULAR)'  /
     ! 1X,I11,'   IM       NUMBER OF RADIAL INTERVALS'  /
     ! 1X,I11,'   JM       NUMBER OF AXIAL INTERVALS'   /
     ! 1X,I11,'   NZONES   NUMBER OF MATERIAL ZONES'    /
     ! 1X,I11,'   NMAT     TOTAL NUMBER OF MATERIALS INCLUDING MIXES'/
     ! 1X,I11,'   NMIXCD   NUMBER OF MIX COMMANDS'     )
C
      WRITE(NOUT,58)  IBCL, IBCR, IBCT, IBCB, NIZDEL, NJZDEL
C
58    FORMAT(
     ! 1X,I11,'   IBCL     LEFT   BOUNDARY CONDITION  (0/1=VACUUM/',
     !        'REFLECTIVE)'  /
     ! 1X,I11,'   IBCR     RIGHT  BOUNDARY CONDITION  (0/1=VACUUM/',
     !        'REFLECTIVE)'  /
     ! 1X,I11,'   IBCT     TOP    BOUNDARY CONDITION  (0/1/2=VACUUM/',
     !        'REFLECTIVE/PERIODIC)'  /
     ! 1X,I11,'   IBCB     BOTTOM BOUNDARY CONDITION  (0/1/2=VACUUM/',
     !        'REFLECTIVE/PERIODIC)'  /
     ! 1X,I11,'   NIZDEL   RADIAL ZONES  (DELTA-OPTION ONLY)'  /
     A 1X,I11,'   NJZDEL   AXIAL  ZONES  (DELTA-OPTION ONLY)'     )
C
      WRITE(NOUT,59)  NPRT, NLIBMT, NBUSTP,IXSTRT, IXEMIC, IEDIT
C
59    FORMAT(
     ! 1X,I11,'   NPRT     PRINT OUT  (0/1/2/3/.../20)           ' /
     ! 1X,I11,'   NLIBMT   NOT USED'  /
     ! 1X,I11,'   NBUSTP   NOT USED'  /
     ! 1X,I11,'   IXSTRT   OPTION FOR MICRO-XENON (-1/0/1  EQUIL/',
     !        'NORMAL/ZERO) (NOT USED ON INITIAL STEP)'  /
     ! 1X,I11,'   IXEMIC   XENON TAPE MAT OPTION (0/1 EQUIL MACRO',
     !        '/MICRO)'  /
     ! 1X,I11,'   IEDIT    REGION EDIT OPTIONS (-N/0/N  #EDIT REGIONS',
     !        '(OVERLAY)/NONE/#EDITS(FIDO, BY ZONES)'  )
C
      WRITE(NOUT,61)  IGPBUK
C
61    FORMAT(
     ! 1X,I11,'   IGPBUK   GROUP DEPENDENT BUCKLING (0/1  NO/YES)' /)
C
   60 FORMAT(6E12.6)
C
C     REAL DEFAULT VALUES
C
      IF(EPS.LE.0.0) EPS=2.0E-5
      IF(EV.LE.0.0)  EV=1.00
      IF(ALAL.LE.0.0.AND.ISERCH.NE.0) ALAL=.005
      IF(ALAH.LE.0.0.AND.ISERCH.NE.0) ALAH=.500
      IF(FISMEV.LE.0.0) FISMEV=195.0
      IF(ORF.LE.0.0) ORF=1.5
      IF(XMWFA.LE.0.0) XMWFA=1.0
C
      WRITE(NOUT, 62)  EV, EVM, PAREV, BUCK, ALAL, ALAH
 62   FORMAT(
     ! 1X,1PE11.4,'   EV       FIRST EIGENVALUE GUESS'/
     ! 1X,1PE11.4,'   EVM      EIGENVALUE MODIFIER' /
     ! 1X,1PE11.4,'   PAREV    PARAMETRIC EIGENVALUE' /
     ! 1X,1PE11.4,'   BUCK     BUCKLING (CM-2)' /
     ! 1X,1PE11.4,'   ALAL     LAMBDA LOWER' /
     ! 1X,1PE11.4,'   ALAH     LAMBDA UPPER'    )
C
      WRITE(NOUT, 64)   EPS, EPSPAR, EPSFLX, POD, ORF, POWER
 64   FORMAT(
     ! 1X,1PE11.4,'   EPS      EIGENVALUE CONVERGENCE CRITERION' /
     ! 1X,1PE11.4,'   EPSPAR   PARAMETER CONVERGENCE CRITERION' /
     ! 1X,1PE11.4,'   EPSFLX   INNER ITERATION TEST' /
     ! 1X,1PE11.4,'   POD      PARAMETER OSCILLATION DAMPER' /
     ! 1X,1PE11.4,'   ORF      OVER-RELAXATION FACTOR' /
     ! 1X,1PE11.4,'   POWER    NEGATIVE/POSITIVE=POWER (MWT)/',
     !            'NEUTRON SOURCE RATE'   )
C
      WRITE(NOUT, 66)   FISMEV, XMWFA, ORFFS, ABLYVO
 66   FORMAT(
     ! 1X,1PE11.4,'   FISMEV   MEV PER FISSION'  /
     ! 1X,1PE11.4,'   XMWFA    INPUT BURNUP ARRAY MODIFIER'  /
     ! 1X,1PE11.4,'   ORFFS    FISSION SOURCE OVER-RELAXATION FACTOR',
     !            '(DEFAULTS TO 1+.6*(ORF-1) IF ZERO)'/
     ! 1X,1PE11.4,'   ABLYVO   ASSEMBLY VOLUME (USED ONLY FOR OUTPUT')
C
      IF((NIZDEL + NJZDEL).EQ.0 .AND. IEVTYP.EQ.4)
     !                   CALL ERRO2 ('IEVTYP',220,1)
      IF(ISERCH.NE.0 .AND. PAREV.EQ.0)
     !                   CALL ERRO2 ('*PAREV',250,1)
C
      IXSTRT = 1
C                                               MUST START XE AT ZERO ]]
      FISSEN = FISMEV*1.602E-19
C
      MAXMIN = 0
      MAXSEC = MAXMIN*60
C
      KPAGE  = 100
      IHS    = 5
      ITL    = NXDOWN + 5
  125 IF(IXEMIC.NE.0 .AND. IXEMIC.NE.1) CALL ERRO2('INPSET',125,1)
C
C           ITL1 MUST ALLOW FOR XE MACRO & MICRO IN BULIB :
C
      ITL1   = ITL + 2
      NUMX   = ITL1*NGPS
      IHT    = 4
      NZONEP = NZONES + 1
      IP     = IM + 1
      JP     = JM + 1
      IF(NXTAPE.LT.0) NXTAPE=0
      IF(NXTAPE.EQ.0 .OR. NLIBMT.LT.0) NLIBMT=0
      NXSIN  = NXCARD + NXTAPE
      NGPSP  = NGPS + 1
      NGPS2  = NGPS + 2
      IGEOMP = IGEOM + 1
      IMJM   = IM*JM
C
C      SET MAX NUMBER OF BU STEPS AT 40 (MAX FROM LEO)
C
      NBUMAX = 40
      NVAR   = 10
C
      IF(IEVTYP.EQ.4) IDELTA = 1
      IF(IEVTYP.EQ.2 .OR. ISERCH.EQ.2) IALPHA = 1
  140 CONTINUE
C
      ORFP = ORF
C
C     COMPUTE DIMENSION POINTERS
C
      LR0    = 1
      LZ0    = LR0    + IP
      LIZONE = LZ0    + JP
      LIZMAT = LIZONE + IMJM
      LMATID = LIZMAT + NZONES
      LED    = LMATID + NXTAPE
                                 II = NZONES*IEDIT
                                 IF(IEDIT.LT.0) II = IMJM
      LCHIIN = LED    + II
      LMIXN  = LCHIIN + NGPS
      LMIXMT = LMIXN  + NMIXCD
      LDENMT = LMIXMT + NMIXCD
      LC     = LDENMT + NMIXCD
                                 LCARD = LC + ITL*NGPS*NXCARD
C                                    STORAGE FROM LC TO LCARD IS USED
C                                    ONLY TO INPUT CARD XSEC'S. THIS IS
C                                    OVERWRITTEN WHEN XSEC'S ARE REORDER
C                                    AND WHEN "TAPE" XSEC'S ARE INSERTED
      LGAM   = LC     + ITL*NGPS*NMAT
      LBMWDT = LGAM   + NZONES*( 1 + IGPBUK*(NGPS-1) )
      LBUPER = LBMWDT + NXTAPE
      LVELOC = LBUPER + NXTAPE
      LIR2   = LVELOC + NGPS*IALPHA
      LR3    = LIR2   + IM*IDELTA
      LJZ2   = LR3    + NIZDEL*IDELTA
      LZ3    = LJZ2   + JM*IDELTA
      LR5    = LZ3    + NJZDEL*IDELTA
      LZ5    = LR5    + IM
      LFIDO  = LZ5    + JM
C
      ITEMP  = LFIDO
C
C *** THE ORDER UP TO HERE SHOULD NOT BE CHANGED, SINCE THE ABOVE
C** POINTERS MUST MATCH THE FIDO ARRAY IDENTIFIERS.  THE ORDER AND
C** CONTIGUITY OF THE ABOVE STORAGE SHOULD BE MAINTAINED WHEN NEW
C** INPUT ARRAYS ARE ADDED-- INSERT POINTERS AND STORAGE FOR NEW
C** INPUT ARRAYS IMMEDIATELY AFTER THAT FOR THE "Z5" ARRAY. START
C** NEW FIDO ARRAY IDENTIFIERS WITH 25$ OR 25*.
C
C    THE NEXT TWO-- R1 AND Z1 HAVE THE SAME STORAGE AS
C    R0 AND Z0  IF IDELTA=0
C
      LR1    = LR0
      LZ1    = LZ0
                          IF(IDELTA.EQ.0) GO TO 150
                                LR1 = ITEMP
                                LZ1 = LR1 + IP
                                ITEMP = LZ1 + JP
  150 CONTINUE
C
      LR4    = ITEMP
      LZ4    = LR4    + IM
      LA0    = LZ4    + JM
      LA1    = LA0    + IP
      LV0    = LA1    + IM
      LVOL   = LV0    + IMJM
      LFLXVL = LVOL   + NZONEP
      LFLUX1 = LFLXVL + NZONEP*NGPS2
      LFLUX2 = LFLUX1 + IMJM
      LFISS1 = LFLUX2 + IMJM
      LFISS2 = LFISS1 + IMJM
      LBAL   = LFISS2 + IMJM
      LSORS  = LBAL   + 11*NGPSP
      LCHIEF = LSORS  + IMJM
      LDENXE = LCHIEF + NGPS
      LDENI  = LDENXE + NXTAPE*IXEMIC
      LXEABS = LDENI  + NXTAPE*IXEMIC
      LULOAD = LXEABS + NGPS*2*IXEMIC
      LNBU   = LULOAD + NXTAPE
      LCXLK  = LNBU   + NXTAPE
      ITEMP  = LCXLK  + IMJM
C
C-TEMP. STORAGE - OVERLAY#1
C
C  ------- ORIGINAL INDEX ALTERED TO INCLUDE LCXLK(LEAKAGE TERM FOR
C              REGIONS ADJACENT TO  A BLACK REGION       -------------
C
      LCXS   = ITEMP
      LCXR   = LCXS   + IMJM*3
      LCXT   = LCXR   + JM
      LPA    = LCXT   + IM
      LEND1  = LPA    + MAX0( IM,JM )
C
C     LCXS   = ITEMP
C     LCXR   = LCXS   + IMJM*3
C     LCXT   = LCXR   + JM
C     LPA    = LCXT   + IM
C     LEND1  = LPA    + MAX0( IM,JM )
C-TEMP STORAGE -- OVERLAY #2
CCCC  LPED   = ITEMP    CCCCCCCCHN
CCCC  ----------- ADDITION OF EDGE FLUXES -----------------------
                    LFLX2H = ITEMP
                    LFLX2V = LFLX2H + IMJM + IM
                    LFLX1H = LFLX2V + IMJM + JM
                    LFLX1V = LFLX1H + IMJM + IM
                    LEDG   = LFLX1V + IMJM + JM
                    LPEAK  = LEDG   + 4*IMJM
                    LPBLK  = LPEAK  + NZONEP*4
CCCC  ----------- ADDITION OF LEAK FROM/TO BLKRG ----------------
                    LPED   = LPBLK  + 3*NGPSP*NZONEP
C ---------------------------------------------------------------
                    LTED   = LPED + 16*NGPSP*NZONEP
      LVED   = LTED   - MIN0( IEDIT,0 )
      LEND2  = LVED   - MIN0( IEDIT,0 )
C-TEMP STORAGE -- OVERLAY#3
      LXSEC  = ITEMP
      LBURN  = LXSEC  + NBUMAX*NUMX
      LEND3  = LBURN  + NVAR*NBUMAX
C
      ITEMP  = MAX0( LEND1, LEND2, LEND3 )
C
C** XID IS REAL*8 -- IT STARTS ON A DOUBLEWORD BOUNDARY
C ======
      LXID   = 2*( (ITEMP+1)/2 )
C     LXID   =     (ITEMP+1)/2
C ======
      LAST   = LXID     + NXTAPE*2
C
C
  160 WRITE(NOUT,170)  LAST
  170 FORMAT(7H   LAST,I11)
C
      NUMWDS = LAST
C
      RETURN
C=======================================================================
C
C  THE REST OF THIS ROUTINE IS USED TO INPUT
C      THE ARRAY VARIABLES---USE A
C      TWO-PART SUBROUTINE SO THAT SPACE
C      CAN BE ALLOCATED FOR THE MAIN ARRAY.
C$ INPGO ===============================================================
C
      ENTRY INPGO( A,NUMWDS )
C
C
C-CLEAR OUT ALL STORAGE
C
      CALL CLEARS(0.0, A, NUMWDS )
C
C FIDO INPUT BLOCK#2-- ARRAYS 3* .... 23*
C
      WRITE(NOUT,FMTTIT) ID, DATIM, KSTEP
      KERROR = 0
      CALL FIDAS( A, A, LPT, 2, KERROR,NINP,NOUT )
         IF(KERROR.NE.0) CALL ERRO2('  FIDO ', 2,1)
C
      IF(IOVLAY.GT.0) CALL GEOM('ZONE', A(LIZONE) )
      IF(IEDIT.LT.0)  CALL GEOM('EDIT', A(LED)    )
C
C-READ CROSS SECTION BU-LIBRARY DATA & REORDER CARD XSEC'S
C
      CALL S860( A(LC), A(LC)    , A(LMATID), A(LBMWDT), A(LNBU),
     !         A(LXID), A(LULOAD), A(LBURN) , A(LXSEC) , A(LBUPER))
C
C-READ FLUXES AND WRITE FLUX TAPE
C
      CALL S862(A(LFLUX1), A(LFLUX2))
C
C-READ EXTERNAL SOURCE
C
      IF( IEVTYP.EQ.0 ) CALL S864( A(LSORS) )
C
C** FILL OUT ANY MISSING ENTRIES IN THE MESH BOUNDARY INPUT, USING
C** THE MESH INCREMENT INPUT (IF ANY).
C
      DO 350 I=1,IM
         I0P = LR0 + I
         I0  = I0P - 1
         I5  = LR5 - 1 + I
         IF( A(I0P) .GT. A(I0) )  GO TO 350
            IF( A(I5) .LE. 0.0 ) CALL ERRO2(' INPGO', 350,1)
            A(I0P) = A(I0) + A(I5)
  350 CONTINUE
C
      DO 360 J=1,JM
         J0P = LZ0 + J
         J0  = J0P - 1
         J5  = LZ5 - 1 + J
         IF( A(J0P) .GT. A(J0) ) GO TO 360
            IF( A(J5) .LE. 0.0 ) CALL ERRO2(' INPGO', 360,1)
            A(J0P) = A(J0) + A(J5)
  360 CONTINUE
C
C-END OF INPUT DATA, PRINT ZONE,MATERIAL,EDIT MAPS
C
      CALL MAPR( A(LIZONE), A(LIZMAT), A(LED), A(LFLUX1))
C
      RETURN
C-INPUT EOF STOP:
  425 return
C  425 STOP
      END
C$ INIT ================================================================
      SUBROUTINE INIT( CHIEFF,  CHIIN,   MIXN,  MIXMT,  DENMT,  IZONE,
     !                  IZMAT,  FLUX1,     R0,     R1,    IR2,     R3,
     !                     R4,     R5,     Z0,     Z1,    JZ2,     Z3,
     !                     Z4,     Z5,     A0,     A1,  FISS1,     V0,
     !                  VELOC,    GAM,   XSEC,   BURN,  FISS2,      C,
     !                  DENXE,   DENI,          XEABS,  BUPER,  BMWDT,
     !                  MATID,  ULOAD,    XID,    BAL,    VOL, FLXVOL,
     !                    NBU  )
      CHARACTER*8 XID
C-----------------------------------------------------------------------
      COMMON/UNITS/ DATIM(3), TIMEI,  KSTEP, NINP, NOUT, NDUMP,
     !           NFLUX1,NSORCE,NBULIB,NCXS,NGUESS,NSCRAT
      CHARACTER*4 FMTTIT,FMTDSH,FMTEQL,FMTAST,FMTSP2,FMTSP3
      COMMON/UNIT1/ FMTTIT(13),
     !           FMTDSH(4),FMTEQL(4),FMTAST(4),FMTSP2(2),FMTSP3(2)
      CHARACTER*4 ID
      COMMON /UNIT3/ ID(20)
C-----------------------------------------------------------------------
      COMMON /BLOC/
     ! IREGAD,IEVTYP,ISERCH,  NGPS,NXDOWN,NXCARD,NXTAPE,IGUESS,
     ! MOUTER,MINNER,IALDIR,IOVLAY, IGEOM,    IM,    JM,NZONES,
     !   NMAT,NMIXCD,  IBCL,  IBCR,  IBCT,  IBCB,NIZDEL,NJZDEL,
     !   NPRT,NLIBMT,NBUSTP,IXSTRT,IXEMIC, IEDIT,IGPBUK,IDUP17,
     !  JDUM2, JDUM3, JDUM4, JDUM5,    EV,   EVM, PAREV,  BUCK,
     !   ALAL,  ALAH,   EPS,EPSPAR,EPSFLX,   POD,   ORF, POWER,
     ! FISMEV, XMWFA, ORFFS,ABLYVO,  DUM3,  DUM4,
     ! KOUTER,KINNER,KGROUP,KIITOT, KPAGE,   K07, KDUM1, KDUM2,
     ! IBUCON,IGEOMP,   IMP,   JMP, NGPSP,NZONEP,NXSETS,IDETED,
     !  NSHUF,IBATCH,KONFLX,KONSCH,IALPHA,IDELTA,NEWOLD, IPBAR,
     !  ISBAR,  IMJM,   IHS,   IHT,   ITL,  ITL1,MAXMIN,MAXSEC,
     !  ITEMP,   MGC,  MPIC,  MPJC,ITEMP1,ITEMP2,  NUMX,IBEGIN,
     !     IP,    JP, NGOTO, INVDIR,NGPS2,NBUMAX,  NVAR, KNEG0,
     !    ALA,  ALAP, ALAPP,  ALAR,FLXCHM,   DAY,  DELT,    EQ,
     !   EVPP,   E01,   E02,   E03,  ORFP,CHISUM,  TOTV,  TEMP,
     !  TEMP2, TEMP3, TEMP4,    TI,FISSEN,SFISSP,ALFABS,GPSORS,
     !    EVP, TEMP1,FLXCHG,SERR2P,ESTKHI,ESTKLO,XTRAPK,ESTDOM
C-----------------------------------------------------------------------
      DIMENSION  CHIEFF(1),  CHIIN(1),   MIXN(1),  MIXMT(1),  DENMT(1),
     !              IR2(1),     R3(1),     R4(1),     R5(1),    Z0(JP),
     !               Z3(1),     Z4(1),     Z5(1),     A0(1),     A1(1),
     !           V0(IM,JM),  IZONE(1),  IZMAT(1),          FLUX1(IMJM),
     !             XSEC(1),   BURN(1),  FISS2(1),     C(ITL,NMAT,NGPS),
     !            DENXE(1),   DENI(1),  XEABS(1),  BUPER(1),
     !            MATID(1),  ULOAD(1),    XID(1), BAL(11,1),
     !              R0(IP),     R1(1),  FISS1(1),  VELOC(1),    GAM(1),
     !               Z1(1),    JZ2(1),  BMWDT(1),     VOL(NZONEP),
     !           FLXVOL(NGPS2,NZONEP),    NBU(1)
C-----------------------------------------------------------------------
      IF (KOUTER.NE.0) GO TO 270
      IF(NXTAPE.GT.0.AND.NPRT.GE.0) WRITE(NOUT,FMTTIT) ID, DATIM, KSTEP
         TEMP1=DAY*24.0
         TEMP2=DELT*24.0
         IF(NXTAPE.GT.0.AND.NPRT.GE.0)
     !   WRITE(NOUT,15)  DAY,TEMP1,DELT,TEMP2
15       FORMAT(1H0,40X,'T I M E  =',F8.3,' D A Y S  =',F12.3,
     !   ' H O U R S',/,41X,'D E L T  =',F8.3,' D A Y S  =',F12.3,
     !   ' H O U R S')
C
C-----------------------------------------------------------------------
C
C     MODIFY GEOMETRY
C                                    INIT. RMS ERROR IN FISS. SOURCE
C                                       (USED IN DOMINANCE RATIO EST)
      SERR2P = 0.0
      ESTKHI = 0.0
      ESTKLO = 0.0
      ESTDOM = 0.0
C
         IF(IBUCON.NE.0) GO TO 375
            DO 260  I=1,IP
260            R1(I)=R0(I)
            DO 265 J=1,JP
265            Z1(J)=Z0(J)
270   IF(IEVTYP.NE.4) GO TO 305
275      DO 280 I=1,IM
            K=IR2(I)
280         R1(I+1)=R1(I)+(R0(I+1)-R0(I))*(1.0+ EV*R3(K))
         DO 285 J=1,JM
            K=JZ2(J)
285         Z1(J+1)=Z1(J)+(Z0(J+1)-Z0(J))*(1.0+ EV*Z3(K))
      IF(IGEOM.EQ.2 .AND. ABS(Z1(JP)-1.0).LE.1.E-4)
     !      CALL ERRO2('**INIT',300,1)
305   CONTINUE
C
C     AREAS AND VOLUMES
C
      PI2=6.28318
      IF(KOUTER.NE.0 .AND. IEVTYP.NE.4) GO TO 375
         DO 345 I=1,IM
            R4(I)=(R1(I+1)+R1(I))*0.5
            R5(I)=R1(I+1)-R1(I)
            IF( R5(I).LE.0.0 )  CALL ERRO2 ('*R5(I)',320,1)
            GO TO (330,335,340,342), IGEOMP
330            A0(I)=1.0
                  A0(IP)=1.0
                  A1(I)=R5(I)
                  GO TO 345
335            A0(I)=PI2*R1(I)
                  A0(IP)=PI2*R1(IP)
                  A1(I)=PI2*R5(I)*R4(I)
                  GO TO 345
340            A0(I)=PI2*R1(I)
                  A0(IP)=PI2*R1(IP)
                  A1(I)=R5(I)
                  GO TO 345
342            A0(I) = 2.*R5(I)
                  A0(IP) = 2.*R5(I)
                  A1(I) = 2.*R5(I)
345      CONTINUE
C
         CALL CLEARS( 0.0, VOL, NZONEP )
C
         DO 370  J=1,JM
            Z4(J)=(Z1(J+1)+Z1(J))*0.5
            Z5(J)=Z1(J+1)-Z1(J)
            IF(Z5(J).LE.0.0)   CALL ERRO2 ('*Z5(I)',350,1)
            DO 370  I=1,IM
               GO TO (360,365,365,360), IGEOMP
360               V0(I,J)=R5(I)*Z5(J)
                     GO TO 368
365               V0(I,J)=PI2*R5(I)*Z5(J)*R4(I)
368            K=IZONE( I+(J-1)*IM )
               VOL(K) = VOL(K) + V0(I,J)
370      CONTINUE
C
         DO 371 I=1,NZONES
            IF( VOL(K) .LE. 0.0 ) CALL ERRO2( 'INIT-V', 371, 1 )
            VOL(NZONEP) = VOL(NZONEP) + VOL(I)
371      CONTINUE
C
375   CONTINUE
C-----------------------------------------------------------------------
C  XSEC INTERPOLATION & BURNUP ?
C
C                                                    GET NEW GUESS
      IF(IGUESS.EQ.5.AND.DAY.GT.0.0) CALL S862(FLUX1)
C
         IF( NXTAPE.EQ.0 .OR. KOUTER.NE.0 )GO TO 20
C
         CALL INTERP( XSEC,BURN,FISS2,V0,IZONE,IZMAT,C,FLUX1,DENXE,
     !               DENI,XEABS,BUPER,BMWDT,MATID,ULOAD,XID,
     !               VOL,FLXVOL,NBU)
C
20    CONTINUE
C-----------------------------------------------------------------------
C
C     ADJOINT REVERSALS
C
      IF(IREGAD.EQ.1 .AND. KOUTER.EQ.0 )
     !           CALL ADXSEC( C, VELOC, CHIIN, GAM )
C
C-----------------------------------------------------------------------
C
C     MIX CROSS-SECTIONS
C
      IBEGIN=1
      IF(KOUTER.EQ.0) GO TO 55
         GO TO (245,245,85,245,185),  IEVTYP
C-----------------------------------------------------------------------
C     MIX COMMAND PRINT OUT
C
55    IF(NMIXCD.LE.0) GO TO 70
         WRITE(NOUT,FMTTIT) ID, DATIM, KSTEP
         WRITE(NOUT,57)
57       FORMAT(//10X,' MIXTURE NUMBER + LIB ID   MIX COMMAND + LIB ID',
     !         '     MATERIAL MULTIPLIER'//)
         DO 68 J=1,NMIXCD
           IF(MIXN(J).GT.NXCARD) GO TO 60
           WRITE(NOUT,58) J,MIXN(J),MIXMT(J),DENMT(J)
58         FORMAT(I6,4X,I8,8X,8X,I8,8X,8X,G20.3)
           GO TO 68
C
60         CONTINUE
           MND = MIXN(J) - NXCARD
           MMD = MIXMT(J) - NXCARD
           IF(MND.LE.0) MND=1
           IF(MMD.LE.0) MMD=1
           WRITE(NOUT,65) J,MIXN(J),XID(MND),MIXMT(J),XID(MMD),DENMT(J)
65         FORMAT(I6,4X,I8,2X,A6,8X,I8,2X,A6,8X,G20.3)
68       CONTINUE
C
C-----------------------------------------------------------------------
70    IF(NPRT.GT.0) WRITE(NOUT,FMTTIT)  ID, DATIM, KSTEP
85    CONTINUE
C
      DO 180  KGP=1,NGPS
         IF(NMIXCD.EQ.0) GO TO 145
            DO 140  M=1,NMIXCD
               IF(MIXN(M).GT.NMAT)  CALL ERRO2('**INIT',95,1)
               IF(MIXMT(M).GT.NMAT) CALL ERRO2('**INIT',96,1)
               N=MIXN(M)
               L=MIXMT(M)
               E01=DENMT(M)
               IF(L  .LE.  0) GO TO 125
110            IF(E01.NE.0.0) GO TO 125
115            IF(N  .NE.  L) GO TO 125
120            E01 = EV
               L = 0
125            DO 139  I=1,ITL
                  IF(L.EQ.0) GO TO 135
130                  C(I,N,KGP)=C(I,N,KGP)+C(I,L,KGP)*E01
                     GO TO 139
135               CONTINUE
                     C(I,N,KGP)=C(I,N,KGP)*E01
139            CONTINUE
140         CONTINUE
C-------------CROSS -SECTIONS  PRINTOUT  -------------------------------
145      IF(KOUTER.NE.0 .OR. NPRT.LE.0) GO TO 175
         IF(KGP.GT.1 .AND. NMAT.GT.20)
     !     WRITE(NOUT,FMTTIT) ID, DATIM, KSTEP
C
            IBLK =0
            DO 151 N=1,NMAT
            IF(C(4,N,KGP).LE. 0.0) IBLK=1
151         CONTINUE
            IF( IBLK.EQ.0) GO TO 153
            WRITE (NOUT,152 )  KGP
152         FORMAT('0GROUP ',I3,'      CROSS-SECTIONS',
     #             '  (BLACK REGION IS MARKED WITH "*" ) ' )
            GO TO 155
153         WRITE (NOUT,154 )  KGP
154         FORMAT('0GROUP ',I3,'      CROSS-SECTIONS')
C
155         WRITE (NOUT,156)
156         FORMAT( '0MAT',T7,' SIG F',T19,' SIG A',T31,'NU SIG F',
     !              T43,'SIG TR',T55,'SIG GXG',T66,'SIG G-1XG',
     !              T79,'SIG G-2XG',T91,'. . .')
            DO 165  N=1,NMAT
            IF(C(4,N,KGP).GT. 0.0) GO TO 169
               WRITE (NOUT,160 ) N,(C(I,N,KGP),I=1,ITL)
160            FORMAT(1X,1H*,I2, 1P7E12.4 / ( 60X, 6E12.4 ) )
            GO TO 165
169            WRITE (NOUT,170 ) N,(C(I,N,KGP),I=1,ITL)
170            FORMAT(1X,I3, 1P7E12.4 / ( 60X, 6E12.4 ) )
165         CONTINUE
            IF ( KGP .EQ. 1 ) WRITE(30) NGPS, NMAT, ITL
            WRITE(30) ((C(I,N,KGP),I=1,ITL),N=1,NMAT)
175      CONTINUE
180   CONTINUE
C
C     PERTV OUTPUT
C
      WRITE(10) ID
      WRITE(10) (IZMAT(I),I=1,NZONES)
      WRITE(10) R0
      WRITE(10) Z0
      DO 184 I=1,NMAT
 184  WRITE(10) ((C(L,I,KGP),L=1,ITL),KGP=1,NGPS)
C
C-----------------------------------------------------------------------
C
185   IF(IEVTYP.EQ.5 .AND. KOUTER.GT.0)  BUCK = EV
C
245   CONTINUE
C
380   IF(KOUTER.NE.0) GO TO 405
         CHISUM=0.
         DO 400 KGP=1,NGPS
            CHIEFF(KGP)=CHIIN(KGP)
            IF(ISERCH.EQ.1) CHIEFF(KGP)=CHIEFF(KGP)/PAREV
400         CHISUM=CHISUM+CHIIN(KGP)
C
405   CONTINUE
C
C     FISSION NEUTRONS
      SFISSP=BAL(2,NGPSP)
410   CALL CLEARS(0.0,FISS1,IMJM)
      DO 425 KGP=1,NGPS
         BAL(1,KGP) = .0
         READ (NFLUX1)   FLUX1
         DO 425  J = 1, JM
            DO 425  K = 1, IM
               I = K + (J-1)*IM
               ITEMP=IZONE(I)
               ITEMP=IZMAT(ITEMP)
C
C---------------  ADDED FOR BLACKREGION CALCULATION --------------------
C
        IF(C(IHT,ITEMP,KGP).LE.0.0) FLUX1(I)= 0.0
C
               BAL(1,KGP) =BAL(1,KGP) + V0(K,J)*FLUX1(I)*C(1,ITEMP,KGP)
              IF(IREGAD.EQ.1) FISS1(I)=FISS1(I)+CHIIN(KGP)*FLUX1(I)
              IF(IREGAD.EQ.0) FISS1(I)=FISS1(I)+C(IHT-1,ITEMP,KGP)
     *        *FLUX1(I)
425      CONTINUE
C
      REWIND NFLUX1
C
      RETURN
      END
C$ FISCAL ==============================================================
      SUBROUTINE FISCAL (FLUX1,FISS1,V0, C,CHIEFF,IZONE,IZMAT,BAL)
C-----------------------------------------------------------------------
      COMMON/UNITS/ DATIM(3), TIMEI,  KSTEP, NINP, NOUT, NDUMP,
     !           NFLUX1,NSORCE,NBULIB,NCXS,NGUESS,NSCRAT
      CHARACTER*4 FMTTIT,FMTDSH,FMTEQL,FMTAST,FMTSP2,FMTSP3
      COMMON/UNIT1/ FMTTIT(13),
     !           FMTDSH(4),FMTEQL(4),FMTAST(4),FMTSP2(2),FMTSP3(2)
      CHARACTER*4 ID
      COMMON /UNIT3/ ID(20)
C-----------------------------------------------------------------------
      COMMON /BLOC/
     ! IREGAD,IEVTYP,ISERCH,  NGPS,NXDOWN,NXCARD,NXTAPE,IGUESS,
     ! MOUTER,MINNER,IALDIR,IOVLAY, IGEOM,    IM,    JM,NZONES,
     !   NMAT,NMIXCD,  IBCL,  IBCR,  IBCT,  IBCB,NIZDEL,NJZDEL,
     !   NPRT,NLIBMT,NBUSTP,IXSTRT,IXEMIC, IEDIT,IGPBUK,IDUP17,
     !  JDUM2, JDUM3, JDUM4, JDUM5,    EV,   EVM, PAREV,  BUCK,
     !   ALAL,  ALAH,   EPS,EPSPAR,EPSFLX,   POD,   ORF, POWER,
     ! FISMEV, XMWFA, ORFFS,ABLYVO,  DUM3,  DUM4,
     ! KOUTER,KINNER,KGROUP,KIITOT, KPAGE,   K07, KDUM1, KDUM2,
     ! IBUCON,IGEOMP,   IMP,   JMP, NGPSP,NZONEP,NXSETS,IDETED,
     !  NSHUF,IBATCH,KONFLX,KONSCH,IALPHA,IDELTA,NEWOLD, IPBAR,
     !  ISBAR,  IMJM,   IHS,   IHT,   ITL,  ITL1,MAXMIN,MAXSEC,
     !  ITEMP,   MGC,  MPIC,  MPJC,ITEMP1,ITEMP2,  NUMX,IBEGIN,
     !     IP,    JP, NGOTO, INVDIR,NGPS2,NBUMAX,  NVAR, KNEG0,
     !    ALA,  ALAP, ALAPP,  ALAR,FLXCHM,   DAY,  DELT,    EQ,
     !   EVPP,   E01,   E02,   E03,  ORFP,CHISUM,  TOTV,  TEMP,
     !  TEMP2, TEMP3, TEMP4,    TI,FISSEN,SFISSP,ALFABS,GPSORS,
     !    EVP, TEMP1,FLXCHG,SERR2P,ESTKHI,ESTKLO,XTRAPK,ESTDOM
C-----------------------------------------------------------------------
      DIMENSION  FLUX1(1),  FISS1(1), V0(1), CHIEFF(1), IZONE(1),
     !           IZMAT(1), BAL(11,1),    C(ITL,NMAT,1)
C-----------------------------------------------------------------------
      AUX = ALA
      ALAR = AUX
C     FISSION SUMS
      IF(IBEGIN.LE.0)  GO TO 90
      IF(IREGAD.EQ.0)  GO TO 40
C
         DO 30  KGP=1,NGPS
            BAL(2,KGP)=0.
            DO 29 I=1,IMJM
               ITEMP=IZONE(I)
               ITEMP=IZMAT(ITEMP)
               BAL(2,KGP)=BAL(2,KGP)+C(IHT-1,ITEMP,KGP)*FISS1(I)*V0(I)
29          CONTINUE
30       CONTINUE
         GO TO 70
C
40    E01=0.
C
      DO 50  I=1,IMJM
50    E01=E01+V0(I)*FISS1(I)
C
      DO 60  KGP=1,NGPS
60    BAL(2,KGP)=CHIEFF(KGP)*E01
C
70    BAL(2,NGPSP)=0.
      BAL(1,NGPSP)=0.
C
      DO 80  KGP=1,NGPS
      BAL(1,NGPSP)=BAL(1,NGPSP)+BAL(1,KGP)
80    BAL(2,NGPSP)=BAL(2,NGPSP)+BAL(2,KGP)
C
90    CONTINUE
C
      IF(IBEGIN.NE.0) GO TO 140
         ALA = BAL(2,NGPSP)/SFISSP
         TEMP=1.0/ALA
         IF(IEVTYP.EQ.0) RETURN
         IF(IEVTYP.NE.1) GO TO 140
            DO 110  KGP=1,NGPS
               BAL(2,KGP)=BAL(2,KGP)*TEMP
110            CHIEFF(KGP)=CHIEFF(KGP)*TEMP
            BAL(2,NGPSP)=BAL(2,NGPSP)*TEMP
            IF(IREGAD.EQ.0) GO TO 140
120            DO 130  I=1,IMJM
130               FISS1(I)=FISS1(I)*TEMP
140   CONTINUE
C
C     NORMALIZATION
C
      IBEGIN=0
C
150   IF(POWER.EQ.0.0) RETURN
      IF(POWER.LT.0.0)    E01 = ABS(POWER)/(BAL(1,NGPSP)*FISSEN)
      IF(POWER.GT.0.0)    E01=POWER/BAL(2,NGPSP)
      DO 190 KGP=1,NGPSP
190      BAL(2,KGP)=E01*BAL(2,KGP)
      DO 200 I=1,IMJM
200      FISS1(I)=E01*FISS1(I)
C
230   RETURN
      END
C$ OUTER ===============================================================
      SUBROUTINE OUTER(     A0,     A1,     C,  FISS1, CHIEFF,  IZONE,
     !                   IZMAT,  FLUX1, FLUX2,   SORS,     V0,  VELOC,
     !                      Z5,  FISS2,   CXS,     R5,     R4,     Z4,
     !                     CXR,    CXT,  CXLK,     PA,    GAM,    BAL)
C
C  ------- CXLK ADDED TO ARGUMENT  FOR BLACKREGION CALCULATION --------
C
C-----------------------------------------------------------------------
      COMMON/UNITS/ DATIM(3), TIMEI,  KSTEP, NINP, NOUT, NDUMP,
     !           NFLUX1,NSORCE,NBULIB,NCXS,NGUESS,NSCRAT
      CHARACTER*4 FMTTIT,FMTDSH,FMTEQL,FMTAST,FMTSP2,FMTSP3
      COMMON/UNIT1/ FMTTIT(13),
     !           FMTDSH(4),FMTEQL(4),FMTAST(4),FMTSP2(2),FMTSP3(2)
      CHARACTER*4 ID
      COMMON /UNIT3/ ID(20)
C-----------------------------------------------------------------------
      COMMON /BLOC/
     ! IREGAD,IEVTYP,ISERCH,  NGPS,NXDOWN,NXCARD,NXTAPE,IGUESS,
     ! MOUTER,MINNER,IALDIR,IOVLAY, IGEOM,    IM,    JM,NZONES,
     !   NMAT,NMIXCD,  IBCL,  IBCR,  IBCT,  IBCB,NIZDEL,NJZDEL,
     !   NPRT,NLIBMT,NBUSTP,IXSTRT,IXEMIC, IEDIT,IGPBUK,IDUP17,
     !  JDUM2, JDUM3, JDUM4, JDUM5,    EV,   EVM, PAREV,  BUCK,
     !   ALAL,  ALAH,   EPS,EPSPAR,EPSFLX,   POD,   ORF, POWER,
     ! FISMEV, XMWFA, ORFFS,ABLYVO,  DUM3,  DUM4,
     ! KOUTER,KINNER,KGROUP,KIITOT, KPAGE,   K07, KDUM1, KDUM2,
     ! IBUCON,IGEOMP,   IMP,   JMP, NGPSP,NZONEP,NXSETS,IDETED,
     !  NSHUF,IBATCH,KONFLX,KONSCH,IALPHA,IDELTA,NEWOLD, IPBAR,
     !  ISBAR,  IMJM,   IHS,   IHT,   ITL,  ITL1,MAXMIN,MAXSEC,
     !  ITEMP,   MGC,  MPIC,  MPJC,ITEMP1,ITEMP2,  NUMX,IBEGIN,
     !     IP,    JP, NGOTO, INVDIR,NGPS2,NBUMAX,  NVAR, KNEG0,
     !    ALA,  ALAP, ALAPP,  ALAR,FLXCHM,   DAY,  DELT,    EQ,
     !   EVPP,   E01,   E02,   E03,  ORFP,CHISUM,  TOTV,  TEMP,
     !  TEMP2, TEMP3, TEMP4,    TI,FISSEN,SFISSP,ALFABS,GPSORS,
     !    EVP, TEMP1,FLXCHG,SERR2P,ESTKHI,ESTKLO,XTRAPK,ESTDOM
C-----------------------------------------------------------------------
      DIMENSION    A0(1),    A1(1),  FISS1(1), CHIEFF(1), IZONE(1),
     !             V0(1), VELOC(1),     Z5(1),  FISS2(1),    R5(1),
     !                CXS(IM,JM,3),     R4(1),     Z4(1),   CXR(1),
     #      CXLK(1),
     !               GAM(NZONES,1), BAL(11,1),     PA(1),
     !          IZMAT(1), FLUX1(1),        C(ITL,NMAT,1),   CXT(1),
     !                            FLUX2(IMJM),           SORS(IMJM)
C-----------------------------------------------------------------------
C
C  INITIALIZE FISSION SOURCE
      DO 5 I=1,IMJM
  5   FISS2(I)=0.0
      KGROUP = 1
C
C     SOURCE CALCULATION
C
10    CONTINUE
      IF (IEVTYP.NE.0) GO TO 15
12       READ (NSORCE) SORS
         GO TO 30
15    CALL CLEARS(0.0,SORS,IMJM)
C
30    IF(IREGAD.NE.0) GO TO 60
C
         DO 50  I=1,IMJM
50          SORS(I)=SORS(I)+CHIEFF(KGROUP)*FISS1(I)
         GO TO 80
C
60    DO 70   I=1,IMJM
         ITEMP1=IZONE(I)
         ITEMP1=IZMAT(ITEMP1)
70       SORS(I)=SORS(I)+C(IHT-1,ITEMP1,KGROUP)*FISS1(I)
C
80    NEWOLD=KGROUP+IHS-ITL
C
      IF(NEWOLD.LT.1)  NEWOLD=1
C
      IPBAR = IHS + KGROUP - 1
C
      IF(IPBAR.GT.ITL)  IPBAR=ITL
C
115   IF(NEWOLD.GE.KGROUP)  GO TO 140
120      READ (NSCRAT) FLUX2
         DO 130  I=1,IMJM
            ITEMP1=IZONE(I)
            ITEMP1=IZMAT(ITEMP1)
            ITEMP=ITEMP1
            TEMP=C(IPBAR,ITEMP,KGROUP)
130         SORS(I)=SORS(I)+FLUX2(I)*TEMP
         GO TO 150
140   READ (NFLUX1) FLUX2
C
150   NEWOLD=NEWOLD+1
      IPBAR=IPBAR-1
C
      IF(NEWOLD - KGROUP)  120, 140, 160
160   CONTINUE
      GPSORS=0.
C-----------------------------------------------------------
                        ABSBLK = 0.0
      DO 190  I=1,IMJM
         SORS(I)=SORS(I)*V0(I)
               ITEMP =IZONE(I)
               ITEMP =IZMAT(ITEMP )
               TEMP=C(IHT,ITEMP,KGROUP)
               IF(TEMP) 180,180,190
180            ABSBLK = ABSBLK + SORS(I)
C -------------------------------------------------------------
190      GPSORS=GPSORS+SORS(I)
      BAL(3,KGROUP) = GPSORS - BAL(2,KGROUP)
C
C     GROUP FLUX CALCULATION
C
280   KINNER=0
      IZGB = IGPBUK*(KGROUP-1) + 1
      IF(GPSORS.EQ.0.0) GO TO 370
C
C        INVDIR=1 FOR SLOR BY COLUMNS
C              =2 FOR SLOR BY ROWS
C                                  (FOR THIS ITERATION)
      INVDIR = 1
C
      IF( (IGEOM.NE.2 .AND. IBCT.LE.1 )
     !            .AND.
     !    ( (IALDIR.NE.1 .AND. IM.GT.JM) .OR.
     !      (IALDIR.EQ.1 .AND. KOUTER.GT.2*(KOUTER/2)) .OR.
     !      (IGEOM.EQ.3) )      )
     !                                 INVDIR = 2
C
290   IF(IGEOM.EQ.3)  GO TO 294
C
         CALL INNER1(IZONE, IZMAT, CXS, V0, C(1,1,KGROUP) , A0, Z5, R5,
     !          R4,  Z4, A1, CXR,CXT,CXLK, GAM(1,IZGB), VELOC, FLUX1 )
         GO TO 296
C
CJB**************** REINSTATE THIS CALL TO ENABLE TRIANGULAR MESH OPTION
294      CALL INNERT( IZONE, IZMAT, CXS, V0, C(1,1,KGROUP), A0, Z5, R5,
     !           R4, Z4,  A1, CXR, CXT,CXLK, GAM(1,IZGB), VELOC, FLUX1 )
      GO TO 310
C
296   IF (IBCT.LE.1) GO TO 310
C
300      CALL INNERP(FLUX1, FLUX2, CXS, SORS, IZONE, IZMAT, V0,
     !               C(1,1,KGROUP),CXR,CXT,CXLK, PA, GAM(1,IZGB), BAL,
     #               ABSBLK)
         GO TO 390
C
310   GO TO (330,340), INVDIR
C
330      CALL INNER(FLUX1, FLUX2, CXS, SORS, IZONE, IZMAT, V0,
     !              C(1,1,KGROUP), CXR,CXT,CXLK , PA, GAM(1,IZGB), BAL,
     #              ABSBLK)
            GO TO 390
C
340      CALL INNER2(FLUX1, FLUX2, CXS, SORS, IZONE, IZMAT, V0,
     !               C(1,1,KGROUP),CXR,CXT,CXLK, PA, GAM(1,IZGB),BAL,
     #               ABSBLK)
            GO TO 390
C
370   DO 380 I=1,IMJM
         FLUX2(I)=0.
380      FLUX1(I)=0.
C
390   CONTINUE
      WRITE (NSCRAT) FLUX2
C     BACKSPACE SCHEME REPLACED BY REWIND AND READ(SKIP) - ANL
      REWIND NSCRAT
      ISBAR=KGROUP-ITL+IHS
      IF(ISBAR.LE.0 ) GO TO 440
         DO 430 IS=1,ISBAR
430         READ (NSCRAT)
C
440   CONTINUE
      IF(GPSORS.EQ.0.0) GO TO 500
450      IF(IREGAD.EQ.0) GO TO 480
460         BAL(1,KGROUP)=0.0
            DO 470  I=1,IMJM
               ITEMP1=IZONE(I)
               ITEMP1=IZMAT(ITEMP1)
               BAL(1,KGROUP)=BAL(1,KGROUP)
     !                          + C(1,ITEMP1,KGROUP)*FLUX2(I)*V0(I)
470            FISS2(I)=FISS2(I)+CHIEFF(KGROUP)*FLUX2(I)
            GO TO 500
C
480         BAL(1,KGROUP)=0.0
            KNEG0 = 0
C
            DO 490  I=1,IMJM
               IF(FLUX2(I).GE.0.0) GO TO 465
                  KNEG0    = KNEG0 + 1
                  FLUX2(I) = 0.0
  465          CONTINUE
               ITEMP1=IZONE(I)
               ITEMP1=IZMAT(ITEMP1)
               BAL(1,KGROUP)=BAL(1,KGROUP)
     !                          + C(1,ITEMP1,KGROUP)*FLUX2(I)*V0(I)
490            FISS2(I)=FISS2(I)+C(IHT-1,ITEMP1,KGROUP)*FLUX2(I)
C
500   CONTINUE
C                                      MONITOR PRINT--END OF INNER FOR G
      IF(NPRT.GE.0)
     !   WRITE(NOUT,501) KGROUP,KINNER,FLXCHG,MPIC,MPJC,INVDIR,KNEG0
501   FORMAT(12X,2I5,22X,1PE11.3,1X,2I4,54X,I5,I5)
C
      KGROUP=KGROUP+1
C
      IF(KGROUP.LE.NGPS) GO TO 10
C
      SFISSP = BAL(2,NGPSP)
C
CSWITCH TAPE DESIGNATIONS
C
      REWIND NSCRAT
      REWIND NFLUX1
      ITEMP = NSCRAT
      NSCRAT = NFLUX1
      NFLUX1 = ITEMP
C
      IF (IEVTYP.EQ.0) REWIND NSORCE
C
C-OVER-RELAX FISSION SOURCE
C
      ORFF = ORFFS
      IF(ORFF.LE.0.0) ORFF = 1.0 + .6*(ORF - 1.0)
C
      E02 = .0
      IF(IREGAD.EQ.0)  GO TO 580
         BAL(2,NGPSP) = .0
C
C        FOR ADJOINT CALCULATION, SORS(I) STORES ORFED FISS2(I)
C
         DO 522  I=1,IMJM
522         SORS(I) = FISS1(I) + ORFF*(FISS2(I) - FISS1(I))
         DO 540  KGP = 1,NGPS
            BAL(2,KGP) = .0
            DO 530  I=1,IMJM
               ITEMP = IZONE(I)
               ITEMP = IZMAT(ITEMP)
               BAL(2,KGP)=BAL(2,KGP)+C(IHT-1,ITEMP,KGP)*FISS2(I)*V0(I)
530            E02 = E02 + C(IHT-1,ITEMP,KGP)*SORS(I)*V0(I)
540         BAL(2,NGPSP) = BAL(2,NGPSP) + BAL(2,KGP)
C
         TEMP1 = BAL(2,NGPSP)/E02
         DO 550  I=1,IMJM
550         FISS1(I) = TEMP1*SORS(I)
         GO TO 620
C
580   E01 = 0.0
      DO 590  I=1,IMJM
         E01 = E01 + V0(I)*FISS2(I)
         FISS2(I) = FISS1(I) + ORFF*(FISS2(I) - FISS1(I))
590      E02 = E02 + V0(I)*FISS2(I)
C
C               NORMALIZE THE NEW FISSION SOURCE, ALSO GET INFO
C                   NEEDED FOR K-ESTIMATES & DOMINANCE RATIO
C
      TEMP   = E01/E02
      ESTKHI = 0.0
      ESTKLO = 1.0E+36
      TEMP1  = 0.0
      KNEG0  = 0
      TEMP2  = 1./EV
C
      DO 600  I=1,IMJM
         FOLD  = FISS1(I)
         FNEW  = TEMP*FISS2(I)
         IF( FNEW.GE.0.0 ) GO TO 595
            KNEG0 = KNEG0 + 1
            FNEW  = 0.0
  595    CONTINUE
         FISS1(I) = FNEW
         IF(FOLD.LE.0.0) GO TO 600
         IF(FNEW.LE.0.0) GO TO 600
            FR     = FNEW/FOLD
            ESTKHI = AMAX1(ESTKHI,FR)
            ESTKLO = AMIN1(ESTKLO,FR)
            FD     = FNEW  - FOLD*TEMP2
            TEMP1  = TEMP1 + FD*FD
600   CONTINUE
C
      ESTDOM = 0.0
C
      IF( SERR2P .GT. 0.0 )   ESTDOM = SQRT(TEMP1/SERR2P)
C
      SERR2P = TEMP1
         ESTKHI = ESTKHI*EV
         ESTKLO = ESTKLO*EV
         IF(KOUTER.LE.1) ESTKHI=0.0
         IF(KOUTER.LE.1) ESTKLO=0.0
C
      DO 610  KGP = 1,NGPS
610      BAL(2,KGP) = CHIEFF(KGP)*E01
C
      IF(IEVTYP.NE.0) GO TO 620
C
C        ACCELERATION FOR EXTRANEOUS SOURCE PROBLEMS
C
         TEMP1 = (1.0 - EV*SFISSP/E01)/(1.0 - EV)
         IF (SFISSP/E01.LE. 0.01) GO TO 620
         IF (SFISSP/E01 .GT. 1./(EV + .0001)) GO TO 620
            DO 614 I = 1,IMJM
614            FISS1(I) = TEMP1 * FISS1(I)
            DO 616 KGP = 1,NGPS
               BAL(1,KGP) = TEMP1*BAL(1,KGP)
616            BAL(2,KGP) = TEMP1*BAL(2,KGP)
C
620   BAL(2,NGPSP) = 0.0
      BAL(1,NGPSP) = 0.0
      DO 640  KGP = 1,NGPS
         BAL(1,NGPSP) = BAL(1,NGPSP) + BAL(1,KGP)
640      BAL(2,NGPSP) = BAL(2,NGPSP) + BAL(2,KGP)
      RETURN
      END
C$ INNER1 ==============================================================
      SUBROUTINE INNER1( IZONE, IZMAT, CXS, V0, C0, A0, Z5, R5, R4, Z4,
     !                     A1, CXR, CXT, CXLK , GAM, VELOC, CXS3 )
C
C  -------   CXLK ADDED  TO  ARGUMENT FOR BLACKREGION CALCULATION ----
C
C-----------------------------------------------------------------------
C
      COMMON /BLOC/
     ! IREGAD,IEVTYP,ISERCH,  NGPS,NXDOWN,NXCARD,NXTAPE,IGUESS,
     ! MOUTER,MINNER,IALDIR,IOVLAY, IGEOM,    IM,    JM,NZONES,
     !   NMAT,NMIXCD,  IBCL,  IBCR,  IBCT,  IBCB,NIZDEL,NJZDEL,
     !   NPRT,NLIBMT,NBUSTP,IXSTRT,IXEMIC, IEDIT,IGPBUK,IDUP17,
     !  JDUM2, JDUM3, JDUM4, JDUM5,    EV,   EVM, PAREV,  BUCK,
     !   ALAL,  ALAH,   EPS,EPSPAR,EPSFLX,   POD,   ORF, POWER,
     ! FISMEV, XMWFA, ORFFS,ABLYVO,  DUM3,  DUM4,
     ! KOUTER,KINNER,KGROUP,KIITOT, KPAGE,   K07, KDUM1, KDUM2,
     ! IBUCON,IGEOMP,   IMP,   JMP, NGPSP,NZONEP,NXSETS,IDETED,
     !  NSHUF,IBATCH,KONFLX,KONSCH,IALPHA,IDELTA,NEWOLD, IPBAR,
     !  ISBAR,  IMJM,   IHS,   IHT,   ITL,  ITL1,MAXMIN,MAXSEC,
     !  ITEMP,   MGC,  MPIC,  MPJC,ITEMP1,ITEMP2,  NUMX,IBEGIN,
     !     IP,    JP, NGOTO, INVDIR,NGPS2,NBUMAX,  NVAR, KNEG0,
     !    ALA,  ALAP, ALAPP,  ALAR,FLXCHM,   DAY,  DELT,    EQ,
     !   EVPP,   E01,   E02,   E03,  ORFP,CHISUM,  TOTV,  TEMP,
     !  TEMP2, TEMP3, TEMP4,    TI,FISSEN,SFISSP,ALFABS,GPSORS,
     !    EVP, TEMP1,FLXCHG,SERR2P,ESTKHI,ESTKLO,XTRAPK,ESTDOM
C-----------------------------------------------------------------------
      DIMENSION  IZONE(1), IZMAT(1),CXS(IM,JM,3),V0(1), C0(ITL,1),
     !           A0(1), Z5(1), R5(1), R4(1), Z4(1),
     !           A1(1),CXR(JM), CXT(IM), GAM(1), VELOC(1), CXS3(IM,JM),
     #        CXLK(IMJM)
C-----------------------------------------------------------------------
C     THIS SUBROUTINE CALCULATES COEFFICIENTS FOR THE FLUX EQUATION
      PI2 = 6.28318
C
      IF(KOUTER.GT.1 .AND. IEVTYP.LE.1) GO TO 500
C
C-DETERMINE "TIME-ABSORPTION"
C
      ALFABS=0.0
      IF(IEVTYP.EQ.2) ALFABS=EV/VELOC(KGROUP)
      IF(IEVTYP.NE.2 .AND. ISERCH.EQ.2) ALFABS=PAREV/VELOC(KGROUP)
C
      DO  45  KJ = 1, JM
      DO  45  KI = 1, IM
      GO TO (10,10, 5), IGEOMP
5     TEMP = PI2*(Z4(KJ) - Z4(KJ-1))*R4(KI)
               TEMPZ= .5* PI2* Z5(KJ)  *R4(KI)
      GO TO 15
10    TEMP = Z4(KJ) - Z4(KJ-1)
               TEMPZ= .5*  Z5(KJ)
15    I = KI + (KJ-1)*IM
C
                    CXLK( I) = 0.0
C
      ITEMPG = IZONE(I)
      ITEMP = IZMAT(ITEMPG)
C
C -------------- CHECK IF BLACKREGION -----------------------
C
              IF( C0(IHT,ITEMP).LE.0.0 ) GO TO 45
C
      CXS(KI,KJ,3) = V0(I)*(  C0(IHT,ITEMP) - C0(IHS,ITEMP)
     !       + BUCK*GAM(ITEMPG)/(3.*C0(IHT,ITEMP)) + ALFABS )
C
C ------ (I,J) LOCATED ON THE LEFT COLUMN  ARE EXCLUDED ------
C ------      FOR CXS(KI,KJ, 1 ) COMPUTATION            ------
C
               IF(  KI  - 1 )  30,30,18
18    ITEMP1 = IZONE(I-1)
      ITEMP1 = IZMAT(ITEMP1)
C
C ------------ CHECK IF ITEMP1 IS IBLKRG ----------------------
C
              IF( C0(IHT,ITEMP1).LE.0.0 ) GO TO 21
C
              GO TO 19
21            ALFA  = C0( 1,ITEMP1)
              BETA  = C0( 2,ITEMP1)
              CXS(KI,KJ,1) = A0(KI)*Z5(KJ)*BETA/ (3.*C0(IHT,ITEMP)) /
     #        (.5*R5(KI)*BETA  + ALFA/(3.*C0(IHT,ITEMP) ) )
              CXLK( I ) =  CXLK(I) + CXS(KI,KJ,1)
              GO TO 30
C
19    IF (ITEMP - ITEMP1) 25,20,25
20    CXS(KI,KJ,1)=A0(KI)*Z5(KJ)/(3.*C0(IHT,ITEMP)*(R4(KI)-R4(KI-1)))
      GO TO 30
25    CXS(KI,KJ,1)=A0(KI)*Z5(KJ)*(R5(KI-1)+R5(KI))/((R4(KI)-R4(KI-1))*
     !       (3.*(R5(KI-1)*C0(IHT,ITEMP1) + R5(KI)*C0(IHT,ITEMP))))
C
C ------ (I,J) LOCATED ON THE BOTTOM ROW   ARE EXCLUDED ------
C ------      FOR CXS(KI,KJ, 2 ) COMPUTATION            ------
C
30    IF(I - IM)  45,45,32
32    ITEMP3 = IZONE(I - IM)
      ITEMP3 = IZMAT(ITEMP3)
C
C ------------ CHECK IF ITEMP3 IS IBLKRG ----------------------
C
              IF( C0(IHT,ITEMP3).LE.0.0 ) GO TO 33
C
              GO TO 34
33            ALFA  = C0( 1,ITEMP3)
              BETA  = C0( 2,ITEMP3)
             CXS(KI,KJ,2) = A1(KI)*BETA/(3.*C0(IHT,ITEMP))/(TEMPZ*BETA+
     #        ALFA/(3.*C0(IHT,ITEMP) ) )
              CXLK( I ) =  CXLK(I) + CXS(KI,KJ,2)
              GO TO 45
C
34    IF (ITEMP - ITEMP3) 40,35,40
35    CXS(KI,KJ,2) = A1(KI)/(3.*C0(IHT,ITEMP)*TEMP)
      GO TO 45
40    CXS(KI,KJ,2) = A1(KI)*(Z5(KJ-1) + Z5(KJ))/(TEMP*
     !          (3.*(Z5(KJ-1)*C0(IHT,ITEMP3)+Z5(KJ)*C0(IHT,ITEMP))))
45    CONTINUE
C
      DO 200  KJ = 1, JM
      DO 200  KI = 1, IM
      GO TO (55,55,50), IGEOMP
50    TEMP = .5*PI2*Z5(KJ)*R4(KI)
      GO TO 60
55    TEMP = .5*Z5(KJ)
60    I = KI + (KJ-1)*IM
      ITEMP = IZONE(I)
      ITEMP = IZMAT(ITEMP)
C
C ------------ CHECK IF ITEMP  IS IBLKRG ----------------------
C
              IF( C0(IHT,ITEMP ).LE.0.0 ) GO TO 191
C
      TEMP1 = CXS(KI+1,KJ,1)
      TEMP2 = CXS(KI,KJ+1,2)
C
               IBLKL =0
               IBLKB =0
              IF(KI - IM) 52,53,53
52            NTEMP1 = IZONE( I + 1 )
              NTEMP1 = IZMAT(NTEMP1)
C
C ------------ CHECK IF NTEMP1  IS IBLKRG ----------------------
C
              IF( C0(IHT,NTEMP1 ).LE.0.0 ) GO TO 56
C
              GO TO 53
56            ALFA  = C0( 1,NTEMP1)
              BETA  = C0( 2,NTEMP1)
              TEMP1 =A0( KI+1 )*Z5(KJ)*BETA/(3.*C0(IHT,ITEMP ))/
     #                (.5*R5(KI)*BETA + ALFA/(3.*C0(IHT,ITEMP) ) )
              CXLK( I ) =  CXLK(I) + TEMP1
C
53            IF((KJ - JM)) 61,59,59
61            NTEMP2 =IZONE( I + IM)
              NTEMP2 =IZMAT(NTEMP2)
C
C ------------ CHECK IF NTEMP2  IS IBLKRG ----------------------
C
              IF( C0(IHT,NTEMP2 ).LE.0.0 ) GO TO 58
C
              GO TO 59
58            ALFA  = C0( 1,NTEMP2)
              BETA  = C0( 2,NTEMP2)
              TEMP2 =A1(KI)*BETA/(3.*C0(IHT,ITEMP))/(TEMP*BETA  +
     #        ALFA/(3.*C0(IHT,ITEMP) ) )
              CXLK( I ) =  CXLK(I) + TEMP2
59            CONTINUE
C
C-------- SET FLAG IF (I-1) AND (J-1) NEIGHBORS ARE BLKRG ---------
              IF(KI - 1) 67,67,62
62            NTEMP1 = IZONE( I -1)
              NTEMP1 = IZMAT(NTEMP1)
C
              IF( C0(IHT,NTEMP1 ).LE.0.0 ) GO TO 66
C
              GO TO 67
66            IBLKL =1
C
67            IF(KJ - 1) 72,72,68
C
68            NTEMP2 = IZONE(I - IM)
              NTEMP2 = IZMAT(NTEMP2)
C
C ------------ CHECK IF NTEMP2  IS IBLKRG ----------------------
C
              IF( C0(IHT,NTEMP2 ).LE.0.0 ) GO TO 71
              GO TO 72
71            IBLKB =1
C
72            CONTINUE
C
C
64    IF(KJ - 1)  65,65,100
65    IF(IBCB - 1)  90,95,70
C
70    GO TO (  80,  80,  75),  IGEOMP
75    TEMP3 = PI2*R4(KI)*.5*(Z5(KJ) + Z5(JM))
      GO TO 85
80    TEMP3 = .5*(Z5(KJ) + Z5(JM))
85    ITEMP3 = I + IM*(JM - 1)
      ITEMP3 = IZONE(ITEMP3)
      ITEMP3 = IZMAT(ITEMP3)
C
C---------CHECK IF ITEMP3 IS IBLKRG ------------------------------
C
              IF( C0(IHT,ITEMP3).LE.0.0 ) GO TO 87
C
      CXS(KI,KJ,2) = A1(KI)*(Z5(JM) + Z5(KJ))/(TEMP3*
     !         (3.*(Z5(JM)*C0(IHT,ITEMP3) + Z5(KJ)*C0(IHT,ITEMP))))
      GO TO 125
C
87            ALFA  = C0( 1,ITEMP3)
              BETA  = C0( 2,ITEMP3)
              CXS(KI,KJ,2) =A1(KI)*BETA/(3.*C0(IHT,ITEMP))/(TEMP*BETA +
     #                      ALFA/(3.*C0(IHT,ITEMP) ) )
              CXLK( I ) =  CXLK(I) + CXS(KI,KJ,2)
               IBLKB =1
              GO TO 125
C
90    CXS(KI,KJ,2) = A1(KI)/(3.*C0(IHT,ITEMP)*( TEMP +.71/
     !                         C0(IHT,ITEMP)))
      GO TO 125
C
95    CXS(KI,KJ,2) = .0
      GO TO 125
C
100   IF (KJ - JM) 125,105,105
C
105   IF (IBCT - 1) 115,120,110
110   TEMP2 = CXS(KI,1,2)
      CXT(KI) = TEMP2
C
C---------------CHECK IF IZMAT(IZONE(KI)) IS IBLKRG ---------------
C
              NTEMP3 = IZONE(KI)
              NTEMP3 = IZMAT(NTEMP3)
C
              IF( C0(IHT,NTEMP3).LE.0.0 ) GO TO 112
C
              GO TO 125
112           ALFA  = C0( 1,NTEMP3)
              BETA  = C0( 2,NTEMP3)
              TEMP2 =A1(KI)*BETA/(3.*C0(IHT,ITEMP))/(TEMP*BETA  +
     #                 ALFA/(3.*C0(IHT,ITEMP) ) )
              CXLK( I ) =  CXLK(I) + TEMP2
              CXT(KI) = 0.0
C
C
      GO TO 125
115   TEMP2 = A1(KI)/(3.*C0(IHT,ITEMP)*( TEMP    +.71/
     !                       C0(IHT,ITEMP)))
      CXT(KI) = TEMP2
      GO TO 125
120   TEMP2 = .0
      CXT(KI) = TEMP2
C
125   IF (KI - 1) 130,130,145
130   IF(IBCL)  135,135,140
135   CXS(KI,KJ,1) = A0(KI  )*Z5(KJ)/(3.*C0(IHT,ITEMP)*
     !                         (.5*R5(KI) + .71/C0(IHT,ITEMP)))
      GO TO 165
140   CXS(KI,KJ,1) = .0
      GO TO 165
145   IF (KI - IM) 165,150,150
150   IF(IBCR)  155,155,160
155   TEMP1 = A0(KI+1)*Z5(KJ)/(3.*C0(IHT,ITEMP)*
     !                     (.5*R5(KI) + .71/C0(IHT,ITEMP)))
      CXR(KJ) = TEMP1
      GO TO 165
160   TEMP1 = .0
      CXR(KJ) = TEMP1
165   CXS(KI,KJ,3) = CXS(KI,KJ,3) + CXS(KI,KJ,1)
     !                       + CXS(KI,KJ,2)   + TEMP1 + TEMP2
C
C------------ CLEAR   CXS'S  FOR  BLACKREGION ------------------
C
                IF(IBLKL.EQ.1 ) CXS(KI,KJ,1) = 0.0
                IF(IBLKB.EQ.1 ) CXS(KI,KJ,2) = 0.0
                GO TO 200
C
191             CXS(KI,KJ,3) = 1.0
                CXS(KI,KJ,1) = 0.0
                CXS(KI,KJ,2) = 0.0
C
200   CONTINUE
C
      IF(IEVTYP.GT.1 .OR. IALDIR.NE.1) GO TO 330
C
C        DIAG OF CXS FOR SLOR BY ROWS, IF ALTERNATING DIRECTIONS
C                 ARE TO BE USED
C
      DO 320 J=1,JM
      CXS3(1,J) = 1./CXS(1,J,3)
      DO 310 I=2,IM
      TEMP = CXS(I,J,1)
      TEMP1 = TEMP*TEMP*CXS3(I-1,J)
      CXS3(I,J) = 1./( CXS(I,J,3) - TEMP1 )
310   CONTINUE
320   CONTINUE
      GO TO 340
C
330   CONTINUE
      GO TO (340,370), INVDIR
C
C        DIAG OF CXS FOR SLOR BY COLUMNS
C
340   DO 360 I=1,IM
      CXS(I,1,3) = 1./CXS(I,1,3)
      DO 350 J=2,JM
      TEMP=CXS(I,J,2)
      TEMP1 = TEMP*TEMP*CXS(I,J-1,3)
      CXS(I,J,3) = 1./( CXS(I,J,3)-TEMP1 )
350   CONTINUE
360   CONTINUE
      GO TO 400
C
C        DIAG OF CXS FOR SLOR BY ROWS
C
370   DO 390 J=1,JM
      CXS(1,J,3) = 1./CXS(1,J,3)
      DO 380 I=2,IM
      TEMP=CXS(I,J,1)
      TEMP1=TEMP*TEMP*CXS(I-1,J,3)
      CXS(I,J,3) = 1./( CXS(I,J,3)-TEMP1 )
380   CONTINUE
390   CONTINUE
C
C-FOR KEFF CALC'S, SAVE CXS,CXR,CXT ON UNIT 19
C
 400  IF(IEVTYP.LE.1) GO TO 405
      IF( IGR .EQ. 1) REWIND 20
      WRITE(20)     CXLK
      IF( IGR .EQ. NGRPS) ENDFILE 20
      GO TO 540
 405  CONTINUE
C
      IF(KGROUP.LE.1) REWIND 19
                            IF(KGROUP.LE.1) REWIND 20
      IF( IALDIR.EQ.1) GO TO 410
      WRITE(19) CXS,CXR,CXT
                    WRITE(20)    CXLK
      GO TO 540
410   CONTINUE
      WRITE(19) CXS,CXR,CXT,CXS3
                    WRITE(20)    CXLK
      GO TO 515
C
C-FOR KEFF CALC'S, COME HERE AFTER FIRST TIME THRU FOR EACH GROUP
C
  500 IF(KGROUP.LE.1) REWIND 19
                       IF(KGROUP.LE.1) REWIND 20
      IF(IALDIR.EQ.1) GO TO 510
      READ(19) CXS,CXR,CXT
                    READ(20)    CXLK
      GO TO 540
  510 CONTINUE
      READ(19) CXS,CXR,CXT,CXS3
                    READ(20)    CXLK
  515 IF(INVDIR.EQ.1) GO TO 540
      DO 530 J=1,JM
      DO 520 I=1,IM
      CXS(I,J,3) = CXS3(I,J)
  520 CONTINUE
  530 CONTINUE
  540 CONTINUE
C
         RETURN
C
      END
C$ INNERT ==============================================================
      SUBROUTINE INNERT( IZONE, IZMAT, CXS, V0, C0, A0, Z5, R5, R4, Z4,
     !                     A1, CXR, CXT, CXLK , GAM, VELOC, CXS3 )
C
C  -------   CXLK ADDED  TO  ARGUMENT FOR BLACKREGION CALCULATION ----
C
C-----------------------------------------------------------------------
C
      COMMON /BLOC/
     ! IREGAD,IEVTYP,ISERCH,  NGPS,NXDOWN,NXCARD,NXTAPE,IGUESS,
     ! MOUTER,MINNER,IALDIR,IOVLAY, IGEOM,    IM,    JM,NZONES,
     !   NMAT,NMIXCD,  IBCL,  IBCR,  IBCT,  IBCB,NIZDEL,NJZDEL,
     !   NPRT,NLIBMT,NBUSTP,IXSTRT,IXEMIC, IEDIT,IGPBUK,IDUP17,
     !  JDUM2, JDUM3, JDUM4, JDUM5,    EV,   EVM, PAREV,  BUCK,
     !   ALAL,  ALAH,   EPS,EPSPAR,EPSFLX,   POD,   ORF, POWER,
     ! FISMEV, XMWFA, ORFFS,ABLYVO,  DUM3,  DUM4,
     ! KOUTER,KINNER,KGROUP,KIITOT, KPAGE,   K07, KDUM1, KDUM2,
     ! IBUCON,IGEOMP,   IMP,   JMP, NGPSP,NZONEP,NXSETS,IDETED,
     !  NSHUF,IBATCH,KONFLX,KONSCH,IALPHA,IDELTA,NEWOLD, IPBAR,
     !  ISBAR,  IMJM,   IHS,   IHT,   ITL,  ITL1,MAXMIN,MAXSEC,
     !  ITEMP,   MGC,  MPIC,  MPJC,ITEMP1,ITEMP2,  NUMX,IBEGIN,
     !     IP,    JP, NGOTO, INVDIR,NGPS2,NBUMAX,  NVAR, KNEG0,
     !    ALA,  ALAP, ALAPP,  ALAR,FLXCHM,   DAY,  DELT,    EQ,
     !   EVPP,   E01,   E02,   E03,  ORFP,CHISUM,  TOTV,  TEMP,
     !  TEMP2, TEMP3, TEMP4,    TI,FISSEN,SFISSP,ALFABS,GPSORS,
     !    EVP, TEMP1,FLXCHG,SERR2P,ESTKHI,ESTKLO,XTRAPK,ESTDOM
C-----------------------------------------------------------------------
      DIMENSION  IZONE(1), IZMAT(1),CXS(IM,JM,3),V0(1), C0(ITL,1),
     !           A0(1), Z5(1), R5(1), R4(1), Z4(1),
     !           A1(1),CXR(JM), CXT(IM), GAM(1), VELOC(1), CXS3(IM,JM),
     #        CXLK(IMJM)
C-----------------------------------------------------------------------
C     THIS SUBROUTINE CALCULATES COEFFICIENTS FOR THE FLUX EQUATION
      PI2 = 6.28318
C
              IF(KOUTER.GT.1 .AND. IEVTYP.LE.1) GO TO 500
CJBC
CJBC-DETERMINE "TIME-ABSORPTION"
CJBC
      ALFABS=0.0
CJB      IF(IEVTYP.EQ.2) ALFABS=EV/VELOC(KGROUP)
CJB      IF(IEVTYP.NE.2 .AND. ISERCH.EQ.2) ALFABS=PAREV/VELOC(KGROUP)
C
      DO  45  KJ = 1, JM
      DO  45  KI = 1, IM
      TEMP = KI - 2*(KI/2) - (KJ - 2*(KJ/2))
      TEMP = ABS(TEMP)
      I = KI + (KJ-1)*IM
C
                    CXLK( I) = 0.0
C
      ITEMPG = IZONE(I)
      ITEMP = IZMAT(ITEMPG)
C
C -------------- CHECK IF BLACKREGION -----------------------
C
              IF( C0(IHT,ITEMP).LE.0.0 ) GO TO 45
C
      CXS(KI,KJ,3) = V0(I)*(C0(IHT,ITEMP) - C0(IHS,ITEMP)
     !      + BUCK*GAM(ITEMPG)/(3.*C0(IHT,ITEMP))+ALFABS)
C
C ------ (I,J) LOCATED ON THE LEFT COLUMN  ARE EXCLUDED ------
C ------      FOR CXS(KI,KJ, 1 ) COMPUTATION            ------
C
               IF(  KI  - 1 )  30,30,18
18    ITEMP1 = IZONE(I-1)
      ITEMP1 = IZMAT(ITEMP1)
C
C ------------ CHECK IF ITEMP1 IS IBLKRG ----------------------
C
              IF( C0(IHT,ITEMP1).LE.0.0 ) GO TO 21
C
              GO TO 19
21            ALFA  = C0( 1,ITEMP1)
              BETA  = C0( 2,ITEMP1)
              CXS(KI,KJ,1) = A0(KI)*BETA/(3.*C0(IHT,ITEMP)*
     #              (BETA*Z5(1)/3. + ALFA/(3.*C0(IHT,ITEMP))))
              CXLK( I ) =  CXLK(I) + CXS(KI,KJ,1)
              GO TO 30
C
19    IF (ITEMP - ITEMP1) 25,20,25
20    CXS(KI,KJ,1)=A0(KI)/(2.*C0(IHT,ITEMP)*Z5(1))
      GO TO 30
25    CXS(KI,KJ,1)=A0(KI)/((C0(IHT,ITEMP1) + C0(IHT,ITEMP))*Z5(1))
C
C ------ (I,J) LOCATED ON THE BOTTOM ROW   ARE EXCLUDED ------
C ------      FOR CXS(KI,KJ, 2 ) COMPUTATION            ------
C
30    IF(I - IM)  45,45,32
32    ITEMP3 = IZONE(I - IM)
      ITEMP3 = IZMAT(ITEMP3)
C
C ------------ CHECK IF ITEMP3 IS IBLKRG ----------------------
C
              IF( C0(IHT,ITEMP3).LE.0.0 ) GO TO 33
C
              GO TO 34
33            ALFA  = C0( 1,ITEMP3)
              BETA  = C0( 2,ITEMP3)
              CXS(KI,KJ,2) = A1(KI)*TEMP*BETA/(3.*C0(IHT,ITEMP)*
     #                     (BETA*Z5(1)/3. +ALFA/(3.* C0(IHT,ITEMP))))
              CXLK( I ) =  CXLK(I) + CXS(KI,KJ,2)
              GO TO 45
C
34    IF (ITEMP - ITEMP3) 40,35,40
35    CXS(KI,KJ,2) = A1(KI)*TEMP/(2.*C0(IHT,ITEMP)*Z5(1))
      GO TO 45
40    CXS(KI,KJ,2) = A1(KI)*TEMP/((C0(IHT,ITEMP3)
     !              +C0(IHT,ITEMP))*Z5(1))
45    CONTINUE
C
      DO 200  KJ = 1, JM
      DO 200  KI = 1, IM
      TEMP= KI - 2*(KI/2) - (KJ-2*(KJ/2))
      TEMP= ABS(TEMP)
C
C------------------------- FACTOR FOR UPWARD TRIANGLES ------HN--
                   TEMPUP = 1. - TEMP
C
      I = KI + (KJ-1)*IM
      ITEMP = IZONE(I)
      ITEMP = IZMAT(ITEMP)
      TEMP1 = CXS(KI+1,KJ,1)
      TEMP2 = CXS(KI,KJ+1,2)
C
C ------------ CHECK IF ITEMP  IS IBLKRG ----------------------
C
              IF( C0(IHT,ITEMP ).LE.0.0 ) GO TO 191
C
      TEMP1 = CXS(KI+1,KJ,1)
      TEMP2 = CXS(KI,KJ+1,2)
C
C
               IBLKL =0
               IBLKB =0
              IF(KI - IM) 52,53,53
52            NTEMP1 = IZONE( I + 1 )
              NTEMP1 = IZMAT(NTEMP1)
C
C ------------ CHECK IF NTEMP1  IS IBLKRG ----------------------
C
              IF( C0(IHT,NTEMP1 ).LE.0.0 ) GO TO 56
C
              GO TO 53
56            ALFA  = C0( 1,NTEMP1)
              BETA  = C0( 2,NTEMP1)
              TEMP1 = A0(KI+1)*BETA/(3.*C0(IHT,ITEMP)*
     #               (BETA*Z5(1)/3. + ALFA/(3.*C0(IHT,ITEMP))))
              CXLK( I ) =  CXLK(I) + TEMP1
C
53            IF((KJ - JM)) 61,59,59
61            NTEMP2 =IZONE( I + IM)
              NTEMP2 =IZMAT(NTEMP2)
C
C ------------ CHECK IF NTEMP2  IS IBLKRG ----------------------
C
              IF( C0(IHT,NTEMP2 ).LE.0.0 ) GO TO 58
C
              GO TO 59
58            ALFA  = C0( 1,NTEMP2)
              BETA  = C0( 2,NTEMP2)
              TEMP2 = A1(KI)*TEMPUP*BETA/(3.*C0(IHT,ITEMP)*
     !               (BETA*Z5(1)/3. + ALFA/(3.*C0(IHT,ITEMP))))
              CXLK( I ) =  CXLK(I) + TEMP2
59            CONTINUE
C
C
C-------- SET FLAG IF (I-1) AND (J-1) NEIGHBORS ARE BLKRG ---------
              IF(KI - 1) 67,67,62
62            NTEMP1 = IZONE( I -1)
              NTEMP1 = IZMAT(NTEMP1)
C
              IF( C0(IHT,NTEMP1 ).LE.0.0 ) GO TO 66
C
              GO TO 67
66            IBLKL =1
C
67            IF(KJ - 1) 72,72,68
C
68            NTEMP2 = IZONE(I - IM)
              NTEMP2 = IZMAT(NTEMP2)
C
C ------------ CHECK IF NTEMP2  IS IBLKRG ----------------------
C
              IF( C0(IHT,NTEMP2 ).LE.0.0 ) GO TO 71
              GO TO 72
71            IBLKB =1
C
72            CONTINUE
C
C
64    IF(KJ - 1)  65,65,100
65    IF(IBCB - 1)  90,95,95
90    CXS(KI,KJ,2) = A1(KI)*TEMP/(3.*C0(IHT,ITEMP)*(Z5(1)/3. +.71/
     !                         C0(IHT,ITEMP)))
      GO TO 125
C
95    CXS(KI,KJ,2) = .0
      GO TO 125
C
100   IF (KJ - JM) 125,105,105
C
105   IF (IBCT - 1) 115,120,120
115   TEMP= KI - 2*(KI/2) - (KJ + 1- 2*((KJ+1)/2))
      TEMP = ABS(TEMP)
      TEMP2 = A1(KI)*TEMP/(3.*C0(IHT,ITEMP)*(Z5(1)/3.+.71/
     !                       C0(IHT,ITEMP)))
      CXT(KI) = TEMP2
      GO TO 125
120   TEMP2 = .0
      CXT(KI) = TEMP2
C
125   IF (KI - 1) 130,130,145
130   IF(IBCL)  135,135,140
135   CXS(KI,KJ,1) = A0(KI)/(3.*C0(IHT,ITEMP)*
     !              (Z5(1)/3. + .71/C0(IHT,ITEMP)))
      GO TO 165
140   CXS(KI,KJ,1) = .0
      GO TO 165
145   IF (KI - IM) 165,150,150
150   IF(IBCR)  155,155,160
155   TEMP1 = A0(KI+1)/(3.*C0(IHT,ITEMP)*
     !        (Z5(1)/3. + .71/C0(IHT,ITEMP)))
      CXR(KJ) = TEMP1
      GO TO 165
160   TEMP1 = .0
      CXR(KJ) = TEMP1
165   CXS(KI,KJ,3) = CXS(KI,KJ,3) + CXS(KI,KJ,1)
     !            + CXS(KI,KJ,2)   + TEMP1 + TEMP2
C
C------------ CLEAR   CXS'S  FOR  BLACKREGION ------------------
C
                IF(IBLKL.EQ.1 ) CXS(KI,KJ,1) = 0.0
                IF(IBLKB.EQ.1 ) CXS(KI,KJ,2) = 0.0
                GO TO 200
C
191             CXS(KI,KJ,3) = 1.0
                CXS(KI,KJ,1) = 0.0
                CXS(KI,KJ,2) = 0.0
C
C
200   CONTINUE
C
C
C        DIAG OF CXS FOR SLOR BY ROWS
C
370   DO 390 J=1,JM
      CXS(1,J,3) = 1./CXS(1,J,3)
      DO 380 I=2,IM
      TEMP=CXS(I,J,1)
      TEMP1=TEMP*TEMP*CXS(I-1,J,3)
      CXS(I,J,3) = 1./( CXS(I,J,3)-TEMP1 )
380   CONTINUE
390   CONTINUE
C
C
C-FOR KEFF CALC'S, SAVE CXS,CXR,CXT ON UNIT 19
C
 400  IF(IEVTYP.LE.1) GO TO 405
      IF( IGR .EQ. 1) REWIND 20
      WRITE(20)     CXLK
      IF( IGR .EQ. NGRPS) ENDFILE 20
      GO TO 540
 405  CONTINUE
C
      IF(KGROUP.LE.1) REWIND 19
                      IF(KGROUP.LE.1) REWIND 20
      IF( IALDIR.EQ.1) GO TO 410
      WRITE(19) CXS,CXR,CXT
                      WRITE(20)     CXLK
      GO TO 540
410   CONTINUE
      WRITE(19) CXS,CXR,CXT,CXS3
                      WRITE(20)     CXLK
      GO TO 515
C
C-FOR KEFF CALC'S, COME HERE AFTER FIRST TIME THRU FOR EACH GROUP
C
  500 IF(KGROUP.LE.1) REWIND 19
                    IF(KGROUP.LE.1) REWIND 20
      IF(IALDIR.EQ.1) GO TO 510
      READ(19) CXS,CXR,CXT
                    READ(20)         CXLK
      GO TO 540
  510 CONTINUE
      READ(19) CXS,CXR,CXT,CXS3
                    READ(20)         CXLK
  515 IF(INVDIR.EQ.1) GO TO 540
      DO 530 J=1,JM
      DO 520 I=1,IM
      CXS(I,J,3) = CXS3(I,J)
  520 CONTINUE
  530 CONTINUE
  540 CONTINUE
C
         RETURN
C
C
      END
C$ INNER ===============================================================
      SUBROUTINE INNER(FLUX1, FLUX2, CXS, SORS, IZONE, IZMAT, V0, C0,
     !                   CXR,  CXT , CXLK,  PA, GAM, BAL ,ABSBLK)
C
C-----------------------------------------------------------------------
      COMMON /BLOC/
     ! IREGAD,IEVTYP,ISERCH,  NGPS,NXDOWN,NXCARD,NXTAPE,IGUESS,
     ! MOUTER,MINNER,IALDIR,IOVLAY, IGEOM,    IM,    JM,NZONES,
     !   NMAT,NMIXCD,  IBCL,  IBCR,  IBCT,  IBCB,NIZDEL,NJZDEL,
     !   NPRT,NLIBMT,NBUSTP,IXSTRT,IXEMIC, IEDIT,IGPBUK,IDUP17,
     !  JDUM2, JDUM3, JDUM4, JDUM5,    EV,   EVM, PAREV,  BUCK,
     !   ALAL,  ALAH,   EPS,EPSPAR,EPSFLX,   POD,   ORF, POWER,
     ! FISMEV, XMWFA, ORFFS,ABLYVO,  DUM3,  DUM4,
     ! KOUTER,KINNER,KGROUP,KIITOT, KPAGE,   K07, KDUM1, KDUM2,
     ! IBUCON,IGEOMP,   IMP,   JMP, NGPSP,NZONEP,NXSETS,IDETED,
     !  NSHUF,IBATCH,KONFLX,KONSCH,IALPHA,IDELTA,NEWOLD, IPBAR,
     !  ISBAR,  IMJM,   IHS,   IHT,   ITL,  ITL1,MAXMIN,MAXSEC,
     !  ITEMP,   MGC,  MPIC,  MPJC,ITEMP1,ITEMP2,  NUMX,IBEGIN,
     !     IP,    JP, NGOTO, INVDIR,NGPS2,NBUMAX,  NVAR, KNEG0,
     !    ALA,  ALAP, ALAPP,  ALAR,FLXCHM,   DAY,  DELT,    EQ,
     !   EVPP,   E01,   E02,   E03,  ORFP,CHISUM,  TOTV,  TEMP,
     !  TEMP2, TEMP3, TEMP4,    TI,FISSEN,SFISSP,ALFABS,GPSORS,
     !    EVP, TEMP1,FLXCHG,SERR2P,ESTKHI,ESTKLO,XTRAPK,ESTDOM
C-----------------------------------------------------------------------
      DIMENSION  FLUX1(1), FLUX2(1),CXS(IM,JM,3),SORS(1), IZONE(1),
     !           V0(1), C0(ITL,1), CXR(1), CXT(1), PA(1),
     #      CXLK(1),
     !           BAL(1),GAM(1), IZMAT(1)
C-----------------------------------------------------------------------
      CALL IFLUXN (FLUX2,C0,V0,CXS,IZONE,IZMAT,CXR,CXT,CXLK,GAM,BAL,
     #             ABSBLK)
2     DO 4  I=1, IMJM
4     FLUX1(I) = FLUX2(I)
C     BEGIN FLUX CALCULATION
      IKB = IM - 1
      JKB = JM - 1
C     FLUX CALCULATION USING SOR WITH LINE INVERSION
C
C     CALCULATION OF LEFT BOUNDARY FLUX
      KI = 1
      KJ = 1
      I = KI + (KJ - 1)*IM
      PA(KJ)= (SORS(I) + CXS(KI+1,KJ,1)*FLUX2(I+1))*CXS(KI,KJ,3)
      DO  5 KJ = 2,JKB
      I = KI + (KJ - 1)*IM
5     PA(KJ)=(SORS(I)+CXS(KI+1,KJ,1)*FLUX2(I+1)+CXS(KI,KJ,2)*PA(KJ-1))
     !                 *CXS(KI,KJ,3)
      KJ = JM
      I = KI + (KJ - 1)*IM
      FLUX2(I)  = (SORS(I) + CXS(KI+1,KJ,1)*FLUX2(I+1)
     !                     + CXS(KI,KJ,2)*PA(KJ-1)) *CXS(KI,KJ,3)
      DO 10 KJJ = 2,JM
      KJ = JM - KJJ + 1
      I = KI + (KJ - 1)*IM
10    FLUX2(I) = PA(KJ) + FLUX2(I+IM)*CXS(KI,KJ+1,2)*CXS(KI,KJ,3)
      DO 15 KJ = 1,JM
      I = KI + (KJ - 1)*IM
15    FLUX2(I) = FLUX1(I) + ORF*(FLUX2(I) - FLUX1(I))
C     PRINCIPAL FLUX LOOP
      DO 40 KI = 2,IKB
      KJ = 1
      I = KI + (KJ - 1)*IM
      PA(KJ)= (SORS(I) + CXS(KI,KJ,1)*FLUX2(I-1)
     !            + CXS(KI+1,KJ,1)*FLUX2(I+1)) * CXS(KI,KJ,3)
      DO 25 KJ = 2,JKB
      I = KI + (KJ - 1)*IM
25    PA(KJ) = (SORS(I) + CXS(KI,KJ,1)*FLUX2(I-1)
     !                + CXS(KI+1,KJ,1)*FLUX2(I+1) +
     !               CXS(KI,KJ,2)*PA(KJ-1)) * CXS(KI,KJ,3)
      KJ = JM
      I = KI + (KJ - 1)*IM
      FLUX2(I)  = (SORS(I) + CXS(KI,KJ,1)*FLUX2(I-1)
     !                + CXS(KI+1,KJ,1)*FLUX2(I+1) +
     !               CXS(KI,KJ,2)*PA(KJ-1)) * CXS(KI,KJ,3)
      DO 30 KJJ = 2,JM
      KJ = JM - KJJ + 1
      I = KI + (KJ - 1)*IM
30    FLUX2(I) = PA(KJ) + FLUX2(I+IM)*CXS(KI,KJ+1,2)*CXS(KI,KJ,3)
      DO 35 KJ = 1,JM
      I = KI + (KJ - 1)*IM
35    FLUX2(I) = FLUX1(I) + ORF*(FLUX2(I) - FLUX1(I))
40    CONTINUE
C     CALCULATION OF RIGHT BOUNDARY FLUX
      KI = IM
      KJ = 1
      I = KI + (KJ - 1)*IM
      PA(KJ)= (SORS(I) + CXS(KI,KJ,1)*FLUX2(I-1))*CXS(KI,KJ,3)
      DO 45 KJ = 2,JKB
      I = KI + (KJ - 1)*IM
45    PA(KJ)=(SORS(I)+CXS(KI,KJ,1)*FLUX2(I-1)+CXS(KI,KJ,2)*PA(KJ-1))
     !         * CXS(KI,KJ,3)
      KJ = JM
      I = KI + (KJ - 1)*IM
      FLUX2(I)=(SORS(I)+CXS(KI,KJ,1)*FLUX2(I-1)+CXS(KI,KJ,2)*PA(KJ-1))
     !             * CXS(KI,KJ,3)
      DO 50 KJJ = 2,JM
      KJ = JM - KJJ + 1
      I = KI + (KJ - 1)*IM
50    FLUX2(I) = PA(KJ) + FLUX2(I+IM)*CXS(KI,KJ+1,2)*CXS(KI,KJ,3)
      DO 55 KJ = 1,JM
      I = KI + (KJ - 1)*IM
55    FLUX2(I) = FLUX1(I) + ORF*(FLUX2(I) - FLUX1(I))
C
C     INNER ITERATION CONTROL
C
C --------------------- CLEAR   FLUX   IN THE BLACKREGION ---------
C
                  DO 70  IICK= 1,IMJM
                  ITEMP =IZONE(IICK)
                  ITEMP =IZMAT(ITEMP)
                  IF( C0(IHT,ITEMP) ) 65,65,70
65                FLUX2(IICK) = 0.0
                  FLUX1(IICK) = 0.0
70                CONTINUE
C
C --------------------------------------------------------------------
C
      CALL INNCO(FLUX1,FLUX2)
      KIITOT = KIITOT + 1
      KINNER = KINNER + 1
      IF (KINNER.GE.MINNER) RETURN
      IF (FLXCHG.LE.EPSFLX) RETURN
      GO TO 2
      END
C$ INNER2 ==============================================================
      SUBROUTINE INNER2(FLUX1,FLUX2,CXS, SORS, IZONE, IZMAT, V0, C0,
     !                CXR, CXT,CXLK, PA, GAM, BAL ,ABSBLK)
C
C-----------------------------------------------------------------------
      COMMON /BLOC/
     ! IREGAD,IEVTYP,ISERCH,  NGPS,NXDOWN,NXCARD,NXTAPE,IGUESS,
     ! MOUTER,MINNER,IALDIR,IOVLAY, IGEOM,    IM,    JM,NZONES,
     !   NMAT,NMIXCD,  IBCL,  IBCR,  IBCT,  IBCB,NIZDEL,NJZDEL,
     !   NPRT,NLIBMT,NBUSTP,IXSTRT,IXEMIC, IEDIT,IGPBUK,IDUP17,
     !  JDUM2, JDUM3, JDUM4, JDUM5,    EV,   EVM, PAREV,  BUCK,
     !   ALAL,  ALAH,   EPS,EPSPAR,EPSFLX,   POD,   ORF, POWER,
     ! FISMEV, XMWFA, ORFFS,ABLYVO,  DUM3,  DUM4,
     ! KOUTER,KINNER,KGROUP,KIITOT, KPAGE,   K07, KDUM1, KDUM2,
     ! IBUCON,IGEOMP,   IMP,   JMP, NGPSP,NZONEP,NXSETS,IDETED,
     !  NSHUF,IBATCH,KONFLX,KONSCH,IALPHA,IDELTA,NEWOLD, IPBAR,
     !  ISBAR,  IMJM,   IHS,   IHT,   ITL,  ITL1,MAXMIN,MAXSEC,
     !  ITEMP,   MGC,  MPIC,  MPJC,ITEMP1,ITEMP2,  NUMX,IBEGIN,
     !     IP,    JP, NGOTO, INVDIR,NGPS2,NBUMAX,  NVAR, KNEG0,
     !    ALA,  ALAP, ALAPP,  ALAR,FLXCHM,   DAY,  DELT,    EQ,
     !   EVPP,   E01,   E02,   E03,  ORFP,CHISUM,  TOTV,  TEMP,
     !  TEMP2, TEMP3, TEMP4,    TI,FISSEN,SFISSP,ALFABS,GPSORS,
     !    EVP, TEMP1,FLXCHG,SERR2P,ESTKHI,ESTKLO,XTRAPK,ESTDOM
C-----------------------------------------------------------------------
      DIMENSION  FLUX1(1), FLUX2(1),CXS(IM,JM,3),SORS(1), IZONE(1),
     !             V0(1), C0(ITL,1), CXR(1), CXT(1),
     #         CXLK(1),
     !             PA(1), BAL(1), GAM(1), IZMAT(1)
C-----------------------------------------------------------------------
      CALL IFLUXN (FLUX2,C0,V0,CXS,IZONE,IZMAT,CXR,CXT,CXLK,GAM,BAL,
     #             ABSBLK)
2     DO 4  I=1, IMJM
4     FLUX1(I) = FLUX2(I)
C     BEGIN FLUX CALCULATION
      IKB = IM - 1
      JKB = JM - 1
C     FLUX CALCULATION USING SOR WITH LINE INVERSION
C
C     CALCULATION OF BOTTOM BOUNDARY FLUX
      KI = 1
      KJ = 1
      I = KI + (KJ - 1)*IM
      PA(KI)= (SORS(I) + CXS(KI,KJ+1,2)*FLUX2(I+IM)) *CXS(KI,KJ,3)
      DO  5 KI = 2,IKB
      I = KI + (KJ - 1)*IM
5     PA(KI)=(SORS(I)+CXS(KI,KJ+1,2)*FLUX2(I+IM)+CXS(KI,KJ,1)*PA(KI-1))
     !               * CXS(KI,KJ,3)
      KI = IM
      I = KI + (KJ - 1)*IM
      FLUX2(I)  = (SORS(I) + CXS(KI,KJ+1,2)*FLUX2(I+IM)+
     !   CXS(KI,KJ,1)*PA(KI-1)) *CXS(KI,KJ,3)
      DO 10 KIIP = 2,IM
      KI = IM - KIIP + 1
      I = KI + (KJ - 1)*IM
10    FLUX2(I) = PA(KI) + FLUX2(I+1)*CXS(KI+1,KJ,1)*CXS(KI,KJ,3)
      DO 15 KI = 1,IM
      I = KI + (KJ - 1)*IM
15    FLUX2(I) = FLUX1(I) + ORF*(FLUX2(I) - FLUX1(I))
C     PRINCIPAL FLUX LOOP
      DO 40 KJ = 2,JKB
      KI = 1
      I = KI + (KJ - 1)*IM
      PA(KI)= (SORS(I) + CXS(KI,KJ,2)*FLUX2(I-IM)
     !  + CXS(KI,KJ+1,2)*FLUX2(I+IM))  * CXS(KI,KJ,3)
      DO 25 KI = 2,IKB
      I = KI + (KJ - 1)*IM
25    PA(KI) = (SORS(I) + CXS(KI,KJ,2)*FLUX2(I-IM)+
     !           CXS(KI,KJ+1,2)*FLUX2(I+IM)+
     !             CXS(KI,KJ,1)*PA(KI-1)) *CXS(KI,KJ,3)
      KI = IM
      I = KI + (KJ - 1)*IM
      FLUX2(I)  = (SORS(I) + CXS(KI,KJ,2)*FLUX2(I-IM)+
     !             CXS(KI,KJ+1,2)*FLUX2(I+IM)+
     !              CXS(KI,KJ,1)*PA(KI-1))  *CXS(KI,KJ,3)
      DO 30 KIIP = 2,IM
      KI = IM - KIIP + 1
      I = KI + (KJ - 1)*IM
30    FLUX2(I) = PA(KI) + FLUX2(I+1)*CXS(KI+1,KJ,1)*CXS(KI,KJ,3)
      DO 35 KI = 1,IM
      I = KI + (KJ - 1)*IM
35    FLUX2(I) = FLUX1(I) + ORF*(FLUX2(I) - FLUX1(I))
40    CONTINUE
C     CALCULATION OF TOP BOUNDARY FLUX
      KJ = JM
      KI = 1
      I = KI + (KJ - 1)*IM
      PA(KI) = (SORS(I) + CXS(KI,KJ,2)*FLUX2(I-IM))*CXS(KI,KJ,3)
      DO 45 KI = 2,IKB
      I = KI + (KJ - 1)*IM
45    PA(KI) = (SORS(I) + CXS(KI,KJ,2)*FLUX2(I-IM)+
     !           CXS(KI,KJ,1)*PA(KI-1))    *CXS(KI,KJ,3)
      KI = IM
      I = KI + (KJ - 1)*IM
      FLUX2(I)  = (SORS(I) + CXS(KI,KJ,2)*FLUX2(I-IM)+
     !            CXS(KI,KJ,1)*PA(KI-1))     *CXS(KI,KJ,3)
      DO 50 KIIP = 2,IM
      KI = IM - KIIP + 1
      I = KI + (KJ - 1)*IM
50    FLUX2(I) = PA(KI) + FLUX2(I+1)*CXS(KI+1,KJ,1)*CXS(KI,KJ,3)
      DO 55 KI = 1,IM
      I = KI + (KJ - 1)*IM
55    FLUX2(I) = FLUX1(I) + ORF*(FLUX2(I) - FLUX1(I))
C
C --------------------- CLEAR   FLUX   IN THE BLACKREGION ---------
C
                  DO 70  IICK= 1,IMJM
                  ITEMP =IZONE(IICK)
                  ITEMP =IZMAT(ITEMP)
                  IF( C0(IHT,ITEMP) ) 65,65,70
65                FLUX2(IICK) = 0.0
                  FLUX1(IICK) = 0.0
70                CONTINUE
C
C --------------------------------------------------------------------
C
C     INNER ITERATION CONTROL
C
      CALL INNCO(FLUX1,FLUX2)
      KIITOT = KIITOT + 1
      KINNER = KINNER + 1
      IF (KINNER.GE.MINNER) RETURN
      IF (FLXCHG.LE.EPSFLX) RETURN
      GO TO 2
      END
C$ INNERP ==============================================================
      SUBROUTINE INNERP(FLUX1, FLUX2, CXS, SORS, IZONE, IZMAT, V0, C0,
     !                  CXR, CXT,CXLK, PA, GAM, BAL,ABSBLK)
C
C-----------------------------------------------------------------------
      COMMON /BLOC/
     ! IREGAD,IEVTYP,ISERCH,  NGPS,NXDOWN,NXCARD,NXTAPE,IGUESS,
     ! MOUTER,MINNER,IALDIR,IOVLAY, IGEOM,    IM,    JM,NZONES,
     !   NMAT,NMIXCD,  IBCL,  IBCR,  IBCT,  IBCB,NIZDEL,NJZDEL,
     !   NPRT,NLIBMT,NBUSTP,IXSTRT,IXEMIC, IEDIT,IGPBUK,IDUP17,
     !  JDUM2, JDUM3, JDUM4, JDUM5,    EV,   EVM, PAREV,  BUCK,
     !   ALAL,  ALAH,   EPS,EPSPAR,EPSFLX,   POD,   ORF, POWER,
     ! FISMEV, XMWFA, ORFFS,ABLYVO,  DUM3,  DUM4,
     ! KOUTER,KINNER,KGROUP,KIITOT, KPAGE,   K07, KDUM1, KDUM2,
     ! IBUCON,IGEOMP,   IMP,   JMP, NGPSP,NZONEP,NXSETS,IDETED,
     !  NSHUF,IBATCH,KONFLX,KONSCH,IALPHA,IDELTA,NEWOLD, IPBAR,
     !  ISBAR,  IMJM,   IHS,   IHT,   ITL,  ITL1,MAXMIN,MAXSEC,
     !  ITEMP,   MGC,  MPIC,  MPJC,ITEMP1,ITEMP2,  NUMX,IBEGIN,
     !     IP,    JP, NGOTO, INVDIR,NGPS2,NBUMAX,  NVAR, KNEG0,
     !    ALA,  ALAP, ALAPP,  ALAR,FLXCHM,   DAY,  DELT,    EQ,
     !   EVPP,   E01,   E02,   E03,  ORFP,CHISUM,  TOTV,  TEMP,
     !  TEMP2, TEMP3, TEMP4,    TI,FISSEN,SFISSP,ALFABS,GPSORS,
     !    EVP, TEMP1,FLXCHG,SERR2P,ESTKHI,ESTKLO,XTRAPK,ESTDOM
C-----------------------------------------------------------------------
      DIMENSION  FLUX1(1), FLUX2(1),CXS(IM,JM,3),SORS(1), IZONE(1),
     !               V0(1), C0(ITL,1), CXR(1), CXT(1),
     #         CXLK(1),
     !               PA(1), BAL(1), GAM(1), IZMAT(1)
C-----------------------------------------------------------------------
C     THIS SUBROUTINE CALCULATES THE FLUX FOR PERIODIC B. C.
      CALL IFLUXN (FLUX2,C0,V0,CXS,IZONE,IZMAT,CXR,CXT,CXLK,GAM,BAL,
     #             ABSBLK)
2     DO 4  I=1, IMJM
4     FLUX1(I) = FLUX2(I)
C     BEGIN FLUX CALCULATION
      IKB = IM - 1
      JKB = JM - 1
C     FLUX CALCULATION USING SOR WITH LINE INVERSION
C
C     CALCULATION OF LEFT BOUNDARY FLUX
      KI = 1
      KJ = 1
      I = KI + (KJ - 1)*IM
      FLUX2(I) = CXS(KI,1,2)*CXS(KI,KJ,3)
      TEMP1 = FLUX2(I)
      TEMP = CXS(KI,KJ+1,2)*CXS(KI,KJ,3)
      PA(KJ)= (SORS(I) + CXS(KI+1,KJ,1)*FLUX2(I+1)) *CXS(KI,KJ,3)
      TEMP2 = PA(KJ)
      DO  5 KJ = 2,JKB
      I = KI + (KJ - 1)*IM
      FLUX2(I) = CXS(KI,KJ,2) * FLUX2(I-IM) *CXS(KI,KJ,3)
      TEMP1 = TEMP1 + TEMP*FLUX2(I)
      PA(KJ)=(SORS(I)+CXS(KI+1,KJ,1)*FLUX2(I+1)+CXS(KI,KJ,2)*PA(KJ-1))
     !               * CXS(KI,KJ,3)
      TEMP2 = TEMP2 + TEMP*PA(KJ)
5     TEMP = TEMP*CXS(KI,KJ+1,2)*CXS(KI,KJ,3)
      KJ = JM
      I = KI + (KJ - 1)*IM
      TEMP1 =(TEMP1 +  TEMP)*CXS(KI,1,2) + CXS(KI,KJ,2)*FLUX2(I-IM)
      FLUX2(I)  = (SORS(I) + CXS(KI+1,KJ,1)*FLUX2(I+1)
     !         + CXS(KI,KJ,2)*PA(KJ-1)  + CXS(KI,1,2)*TEMP2 )
     !         *CXS(KI,KJ,3)/(1.-TEMP1*CXS(KI,KJ,3))
      DO 10 KJJ = 2,JM
      KJ = JM - KJJ + 1
      I = KI + (KJ - 1)*IM
      KIIP = (JM-1)*IM + KI
10    FLUX2(I)=PA(KJ) + FLUX2(I+IM)*CXS(KI,KJ+1,2)*CXS(KI,KJ,3)
     !                + FLUX2(I) * FLUX2(KIIP)
      DO 15 KJ = 1,JM
      I = KI + (KJ - 1)*IM
15    FLUX2(I) = FLUX1(I) + ORF*(FLUX2(I) - FLUX1(I))
C     PRINCIPAL FLUX LOOP
      DO 40 KI = 2,IKB
      KJ = 1
      I = KI + (KJ - 1)*IM
      FLUX2(I) = CXS(KI,1,2)*CXS(KI,KJ,3)
      TEMP1 = FLUX2(I)
      TEMP = CXS(KI,KJ+1,2)*CXS(KI,KJ,3)
      PA(KJ)= (SORS(I) + CXS(KI,KJ,1)*FLUX2(I-1)
     !    + CXS(KI+1,KJ,1)*FLUX2(I+1))  *  CXS(KI,KJ,3)
      TEMP2 = PA(KJ)
      DO 25 KJ = 2,JKB
      I = KI + (KJ - 1)*IM
      FLUX2(I) = CXS(KI,KJ,2) * FLUX2(I-IM) * CXS(KI,KJ,3)
      TEMP1 = TEMP1 + TEMP*FLUX2(I)
      PA(KJ) = (SORS(I) + CXS(KI,KJ,1)*FLUX2(I-1)
     !        + CXS(KI+1,KJ,1)*FLUX2(I+1) +
     !          CXS(KI,KJ,2)*PA(KJ-1))   *CXS(KI,KJ,3)
      TEMP2 = TEMP2 + TEMP*PA(KJ)
25    TEMP = TEMP*CXS(KI,KJ+1,2)*CXS(KI,KJ,3)
      KJ = JM
      I = KI + (KJ - 1)*IM
      TEMP1 =(TEMP1 +  TEMP)*CXS(KI,1,2) + CXS(KI,KJ,2)*FLUX2(I-IM)
      FLUX2(I)  = (SORS(I) + CXS(KI,KJ,1)*FLUX2(I-1)
     !   + CXS(KI+1,KJ,1)*FLUX2(I+1) + CXS(KI,1,2)*TEMP2 +
     !     CXS(KI,KJ,2)*PA(KJ-1))*CXS(KI,KJ,3)/(1.-TEMP1*CXS(KI,KJ,3))
      DO 30 KJJ = 2,JM
      KJ = JM - KJJ + 1
      I = KI + (KJ - 1)*IM
      KIIP = (JM-1)*IM + KI
30    FLUX2(I)=PA(KJ) + FLUX2(I+IM)*CXS(KI,KJ+1,2)*CXS(KI,KJ,3)
     !                + FLUX2(I) * FLUX2(KIIP)
      DO 35 KJ = 1,JM
      I = KI + (KJ - 1)*IM
35    FLUX2(I) = FLUX1(I) + ORF*(FLUX2(I) - FLUX1(I))
40    CONTINUE
C     CALCULATION OF RIGHT BOUNDARY FLUX
      KI = IM
      KJ = 1
      I = KI + (KJ - 1)*IM
      FLUX2(I) = CXS(KI,1,2)*CXS(KI,KJ,3)
      TEMP1 = FLUX2(I)
      TEMP = CXS(KI,KJ+1,2)*CXS(KI,KJ,3)
      PA(KJ)= (SORS(I) + CXS(KI,KJ,1)*FLUX2(I-1))*CXS(KI,KJ,3)
      TEMP2 = PA(KJ)
      DO 45 KJ = 2,JKB
      I = KI + (KJ - 1)*IM
      FLUX2(I) = CXS(KI,KJ,2) * FLUX2(I-IM) * CXS(KI,KJ,3)
      TEMP1 = TEMP1 + TEMP*FLUX2(I)
      PA(KJ) = (SORS(I) + CXS(KI,KJ,1)*FLUX2(I-1)
     !            +CXS(KI,KJ,2)*PA(KJ-1)) *CXS(KI,KJ,3)
      TEMP2 = TEMP2 + TEMP*PA(KJ)
45    TEMP = TEMP*CXS(KI,KJ+1,2)*CXS(KI,KJ,3)
      KJ = JM
      I = KI + (KJ - 1)*IM
      TEMP1 =(TEMP1 +  TEMP)*CXS(KI,1,2) + CXS(KI,KJ,2)*FLUX2(I-IM)
      FLUX2(I)  = (SORS(I) + CXS(KI,KJ,1)*FLUX2(I-1)
     !            + CXS(KI,KJ,2)*PA(KJ-1) + CXS(KI,1,2)*TEMP2)
     !               *CXS(KI,KJ,3)/(1. - CXS(KI,KJ,3)*TEMP1)
      DO 50 KJJ = 2,JM
      KJ = JM - KJJ + 1
      I = KI + (KJ - 1)*IM
      KIIP = (JM-1)*IM + KI
50    FLUX2(I)=PA(KJ)+ FLUX2(I+IM)*CXS(KI,KJ+1,2)*CXS(KI,KJ,3)
     !               + FLUX2(I) * FLUX2(KIIP)
      DO 55 KJ = 1,JM
      I = KI + (KJ - 1)*IM
55    FLUX2(I) = FLUX1(I) + ORF*(FLUX2(I) - FLUX1(I))
C     CALCULATION OF ERROR CRITERION
C
C --------------------- CLEAR   FLUX   IN THE BLACKREGION ---------
C
                  DO 70  IICK= 1,IMJM
                  ITEMP =IZONE(IICK)
                  ITEMP =IZMAT(ITEMP)
                  IF( C0(IHT,ITEMP) ) 65,65,70
65                FLUX2(IICK) = 0.0
                  FLUX1(IICK) = 0.0
70                CONTINUE
C
C --------------------------------------------------------------------
C
C     INNER ITERATION CONTROL
      CALL INNCO(FLUX1,FLUX2)
      KIITOT = KIITOT + 1
      KINNER = KINNER + 1
      IF (KINNER.GE.MINNER) RETURN
      IF (FLXCHG.LE.EPSFLX) RETURN
      GO TO 2
      END
C$ INNCO = CONVERGENCE TEST ============================================
      SUBROUTINE INNCO(FLUX1,FLUX2)
C
C-----------------------------------------------------------------------
      COMMON /BLOC/
     ! IREGAD,IEVTYP,ISERCH,  NGPS,NXDOWN,NXCARD,NXTAPE,IGUESS,
     ! MOUTER,MINNER,IALDIR,IOVLAY, IGEOM,    IM,    JM,NZONES,
     !   NMAT,NMIXCD,  IBCL,  IBCR,  IBCT,  IBCB,NIZDEL,NJZDEL,
     !   NPRT,NLIBMT,NBUSTP,IXSTRT,IXEMIC, IEDIT,IGPBUK,IDUP17,
     !  JDUM2, JDUM3, JDUM4, JDUM5,    EV,   EVM, PAREV,  BUCK,
     !   ALAL,  ALAH,   EPS,EPSPAR,EPSFLX,   POD,   ORF, POWER,
     ! FISMEV, XMWFA, ORFFS,ABLYVO,  DUM3,  DUM4,
     ! KOUTER,KINNER,KGROUP,KIITOT, KPAGE,   K07, KDUM1, KDUM2,
     ! IBUCON,IGEOMP,   IMP,   JMP, NGPSP,NZONEP,NXSETS,IDETED,
     !  NSHUF,IBATCH,KONFLX,KONSCH,IALPHA,IDELTA,NEWOLD, IPBAR,
     !  ISBAR,  IMJM,   IHS,   IHT,   ITL,  ITL1,MAXMIN,MAXSEC,
     !  ITEMP,   MGC,  MPIC,  MPJC,ITEMP1,ITEMP2,  NUMX,IBEGIN,
     !     IP,    JP, NGOTO, INVDIR,NGPS2,NBUMAX,  NVAR, KNEG0,
     !    ALA,  ALAP, ALAPP,  ALAR,FLXCHM,   DAY,  DELT,    EQ,
     !   EVPP,   E01,   E02,   E03,  ORFP,CHISUM,  TOTV,  TEMP,
     !  TEMP2, TEMP3, TEMP4,    TI,FISSEN,SFISSP,ALFABS,GPSORS,
     !    EVP, TEMP1,FLXCHG,SERR2P,ESTKHI,ESTKLO,XTRAPK,ESTDOM
C-----------------------------------------------------------------------
      DIMENSION FLUX1(1),FLUX2(1)
C-----------------------------------------------------------------------
C*****INNER ITERATION CONTROL-CHANGED
C
      FLXCHG = .0
      DO 20 I = 1,IMJM
         TEMP2 = ABS (FLUX2(I) - FLUX1(I))
         IF (FLXCHG .GE. TEMP2) GO TO 20
            FLXCHG = TEMP2
            ITEMP3=I
20    CONTINUE
C
         FLXCHG = FLXCHG / FLUX2(ITEMP3)
         FLXCHM = AMAX1( FLXCHG, FLXCHM )
         MPIC   = MOD(ITEMP3-1,IM) + 1
         MPJC   = ((ITEMP3-MPIC)/IM) + 1
C
      RETURN
      END
C$ IFLUXN ==============================================================
      SUBROUTINE IFLUXN (FLUX2,C0,V0,CXS,IZONE,IZMAT,
     !                   CXR,CXT, CXLK , GAM, BAL,ABSBLK)
C
C  --- CXLK ADDED TO ARGUMENT  FOR  BLACKREGION CALCULATION --------
C
C-----------------------------------------------------------------------
      COMMON /BLOC/
     ! IREGAD,IEVTYP,ISERCH,  NGPS,NXDOWN,NXCARD,NXTAPE,IGUESS,
     ! MOUTER,MINNER,IALDIR,IOVLAY, IGEOM,    IM,    JM,NZONES,
     !   NMAT,NMIXCD,  IBCL,  IBCR,  IBCT,  IBCB,NIZDEL,NJZDEL,
     !   NPRT,NLIBMT,NBUSTP,IXSTRT,IXEMIC, IEDIT,IGPBUK,IDUP17,
     !  JDUM2, JDUM3, JDUM4, JDUM5,    EV,   EVM, PAREV,  BUCK,
     !   ALAL,  ALAH,   EPS,EPSPAR,EPSFLX,   POD,   ORF, POWER,
     ! FISMEV, XMWFA, ORFFS,ABLYVO,  DUM3,  DUM4,
     ! KOUTER,KINNER,KGROUP,KIITOT, KPAGE,   K07, KDUM1, KDUM2,
     ! IBUCON,IGEOMP,   IMP,   JMP, NGPSP,NZONEP,NXSETS,IDETED,
     !  NSHUF,IBATCH,KONFLX,KONSCH,IALPHA,IDELTA,NEWOLD, IPBAR,
     !  ISBAR,  IMJM,   IHS,   IHT,   ITL,  ITL1,MAXMIN,MAXSEC,
     !  ITEMP,   MGC,  MPIC,  MPJC,ITEMP1,ITEMP2,  NUMX,IBEGIN,
     !     IP,    JP, NGOTO, INVDIR,NGPS2,NBUMAX,  NVAR, KNEG0,
     !    ALA,  ALAP, ALAPP,  ALAR,FLXCHM,   DAY,  DELT,    EQ,
     !   EVPP,   E01,   E02,   E03,  ORFP,CHISUM,  TOTV,  TEMP,
     !  TEMP2, TEMP3, TEMP4,    TI,FISSEN,SFISSP,ALFABS,GPSORS,
     !    EVP, TEMP1,FLXCHG,SERR2P,ESTKHI,ESTKLO,XTRAPK,ESTDOM
C-----------------------------------------------------------------------
      DIMENSION  FLUX2(1), C0(ITL,1), V0(1),CXS(IM,JM,3),IZONE(1),
     !          CXR(1), CXT(1), GAM(1), BAL(11,1), IZMAT(1),
     #        CXLK(1)
C-----------------------------------------------------------------------
C     THIS SUBROUTINE NORMALIZES FLUXES BEFORE EACH INNER ITERATION
C     ABSORPTION AND OUT-SCATTER
      BAL(4,KGROUP) = 0.0
      BAL(5,KGROUP) = 0.0
      BAL(11,KGROUP)= 0.0
      DO 10  I=1, IMJM
      TEMP = V0(I)*FLUX2(I)
      ITEMPG = IZONE(I)
      ITEMP = IZMAT(ITEMPG)
      BAL(4,KGROUP) = BAL(4,KGROUP) + (C0(4,ITEMP) - C0(5,ITEMP)
     !                              - C0(2,ITEMP))*TEMP
C
CCCC  BAL(5,KGROUP) = BAL(5,KGROUP) + C0(2,ITEMP)*TEMP  CCCCCCCCCCCCCC
C
                      BAL(5,KGROUP) = BAL(5,KGROUP) + C0(2,ITEMP)*TEMP
     #                              + CXLK(I)*FLUX2(I)
                      DBAL11= 0.0
                      IF(C0(4,ITEMP).GT.0.0) DBAL11= BUCK*GAM(ITEMPG)/
     #                               (3.*C0(4,ITEMP))*TEMP
   10 BAL(11,KGROUP)= BAL(11,KGROUP) + DBAL11
C
C     LEFT LEAKAGE
      IF(IBCL)  20, 20, 40
20    BAL(6,KGROUP) = 0.0
      DO 30  KJ = 1, JM
      I = (KJ - 1)*IM + 1
30    BAL(6,KGROUP) = BAL(6,KGROUP) + CXS(1,KJ,1)*FLUX2(I)
      GO TO 50
40    BAL(6,KGROUP) = .0
C     RIGHT LEAKAGE
50    IF(IBCR)  60, 60, 80
60    BAL(7,KGROUP) = 0.0
      DO 70  KJ = 1, JM
      I = KJ*IM
70    BAL(7,KGROUP) = BAL(7,KGROUP) + CXR(KJ)*FLUX2(I)
      GO TO 90
80    BAL(7,KGROUP) = 0.0
C     TOP LEAKAGE
90    IF(IBCT-1)  120, 140, 100
100   BAL(8,KGROUP) =.0
      DO 110   KI = 1,IM
      I = IMJM - IM + KI
110   BAL(8,KGROUP) = BAL(8,KGROUP) + CXS(KI,1,2)*(FLUX2(I)-FLUX2(KI))
      BAL(9,KGROUP) = - BAL(8,KGROUP)
      GO TO 190
120   BAL(8,KGROUP) = 0.0
      DO 130  KI = 1, IM
      I = IMJM - IM + KI
130   BAL(8,KGROUP) = BAL(8,KGROUP) + CXT(KI)*FLUX2(I)
      GO TO 150
140   BAL(8,KGROUP) = 0.0
C     BOTTOM LEAKAGE
150   IF(IBCB)  160, 160, 180
160   BAL(9,KGROUP) = 0.0
      DO 170 KI = 1, IM
170   BAL(9,KGROUP) = BAL(9,KGROUP) + CXS(KI,1,2)*FLUX2(KI)
      GO TO 190
180   BAL(9,KGROUP) = 0.0
C          NOTE-   DB2 ADDED TO TOTAL LEAK FOR NEUTRON BAL:
190   BAL(10,KGROUP) = BAL(6,KGROUP) + BAL(7,KGROUP) + BAL(8,KGROUP)
     !                + BAL(9,KGROUP) + BAL(11,KGROUP)
      TEMP = (BAL(2,KGROUP) + BAL(3,KGROUP))/(BAL(4,KGROUP)
     !                + BAL(5,KGROUP) + BAL(10,KGROUP) +  ABSBLK  )
      DO 200 I = 1, IMJM
200   FLUX2(I) = TEMP*FLUX2(I)
      BAL(4,KGROUP) = TEMP*BAL(4,KGROUP)
      BAL(5,KGROUP) = TEMP*BAL(5,KGROUP)
      BAL(6,KGROUP) = TEMP*BAL(6,KGROUP)
      BAL(7,KGROUP) = TEMP*BAL(7,KGROUP)
      BAL(8,KGROUP) = TEMP*BAL(8,KGROUP)
      BAL(9,KGROUP) = TEMP*BAL(9,KGROUP)
      BAL(10,KGROUP)= TEMP*BAL(10,KGROUP)
      BAL(11,KGROUP)= TEMP*BAL(11,KGROUP)
      RETURN
      END
C$ CNNP ================================================================
      SUBROUTINE CNNP (FISS2,CHIEFF,BAL)
C
C-----------------------------------------------------------------------
      COMMON/UNITS/ DATIM(3), TIMEI,  KSTEP, NINP, NOUT, NDUMP,
     !           NFLUX1,NSORCE,NBULIB,NCXS,NGUESS,NSCRAT
      CHARACTER*4 FMTTIT,FMTDSH,FMTEQL,FMTAST,FMTSP2,FMTSP3
      COMMON/UNIT1/ FMTTIT(13),
     !           FMTDSH(4),FMTEQL(4),FMTAST(4),FMTSP2(2),FMTSP3(2)
      CHARACTER*4 ID
      COMMON /UNIT3/ ID(20)
C-----------------------------------------------------------------------
      COMMON /BLOC/
     ! IREGAD,IEVTYP,ISERCH,  NGPS,NXDOWN,NXCARD,NXTAPE,IGUESS,
     ! MOUTER,MINNER,IALDIR,IOVLAY, IGEOM,    IM,    JM,NZONES,
     !   NMAT,NMIXCD,  IBCL,  IBCR,  IBCT,  IBCB,NIZDEL,NJZDEL,
     !   NPRT,NLIBMT,NBUSTP,IXSTRT,IXEMIC, IEDIT,IGPBUK,IDUP17,
     !  JDUM2, JDUM3, JDUM4, JDUM5,    EV,   EVM, PAREV,  BUCK,
     !   ALAL,  ALAH,   EPS,EPSPAR,EPSFLX,   POD,   ORF, POWER,
     ! FISMEV, XMWFA, ORFFS,ABLYVO,  DUM3,  DUM4,
     ! KOUTER,KINNER,KGROUP,KIITOT, KPAGE,   K07, KDUM1, KDUM2,
     ! IBUCON,IGEOMP,   IMP,   JMP, NGPSP,NZONEP,NXSETS,IDETED,
     !  NSHUF,IBATCH,KONFLX,KONSCH,IALPHA,IDELTA,NEWOLD, IPBAR,
     !  ISBAR,  IMJM,   IHS,   IHT,   ITL,  ITL1,MAXMIN,MAXSEC,
     !  ITEMP,   MGC,  MPIC,  MPJC,ITEMP1,ITEMP2,  NUMX,IBEGIN,
     !     IP,    JP, NGOTO, INVDIR,NGPS2,NBUMAX,  NVAR, KNEG0,
     !    ALA,  ALAP, ALAPP,  ALAR,FLXCHM,   DAY,  DELT,    EQ,
     !   EVPP,   E01,   E02,   E03,  ORFP,CHISUM,  TOTV,  TEMP,
     !  TEMP2, TEMP3, TEMP4,    TI,FISSEN,SFISSP,ALFABS,GPSORS,
     !    EVP, TEMP1,FLXCHG,SERR2P,ESTKHI,ESTKLO,XTRAPK,ESTDOM
C-----------------------------------------------------------------------
      DIMENSION FISS2(1), CHIEFF(1), BAL(11,1)
C-----------------------------------------------------------------------
C     CONVERGENCE TESTS
C
      IF(MAXMIN.LE.0) GO TO 25
         IF(TI.LT.MAXSEC)  GO TO 25
         NGOTO = 1
         WRITE(NOUT,20)
20       FORMAT('1**RUNNING TIME EXCEEDED--FORCED CONVERGENCE**')
         RETURN
25    CONTINUE
C
      E01=1.0-ALA
      E02=ABS(E01)
      IF( E02 .LT. 10.0*EPS )   ORF=ORFP
C
      IF( BAL(2,NGPSP).EQ.0.0 ) CALL ERRO2('**CNNP',30,1)
C
      IF (E02.GT.EPS) GO TO 70
          IF( (FLXCHM.LE.EPSFLX) .OR. (EPSFLX.LE.0.0) )   KONFLX=1
70    CONTINUE
      CALL CLEARS(0.0, FISS2, IMJM)
      GO TO 105
C
80    EV=EV+POD*EQ*E01
      GO TO 170
C
C     FINAL PRINT
90    NGOTO=1
      IF (IEVTYP - 1)  135,  95,  80
95    EV=0.0
      DO 100   I=1,NGPS
100   EV=EV+CHIEFF(I)
      EV=CHISUM/EV
      GO TO 135
C
105   IF(KONFLX.EQ.1 .AND. E02.LE.EPS) GO TO 90
C
110   IF(IEVTYP-1) 115, 120, 140
C     MONITOR PRINT
115   NGOTO=2
      GO TO 135
C
120   EV=0.
      DO 125 I=1,NGPS
125   EV=EV+CHIEFF(I)
      EV=CHISUM/EV
      GO TO 115
C
135   RETURN
140   CONTINUE
C
C     CALCULATE NEW PARAMETERS FOR SEARCH CALCULATIONS
145   E03=ABS (ALA-ALAR)
      IF (ALAPP)  270, 150, 270
150   IF (ALAP)  230, 155, 230
155   IF (EQ) 200, 160, 200
160   IF (E03-EPSPAR) 175, 175, 165
C     MONITOR PRINT.
165   NGOTO=2
      RETURN
C     FINAL PRINT EXIT.
170   NGOTO=1
      RETURN
175   ALAP=ALA
      EVP=EV
      IF (E01) 185,185,180
180   EV=EV-EVM
      GO TO 190
185   EV=EV+EVM
190   IF (IEVTYP-2)   195,  165,  195
C     MIX X-SECS.
195   NGOTO=3
      RETURN
200   IF (KONFLX) 170, 205,170
205   EV=EV+POD*EQ*E01
210   IF ((ALAPP-1.0)/(ALAP-1.0))  215, 190, 190
215   TEMP1=AMIN1(EVP,EVPP)
      IF (EV-TEMP1)  220, 225, 225
220   EV=(EVPP+EVP)/2.
      GO TO 190
225   TEMP1=AMAX1(EVP,EVPP)
      IF (EV-TEMP1)  190, 220, 220
230   IF (E03-EPSPAR)  235, 235, 165
235   EQ=(EVP-EV)/(ALAP-ALA)
240   IF (KONSCH)  260, 245, 260
245   IF (E02-ALAL)  265, 265, 250
250   IF (E02-ALAH)  260, 260, 255
255   E01=SIGN (ALAH,E01)
260   ALAPP=ALAP
      ALAP=ALA
      EVPP=EVP
      EVP=EV
      GO TO 205
265   KONSCH=1
      ALAP=0.0
      ALAPP=0.0
      GO TO 205
270   IF (E03-EPSPAR) 275, 275, 165
C     CALCULATE QUADRATIC COEFFICIENTS.
275   TEMP1=EVP-EV
      TEMP2=EVPP-EV
      TEMP3=EVPP-EVP
      TEMP4=TEMP1*(EVP+EV)
      TEMP5=-TEMP2*(EV+EVPP)
      TEMP6=TEMP3*(EVPP+EVP)
      DENOM=TEMP3*TEMP2*TEMP1
      EQA=((ALAPP-1.0)*TEMP1*EVP*EV-(ALAP-1.0)*TEMP2
     !*EV*EVPP+(ALA-1.0)*TEMP3*EVPP*EVP)/DENOM
      EQB=-(ALAPP*TEMP4+ALAP*TEMP5+ALA*TEMP6)/DENOM
      EQC=(ALAPP*TEMP1-ALAP*TEMP2+ALA*TEMP3)/DENOM
      DISCR=EQB*EQB-4.0*EQA*EQC
      IF (DISCR)  235, 280, 280
280   IF (E02-ALAL)  265, 265, 285
285   TEMP1=EQC+EQC
      TEMP=SQRT (DISCR)
      EQ=1.0/(EQB+EV*TEMP1)
      ALAPP=ALAP
      ALAP=ALA
      EVPP=EVP
      EVP=EV
      EV1=(TEMP-EQB)/TEMP1
      EV2=-(TEMP+EQB)/TEMP1
      EVA=ABS (EV-EV1)
      EVB=ABS (EV-EV2)
      IF (EVA-EVB)  290, 290, 295
290   EV=EV1
      GO TO 210
295   EV=EV2
      GO TO 210
      END
C$ S8850 ===============================================================
      SUBROUTINE S8850(FISS2,FLUX2,R1,Z1,R4,Z4,R5,Z5,
     !             C,FLUX1,IZONE,IZMAT,FISS1,V0,IED,TED,VED,BAL,
     !             VOL,FLXVOL,PED,GAM,CHIIN ,
     #                         FLUX2H,FLUX2V,POWEDG,IPEAK,
     #                         FLUX1H,FLUX1V,CXLK,PBLK )
C
C-----------------------------------------------------------------------
      COMMON/UNITS/ DATIM(3), TIMEI,  KSTEP, NINP, NOUT, NDUMP,
     !           NFLUX1,NSORCE,NBULIB,NCXS,NGUESS,NSCRAT
      CHARACTER*4 FMTTIT,FMTDSH,FMTEQL,FMTAST,FMTSP2,FMTSP3
      COMMON/UNIT1/ FMTTIT(13),
     !           FMTDSH(4),FMTEQL(4),FMTAST(4),FMTSP2(2),FMTSP3(2)
      CHARACTER*4 ID
      COMMON /UNIT3/ ID(20)
C-----------------------------------------------------------------------
      COMMON /BLOC/
     ! IREGAD,IEVTYP,ISERCH,  NGPS,NXDOWN,NXCARD,NXTAPE,IGUESS,
     ! MOUTER,MINNER,IALDIR,IOVLAY, IGEOM,    IM,    JM,NZONES,
     !   NMAT,NMIXCD,  IBCL,  IBCR,  IBCT,  IBCB,NIZDEL,NJZDEL,
     !   NPRT,NLIBMT,NBUSTP,IXSTRT,IXEMIC, IEDIT,IGPBUK,IDUP17,
     !  JDUM2, JDUM3, JDUM4, JDUM5,    EV,   EVM, PAREV,  BUCK,
     !   ALAL,  ALAH,   EPS,EPSPAR,EPSFLX,   POD,   ORF, POWER,
     ! FISMEV, XMWFA, ORFFS,ABLYVO,  DUM3,  DUM4,
     ! KOUTER,KINNER,KGROUP,KIITOT, KPAGE,   K07, KDUM1, KDUM2,
     ! IBUCON,IGEOMP,   IMP,   JMP, NGPSP,NZONEP,NXSETS,IDETED,
     !  NSHUF,IBATCH,KONFLX,KONSCH,IALPHA,IDELTA,NEWOLD, IPBAR,
     !  ISBAR,  IMJM,   IHS,   IHT,   ITL,  ITL1,MAXMIN,MAXSEC,
     !  ITEMP,   MGC,  MPIC,  MPJC,ITEMP1,ITEMP2,  NUMX,IBEGIN,
     !     IP,    JP, NGOTO, INVDIR,NGPS2,NBUMAX,  NVAR, KNEG0,
     !    ALA,  ALAP, ALAPP,  ALAR,FLXCHM,   DAY,  DELT,    EQ,
     !   EVPP,   E01,   E02,   E03,  ORFP,CHISUM,  TOTV,  TEMP,
     !  TEMP2, TEMP3, TEMP4,    TI,FISSEN,SFISSP,ALFABS,GPSORS,
     !    EVP, TEMP1,FLXCHG,SERR2P,ESTKHI,ESTKLO,XTRAPK,ESTDOM
C-----------------------------------------------------------------------
      DIMENSION FISS2(IM,JM), FLUX2(IM,JM), R1(1), Z1(1),
     !        C(ITL,NMAT,1), FLUX1(IM,JM), IZONE(IM,JM),
     !       IZMAT(1), FISS1(IM,JM), IED(1),V0(IM,JM),R5(1),Z5(1),
     !       TED(1),VED(1), BAL(1), R4(IM), Z4(JM), CHIIN(1),
     !       VOL(NZONEP), FLXVOL(NGPS2,NZONEP), GAM(1),
     #     IPEAK(NZONEP,4),POWEDG(IM,JM,4),PED(16,NGPSP,NZONEP)
C-----------------------------------------------------------------------
          DIMENSION   FLUX2H(IM,JP), FLUX2V(IP,JM)
          DIMENSION   FLUX1H(IM,JP), FLUX1V(IP,JM)
          DIMENSION   CXLK(IM,JM),  PBLK(3,NGPSP,NZONEP)
C
C-------------------------------------------------------------------
C
C     S850  FINAL PRINT
C
C
      CALL S8830
      IF(NPRT.LE.0) GO TO  90
      IF(DAY.GT.0.0) GO TO 90
      J=IM
      IF(IP.GT.JP) J=JM
      WRITE(NOUT,FMTTIT) ID, DATIM, KSTEP
      WRITE(NOUT,40)(I,R1(I),R4(I),R5(I),Z1(I),Z4(I),Z5(I),I=1,J)
40    FORMAT('0             RADII         AVG RADII      DELTA',
     !' RADII              AXII          AVG AXII       DELTA AXII',
     ! /,'0',/(I4,3F16.4,5X,3F16.4))
      J=J+1
      IF(IM-JM)  50, 85, 70
50       WRITE(NOUT,55) J,R1(J),Z1(J),Z4(J),Z5(J)
55          FORMAT(I4,F16.4,37X,3F16.4)
            J=J+1
            WRITE (NOUT, 60 ) (I,Z1(I),Z4(I),Z5(I),I=J,JM)
60          FORMAT(I4,53X,3F16.4)
            J=JP
            WRITE(NOUT,60) J,Z1(J)
            GO TO 90
70       WRITE(NOUT,75) J,R1(J),R4(J),R5(J),Z1(J)
75          FORMAT(I4,3F16.4,5X,F16.4)
            J=J+1
            WRITE (NOUT, 80 ) (I,R1(I),R4(I),R5(I),I=J,IM)
80          FORMAT(I4,3F16.4)
            J=IP
            WRITE(NOUT,80) J,R1(J)
            GO TO 90
85       WRITE(NOUT,55) J,R1(J),Z1(J)
90    CONTINUE
C
      CALL CLEARS( 0.0, FLUX1, IMJM )
      CALL CLEARS( 0.0, FISS2, IMJM )
      CALL CLEARS( 0.0, FLXVOL, NGPS2*NZONEP )
C
C     OUTPUT FLUXES, MESH POINTS, AND VOLUMES FOR PLOTTING
C
      WRITE(18) IM,JM,NGPS,ID,DATIM
      WRITE(18) R4
      WRITE(18) Z4
      WRITE(18) V0
                 REWIND  22
                 REWIND  NFLUX1
C
      DO 121   KGP=1, NGPS
              IPRT0 = (NPRT- 6)*(NPRT- 8)*(NPRT-10)
              IPRT1 = (NPRT-16)*(NPRT-18)*(NPRT-20)
              IF(IPRT0*IPRT1.NE.0) GO TO 115
            WRITE(NOUT,FMTTIT) ID, DATIM, KSTEP
            WRITE (NOUT,110) KGP
110         FORMAT(/20X,'FLUX FOR GROUP',I3)
115      CONTINUE
         READ (NFLUX1) FLUX2
         WRITE(18) FLUX2
         DO 120   I=1, IM
            DO 120   J=1, JM
               FLUX1(I,J) = FLUX1(I,J) + FLUX2(I,J)
               K = IZONE(I,J)
               FLXVOL(KGP,K) = FLXVOL(KGP,K) + FLUX2(I,J)*V0(I,J)
               ITEMP = IZMAT(K)
               FISS2(I,J)=FISS2(I,J)
     !                    +C(1,ITEMP,KGP)*FLUX2(I,J)*1000.*FISSEN
120      CONTINUE
              CALL FLXITP(FISS2,FLUX2,R1,Z1,R4,Z4,R5,Z5,
     #                  C,FLUX1,IZONE,IZMAT,FISS1,V0,IED,TED,VED,BAL,
     #                   VOL,FLXVOL,PED,GAM,CHIIN,FLUX2H,FLUX2V,KGP )
              WRITE(22) FLUX2H,FLUX2V
              IF(NPRT.LE.10)  GO TO 119
              IF(IPRT1.EQ.0)  CALL PRTFLX(IM,JM,IP,JP,FLUX2,Z1,Z4,
     #                                                 FLUX2H,FLUX2V)
              GO TO 121
119           IF(IPRT0.EQ.0)  CALL PRT(IM,JM,FLUX2,Z4,NOUT)
C
121   CONTINUE
              REWIND 22
C
C ----------- LEAK  TO  BLACKREGION  IF NOT BLKRG -------OR----------
C ----------- LEAK  INTO BLKRG FROM NEIGHBORS WHICH ARE NOT BLKRG----
C
           CALL CLEARS(0.0, PBLK, 3*NGPSP*NZONEP)
           REWIND NFLUX1
           REWIND 20
C
           DO 180 IGP=1,NGPS
           READ(NFLUX1) FLUX2
           READ(20)     CXLK
C
           DO 180 J=1,JM
           DO 180 I=1,IM
           K  = IZONE(I,J)
           M  = IZMAT(K )
           SIGT=C(IHT,M,IGP)
           KB = 0
           KT = 0
           K1 = 0
           K2 = 0
           K3 = 0
           K4 = 0
C--- CHECK IF (I,J)=BLKRG -----------
           IF(SIGT) 135,135,130
130        PBLK(1,IGP,K) = PBLK(1,IGP,K) + CXLK(I,J)*FLUX2(I,J)
           GO TO 180
C
C
135        IF(J-JM)140,145,145
140        KT = IZONE(I,J+1)
           PBLK(1,IGP,K)= PBLK(1,IGP,K) + CXLK(I,J+1)*FLUX2(I,J+1)
C
145        IF(I-IM)150,155,155
150        IF(J.GT.1) K4 = IZONE(I+1,J-1)
           IF(K4 - K) 151,155,151
151        PBLK(1,IGP,K)= PBLK(1,IGP,K) + CXLK(I+1,J)*FLUX2(I+1,J)
C
155        IF(I-1) 165,165,160
160        IF(I.GT.2) K1 = IZONE(I-2,J  )
           K4 = 0
           IF(J.GT.1) K4 = IZONE(I-1,J-1)
           IF( (K-K1)*(K-K4) ) 161,165,161
161        PBLK(1,IGP,K)= PBLK(1,IGP,K) + CXLK(I-1,J)*FLUX2(I-1,J)
C
165        IF(J-1) 180,180,170
170        KB = IZONE(I,J-1)
           K1 = 0
           IF(I.GT.1) K1 = IZONE(I-1,J-1)
           IF(I.LT.IM)K3 = IZONE(I+1,J-1)
           K4 = 0
           IF(J.GT.2) K4 = IZONE(I  ,J-2)
           IF( (K-K1)*(K-K4)*(K-K3) ) 171,180,171
171        PBLK(1,IGP,K)= PBLK(1,IGP,K) + CXLK(I,J-1)*FLUX2(I,J-1)
C
C-----------IF PERIODIC   TOP/BOTTOM  B.C. --------------------------
C
           IF(KB) 176,172,176
172        IF(IBCB-1) 176,176,174
174        PBLK(1,IGP,K)= PBLK(1,IGP,K) + CXLK(I,JM)*FLUX2(I,JM)
           GO TO 180
C
176        IF(KT) 180,178,180
178        IF(IBCT-1) 180,180,179
179        PBLK(1,IGP,K)= PBLK(1,IGP,K) + CXLK(I, 1)*FLUX2(I, 1)
C
180        CONTINUE
C
C
           REWIND NFLUX1
           REWIND 20
C---------------------------------------------------------------------
C
      DO 210 J=1,JM
      DO 205 I=1,IM
      K = IZONE(I,J)
      FLXVOL(NGPSP,K)=FLXVOL(NGPSP,K)
     !               +FISS2(I,J)*V0(I,J)*1.0E-03
      FLXVOL(NGPS2,K)=FLXVOL(NGPS2,K)
     !               +FISS1(I,J)*V0(I,J)
205   CONTINUE
210   CONTINUE
C
      WRITE(18) FISS2
C
               IF(NPRT.LT.3) GO TO 292
               IPRT0 = (NPRT- 5)*(NPRT- 8)*(NPRT- 9)*(NPRT-10)
               IPRT1 = (NPRT-15)*(NPRT-18)*(NPRT-19)*(NPRT-20)
               IF(IPRT0*IPRT1.NE.0) GO TO 239
C
C---------------------------------------- TOTAL FLUX -----------------
C
      WRITE(NOUT,FMTTIT) ID, DATIM, KSTEP
      WRITE(NOUT, 230 )
 230  FORMAT(/, 19X,'TOTAL FLUX')
C
               IF(IPRT0.EQ.0) GO TO 236
               CALL CLEARS( 0.0, FLUX1H, IMJM+IM )
               CALL CLEARS( 0.0, FLUX1V, IMJM+JM )
               REWIND 22
               DO 235 KGP=1,NGPS
               READ(22) FLUX2H, FLUX2V
               DO 231 I=1,IM
               DO 231 J=1,JM
               FLUX1H(I,J) = FLUX1H(I,J) + FLUX2H(I,J)
231            FLUX1V(I,J) = FLUX1V(I,J) + FLUX2V(I,J)
               DO 232 I=1,IM
232            FLUX1H(I,JP)= FLUX1H(I,JP)+ FLUX2H(I,JP)
               DO 233 J=1,JM
233            FLUX1V(IP,J)= FLUX1V(IP,J)+ FLUX2V(IP,J)
235            CONTINUE
C
               CALL PRTFLX(IM,JM,IP,JP,FLUX1,Z1,Z4, FLUX1H,FLUX1V)
               GO TO 239
C
236            CALL PRT(IM,JM,FLUX1,Z4,NOUT)
C
239            IPRT0 = (NPRT- 3)*(NPRT- 7)*(NPRT- 9)*(NPRT-10)
               IPRT1 = (NPRT-13)*(NPRT-17)*(NPRT-19)*(NPRT-20)
               IF(IPRT0*IPRT1.NE.0) GO TO 238
C
C----------------------------------------POWER DENSITY (MW/LITER)-------
C
      WRITE(NOUT,FMTTIT) ID, DATIM, KSTEP
      WRITE(NOUT, 240 )
 240  FORMAT(/, 19X, 'POWER DENSITY  (MWT/LITER)')
C
238            CALL CLEARS( 0.0, FLUX1H, IMJM+IM )
               CALL CLEARS( 0.0, FLUX1V, IMJM+JM )
C
                              CALL CLEARS( 0.0, POWEDG, 4*IMJM  )
C
               REWIND 22
               DO 248 KGP=1,NGPS
               READ(22) FLUX2H, FLUX2V
C
C---------------- EDGE POWER DENSITY : POWEDG(IM,JM,4)(MWT/LITER)-------
C
                       DO 10240 I=1,IM
                       DO 10240 J=1,JM
                       K = IZONE(I,J)
                       M = IZMAT(K)
                       SFISS = C(1,M,KGP)
                       IF(C(IHT,M,KGP).LE.0.0) SFISS= 0.0
                       XFISS = SFISS*1000.*FISSEN
C
                       POWEDG(I,J,1)=POWEDG(I,J,1)+FLUX2V(I,J)*XFISS
                       POWEDG(I,J,2)=POWEDG(I,J,2)+FLUX2H(I,J)*XFISS
                       POWEDG(I,J,3)=POWEDG(I,J,3)+FLUX2V(I+1,J)*XFISS
                       POWEDG(I,J,4)=POWEDG(I,J,4)+FLUX2H(I,J+1)*XFISS
10240                  CONTINUE
C--------------------------------------------------------------------
               IF(IPRT0.EQ.0) GO TO  248
C
               J = 1
               DO 241  I=1,IM
               ITEMP = IZONE(I,J)
               ITEMP = IZMAT(ITEMP)
               SFISS = C(1,ITEMP,KGP)
               IF(C(IHT,ITEMP,KGP).LE.0.0) SFISS = 0.0
               XFISS =  SFISS*1000.*FISSEN
241            FLUX1H(I,J) = FLUX1H(I,J) + FLUX2H(I,J)*XFISS
C
               I = 1
               DO 242  J=1,JM
               ITEMP = IZONE(I,J)
               ITEMP = IZMAT(ITEMP)
               SFISS = C(1,ITEMP,KGP)
               IF(C(IHT,ITEMP,KGP).LE.0.0) SFISS = 0.0
               XFISS =  SFISS*1000.*FISSEN
242            FLUX1V(I,J) = FLUX1V(I,J) + FLUX2V(I,J)*XFISS
C
               DO 246 I=1,IM
               DO 246 J=1,JM
               ITEMP = IZONE(I ,J )
               ITEMP = IZMAT(ITEMP)
               SFISS = C(1,ITEMP,KGP)
               IF(C(IHT,ITEMP,KGP).LE.0.0) SFISS = 0.0
C
               JH = J + 1
               IF(JH.GT.JM) GO TO 243
               ITEMPH= IZONE(I ,JH)
               ITEMPH= IZMAT(ITEMPH)
               SFISSH= C(1,ITEMPH,KGP)
               IF(C(IHT,ITEMPH,KGP).LE.0.0) SFISSH = 0.0
               IF( SFISSH.GT.SFISS) SFISS = SFISSH
243            XFISS =  SFISS*1000.*FISSEN
               FLUX1H(I,JH) = FLUX1H(I,JH) + FLUX2H(I,JH)*XFISS
C
               IV = I + 1
               IF(IV.GT.IM) GO TO 244
               ITEMPV= IZONE(IV,J )
               ITEMPV= IZMAT(ITEMPV)
               SFISS = C(1,ITEMP,KGP)
               IF(C(IHT,ITEMP,KGP).LE.0.0) SFISS = 0.0
               SFISSV= C(1,ITEMPV,KGP)
               IF(C(IHT,ITEMPV,KGP).LE.0.0) SFISSV = 0.0
               IF( SFISSV.GT.SFISS) SFISS = SFISSV
244            XFISS =  SFISS*1000.*FISSEN
246            FLUX1V(IV,J) = FLUX1V(IV,J) + FLUX2V(IV,J)*XFISS
C
248            CONTINUE
C
               IF(IPRT0.EQ.0) GO TO 247
               CALL PRTFLX(IM,JM,IP,JP,FISS2,Z1,Z4, FLUX1H,FLUX1V)
C
               GO TO 249
C
247            CALL  PRT(IM,JM,FISS2,Z4,NOUT)
C
249            IPRT0 = (NPRT- 4)*(NPRT- 7)*(NPRT- 9)*(NPRT-10)
               IPRT1 = (NPRT-14)*(NPRT-17)*(NPRT-19)*(NPRT-20)
               IF(IPRT0*IPRT1.NE.0) GO TO 292
C
C-------------------------------------- FISSION SOURCE RATE ----------
C
      WRITE(NOUT,FMTTIT) ID, DATIM, KSTEP
      WRITE (NOUT, 250)
 250  FORMAT(/20X,'FISSION SOURCE RATE')
C
               IF(IPRT0.EQ.0) GO TO 261
               CALL CLEARS( 0.0, FLUX1H, IMJM+IM )
               CALL CLEARS( 0.0, FLUX1V, IMJM+JM )
               REWIND 22
               DO 259 KGP=1,NGPS
               READ(22) FLUX2H, FLUX2V
C
               J = 1
               DO 251  I=1,IM
               ITEMP = IZONE(I,J)
               ITEMP = IZMAT(ITEMP)
               XFISS =  C(IHT-1,ITEMP,KGP)
251            FLUX1H(I,J) = FLUX1H(I,J) + FLUX2H(I,J)*XFISS
C
               I = 1
               DO 252  J=1,JM
               ITEMP = IZONE(I,J)
               ITEMP = IZMAT(ITEMP)
               XFISS =  C(IHT-1,ITEMP,KGP)
252            FLUX1V(I,J) = FLUX1V(I,J) + FLUX2V(I,J)*XFISS
C
               DO 258 I=1,IM
               DO 258 J=1,JM
               ITEMP = IZONE(I ,J )
               ITEMP = IZMAT(ITEMP)
               XFISS =  C(IHT-1,ITEMP,KGP)
C
               JH = J + 1
               IF(JH.GT.JM) GO TO 253
               ITEMPH= IZONE(I ,JH)
               ITEMPH= IZMAT(ITEMPH)
               XFISSH=  C(IHT-1,ITEMPH,KGP)
               IF( XFISSH.GT.XFISS) XFISS = XFISSH
253            FLUX1H(I,JH) = FLUX1H(I,JH) + FLUX2H(I,JH)*XFISS
C
               XFISS = C(IHT-1,ITEMP,KGP)
               IV = I + 1
               IF(IV.GT.IM) GO TO 254
               ITEMPV= IZONE(IV,J )
               ITEMPV= IZMAT(ITEMPV)
               XFISSV=  C(IHT-1,ITEMPV,KGP)
               IF( XFISSV.GT.XFISS) XFISS = XFISSV
254            FLUX1V(IV,J) = FLUX1V(IV,J) + FLUX2V(IV,J)*XFISS
C
258            CONTINUE
259            CONTINUE
C
               CALL PRTFLX(IM,JM,IP,JP,FISS1,Z1,Z4, FLUX1H,FLUX1V)
               GO TO 292
C
261            CALL PRT(IM,JM,FISS1,Z4,NOUT)
C
 292  CONTINUE
C
C------- MAX.POWER DENS.(MW/ LITER ) IN PED(16,1,NZONEP) -----------
C
                       CALL CLEARS( 0.0, PED, 16*NGPSP*NZONEP )
C
                       CALL CLEARS(0 , IPEAK, NZONEP*4 )
C
                       DO 300   J=1,JM
                       DO 300   I=1,IM
                       K = IZONE(I,J)
C
                       TEMP = PED(16, 1, K)
                       IF(TEMP.GE.FISS2 (I,J  ))  GO TO 296
                       TEMP = FISS2 (I,J  )
                       IPEAK(K,3) = I
                       IPEAK(K,4) = J
296                    IF(TEMP.GE.POWEDG(I,J,1))  GO TO 297
                       TEMP = POWEDG(I,J,1)
                       IPEAK(K,3) = I
                       IPEAK(K,4) = J
297                    IF(TEMP.GE.POWEDG(I,J,2))  GO TO 298
                       TEMP = POWEDG(I,J,2)
                       IPEAK(K,3) = I
                       IPEAK(K,4) = J
298                    IF(TEMP.GE.POWEDG(I,J,3))  GO TO 299
                       TEMP = POWEDG(I,J,3)
                       IPEAK(K,3) = I
                       IPEAK(K,4) = J
299                    IF(TEMP.GE.POWEDG(I,J,4))  GO TO 301
                       TEMP = POWEDG(I,J,4)
C
301                    PED(16, 1, K) =  TEMP
C
300                    CONTINUE
C
C--------------------------------------------------------------------
C
C     MODIFIED TO INCLUDE REGION EDITS
C
      IF(IEDIT.GE.0) GO TO 500
         WRITE(NOUT,FMTTIT) ID, DATIM, KSTEP
         REWIND NFLUX1
         WRITE(NOUT,305)
  305    FORMAT('0',20X,'R E G I O N A L     E D I T S ')
         DO 530 IG=1,NGPS
            READ(NFLUX1) FLUX2
            WRITE(NOUT,310) IG
  310       FORMAT('0  *** REGION EDITS FOR GROUP',I3,' FLUX ***')
            CALL REDIT(IED,FLUX2,V0,TED,VED,IG)
  530    CONTINUE
         WRITE(NOUT,320)
  320    FORMAT('0  *** REGION EDITS FOR RELATIVE POWER ***')
         IVS=NGPS+1
         CALL REDIT(IED,FISS2,V0,TED,VED,IVS)
  500 CONTINUE
      REWIND NFLUX1
C
C  OPTION TO DO SEVERAL REGION EDITS (BY COMBINING ZONES)
C        IF IEDIT>0
C
      IF(NPRT.GT.0)
     !CALL ZEDIT(IED,VOL,FLXVOL,IZMAT,C,GAM,PED,CHIIN,
     #  PBLK,IPEAK )
280   RETURN
      END
C$ FLXINT ==============================================================
C========= SUBROUTINE TO INTERPOLATE MESH BOUNDARY FLUXES =============
      SUBROUTINE FLXITP(FISS2,FLUX2,R1,Z1,R4,Z4,R5,Z5,
     !             C,FLUX1,IZONE,IZMAT,FISS1,V0,IED,TED,VED,BAL,
     !             VOL,FLXVOL,PED,GAM,CHIIN,FLUX2H,FLUX2V,KGP )
C
C-----------------------------------------------------------------------
      COMMON/UNITS/ DATIM(3), TIMEI,  KSTEP, NINP, NOUT, NDUMP,
     !           NFLUX1,NSORCE,NBULIB,NCXS,NGUESS,NSCRAT
      CHARACTER*4 FMTTIT,FMTDSH,FMTEQL,FMTAST,FMTSP2,FMTSP3
      COMMON/UNIT1/ FMTTIT(13),
     !           FMTDSH(4),FMTEQL(4),FMTAST(4),FMTSP2(2),FMTSP3(2)
      CHARACTER*4 ID
      COMMON /UNIT3/ ID(20)
C-----------------------------------------------------------------------
      COMMON /BLOC/
     ! IREGAD,IEVTYP,ISERCH,  NGPS,NXDOWN,NXCARD,NXTAPE,IGUESS,
     ! MOUTER,MINNER,IALDIR,IOVLAY, IGEOM,    IM,    JM,NZONES,
     !   NMAT,NMIXCD,  IBCL,  IBCR,  IBCT,  IBCB,NIZDEL,NJZDEL,
     !   NPRT,NLIBMT,NBUSTP,IXSTRT,IXEMIC, IEDIT,IGPBUK,IDUP17,
     !  JDUM2, JDUM3, JDUM4, JDUM5,    EV,   EVM, PAREV,  BUCK,
     !   ALAL,  ALAH,   EPS,EPSPAR,EPSFLX,   POD,   ORF, POWER,
     ! FISMEV, XMWFA, ORFFS,ABLYVO,  DUM3,  DUM4,
     ! KOUTER,KINNER,KGROUP,KIITOT, KPAGE,   K07, KDUM1, KDUM2,
     ! IBUCON,IGEOMP,   IMP,   JMP, NGPSP,NZONEP,NXSETS,IDETED,
     !  NSHUF,IBATCH,KONFLX,KONSCH,IALPHA,IDELTA,NEWOLD, IPBAR,
     !  ISBAR,  IMJM,   IHS,   IHT,   ITL,  ITL1,MAXMIN,MAXSEC,
     !  ITEMP,   MGC,  MPIC,  MPJC,ITEMP1,ITEMP2,  NUMX,IBEGIN,
     !     IP,    JP, NGOTO, INVDIR,NGPS2,NBUMAX,  NVAR, KNEG0,
     !    ALA,  ALAP, ALAPP,  ALAR,FLXCHM,   DAY,  DELT,    EQ,
     !   EVPP,   E01,   E02,   E03,  ORFP,CHISUM,  TOTV,  TEMP,
     !  TEMP2, TEMP3, TEMP4,    TI,FISSEN,SFISSP,ALFABS,GPSORS,
     !    EVP, TEMP1,FLXCHG,SERR2P,ESTKHI,ESTKLO,XTRAPK,ESTDOM
C-----------------------------------------------------------------------
      DIMENSION FISS2(IM,JM), FLUX2(  1  ), R1(1), Z1(1),
     !        C(ITL,NMAT,1), FLUX1(IM,JM), IZONE(  1  ),
     !       IZMAT(1), FISS1(IM,JM), IED(1),V0(IM,JM),R5(1),Z5(1),
     !       TED(1),VED(1), BAL(1), R4(IM), Z4(JM), CHIIN(1),
     !       VOL(NZONEP), FLXVOL(NGPS2,NZONEP), GAM(1), PED(1)
C-----------------------------------------------------------------------
          DIMENSION   FLUX2H(1), FLUX2V(1)
          DIMENSION XTEMP(2)
C-------------------------------------------------------------------
C
      PI2 = 6.28318
C
C
C-------- CALCULATING BOTTOM AND TOP ROW  FLUX2H(I) -----------------
C
      CALL CLEARS(0.0, FLUX2H, IMJM + IM)
      CALL CLEARS(0.0, FLUX2V, IMJM + IM)
      KJ = 1
      KJ1= JM
      IBCBT = IBCB
      TEMP= 1.0
C
      DO  71  ICT=1,2
C
      DO  70  KI = 1, IM
      GO TO ( 6, 6, 5, 4), IGEOMP
4     TEMP  =  KI - 2*(KI/2) - (KJ - 2*(KJ/2) )
      XTEMP(1) = ABS(TEMP)
      XTEMP(2) = 1. - XTEMP(1)
      TEMPZ =  Z5(1)*.6666667
      TEMPZ1=  TEMPZ
      IF(XTEMP(ICT) ) 70,70, 7
C
5     TEMPZ =  PI2* Z5(KJ)  *R4(KI)
      TEMPZ1=  PI2* Z5(KJ1) *R4(KI)
      GO TO  7
C
6     TEMPZ =  Z5(KJ)
      TEMPZ1=  Z5(KJ1)
C
7     I = KI + (KJ -1)*IM
      I0= I  + (ICT-1)*IM
      I1= KI + (KJ1-1)*IM
C
      ITEMP = IZONE(I)
      ITEMP = IZMAT(ITEMP)
      C0 = C(IHT,ITEMP ,KGP)
C
      ITEMP1= IZONE(I1)
      ITEMP1= IZMAT(ITEMP1)
      C1 = C(IHT,ITEMP1,KGP)
C
C ------CHECK IF ITEMP IS BLKRG  ----------------------------------
C
      IF(C0) 60,60,10
10    D = 1./(3.*C0)
      IF(IBCBT - 1) 20,25,30
20    ALFA = 2.13
      BETA = 1.0
      FLUX2H(I0)= ALFA*D*FLUX2(I)/ (BETA*TEMPZ*.5 + ALFA*D )
      GO TO 70
25    FLUX2H(I0) = FLUX2(I)
      GO TO 70
C
C ------- CHECK IF ITEMP1 IS BLKRG -------------------------------
C
30    IF(C1) 50,50,40
40    D1 = 1./(3.*C1)
      DZ = D/TEMPZ
      DZ1= D1/TEMPZ1
      FLUX2H(I0) =( DZ*FLUX2(I) + DZ1*FLUX2(I1 ) )/ (DZ + DZ1)
      GO TO 70
50    ALFA = C(1,ITEMP1,KGP)
      BETA = C(2,ITEMP1,KGP)
      FLUX2H(I0) = ALFA*D*FLUX2(I)/ (BETA*TEMPZ*.5 + ALFA*D)
      GO TO 70
60    IF( IBCBT - 1 ) 69,69,66
66    IF ( C1 ) 69,69,67
67    D1 = 1./(3.*C1)
      ALFA = C(1, ITEMP ,KGP)
      BETA = C(2, ITEMP ,KGP)
      FLUX2H(I0) = ALFA*D1*FLUX2(I1)/ (BETA*TEMPZ1*.5 + ALFA*D1 )
      GO TO 70
69    FLUX2H(I0) = 0.0
70    CONTINUE
C
      KJ = JM
      KJ1= 1
      IBCBT = IBCT
71    CONTINUE
C
C ------------   FLUX2H(I) IN INTERMEDIATE ROWS --------------------
C
      DO  140 KJ = 2, JM
      DO  140 KI = 1, IM
      GO TO (76,76,75,74), IGEOMP
74    TEMP  =  KI - 2*(KI/2) - (KJ - 2*(KJ/2) )
      TEMP  =  ABS(TEMP)
      TEMPZ =  Z5(1)*6666667
      TEMPZ1=  TEMPZ
      IF(TEMP) 140,140,77
C
75    TEMPZ =  PI2* Z5(KJ)  *R4(KI)
      TEMPZ1=  PI2* Z5(KJ-1)*R4(KI)
      GO TO  77
C
76    TEMPZ =  Z5(KJ)
      TEMPZ1=  Z5(KJ-1)
77    I = KI + (KJ-1)*IM
      I1=  I - IM
C
      ITEMP = IZONE(I)
      ITEMP = IZMAT(ITEMP)
      C0 = C(IHT,ITEMP ,KGP)
C
      ITEMP1= IZONE(I1)
      ITEMP1= IZMAT(ITEMP1)
      C1 = C(IHT,ITEMP1,KGP)
C
C---------- CHECK IF ITEMP  IS BLKRG --------------------------------
C
      IF(C0) 110,110,80
80    D = 1./(3.*C0)
C
C---------- CHECK IF ITEMP1 IS BLKRG -----------------------------
C
      IF(C1) 100,100,90
90    D1 = 1./(3.*C1)
      DZ = D /TEMPZ
      DZ1= D1/TEMPZ1
      FLUX2H(I) =( DZ*FLUX2(I) + DZ1*FLUX2(I1) )/ (DZ + DZ1)
      GO TO 140
100   ALFA = C(1,ITEMP1,KGP)
      BETA = C(2,ITEMP1,KGP)
      FLUX2H(I) = ALFA*D*FLUX2(I)/ (BETA*TEMPZ*.5 + ALFA*D )
      GO TO 140
C
C--------  CHECK IF ITEMP1 IS BLKRG --------------------------------
110   IF(C1) 130,130,120
120   D1 = 1./(3.*C1)
      ALFA = C(1, ITEMP, KGP)
      BETA = C(2, ITEMP, KGP)
      FLUX2H(I) = ALFA*D1*FLUX2(I1)/ (BETA*TEMPZ1*.5 + ALFA*D1 )
      GO TO 140
130   FLUX2H(I) = 0.0
C
140   CONTINUE
C
C
C-------- CALCULATING LEFT AND RIGHT COLUMNS FLUX2V(I) ------------
C
      KI = 1
      IBCLR = IBCL
C
      DO 146  ICT=1,2
C
      TEMPZ =  R5(KI)
      IF(IGEOM.EQ.3) TEMPZ = Z5(1)*.6666667
      DO 145  KJ = 1, JM
      I = KI + (KJ -1)*IM
      I0= KI + (KJ -1)*IP  + (ICT - 1)
C
      ITEMP = IZONE(I)
      ITEMP = IZMAT(ITEMP)
      C0 = C(IHT,ITEMP ,KGP)
C
C ------CHECK IF ITEMP IS BLKRG  ----------------------------------
C
      IF(C0) 144,144,141
141   D = 1./(3.*C0)
      IF(IBCLR - 1)142,143,143
142   ALFA = 2.13
      BETA = 1.0
      FLUX2V(I0)= ALFA*D*FLUX2(I)/ (BETA*TEMPZ*.5 + ALFA*D )
      GO TO 145
143   FLUX2V(I0) = FLUX2(I)
      GO TO 145
C
144   FLUX2V(I0) = 0.0
145   CONTINUE
C
      KI = IM
      IBCLR = IBCR
146   CONTINUE
C
C
C ------------   FLUX2V(I) IN INTERMEDIATE COLUMNS -----------------
C
      DO  210 KI = 2, IM
      DO  210 KJ = 1, JM
      TEMPZ =  R5(KI)
      TEMPZ1=  R5(KI-1)
      IF(IGEOM - 3) 148,147,148
147   TEMPZ = Z5(1)*.6666667
      TEMPZ1= TEMPZ
148   I = KI + (KJ-1)*IM
      I0= KI + (KJ-1)*IP
      I1=  I - 1
C
      ITEMP = IZONE(I)
      ITEMP = IZMAT(ITEMP)
      C0 = C(IHT,ITEMP ,KGP)
C
      ITEMP1= IZONE(I1)
      ITEMP1= IZMAT(ITEMP1)
      C1 = C(IHT,ITEMP1,KGP)
C
C---------- CHECK IF ITEMP  IS BLKRG --------------------------------
C
      IF(C0) 180,180,150
150   D = 1./(3.*C0)
C
C---------- CHECK IF ITEMP1 IS BLKRG -----------------------------
C
      IF(C1) 170,170,160
160   D1 = 1./(3.*C1)
      DZ = D /TEMPZ
      DZ1= D1/TEMPZ1
      FLUX2V(I0) =( DZ*FLUX2(I) + DZ1*FLUX2(I1) )/ (DZ + DZ1)
      GO TO 210
170   ALFA = C(1,ITEMP1,KGP)
      BETA = C(2,ITEMP1,KGP)
      FLUX2V(I0) = ALFA*D*FLUX2(I)/ (BETA*TEMPZ*.5 + ALFA*D )
      GO TO 210
C
C--------  CHECK IF ITEMP1 IS BLKRG --------------------------------
180   IF(C1) 200,200,190
190   D1 = 1./(3.*C1)
      ALFA = C(1, ITEMP, KGP)
      BETA = C(2, ITEMP, KGP)
      FLUX2V(I0) = ALFA*D1*FLUX2(I1)/ (BETA*TEMPZ1*.5 + ALFA*D1 )
      GO TO 210
200   FLUX2V(I0) = 0.0
C
210   CONTINUE
C
C
      RETURN
C
      END
C$ PRT =================================================================
C========== SUBROUTINE TO PRINT MESH BOUNDARY FLUXES ===================
      SUBROUTINE PRTFLX (IM,JM,IP,JP, FLUX2,Z1, Z4,FLUX2H,FLUX2V)
C
C-----------------------------------------------------------------------
      COMMON/UNITS/ DATIM(3), TIMEI,  KSTEP, NINP, NOUT, NDUMP,
     !           NFLUX1,NSORCE,NBULIB,NCXS,NGUESS,NSCRAT
      CHARACTER*4 FMTTIT,FMTDSH,FMTEQL,FMTAST,FMTSP2,FMTSP3
      COMMON/UNIT1/ FMTTIT(13),
     !           FMTDSH(4),FMTEQL(4),FMTAST(4),FMTSP2(2),FMTSP3(2)
      CHARACTER*4 ID
      COMMON /UNIT3/ ID(20)
C-----------------------------------------------------------------------
      DIMENSION FLUX2(IM,JM), Z4(1)
      DIMENSION FLUX2H(IM,JP), Z1(1)
      DIMENSION FLUX2V(IP,JM)
CAPOL INTEGER*2 NUM( 6) / ' 1 2 3 4 5 6' /
CCC   INTEGER*2 FMT(20)/40H(1X,I3,    6E17.6,T107,2X,1H*,   F12.4 )/
CCC   INTEGER*2 FM1(22)/44H(4X,     3(17X,E17.6),T107,2X,1H*,   F12.4) /
CCC                         ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! !
CCC                        123456789.123456789.123456789.123456789.1234
      CHARACTER*2 NUM(6), FMT(20), FM1(22)
      DATA        NUM   / ' 1',' 2',' 3',' 4',' 5',' 6'  /
      DATA        FMT    /'(1','X,','I3',', ','  ',' 6','E1','7.','6,',
     #          'T1','07',',2','X,','1H','*,','  ',' F','12','.4',' )'/
      DATA        FM1    /'(4','X,','  ','  ',' 3','(1','7X',',E','17',
     #          '.6','),','T1','07',',2','X,','1H','*,','  ',' F','12',
     #          '.4',') '/
C
C-----------------------------------------------------------------------
C     THIS SUBROUTINE PRINTS BOUNDARY AND MIDPOINT FLUXES
C
      LINES = 0
      WRITE(NOUT,5)
5     FORMAT( T50, 'X --->'/)
C
                     LAST = -1
      DO 50  I=1,IM,3
      I1=I
      I2=I+2
      IF(I2-IM) 20, 10, 11
10                  LAST = 0
                    GO TO 20
11    I2=IM
                    LAST = 1
20    CONTINUE
      LINES = LINES + 2
      IF(LINES - 52 ) 25,21,21
21    WRITE(NOUT,FMTTIT) ID, DATIM, KSTEP
      WRITE(NOUT,70)
      LINES = 0
25    CONTINUE
      WRITE ( NOUT,30 ) ( JJ,JJ=I1,I2)
30    FORMAT(1H0, T117,' AXII',T16,I17, 2(17X,I17) )
      IND = I2 - I1 + 1
      FMT(6) = NUM(IND*2)
                      IF(LAST.EQ.1) FMT(6) = NUM(IND*2 + 1)
      FM1(5)= NUM(IND  )
C
      DO 49  J=1,JM
      WRITE(NOUT,FM1)  (FLUX2H(K,J),K=I1,I2),Z1(J)
             IF( LAST ) 32,32,31
31           WRITE(NOUT,FMT) J,(FLUX2V(K,J),
     #                   FLUX2 (K,J),K=I1,I2),FLUX2V(IP,J),Z4(J)
             GO TO 33
32    WRITE(NOUT,FMT) J,(FLUX2V(K,J),FLUX2 (K,J),K=I1,I2),Z4(J)
33    LINES = LINES + 2
      IF(J - JM) 38,37,38
37    WRITE(NOUT,FM1)  (FLUX2H(K,J+1),K=I1,I2),Z1(J+1)
      LINES = LINES + 1
      IF(LAST) 49,51,50
38    IF(LINES - 52 ) 49,39,39
39    WRITE(NOUT,FMTTIT) ID, DATIM, KSTEP
      WRITE(NOUT,70)
      WRITE ( NOUT,30 ) ( JJ,JJ=I1,I2)
      LINES = 0
49    CONTINUE
50    CONTINUE
C
      RETURN
51    FMT(6) = NUM( 1)
C
      IF(LINES - 52 )  53,52,52
52    WRITE(NOUT,FMTTIT) ID, DATIM, KSTEP
      WRITE(NOUT,70)
      WRITE ( NOUT,30 )
      LINES = 0
      GO TO 54
53    WRITE( NOUT,30)
C
54    DO 79  J=1,JM
      IF(LINES - 52 )  56,55,55
55    WRITE(NOUT,FMTTIT) ID, DATIM, KSTEP
      WRITE(NOUT,70)
      WRITE ( NOUT,30 )
      LINES = 0
56    WRITE(NOUT,80)  Z1(J)
      WRITE(NOUT,FMT) J,FLUX2V(IP,J),Z4(J)
      LINES = LINES + 2
      IF(J - JM) 79,67,79
67    WRITE(NOUT,80)  Z1(JP)
79    CONTINUE
C
70    FORMAT('0  CONTINUED . . .', T50, 'X --->'/)
80    FORMAT(4X, T107,2X,1H*,F12.4 )
81    FORMAT(3X)
C
100   RETURN
      END
C$ PRT =================================================================
      SUBROUTINE PRT(IM,JM, FLUX2, Z4, NOUT)
C
C-----------------------------------------------------------------------
      DIMENSION    FLUX2(IM,JM), Z4(1)
C-----------------------------------------------------------------------
      DO 50  I=1,IM,5
      I1=I
      I2=I+4
      IF(I2-IM) 20, 20, 10
10    I2=IM
20    WRITE ( NOUT,30 ) ( JJ,JJ=I1,I2)
30    FORMAT( 5I20)
      DO 50  JJ=1,JM
      J=JJ
40    FORMAT(I5,E15.7,4E20.7,'  *  ',E15.7)
50    WRITE(NOUT,40 ) J,(FLUX2(K,J),K=I1,I2),Z4(J)
      RETURN
      END
C$ INPB ================================================================
      SUBROUTINE INPB( IZMAT, IZONE, FLUX1, IARAY)
C
C-----------------------------------------------------------------------
      CHARACTER*4 STEP, STEPS
      COMMON/UNITS/ DATIM(3), TIMEI,  KSTEP, NINP, NOUT, NDUMP,
     !           NFLUX1,NSORCE,NBULIB,NCXS,NGUESS,NSCRAT
      CHARACTER*4 FMTTIT,FMTDSH,FMTEQL,FMTAST,FMTSP2,FMTSP3
      COMMON/UNIT1/ FMTTIT(13),
     !           FMTDSH(4),FMTEQL(4),FMTAST(4),FMTSP2(2),FMTSP3(2)
      CHARACTER*4 ID
      COMMON /UNIT3/ ID(20)
C-----------------------------------------------------------------------
      COMMON /BLOC/
     ! IREGAD,IEVTYP,ISERCH,  NGPS,NXDOWN,NXCARD,NXTAPE,IGUESS,
     ! MOUTER,MINNER,IALDIR,IOVLAY, IGEOM,    IM,    JM,NZONES,
     !   NMAT,NMIXCD,  IBCL,  IBCR,  IBCT,  IBCB,NIZDEL,NJZDEL,
     !   NPRT,NLIBMT,NBUSTP,IXSTRT,IXEMIC, IEDIT,IGPBUK,IDUP17,
     !  JDUM2, JDUM3, JDUM4, JDUM5,    EV,   EVM, PAREV,  BUCK,
     !   ALAL,  ALAH,   EPS,EPSPAR,EPSFLX,   POD,   ORF, POWER,
     ! FISMEV, XMWFA, ORFFS,ABLYVO,  DUM3,  DUM4,
     ! KOUTER,KINNER,KGROUP,KIITOT, KPAGE,   K07, KDUM1, KDUM2,
     ! IBUCON,IGEOMP,   IMP,   JMP, NGPSP,NZONEP,NXSETS,IDETED,
     !  NSHUF,IBATCH,KONFLX,KONSCH,IALPHA,IDELTA,NEWOLD, IPBAR,
     !  ISBAR,  IMJM,   IHS,   IHT,   ITL,  ITL1,MAXMIN,MAXSEC,
     !  ITEMP,   MGC,  MPIC,  MPJC,ITEMP1,ITEMP2,  NUMX,IBEGIN,
     !     IP,    JP, NGOTO, INVDIR,NGPS2,NBUMAX,  NVAR, KNEG0,
     !    ALA,  ALAP, ALAPP,  ALAR,FLXCHM,   DAY,  DELT,    EQ,
     !   EVPP,   E01,   E02,   E03,  ORFP,CHISUM,  TOTV,  TEMP,
     !  TEMP2, TEMP3, TEMP4,    TI,FISSEN,SFISSP,ALFABS,GPSORS,
     !    EVP, TEMP1,FLXCHG,SERR2P,ESTKHI,ESTKLO,XTRAPK,ESTDOM
C-----------------------------------------------------------------------
      COMMON /BURNIN/ L91,L92,L93,L94,
     !                KBUCON,  KPRT,NOTUSD,KXSTRT,KDUP17,
     !                KREGAD,    K7,    K8,    K9,   K10,
     !                 BDELT,BPOWFC,    B3,    B4,    B5,
     !                    B6,    B7,    B8,    B9,   B10,
     !                KZM(2,50),
     !                EVS(152),           DAYS(152),
     !                DELTS(152),NSHUFS(152),POWERS(152)
      COMMON /BURNI1/ STEPS(152)
C-----------------------------------------------------------------------
      DIMENSION IZMAT(1),IZONE(1),FLUX1(1),IARAY(1),STEP(6)
C-----------------------------------------------------------------------
      DATA NCYC/0/,STEP/'BURN','SHUF','STRT','NOXE','EQXE','ADJO'/
C-----------------------------------------------------------------------
C                       FIDO ARRAY POINTERS
      L91 = 1
      L92 = L91 + 10
      L93 = L92 + 10
      L94 = L93 + 100
C
C     THIS SUBROUTINE READS AND PRINTS THE BURNUP DATA
C
      IF( DAY .LE. 0.0 )  NSHUFS(1) = 0
C      TME = SECNDS(0.0) - TIMEI
      TME = 0.0
      WRITE (6,90) TME
C      TI = SECNDS(0.0) - TIMEI
      TI = 0.0
      PRINT 5,   TI,EV,KOUTER
   5  FORMAT(' EXEC. TIME=',F7.0,' (SEC), K=',G15.8,', OUTERS=',I4)
C
      TEMP=DELT
C
      KSTEP = KSTEP + 1
      IF(NPRT.GE.2) WRITE(NOUT,FMTTIT) ID,DATIM,KSTEP
C
C                                          CLEAR FIDO INPUT AREA
      CALL CLEARS( 0, KBUCON, 120 )
      KERROR = 0
C                                          FIDO INPUT- 91$, 92*, 93$
    1 CALL FIDAS( KBUCON,KBUCON,L91, -89, KERROR,NINP,NOUT )
         IF(KERROR .NE. 0 ) CALL ERRO2('INPB-F', 1, 1)
C
C     ******* NEW OPTION **********
C     CALCULATE THE NUMBER OF MATERIAL SHUFFLES
C
      DO 27 I= 1, 50
        NSHUF = I - 1
        IF (KZM(1,I) .EQ. 0 ) GO TO 23
  27  CONTINUE
  23  CONTINUE
C
      DELT   = AMAX1( BDELT, 1.0E-10 )
      NPRT   = KPRT
      IXSTRT = KXSTRT
      IBUCON = KBUCON
      IDUP17 = KDUP17
      IREGAD = KREGAD
      POWFAC = BPOWFC
C
C-----------------------------------------------------------------------
C     IXSTRT=0 : NO EFFECT ON XENON CALC
C     IXSTRT=1 : XENON AND IODINE ARE ZEROED
C                    AT BEGINNING OF THIS TIME STEP
C     IXSTRT=-1: XENON AND IODINE ARE STARTED AT EQUILIB,
C                    BASED ON PREVIOUS FLUX
C-----------------------------------------------------------------------
C
      IF (NSHUF .GT.0 ) DELT=1.0E-10
      IF (KREGAD.GT.0 ) DELT=1.0E-10
C
      NCYC           = NCYC+1
      NCYC           = MIN0(NCYC,152)
      EVS(NCYC)      = EV
      DAYS(NCYC)     = DAY
      POWERS(NCYC)   = POWER
      NSHUFS(NCYC+1) = NSHUF
      DELTS(NCYC)    = TEMP
C
      IF(POWFAC.GT.0.0) POWER         = POWER*POWFAC
      IF(DAY   .LE.0.0) STEPS(     1) = STEP(3)
      IF(KXSTRT.EQ.  1) STEPS(NCYC+1) = STEP(4)
      IF(KXSTRT.EQ. -1) STEPS(NCYC+1) = STEP(5)
      IF(DELT  .GT.0.0) STEPS(NCYC+1) = STEP(1)
      IF(NSHUF .GT.  0) STEPS(NCYC+1) = STEP(2)
      IF(KREGAD.EQ.  1) STEPS(NCYC+1) = STEP(6)
C
      IF(IBUCON.EQ.0) GO TO 200
C
C     BEGINNING OF TIME STEP PRINTOUT
C
      IF (NPRT.LT.0) GO TO 80
      WRITE(NOUT,30)
30    FORMAT('1')
      WRITE(NOUT,FMTEQL)
      WRITE(NOUT,40) IBUCON, NPRT,NSHUF,IXSTRT,IDUP17,IREGAD
40    FORMAT(//
     ! I12,'   IBUCON   0 / 1 = END OF PROBLEM / CONTINUE'/
     ! I12,'   NPRT     PRINT OUT  (0/ 1/ 2/ 3  MIN/FULL/.../MAX)' /
     ! I12,'   NSHUF    NUMBER OF MATERIAL SHUFFLES'/,
     ! I12,'   IXSTRT   OPTION FOR MICRO-XENON (  -1/ 0/ 1   ',
     !                     'EQUILIBRIUM/ NORMAL/ ZERO) '  /
     ! I12,'   IDUP17   WRITE MATERIAL BURNUP ON UNIT 17 (0/ 1/ 2/'
     !                    ,' ---  NONE / UNFORMATED / FORMATED)'/
     ! I12,'   IREGAD   0 / 1 = REGULAR / ADJOINT CALCULATION'/)
      WRITE(NOUT, 50) DELT, POWFAC
 50   FORMAT(//
     ! 1PE12.4,'   DELT     TIME STEP LENGTH'  /
     ! 1PE12.4,'   POWFAC   POWER MODIFIER (POWER = POWER * POWFAC)'/)
      WRITE(NOUT,FMTEQL)
C
C      SHUFFLE MATERIALS
C
       IF(NSHUF.LE.0) GO TO 12
         WRITE(NOUT,22) NSHUF, DAY
   22    FORMAT(//20X,I8,'   M A T E R I A L S   S H U F F L E D   AT',
     !    F9.2,'  D A Y S ',//,44X,'ZONE   NEW MATERIAL   OLD MATERIAL')
   80    CONTINUE
         IF(NSHUF.LE.0) GO TO 12
         DO 25 I=1,NSHUF
            KZONE  = KZM(1,I)
            MATNEW = KZM(2,I)
            IF( MATNEW.EQ.-1 )  MATNEW = MATOLD
            MATOLD = IZMAT( KZONE )
            IZMAT( KZONE ) = MATNEW
            IF (NPRT.GE.0)  WRITE(NOUT,26)  KZONE, MATNEW, MATOLD
   26          FORMAT(35X,3I14)
   25    CONTINUE
C
C
  12  CONTINUE
      IF(NPRT.GE.0) CALL MAPR(IZONE,IZMAT,IARAY,FLUX1)
      DAY = DAY + DELT
14    KONFLX = 0
      KONSCH = 0
      KOUTER = 0
      ALA = 0.0
      ALAP = 0.0
      ALAPP = 0.0
      ALAR = 0.0
      KPAGE = 100
C
190   RETURN
 200  CONTINUE
C
C     END OF CALCULATION PRINT OUT
C
      IF(NCYC.LE.1) GO TO 250
      WRITE(NOUT,FMTTIT) ID, DATIM, KSTEP
      WRITE(NOUT,230)
 230  FORMAT('0  CYCLE    DAYS      DELT        POWER   SHUFS  ',
     !       '  STEP TYPE     EIGENVALUE       REACTIVITY CHG',
     !       '     REACTIVITY CHG'/,77X,
     !       '   FROM PREVIOUS STEP   FROM FIRST STEP'//)
      REACT1=0.0
      REACT2=0.0
      DO 245 N=1,NCYC
         WRITE(NOUT,240) N,DAYS(N),DELTS(N),POWERS(N),NSHUFS(N),
     !   STEPS(N),EVS(N),REACT1,REACT2
 240     FORMAT(I7,2F10.3,E13.2,I6,7X,A4,F17.6,2F19.4)
         IF(EVS(N+1).LE.0.0) GO TO 245
         REACT1=(EVS(N+1)-EVS(N))/(EVS(N+1)*EVS(N))*100.0
         REACT2=(EVS(N+1)-EVS(1))/(EVS(N+1)*EVS(1))*100.0
 245  CONTINUE
C 250 TME = SECNDS(0.0) - TIMEI
  250 TME = 0.0
      WRITE (6,90) TME
   90 FORMAT ('0 EXECUTION TIME = ', F7.0,' (SEC)')
      WRITE(NOUT,FMTSP2)
      WRITE(NOUT,FMTEQL)
  999 RETURN
      END
C$ GEOM ================================================================
       SUBROUTINE GEOM(HOLL,IARAY)
C
C-----------------------------------------------------------------------
      COMMON/UNITS/ DATIM(3), TIMEI,  KSTEP, NINP, NOUT, NDUMP,
     !           NFLUX1,NSORCE,NBULIB,NCXS,NGUESS,NSCRAT
      CHARACTER*4 FMTTIT,FMTDSH,FMTEQL,FMTAST,FMTSP2,FMTSP3
      COMMON/UNIT1/ FMTTIT(13),
     !           FMTDSH(4),FMTEQL(4),FMTAST(4),FMTSP2(2),FMTSP3(2)
      CHARACTER*4 ID
      COMMON /UNIT3/ ID(20)
C-----------------------------------------------------------------------
      COMMON /BLOC/
     ! IREGAD,IEVTYP,ISERCH,  NGPS,NXDOWN,NXCARD,NXTAPE,IGUESS,
     ! MOUTER,MINNER,IALDIR,IOVLAY, IGEOM,    IM,    JM,NZONES,
     !   NMAT,NMIXCD,  IBCL,  IBCR,  IBCT,  IBCB,NIZDEL,NJZDEL,
     !   NPRT,NLIBMT,NBUSTP,IXSTRT,IXEMIC, IEDIT,IGPBUK,IDUP17,
     !  JDUM2, JDUM3, JDUM4, JDUM5,    EV,   EVM, PAREV,  BUCK,
     !   ALAL,  ALAH,   EPS,EPSPAR,EPSFLX,   POD,   ORF, POWER,
     ! FISMEV, XMWFA, ORFFS,ABLYVO,  DUM3,  DUM4,
     ! KOUTER,KINNER,KGROUP,KIITOT, KPAGE,   K07, KDUM1, KDUM2,
     ! IBUCON,IGEOMP,   IMP,   JMP, NGPSP,NZONEP,NXSETS,IDETED,
     !  NSHUF,IBATCH,KONFLX,KONSCH,IALPHA,IDELTA,NEWOLD, IPBAR,
     !  ISBAR,  IMJM,   IHS,   IHT,   ITL,  ITL1,MAXMIN,MAXSEC,
     !  ITEMP,   MGC,  MPIC,  MPJC,ITEMP1,ITEMP2,  NUMX,IBEGIN,
     !     IP,    JP, NGOTO, INVDIR,NGPS2,NBUMAX,  NVAR, KNEG0,
     !    ALA,  ALAP, ALAPP,  ALAR,FLXCHM,   DAY,  DELT,    EQ,
     !   EVPP,   E01,   E02,   E03,  ORFP,CHISUM,  TOTV,  TEMP,
     !  TEMP2, TEMP3, TEMP4,    TI,FISSEN,SFISSP,ALFABS,GPSORS,
     !    EVP, TEMP1,FLXCHG,SERR2P,ESTKHI,ESTKLO,XTRAPK,ESTDOM
C-----------------------------------------------------------------------
      DIMENSION IARAY(1), IV(6), IN(6,4)
C-----------------------------------------------------------------------
      CHARACTER * 4 ETEST, ZTEST, HOLL
      DATA         ETEST/'EDIT'/, ZTEST/'ZONE'/
C-----------------------------------------------------------------------
C
      ITEST=0
      IF(HOLL.EQ.ETEST) ITEST= -IEDIT
      IF(HOLL.EQ.ZTEST) ITEST=NZONES
      ITEMP = 6 - IBATCH
   10  CONTINUE
       READ(NINP,20) (IV(I),(IN(I,J),J=1,4),I=1,ITEMP)
   20  FORMAT(25I3)
       DO 40 K=1,ITEMP
        IF(IV(K).LT.0) GO TO 50
        IF(IV(K).EQ.0) GO TO 40
        IF(IV(K).GT.ITEST)GO TO 45
        I1=IN(K,1)
        I2=IN(K,3)
        J1=IN(K,2)
        J2=IN(K,4)
        IF(I1-IM) 21,21,45
   21   IF(I2-IM) 22,22,45
   22   IF(J1-JM) 23,23,45
   23   IF(J2-JM) 24,24,45
   24   CONTINUE
        DO 30 J=J1,J2
         DO 30 I=I1,I2
          IARAY(IM*(J-1)+I) = IV(K)
   30   CONTINUE
   40  CONTINUE
       GO TO 10
   45  CALL ERRO2('**GEOM',45,1)
   50  CONTINUE
       IF(NPRT.GT.3)WRITE(NOUT,60) HOLL, IMJM, (IARAY(I), I=1,IMJM)
   60  FORMAT(6X,A6,I6/(30I4))
       RETURN
       END
C$ REDIT ===============================================================
       SUBROUTINE REDIT(IARAY,FED,VOL,TED,VED,IVS)
C
C-----------------------------------------------------------------------
      COMMON/UNITS/ DATIM(3), TIMEI,  KSTEP, NINP, NOUT, NDUMP,
     !           NFLUX1,NSORCE,NBULIB,NCXS,NGUESS,NSCRAT
      CHARACTER*4 FMTTIT,FMTDSH,FMTEQL,FMTAST,FMTSP2,FMTSP3
      COMMON/UNIT1/ FMTTIT(13),
     !           FMTDSH(4),FMTEQL(4),FMTAST(4),FMTSP2(2),FMTSP3(2)
      CHARACTER*4 ID
      COMMON /UNIT3/ ID(20)
C-----------------------------------------------------------------------
      COMMON /BLOC/
     ! IREGAD,IEVTYP,ISERCH,  NGPS,NXDOWN,NXCARD,NXTAPE,IGUESS,
     ! MOUTER,MINNER,IALDIR,IOVLAY, IGEOM,    IM,    JM,NZONES,
     !   NMAT,NMIXCD,  IBCL,  IBCR,  IBCT,  IBCB,NIZDEL,NJZDEL,
     !   NPRT,NLIBMT,NBUSTP,IXSTRT,IXEMIC, IEDIT,IGPBUK,IDUP17,
     !  JDUM2, JDUM3, JDUM4, JDUM5,    EV,   EVM, PAREV,  BUCK,
     !   ALAL,  ALAH,   EPS,EPSPAR,EPSFLX,   POD,   ORF, POWER,
     ! FISMEV, XMWFA, ORFFS,ABLYVO,  DUM3,  DUM4,
     ! KOUTER,KINNER,KGROUP,KIITOT, KPAGE,   K07, KDUM1, KDUM2,
     ! IBUCON,IGEOMP,   IMP,   JMP, NGPSP,NZONEP,NXSETS,IDETED,
     !  NSHUF,IBATCH,KONFLX,KONSCH,IALPHA,IDELTA,NEWOLD, IPBAR,
     !  ISBAR,  IMJM,   IHS,   IHT,   ITL,  ITL1,MAXMIN,MAXSEC,
     !  ITEMP,   MGC,  MPIC,  MPJC,ITEMP1,ITEMP2,  NUMX,IBEGIN,
     !     IP,    JP, NGOTO, INVDIR,NGPS2,NBUMAX,  NVAR, KNEG0,
     !    ALA,  ALAP, ALAPP,  ALAR,FLXCHM,   DAY,  DELT,    EQ,
     !   EVPP,   E01,   E02,   E03,  ORFP,CHISUM,  TOTV,  TEMP,
     !  TEMP2, TEMP3, TEMP4,    TI,FISSEN,SFISSP,ALFABS,GPSORS,
     !    EVP, TEMP1,FLXCHG,SERR2P,ESTKHI,ESTKLO,XTRAPK,ESTDOM
C-----------------------------------------------------------------------
      DIMENSION IARAY(1), FED(1),VOL(1),TED(1),VED(1)
C-----------------------------------------------------------------------
C
      NED = -IEDIT
C
       CALL CLEARS(0.0, TED, NED)
       TOTP=0.0
       IF(IVS.EQ.1) TOTV=0.0
       IF(IVS.EQ.1) CALL CLEARS(0.0,VED,NED)
       DO 140 J=1,IMJM
        I=IARAY(J)
        IF(I.LE.0) GO TO 140
        TED(I)=TED(I)+FED(J)*VOL(J)
        IF(IVS.EQ.1) VED(I)=VED(I)+VOL(J)
        IF(IVS.GT.NGPS) TOTP=TOTP+FED(J)*VOL(J)
  140  CONTINUE
       IF(TOTP.GT.0.0) TOTV=TOTV/TOTP
       DO 150 I=1,NED
        TED(I)=TED(I)/VED(I)
        IF(IVS.EQ.1) TOTV=TOTV+VED(I)
        IF(IVS.GT.NGPS) TED(I)=TED(I)*TOTV
  150  CONTINUE
       ITEMP=1
       IF(IVS.GT.NGPS) ITEMP=2
       DO 210 IT=1,ITEMP
        N1=1
        N2=8
        IF(NED.LT.8) N2=NED
        JED=NED/8
        IF(8*JED.LT.NED) JED=JED+1
        DO 180 J=1,JED
         WRITE(NOUT,160) (I, I=N1,N2)
         WRITE(NOUT,170) (TED(I),I=N1,N2)
  160    FORMAT('0 REGION NUMBER:',8(4X,I4,4X))
  170    FORMAT(' REGION AVERAGE:',1P8E12.5)
         IF(J.EQ.JED) GO TO 180
         N1=N2+1
         N2=N2+8
         IF(N2.GT.NED) N2=NED
  180   CONTINUE
        IF(IT.EQ.ITEMP) GO TO 210
        TOTED=0.0
        DO 190 I=1,NED
  190   TOTED=TOTED+TED(I)
        IF(TOTED.LE.0.0) GO TO 210
        DO 200 I=1,NED
  200   TED(I)=TED(I)/TOTED
  210  CONTINUE
       RETURN
       END
C$ INTERP ==============================================================
      SUBROUTINE INTERP( XSEC, BURN, FISS2, V0, IZONE, IZMAT, C, FLUX1,
     !           DENXE, DENI,        XEABS, BUPER, BMWDT, MATID,
     !           ULOAD, XID, VOL, FLXVOL,  NBU )
C
C-----------------------------------------------------------------------
      CHARACTER*8 XID
C-----------------------------------------------------------------------
      COMMON/UNITS/ DATIM(3), TIMEI,  KSTEP, NINP, NOUT, NDUMP,
     !           NFLUX1,NSORCE,NBULIB,NCXS,NGUESS,NSCRAT
      CHARACTER*4 FMTTIT,FMTDSH,FMTEQL,FMTAST,FMTSP2,FMTSP3
      COMMON/UNIT1/ FMTTIT(13),
     !           FMTDSH(4),FMTEQL(4),FMTAST(4),FMTSP2(2),FMTSP3(2)
      CHARACTER*4 ID
      COMMON /UNIT3/ ID(20)
C-----------------------------------------------------------------------
      COMMON /BLOC/
     ! IREGAD,IEVTYP,ISERCH,  NGPS,NXDOWN,NXCARD,NXTAPE,IGUESS,
     ! MOUTER,MINNER,IALDIR,IOVLAY, IGEOM,    IM,    JM,NZONES,
     !   NMAT,NMIXCD,  IBCL,  IBCR,  IBCT,  IBCB,NIZDEL,NJZDEL,
     !   NPRT,NLIBMT,NBUSTP,IXSTRT,IXEMIC, IEDIT,IGPBUK,IDUP17,
     !  JDUM2, JDUM3, JDUM4, JDUM5,    EV,   EVM, PAREV,  BUCK,
     !   ALAL,  ALAH,   EPS,EPSPAR,EPSFLX,   POD,   ORF, POWER,
     ! FISMEV, XMWFA, ORFFS,ABLYVO,  DUM3,  DUM4,
     ! KOUTER,KINNER,KGROUP,KIITOT, KPAGE,   K07, KDUM1, KDUM2,
     ! IBUCON,IGEOMP,   IMP,   JMP, NGPSP,NZONEP,NXSETS,IDETED,
     !  NSHUF,IBATCH,KONFLX,KONSCH,IALPHA,IDELTA,NEWOLD, IPBAR,
     !  ISBAR,  IMJM,   IHS,   IHT,   ITL,  ITL1,MAXMIN,MAXSEC,
     !  ITEMP,   MGC,  MPIC,  MPJC,ITEMP1,ITEMP2,  NUMX,IBEGIN,
     !     IP,    JP, NGOTO, INVDIR,NGPS2,NBUMAX,  NVAR, KNEG0,
     !    ALA,  ALAP, ALAPP,  ALAR,FLXCHM,   DAY,  DELT,    EQ,
     !   EVPP,   E01,   E02,   E03,  ORFP,CHISUM,  TOTV,  TEMP,
     !  TEMP2, TEMP3, TEMP4,    TI,FISSEN,SFISSP,ALFABS,GPSORS,
     !    EVP, TEMP1,FLXCHG,SERR2P,ESTKHI,ESTKLO,XTRAPK,ESTDOM
C-----------------------------------------------------------------------
      DIMENSION BUPER(1),ULOAD(1),BMWDT(1),MATID(1),XID(1),DUP17(6),
     ! XEABS(2,NGPS),DENXE(1),DENI(1),XSEC(NUMX,NBUMAX),FISS2(1),
     ! V0(1),IZONE(1),IZMAT(NMAT),FLUX1(IMJM),C(ITL,NMAT,NGPS),
     ! BURN(NVAR,NBUMAX),NBU(NXTAPE),VOL(NZONEP),FLXVOL(NGPS2,NZONEP)
C-----------------------------------------------------------------------
      DATA GAMX,GAMI,DECAYX,DECAYI/.00237,.0639,2.09E-5,2.87E-5/
C                    (**DATA FROM LAMARSH**)
C-----------------------------------------------------------------------
C
C  COMPUTE INDIVIDUAL MATERIAL BURNUPS FOR NXTAPE MATERIALS
C
C      BMWDT(M)= MWD/T OF BU-MATL M (NXTAPE MATLS ONLY)
C      BUMWD   = INCREMENTAL BURNUP OF BU-MATL M (MWD)
C      VOL(I)  = CURRENT VOLUME OF ZONE I
C      VOLM    = CURRENT TOTAL VOLUME OF BU-MATL M
C
      TLOAD=0.0
      BURNUP=0.0
      DEP=0.0
C-----------------------------------------------------------------------
C
C MAIN LOOP FOR CROSS SECTION INTERPOLATION
C
      DO 370 M=1,NXTAPE
C                                        GET XSEC'S FROM BU-LIB
         MK = M + NXCARD
         NBUSTP = NBU(M)
C
      CALL BUXSEC( MATID(M), NBU(M), NUMX, NVAR, BURN, XSEC )
C
C                   CONVERT FROM %BU TO MWD/T, POSSIBLY NEEDED ONLY
C                         FOR FIRST TIME STEP
C
         IF( BMWDT(M).GT.0.0 .OR. BUPER(M).LE.0.0 ) GO TO 120
C
C                                   FIND 2 BU'S TO BRACKET %BU
            BP = BUPER(M)
C-----------IF BU OUTSIDE THE TABLE USE LINEAR INTERPOLATION-----NH-----
C
                  IF(BP .GT. BURN(2,NBUSTP)) GO TO 109
                  DO 100 I=2,NBUSTP
                  IF(BP.GT.BURN(2,I)) GO TO 100
                  GO TO 110
  100             CONTINUE
  109             I = NBUSTP
  110             J1 = I-1
                  J2 = I
                  BP1 = BURN(2,J1)
                  BP2 = BURN(2,J2)
C-----------------------------------------------------------------------
C                                       LINEAR INTERP
C
            BMWDT(M) = ( BURN(1,J1)*(BP2-BP) +BURN(1,J2)*(BP-BP1) )
     !                            / (BP2-BP1)
C
  120    CONTINUE
C
C                        GET INCREMENTAL BU, ADD TO BU IN MWD/T
C
         VOLM = 0.0
         BUMWD = 0.0
C                                        IF NO FUEL- USE BU FROM
C                                        PREVIOUS TAPE MATERIAL
         IF(ULOAD(M).GT.0.0) GO TO 210
                BMWDT(M) = BMWDT(M-1)
                GO TO 230
  210    CONTINUE
C                                        GET INCREMENTAL BU FOR MAT.
         DO 220 K=1,NZONES
            IF( M .NE. (IZMAT(K)-NXCARD) ) GO TO 220
               VOLM = VOLM + VOL(K)
               BUMWD = BUMWD + DELT*FLXVOL(NGPSP,K)
C                                   FLXVOL(NGPSP,K) IS MW FOR ZONE K
  220    CONTINUE
C                                        CONVERT BU TO MWD/MTU
         IF(VOLM .LE. 0.0) GO TO 230
            UMASS    = ULOAD(M)*VOLM
            BMWDT(M) = BMWDT(M) + BUMWD/UMASS
            TLOAD    = TLOAD + UMASS
            DEP      = DEP + BMWDT(M)*UMASS
  230    CONTINUE
         BU = BMWDT(M)
C
C         INTERPOLATE
C                                         FIND 2 LIBRARY STEPS TO BRACKE
C-----------IF BU OUTSIDE THE TABLE USE LINEAR INTERPOLATION-----NH-----
C
               IF( BU.GT.BURN(1,NBUSTP) )GO TO 299
C
               DO 295 I=2,NBUSTP
               IF( BU.GT.BURN(1,I) ) GO TO 295
               GO TO 300
  295          CONTINUE
  299          I = NBUSTP
  300          J1=I-1
               J2=I
               BMJ1=BURN(1,J1)
               BMJ2=BURN(1,J2)
C-----------------------------------------------------------------------
C                                          FIND THIRD CLOSEST STEP
         J3=J2+1
         J4=J1-1
         IF(J3.GT.NBUSTP) J3=J4
         IF(J4.LT.1) J4=J3
         IF( (BURN(1,J3)-BU) .GT. (BU-BURN(1,J4)) ) J3=J4
         BMJ3=BURN(1,J3)
C                                   SET CONSTANTS FOR 3-PT LAGRANGE INTE
  350    B12=BMJ1-BMJ2
         B13=BMJ1-BMJ3
         B23=BMJ2-BMJ3
         W1=BU-BMJ1
         W2=BU-BMJ2
         W3=BU-BMJ3
         C1= W2*W3/(B12*B13)
         C2=-W1*W3/(B23*B12)
         C3= W1*W2/(B13*B23)
C                                   USE 2-PT LAGRANGE IF NBUSTP IS
C                                   LESS THAN FIVE
C-----------IF BU OUTSIDE THE TABLE USE LINEAR EXTRAPOLATION-----NH-----
C
           IF( BU.LT.BURN(1,NBUSTP) )GO TO 353
           WRITE(NOUT,320) BU, MK,XID(M)
  320      FORMAT(///' ***ERROR***  BURNUP = ',E12.5,'MWD/T',
     !     '  OUTSIDE LIMITS OF TABLE FOR MATERIAL',I4,4X,A6 /
     #     '  *** LINEAR EXTRAPOLATION APPLIED *** ' )
           GO TO 354
C-----------------------------------------------------------------------
C
 353     IF(NBUSTP.GT.4) GO TO 355
 354     C1= W2/B12
         C2=-W1/B12
         C3= 0.0
 355     CONTINUE
C
C                                     INTERPOLATE ALL XSEC'S FOR THIS MA
         DO 369 KGP=1,NGPS
            KKK = (KGP-1)*ITL1
            DO 365 L=1,ITL
               KK = KKK + L
               C(L,MK,KGP) =  C1*XSEC(KK,J1)
     !                       +C2*XSEC(KK,J2)
     !                       +C3*XSEC(KK,J3)
  365       CONTINUE
            IF(IXEMIC.EQ.0) GO TO 369
               K1 = KKK + 7
               K2 = KKK + 8
C                                         XEABS(1,KGP) = XE MACRO
               XEABS(1,KGP) = C1*XSEC(K1,J1)
     !                       +C2*XSEC(K1,J2)
     !                       +C3*XSEC(K1,J3)
C                                         XEABS(2,KGP) = XE MICRO,   INT
               XEABS(2,KGP) = C1*XSEC(K2,J1)
     !                       +C2*XSEC(K2,J2)
     !                       +C3*XSEC(K2,J3)
  369    CONTINUE
C
C                                       INTERP. %BU
         BUPER(M) =   C1*BURN(2,J1)
     !              + C2*BURN(2,J2)
     !              + C3*BURN(2,J3)
C
C-----------------------------------------------------------------------
C
C                                         XENON AND IODINE SECTION
      IF( IXEMIC .EQ. 0 ) GO TO 370
      IF(IXSTRT .EQ. 0 ) GO TO 510
C                                       IXSTRT=1 --> ZERO OUT XENON
C                                       IXSTRT=-1 --> EQUILIB XE
         DENXE(M) = 0.0
         DENI(M)  = 0.0
         IF(IXSTRT.EQ.1) GO TO 550
  510 CONTINUE
C                              CALCULATE XENON AND IODINE DENSITIES
      XELAMF = 0.0
      FISS   = 0.0
      IF( BUMWD .LE. 0.0 ) GO TO 546
C
         DO 545 K=1,NZONES
            IF( M.NE.(IZMAT(K)-NXCARD) ) GO TO 545
               DO 540 KGP=1,NGPS
                  XELAMF = XELAMF + XEABS(2,KGP)*FLXVOL(KGP,K)
  540          CONTINUE
  545    CONTINUE
         XELAMF = XELAMF/VOLM * 1.0E-24
         FISS   = BUMWD/(DELT*FISSEN*VOLM)
C                                   FISS=AVERAGE FISSIONS/CC*SEC FOR MAT
  546 CONTINUE
      XELAM = DECAYX + XELAMF
C
         TSEC  = DELT*24.0*3600.0
C                                           FOR EQUIL, CHANGE TSEC TO BI
         IF(IXSTRT.EQ.-1) TSEC= 10.*24.*3600.
C
         SATI  = GAMI*FISS/DECAYI
         SATX  = (GAMI+GAMX)*FISS/XELAM
         TERMX = EXP(-XELAM*TSEC)
         TERMI = EXP(-DECAYI*TSEC)
         DENXE(M)=SATX+(DENXE(M)-SATX)*TERMX+DECAYI*(DENI(M)-SATI)*
     !                            (TERMI-TERMX)/(XELAM-DECAYI)
         DENI(M) = SATI + (DENI(M)-SATI)*TERMI
  550 CONTINUE
         DO 600 KGP=1,NGPS
            XABS = DENXE(M)*XEABS(2,KGP)*1.0E-24
            C(2,MK,KGP) = C(2,MK,KGP) -XEABS(1,KGP) +XABS
C                                                           CORRECT SELF
            C(5,MK,KGP) = C(5,MK,KGP) + XEABS(1,KGP) - XABS
  600 CONTINUE
C
      IGF=NGPS-1
      IGT=NGPS
C
C     PRINT OUT LAST 2 GROUPS ONLY
C
      IF(NPRT.LT.3) GO TO 601
C
      WRITE(NOUT,609) IGF,IGT,IGF,IGT
  609 FORMAT(1H0,5X,'MATL NO.    XENON DEN  IODINE DEN   XE ABS ',
     !           I2,'   XE ABS',I2,'   TOT ABS',I2,'   TOT ABS',I2)
      WRITE(NOUT,610) M,DENXE(M),DENI(M),(XEABS(2,J),J=IGF,IGT),
     !                       (C(2,MK,J),J=IGF,IGT)
  610 FORMAT(I10,5X,1P6E12.4)
C
C-----------------------------------------------------------------------
C
  601 CONTINUE
  370 CONTINUE
C
C
  395 IF(TLOAD.LE.0.0) CALL ERRO2('INTERP',395,1)
      BURNUP=DEP/TLOAD
      IF (NPRT.LT.0) GO TO 435
C
  410 CONTINUE
      WRITE(NOUT,420)
  420 FORMAT(/'       ZONE     MATERIAL    LIBRARY NO.',
     !   '  LIBRARY ID    BURNUP(MWD/T)    BURNUP(MWD/CM3)',
     !   '    BURNUP(%)    BURNUP(MWD/ASBLY)' )
C
  422 DO 430 J=1,NZONES
         M=IZMAT(J)-NXCARD
         IF(M.LE.0)GO TO 425
            TEMP = BMWDT(M)*ULOAD(M)
            TEMP1= TEMP*ABLYVO
            WRITE(NOUT,424) J,IZMAT(J),MATID(M),XID(M),
     !                        BMWDT(M),TEMP,BUPER(M),TEMP1
            GO TO 430
  425    WRITE(NOUT,424) J,IZMAT(J)
  424    FORMAT( I10,I11,I13,10X,A6,1P2E18.5,0PF14.3,1PE18.5)
  430 CONTINUE
C
      IF(NPRT.LT.2) GO TO 435
         WRITE(NOUT,FMTTIT) ID, DATIM, KSTEP
         WRITE(NOUT,431) BURNUP
  431    FORMAT(//,30X,'B U R N U P =',1PE12.5,2X,'M W D / T O N N E'
     !         //,'                MATERIAL    LIBRARY NO.',
     !   '  LIBRARY ID    BURNUP(MWD/T)    BURNUP(MWD/CM3)',
     !   '    BURNUP(%)    BURNUP(MWD/ASBLY)' )
         DO 434 M=1,NXTAPE
            ITEMP = M + NXCARD
            TEMP  = BMWDT(M)*ULOAD(M)
            TEMP1 = TEMP*ABLYVO
            WRITE(NOUT,440)ITEMP,MATID(M),XID(M),BMWDT(M),TEMP,
     !      BUPER(M),TEMP1
  440       FORMAT(10X,I11,I13,10X,A6,1P2E18.5,0PF14.3,1PE18.5)
  434    CONTINUE
C
  435 CONTINUE
C
C-----------------------------------------------------------------------
C
  450 CONTINUE
C
C     OUTPUT PERCENT BURNUP ON UNIT 17
C     IDUP17 = 1 OUTPUT PERCENT BURNUP BY ZONE IN DECIMAL
C
      IF(IDUP17.EQ.0) GO TO 500
C
      WRITE(17,480) DAY,DELT,NXTAPE,NZONES,ID
  480 FORMAT('   DAY  DELT NXTAPE NZONES '/
     #           2F7.3,2I4,20A4)
C
      ITEMP1= NZONES
      DO 496 M=1,NZONES,6
      CALL CLEARS(0,DUP17,6)
      DO 494 J=1,6
      IF(ITEMP1.LE.0) GO TO 494
      ITEMP2 = IZMAT(M+J-1) - NXCARD
      IF(ITEMP2.GT.0) DUP17(J) = BUPER(ITEMP2)
      ITEMP1 = ITEMP1 -1
  494 CONTINUE
C
      WRITE(17,495) DUP17
  495 FORMAT(6(' 1R ',F6.2))
C
  496 CONTINUE
C
  500 RETURN
C
      END
CADXSEC
      SUBROUTINE ADXSEC( C, VELOC, CHIIN , GAM)
C
C-----------------------------------------------------------------------
      COMMON/UNITS/ DATIM(3), TIMEI,  KSTEP, NINP, NOUT, NDUMP,
     !           NFLUX1,NSORCE,NBULIB,NCXS,NGUESS,NSCRAT
      CHARACTER*4 FMTTIT,FMTDSH,FMTEQL,FMTAST,FMTSP2,FMTSP3
      COMMON/UNIT1/ FMTTIT(13),
     !           FMTDSH(4),FMTEQL(4),FMTAST(4),FMTSP2(2),FMTSP3(2)
      CHARACTER*4 ID
      COMMON /UNIT3/ ID(20)
C-----------------------------------------------------------------------
      COMMON /BLOC/
     ! IREGAD,IEVTYP,ISERCH,  NGPS,NXDOWN,NXCARD,NXTAPE,IGUESS,
     ! MOUTER,MINNER,IALDIR,IOVLAY, IGEOM,    IM,    JM,NZONES,
     !   NMAT,NMIXCD,  IBCL,  IBCR,  IBCT,  IBCB,NIZDEL,NJZDEL,
     !   NPRT,NLIBMT,NBUSTP,IXSTRT,IXEMIC, IEDIT,IGPBUK,IDUP17,
     !  JDUM2, JDUM3, JDUM4, JDUM5,    EV,   EVM, PAREV,  BUCK,
     !   ALAL,  ALAH,   EPS,EPSPAR,EPSFLX,   POD,   ORF, POWER,
     ! FISMEV, XMWFA, ORFFS,ABLYVO,  DUM3,  DUM4,
     ! KOUTER,KINNER,KGROUP,KIITOT, KPAGE,   K07, KDUM1, KDUM2,
     ! IBUCON,IGEOMP,   IMP,   JMP, NGPSP,NZONEP,NXSETS,IDETED,
     !  NSHUF,IBATCH,KONFLX,KONSCH,IALPHA,IDELTA,NEWOLD, IPBAR,
     !  ISBAR,  IMJM,   IHS,   IHT,   ITL,  ITL1,MAXMIN,MAXSEC,
     !  ITEMP,   MGC,  MPIC,  MPJC,ITEMP1,ITEMP2,  NUMX,IBEGIN,
     !     IP,    JP, NGOTO, INVDIR,NGPS2,NBUMAX,  NVAR, KNEG0,
     !    ALA,  ALAP, ALAPP,  ALAR,FLXCHM,   DAY,  DELT,    EQ,
     !   EVPP,   E01,   E02,   E03,  ORFP,CHISUM,  TOTV,  TEMP,
     !  TEMP2, TEMP3, TEMP4,    TI,FISSEN,SFISSP,ALFABS,GPSORS,
     !    EVP, TEMP1,FLXCHG,SERR2P,ESTKHI,ESTKLO,XTRAPK,ESTDOM
C-----------------------------------------------------------------------
      DIMENSION C(ITL,NMAT,NGPS),VELOC(NGPS),CHIIN(NGPS),GAM(NZONES,1)
C-----------------------------------------------------------------------
C
C     MIXES ARRAYS FOR THE ADJOINT CALCULATION
C
170   DO 190  KGP=1,NGPS
      IGBAR=NGPS-KGP+1
C
C     VELOCITY AND SPECTRUM ARRAYS
C
      TEMP=CHIIN(KGP)
      CHIIN(KGP)=CHIIN(IGBAR)
      CHIIN(IGBAR)=TEMP
      IF(IALPHA.EQ.0) GO TO 175
         TEMP=VELOC(KGP)
         VELOC(KGP)=VELOC(IGBAR)
         VELOC(IGBAR)=TEMP
175   CONTINUE
C
C     BUCKLING FACTOR ARRAY
C
      IF(IGPBUK.LE.0) GO TO 179
      DO 178 KZO=1,NZONES
         TEMP = GAM(KZO,KGP)
         GAM(KZO,KGP) = GAM(KZO,IGBAR)
         GAM(KZO,IGBAR) = TEMP
178   CONTINUE
179   CONTINUE
C
C
C     CROSS SECTION ARRAYS
C
      DO 180  M=1,NMAT
      DO 180  L = 1,IHS
      TEMP=C(L,M,KGP)
      C(L,M,KGP)=C(L,M,IGBAR)
      C(L,M,IGBAR)=TEMP
180   CONTINUE
      IF (IGBAR - KGP -1) 200, 200, 190
190   CONTINUE
200   CONTINUE
      KK = ITL - IHS
      IF (KK.LE.0) GO TO 280
210   CONTINUE
      DO 240  M = 1,NMAT
      DO 240  KGP = 1,NGPS
      IGBAR = NGPS - KGP + 1
      DO 240  L = 1,KK
      IF (L - KGP) 220, 240, 240
220   I = L + IHS
      ITEMP = IGBAR + L
      IF (KGP - ITEMP) 230, 230, 240
230   TEMP = C(I,M, KGP)
      C(I,M,KGP) = C(I,M,ITEMP)
      C(I,M,ITEMP) = TEMP
240   CONTINUE
C
  280 CONTINUE
C
      RETURN
      END
C$ ERRO2 ===============================================================
      SUBROUTINE ERRO2( HOL,JSUBR,I)
C
      CHARACTER*6 HOL
C-----------------------------------------------------------------------
      COMMON/UNITS/ DATIM(3), TIMEI,  KSTEP, NINP, NOUT, NDUMP,
     !           NFLUX1,NSORCE,NBULIB,NCXS,NGUESS,NSCRAT
      CHARACTER*4 FMTTIT,FMTDSH,FMTEQL,FMTAST,FMTSP2,FMTSP3
      COMMON/UNIT1/ FMTTIT(13),
     !           FMTDSH(4),FMTEQL(4),FMTAST(4),FMTSP2(2),FMTSP3(2)
      CHARACTER*4 ID
      COMMON /UNIT3/ ID(20)
C-----------------------------------------------------------------------
      WRITE (NOUT,1) HOL,JSUBR
      PRINT 1, HOL,JSUBR
1     FORMAT(2H */,' ERROR IN ',A6,3H AT,I6/2H */2H *)
      GO TO (3,4),I
3     STOP
4     RETURN
      END
C$ S860 ================================================================
      SUBROUTINE S860(CIN,C,MATID,BMWDT,NBU,XID,ULOAD,BURN,XSEC,BUPER)
C
C-----------------------------------------------------------------------
      COMMON/UNITS/ DATIM(3), TIMEI,  KSTEP, NINP, NOUT, NDUMP,
     !           NFLUX1,NSORCE,NBULIB,NCXS,NGUESS,NSCRAT
      CHARACTER*4 FMTTIT,FMTDSH,FMTEQL,FMTAST,FMTSP2,FMTSP3
      COMMON/UNIT1/ FMTTIT(13),
     !           FMTDSH(4),FMTEQL(4),FMTAST(4),FMTSP2(2),FMTSP3(2)
      CHARACTER*4 ID
      COMMON /UNIT3/ ID(20)
C-----------------------------------------------------------------------
      COMMON /BLOC/
     ! IREGAD,IEVTYP,ISERCH,  NGPS,NXDOWN,NXCARD,NXTAPE,IGUESS,
     ! MOUTER,MINNER,IALDIR,IOVLAY, IGEOM,    IM,    JM,NZONES,
     !   NMAT,NMIXCD,  IBCL,  IBCR,  IBCT,  IBCB,NIZDEL,NJZDEL,
     !   NPRT,NLIBMT,NBUSTP,IXSTRT,IXEMIC, IEDIT,IGPBUK,IDUP17,
     !  JDUM2, JDUM3, JDUM4, JDUM5,    EV,   EVM, PAREV,  BUCK,
     !   ALAL,  ALAH,   EPS,EPSPAR,EPSFLX,   POD,   ORF, POWER,
     ! FISMEV, XMWFA, ORFFS,ABLYVO,  DUM3,  DUM4,
     ! KOUTER,KINNER,KGROUP,KIITOT, KPAGE,   K07, KDUM1, KDUM2,
     ! IBUCON,IGEOMP,   IMP,   JMP, NGPSP,NZONEP,NXSETS,IDETED,
     !  NSHUF,IBATCH,KONFLX,KONSCH,IALPHA,IDELTA,NEWOLD, IPBAR,
     !  ISBAR,  IMJM,   IHS,   IHT,   ITL,  ITL1,MAXMIN,MAXSEC,
     !  ITEMP,   MGC,  MPIC,  MPJC,ITEMP1,ITEMP2,  NUMX,IBEGIN,
     !     IP,    JP, NGOTO, INVDIR,NGPS2,NBUMAX,  NVAR, KNEG0,
     !    ALA,  ALAP, ALAPP,  ALAR,FLXCHM,   DAY,  DELT,    EQ,
     !   EVPP,   E01,   E02,   E03,  ORFP,CHISUM,  TOTV,  TEMP,
     !  TEMP2, TEMP3, TEMP4,    TI,FISSEN,SFISSP,ALFABS,GPSORS,
     !    EVP, TEMP1,FLXCHG,SERR2P,ESTKHI,ESTKLO,XTRAPK,ESTDOM
C-----------------------------------------------------------------------
      DIMENSION C(ITL,NMAT,NGPS),         MATID(1),BMWDT(1),
     !  CIN(ITL,NGPS,NXCARD), NBU(1),          ULOAD(1),
     !  BURN(NVAR,NBUMAX),XSEC(NUMX,NBUMAX),BUPER(1)
C
      CHARACTER*80 TITLE
      CHARACTER*4 DTIM
      CHARACTER*8 XID
      DIMENSION XID(1)
C
      CHARACTER*6 NAME
C
C**** CAUTION- C & CIN OVERLAP IN STORAGE, BUT DIFFERENT ORDER ****
C-----------------------------------------------------------------------
C
C     THIS SUBROUTINE REORDERS CROSS SECTIONS AND GETS BU-LIBRARY DATA
C
      IF(NXTAPE.LE.0) GO TO 202
      KPRT = 0
         DO 300 I=1,NXTAPE
            CALL BUINFO( MATID(I), TITLE, XID(I), NAME,DTIM, NBU(I),
     !   IGM,I2DB,KVAR,KTL,ULOAD(I),KPRT,NUMX,NBUMAX,NVAR,BURN,XSEC)
C
               IF(KVAR.NE.NVAR*NBU(I)) CALL ERRO2('  S860', 1,1)
               IF(IGM .NE. NGPS)       CALL ERRO2('  S860', 2,1)
               IF(KTL .NE. ITL1)       CALL ERRO2('  S860', 3,1)
  300    CONTINUE
C
C **PRINT LIBRARY DIRECTORY
C
      IF (NPRT.GE.2) GO TO 304
      WRITE(NOUT,FMTTIT) ID, DATIM, KSTEP
      WRITE(NOUT,1)
    1          FORMAT('0*** BURNUP LIBRARY MATERIALS USED ***'/
     !                '0LIB.MAT#',5X,'TITLE,DATE,TIME',
     !          ' / XID, NAME, #BU STEPS, #GPS, I2DB, KVAR, KTL,',
     !          ' ULOAD'/'0')
  304 CONTINUE
         MATMAX = 0
         MATMIN = 999999
         DO 310 I=1,NXTAPE
            MATMAX = MAX0( MATMAX, MATID(I) )
            MATMIN = MIN0( MATMIN, MATID(I) )
  310    CONTINUE
         KPRT = MAX0(1,NPRT)
         DO 350 M=MATMIN,MATMAX
            DO 320 I=1,NXTAPE
               IF( M.NE.MATID(I) ) GO TO 320
                  CALL BUINFO(M,TITLE,XID(I),NAME,DTIM,NBU(I),
     !   IGM,I2DB,KVAR,KTL,ULOAD(I),KPRT,NUMX,NBUMAX,NVAR,BURN,XSEC)
                  GO TO 350
  320       CONTINUE
  350    CONTINUE
C
            IF(XMWFA.EQ.1.0) GO TO 202
               DO 201 I=1,NXTAPE
                  BMWDT(I) = BMWDT(I) * XMWFA
                  BUPER(I) = BUPER(I) * XMWFA
  201          CONTINUE
            WRITE(NOUT,FMTEQL)
            WRITE(NOUT,203) XMWFA
  203       FORMAT(/40X,'INPUT BURNUP DISTRIBUTION MODIFIED BY',
     !      ' XMWFA = ',F10.4/)
            WRITE(NOUT,FMTEQL)
C
  202 CONTINUE
C
C
C  REORDER CARD XSEC'S--WRITE OUT ON NSCRAT, READ BACK INTO THE "C" ARRA
C    IN THE PROPER ORDER, LEAVING ROOM TO STUFF IN THE "TAPE" XSEC'S LAT
C
      IF( NXCARD .EQ. 0 )  RETURN
         REWIND NSCRAT
         WRITE(NSCRAT) CIN
         REWIND NSCRAT
         READ(NSCRAT) (((C(I,J,K),I=1,ITL),K=1,NGPS),J=1,NXCARD)
         REWIND NSCRAT
C
C
C     CHECK ON CROSS SECTION CONSISTENCY AND ORDER
C*****MODIFIED TO UPDATE THE IN GROUP SCATTERING CROSS SECTIONS
C
      DO 140  J=1,NXCARD
      DO 140  I=1,NGPS
C----------------- CHECK FOR BLKRG  ------------------------------------
                IF( C(4,J,I).EQ.0.0 ) GO TO 141
C
         G = C(2,J,I) + C(5,J,I)
            IF(NXDOWN.EQ.0) GO TO 120
         DO 110  K = 1, NXDOWN
            KK = I + K
            M = 5 + K
            IF(KK - NGPS)  100, 100, 110
  100          G = G + C(M,J,KK)
  110    CONTINUE
  120    CONTINUE
         TEMP=(G - C(4,J,I))/C(4,J,I)
         IF(ABS(TEMP).GT.0001)   WRITE(NOUT,125)  TEMP,J, I
  125       FORMAT(' RELATIVE ERROR =',F9.5,' CHECK MATERIAL',
     !                             I4,'      GROUP',I4)
  139       C(5,J,I)=C(4,J,I)-G+C(5,J,I)
C
C----------------------------------------------------------------------
               GO TO 140
141            CONTINUE
               IF(C(1,J,I).EQ.0.0.AND.C(2,J,I).EQ.0.0 ) WRITE(NOUT,143)
143            FORMAT('0 *** ERROR = WRONG BLACKREGION INPUT: ALFA=0.0'
     #                 , ' ,BETA=0.0  *** ')
               IF(C(1,J,I).EQ.0.0.AND.C(2,J,I).EQ.0.0 ) STOP
C----------------------------------------------------------------------
  140 CONTINUE
C
      WRITE(NOUT,FMTEQL)
      WRITE(NOUT,150)
150   FORMAT(/40X,'IN-GROUP SCATTERING CARD CROSS SECTIONS MODIFIED'/)
      WRITE(NOUT,FMTEQL)
C
      RETURN
      END
C$ S862 ================================================================
      SUBROUTINE S862( FLUX1, T )
C
C-----------------------------------------------------------------------
      DIMENSION FLUX1(IMJM), T(1)
C-----------------------------------------------------------------------
      COMMON/UNITS/ DATIM(3), TIMEI,  KSTEP, NINP, NOUT, NDUMP,
     !           NFLUX1,NSORCE,NBULIB,NCXS,NGUESS,NSCRAT
      CHARACTER*4 FMTTIT,FMTDSH,FMTEQL,FMTAST,FMTSP2,FMTSP3
      COMMON/UNIT1/ FMTTIT(13),
     !           FMTDSH(4),FMTEQL(4),FMTAST(4),FMTSP2(2),FMTSP3(2)
      CHARACTER*4 ID
      COMMON /UNIT3/ ID(20)
C-----------------------------------------------------------------------
      COMMON /BLOC/
     ! IREGAD,IEVTYP,ISERCH,  NGPS,NXDOWN,NXCARD,NXTAPE,IGUESS,
     ! MOUTER,MINNER,IALDIR,IOVLAY, IGEOM,    IM,    JM,NZONES,
     !   NMAT,NMIXCD,  IBCL,  IBCR,  IBCT,  IBCB,NIZDEL,NJZDEL,
     !   NPRT,NLIBMT,NBUSTP,IXSTRT,IXEMIC, IEDIT,IGPBUK,IDUP17,
     !  JDUM2, JDUM3, JDUM4, JDUM5,    EV,   EVM, PAREV,  BUCK,
     !   ALAL,  ALAH,   EPS,EPSPAR,EPSFLX,   POD,   ORF, POWER,
     ! FISMEV, XMWFA, ORFFS,ABLYVO,  DUM3,  DUM4,
     ! KOUTER,KINNER,KGROUP,KIITOT, KPAGE,   K07, KDUM1, KDUM2,
     ! IBUCON,IGEOMP,   IMP,   JMP, NGPSP,NZONEP,NXSETS,IDETED,
     !  NSHUF,IBATCH,KONFLX,KONSCH,IALPHA,IDELTA,NEWOLD, IPBAR,
     !  ISBAR,  IMJM,   IHS,   IHT,   ITL,  ITL1,MAXMIN,MAXSEC,
     !  ITEMP,   MGC,  MPIC,  MPJC,ITEMP1,ITEMP2,  NUMX,IBEGIN,
     !     IP,    JP, NGOTO, INVDIR,NGPS2,NBUMAX,  NVAR, KNEG0,
     !    ALA,  ALAP, ALAPP,  ALAR,FLXCHM,   DAY,  DELT,    EQ,
     !   EVPP,   E01,   E02,   E03,  ORFP,CHISUM,  TOTV,  TEMP,
     !  TEMP2, TEMP3, TEMP4,    TI,FISSEN,SFISSP,ALFABS,GPSORS,
     !    EVP, TEMP1,FLXCHG,SERR2P,ESTKHI,ESTKLO,XTRAPK,ESTDOM
C-----------------------------------------------------------------------
      DIMENSION L(4)
      L(1) = 1
C
C     THIS SUBROUTINE READS THE INPUT FLUXES AND PREPARES A FLUX TAPE
C     IGUESS=0/1/2/3/4/5=NO FLUX INPUT/X(R)*X(Z)/X(R,Z,E)/TAPE/UNIT 18
C
      REWIND NFLUX1
      IF(IGUESS.LT.4) GO TO 10
C LER TEMP SEM O FORMATO 11 ****************************
         READ(14) TEMP
11       FORMAT(A1)
         READ(14) R
         READ(14) Z
         READ(14) VOL
10    KK = IGUESS + 1
      DO 1000  KGP = 1, NGPS
         GO TO (50, 60, 70, 120, 120, 120), KK
C
C        NO FLUX GUESS, FILL FLUX1 WITH 1'S
C
  50     CALL CLEARS( 1.0, FLUX1, IMJM )
         GO TO 200
C
  60     IF(KGP - 1)  62, 62, 64
   62 L(2) = L(1)+IM
      L(3) = L(2)+JM
      KERROR = 0
C
      CALL FIDAS( T,T,L,-29,KERROR,NINP,NOUT)
            IF(KERROR.NE.0) CALL ERRO2('  FIDO', 62,1)
C
  64     DO 69  I = 1, IM
            RF = T(I)
            DO 69  J = 1, JM
            ZF = T(IM+J)
               ITEMP = (J - 1)*IM + I
               FLUX1(ITEMP) = RF*ZF
   69    CONTINUE
         GO TO 200
C
   70 L(2) = L(1) +IMJM
      KERROR = 0
      CALL FIDAS( FLUX1,FLUX1,L,-28,KERROR,NINP,NOUT)
         IF(KERROR.NE.0) CALL ERRO2('  FIDO', 70,1)
         GO TO 200
C
  120    READ(14) FLUX1
C
  200    WRITE(NFLUX1)  FLUX1
 1000 CONTINUE
C
      IF(IGUESS.GE.4) READ(14) FISS1
 1020 REWIND NFLUX1
      RETURN
      END
C$ S864 ================================================================
      SUBROUTINE S864 (SORS)
C
C-----------------------------------------------------------------------
      COMMON/UNITS/ DATIM(3), TIMEI,  KSTEP, NINP, NOUT, NDUMP,
     !           NFLUX1,NSORCE,NBULIB,NCXS,NGUESS,NSCRAT
      CHARACTER*4 FMTTIT,FMTDSH,FMTEQL,FMTAST,FMTSP2,FMTSP3
      COMMON/UNIT1/ FMTTIT(13),
     !           FMTDSH(4),FMTEQL(4),FMTAST(4),FMTSP2(2),FMTSP3(2)
      CHARACTER*4 ID
      COMMON /UNIT3/ ID(20)
C-----------------------------------------------------------------------
      COMMON /BLOC/
     ! IREGAD,IEVTYP,ISERCH,  NGPS,NXDOWN,NXCARD,NXTAPE,IGUESS,
     ! MOUTER,MINNER,IALDIR,IOVLAY, IGEOM,    IM,    JM,NZONES,
     !   NMAT,NMIXCD,  IBCL,  IBCR,  IBCT,  IBCB,NIZDEL,NJZDEL,
     !   NPRT,NLIBMT,NBUSTP,IXSTRT,IXEMIC, IEDIT,IGPBUK,IDUP17,
     !  JDUM2, JDUM3, JDUM4, JDUM5,    EV,   EVM, PAREV,  BUCK,
     !   ALAL,  ALAH,   EPS,EPSPAR,EPSFLX,   POD,   ORF, POWER,
     ! FISMEV, XMWFA, ORFFS,ABLYVO,  DUM3,  DUM4,
     ! KOUTER,KINNER,KGROUP,KIITOT, KPAGE,   K07, KDUM1, KDUM2,
     ! IBUCON,IGEOMP,   IMP,   JMP, NGPSP,NZONEP,NXSETS,IDETED,
     !  NSHUF,IBATCH,KONFLX,KONSCH,IALPHA,IDELTA,NEWOLD, IPBAR,
     !  ISBAR,  IMJM,   IHS,   IHT,   ITL,  ITL1,MAXMIN,MAXSEC,
     !  ITEMP,   MGC,  MPIC,  MPJC,ITEMP1,ITEMP2,  NUMX,IBEGIN,
     !     IP,    JP, NGOTO, INVDIR,NGPS2,NBUMAX,  NVAR, KNEG0,
     !    ALA,  ALAP, ALAPP,  ALAR,FLXCHM,   DAY,  DELT,    EQ,
     !   EVPP,   E01,   E02,   E03,  ORFP,CHISUM,  TOTV,  TEMP,
     !  TEMP2, TEMP3, TEMP4,    TI,FISSEN,SFISSP,ALFABS,GPSORS,
     !    EVP, TEMP1,FLXCHG,SERR2P,ESTKHI,ESTKLO,XTRAPK,ESTDOM
C-----------------------------------------------------------------------
      DIMENSION SORS(IMJM) ,L(2)
C-----------------------------------------------------------------------
C
C     THIS SUBROUTINE READS THE EXTERNAL SOURCE AND PREPARES A SOURCE TA
      L(1) = 1
      L(2) = 1+IMJM
      DO 50 KGP = 1,NGPS
      KERROR=0
      CALL FIDAS(SORS,SORS,L,-38,KERROR,NINP,NOUT)
         IF(KERROR.NE.0) CALL ERRO2('  FIDO',4,1)
      WRITE(NSORCE) SORS
50    CONTINUE
C
      REWIND NSORCE
C
      RETURN
      END
C$ MAPR ================================================================
      SUBROUTINE MAPR ( IZONE, IZMAT, IARAY, K)
C
C-----------------------------------------------------------------------
      COMMON/UNITS/ DATIM(3), TIMEI,  KSTEP, NINP, NOUT, NDUMP,
     !           NFLUX1,NSORCE,NBULIB,NCXS,NGUESS,NSCRAT
      CHARACTER*4 FMTTIT,FMTDSH,FMTEQL,FMTAST,FMTSP2,FMTSP3
      COMMON/UNIT1/ FMTTIT(13),
     !           FMTDSH(4),FMTEQL(4),FMTAST(4),FMTSP2(2),FMTSP3(2)
      CHARACTER*4 ID
      COMMON /UNIT3/ ID(20)
C-----------------------------------------------------------------------
      COMMON /BLOC/
     ! IREGAD,IEVTYP,ISERCH,  NGPS,NXDOWN,NXCARD,NXTAPE,IGUESS,
     ! MOUTER,MINNER,IALDIR,IOVLAY, IGEOM,    IM,    JM,NZONES,
     !   NMAT,NMIXCD,  IBCL,  IBCR,  IBCT,  IBCB,NIZDEL,NJZDEL,
     !   NPRT,NLIBMT,NBUSTP,IXSTRT,IXEMIC, IEDIT,IGPBUK,IDUP17,
     !  JDUM2, JDUM3, JDUM4, JDUM5,    EV,   EVM, PAREV,  BUCK,
     !   ALAL,  ALAH,   EPS,EPSPAR,EPSFLX,   POD,   ORF, POWER,
     ! FISMEV, XMWFA, ORFFS,ABLYVO,  DUM3,  DUM4,
     ! KOUTER,KINNER,KGROUP,KIITOT, KPAGE,   K07, KDUM1, KDUM2,
     ! IBUCON,IGEOMP,   IMP,   JMP, NGPSP,NZONEP,NXSETS,IDETED,
     !  NSHUF,IBATCH,KONFLX,KONSCH,IALPHA,IDELTA,NEWOLD, IPBAR,
     !  ISBAR,  IMJM,   IHS,   IHT,   ITL,  ITL1,MAXMIN,MAXSEC,
     !  ITEMP,   MGC,  MPIC,  MPJC,ITEMP1,ITEMP2,  NUMX,IBEGIN,
     !     IP,    JP, NGOTO, INVDIR,NGPS2,NBUMAX,  NVAR, KNEG0,
     !    ALA,  ALAP, ALAPP,  ALAR,FLXCHM,   DAY,  DELT,    EQ,
     !   EVPP,   E01,   E02,   E03,  ORFP,CHISUM,  TOTV,  TEMP,
     !  TEMP2, TEMP3, TEMP4,    TI,FISSEN,SFISSP,ALFABS,GPSORS,
     !    EVP, TEMP1,FLXCHG,SERR2P,ESTKHI,ESTKLO,XTRAPK,ESTDOM
C-----------------------------------------------------------------------
      DIMENSION IZONE(IM,JM), IZMAT(1), K(1), IARAY(1)
C-----------------------------------------------------------------------
C
C-PRODUCE A PICTURE PRINT
C
      MAXLEN=44
      IF(DAY.GT.0.0) GO TO 80
      IF(NPRT.LE.0) GO TO 80
C
   10 FORMAT('0  *** ZONE MAP ***'/'0')
      IJK=0
      IEND=MIN0(IM,MAXLEN)
   20 WRITE(NOUT,FMTTIT) ID, DATIM, KSTEP
      WRITE(NOUT,10)
         IA=MAXLEN*IJK+1
         IB=IA+IEND-1
C
   30    DO 40 JJ=1,JM
            J=JM-JJ+1
            DO 35 L=1,IM
               K(L)=IZONE(L,J)
               IF(K(L).GT.99) K(L)=K(L)-100
   35       CONTINUE
            WRITE (NOUT,50)  (K(L),L=IA,IB)
   50       FORMAT(' ', 44I3)
   40    CONTINUE
C
         WRITE(NOUT,70)
         IEND=IM-IB
         IF(IEND.LE.0)  GO TO 60
            IEND=MIN0(IEND,MAXLEN)
            IJK=IJK+1
      GO TO 20
   60 CONTINUE
C
   70 FORMAT(2H A/2H X/2H I/2H A/2H L//8H  RADIAL)
C
   80 IJK=0
      IEND=MIN0(IM,MAXLEN)
   90 WRITE(NOUT,FMTTIT)    ID, DATIM, KSTEP
      WRITE(NOUT,91)
   91    FORMAT('0  *** MATERIAL MAP ***'/'0')
         IA=MAXLEN*IJK+1
         IB=IA+IEND-1
         DO 110 JJ=1,JM
            J=JM-JJ+1
            DO  100 L=1,IM
               N=IZONE(L,J)
               K(L)=IABS (IZMAT(N))
               IF(K(L).GT.99) K(L)=K(L)-100
  100       CONTINUE
            WRITE (NOUT,50) (K(L),L=IA,IB)
  110    CONTINUE
         WRITE(NOUT,70)
         IEND=IM-IB
         IF(IEND.LE.0)  GO TO 200
            IEND=MIN0(IEND,MAXLEN)
            IJK=IJK+1
      GO TO 90
C
C  MAP FOR REGION EDITS BY ZONES
C
  200 IF(IEDIT.LE.0 .OR. DAY.GT.0.0 ) GO TO 299
         NED = IEDIT
C
         DO 250 N=1,NED
            IJK=0
            IEND=MIN0(IM,MAXLEN)
            NK = N
  202       WRITE(NOUT,FMTTIT) ID, DATIM, KSTEP
            WRITE(NOUT,205) NK
  205       FORMAT('0  *** EDIT MAP #',I3,' ***'/'0')
            IA=MAXLEN*IJK+1
            IB=IA+IEND-1
            DO 220 JJ=1,JM
               J=JM-JJ+1
               DO 210 L=1,IM
                  I=IZONE(L,J)
                  K(L)=IARAY( I+(NK-1)*NZONES )
                  IF(K(L).GT.99) K(L)=K(L)-100
  210          CONTINUE
               WRITE(NOUT,50) (K(L),L=IA,IB)
  220       CONTINUE
            WRITE(NOUT,70)
            IEND=IM-IB
            IF(IEND.LE.0) GO TO 250
               IEND=MIN0(IEND,MAXLEN)
               IJK=IJK+1
               GO TO 202
  250    CONTINUE
C
  299 IF(IEDIT.GE.0 .OR. DAY.GT.0.0) RETURN
C
  300 WRITE(NOUT,FMTTIT) ID, DATIM, KSTEP
      WRITE(NOUT,290)
  290    FORMAT('0  *** EDIT MAP ***'/'0')
         IJK=0
         IEND=MIN0(IM,MAXLEN)
         DO 320 J=1,JM
            I1=(JM-J)*IM+1+MAXLEN*IJK
            I2=I1+IEND-1
            WRITE(NOUT,50) (IARAY(I), I=I1,I2)
  320    CONTINUE
C
         WRITE(NOUT, 70)
         IEND=IM-MAXLEN*IJK-IEND
         IF(IEND.LE.0) RETURN
         IEND=MIN0(IEND,MAXLEN)
         IJK=IJK+1
      GO TO 300
      END
C$ CLEARS ==============================================================
      SUBROUTINE CLEARS(X,Y,N)
C
C-----------------------------------------------------------------------
      DIMENSION Y(1)
C-----------------------------------------------------------------------
      DO 1 I=1,N
         Y(I)=X
    1 CONTINUE
      RETURN
      END
C$ S8830 ===============================================================
      SUBROUTINE S8830
C
C-----------------------------------------------------------------------
      COMMON/UNITS/ DATIM(3), TIMEI,  KSTEP, NINP, NOUT, NDUMP,
     !           NFLUX1,NSORCE,NBULIB,NCXS,NGUESS,NSCRAT
      CHARACTER*4 FMTTIT,FMTDSH,FMTEQL,FMTAST,FMTSP2,FMTSP3
      COMMON/UNIT1/ FMTTIT(13),
     !           FMTDSH(4),FMTEQL(4),FMTAST(4),FMTSP2(2),FMTSP3(2)
      CHARACTER*4 ID
      COMMON /UNIT3/ ID(20)
C-----------------------------------------------------------------------
      COMMON /BLOC/
     ! IREGAD,IEVTYP,ISERCH,  NGPS,NXDOWN,NXCARD,NXTAPE,IGUESS,
     ! MOUTER,MINNER,IALDIR,IOVLAY, IGEOM,    IM,    JM,NZONES,
     !   NMAT,NMIXCD,  IBCL,  IBCR,  IBCT,  IBCB,NIZDEL,NJZDEL,
     !   NPRT,NLIBMT,NBUSTP,IXSTRT,IXEMIC, IEDIT,IGPBUK,IDUP17,
     !  JDUM2, JDUM3, JDUM4, JDUM5,    EV,   EVM, PAREV,  BUCK,
     !   ALAL,  ALAH,   EPS,EPSPAR,EPSFLX,   POD,   ORF, POWER,
     ! FISMEV, XMWFA, ORFFS,ABLYVO,  DUM3,  DUM4,
     ! KOUTER,KINNER,KGROUP,KIITOT, KPAGE,   K07, KDUM1, KDUM2,
     ! IBUCON,IGEOMP,   IMP,   JMP, NGPSP,NZONEP,NXSETS,IDETED,
     !  NSHUF,IBATCH,KONFLX,KONSCH,IALPHA,IDELTA,NEWOLD, IPBAR,
     !  ISBAR,  IMJM,   IHS,   IHT,   ITL,  ITL1,MAXMIN,MAXSEC,
     !  ITEMP,   MGC,  MPIC,  MPJC,ITEMP1,ITEMP2,  NUMX,IBEGIN,
     !     IP,    JP, NGOTO, INVDIR,NGPS2,NBUMAX,  NVAR, KNEG0,
     !    ALA,  ALAP, ALAPP,  ALAR,FLXCHM,   DAY,  DELT,    EQ,
     !   EVPP,   E01,   E02,   E03,  ORFP,CHISUM,  TOTV,  TEMP,
     !  TEMP2, TEMP3, TEMP4,    TI,FISSEN,SFISSP,ALFABS,GPSORS,
     !    EVP, TEMP1,FLXCHG,SERR2P,ESTKHI,ESTKLO,XTRAPK,ESTDOM
C-----------------------------------------------------------------------
C     S830   MONITOR PRINT
C
      IF(NPRT.LT.0) GO TO 230
C      TME = SECNDS(0.0) - TIMEI
      TME = 0.0
      KPAGE = KPAGE + NGPSP
      IF(KPAGE - 50)  220, 160, 160
C
160      KPAGE = 0
210      WRITE(NOUT, FMTTIT) ID, DATIM, KSTEP
         WRITE(NOUT,FMTDSH)
         WRITE(NOUT,213)
  213    FORMAT(
     !   '  TIME  OUTER GRP INNER EIGENVALUE  LAMBDA-1  MAX REL  ',
     ! '  LOCATION  EIGVAL     EXTRAP     EST MAX    EST MIN   ',
     ! 'DOMINANCE  INV NEG'/
     ! '  (SEC) ITER      ITERS',23X,'FLUX CHG     I   J    SLOPE',
     ! 3('     EIGVAL'),'    RATIO EST  DIR FIXUPS')
         WRITE(NOUT,FMTDSH)
C
220   TEMP=ALA-1.0
      WRITE(NOUT, 225) TME, KOUTER, KIITOT, EV, TEMP, EQ, XTRAPK,
     !                 ESTKHI, ESTKLO, ESTDOM,INVDIR,KNEG0
225   FORMAT(1X,F7.0,I4,5X,I5,2F11.6,19X,1PE11.3,0P4F11.6,I5,I5)
C
230   KOUTER=KOUTER+1
      KIITOT=0
      FLXCHM=0.0
      IF(KOUTER-MOUTER)430,430,330
330      NGOTO = 1
         GO TO 630
430   NGOTO = 4
630   RETURN
      END
C$ ZEDIT ===============================================================
      SUBROUTINE ZEDIT( IED, VOL, FV, IZMAT, C, GAM, P, CHIIN ,
     #                  PBLK,IPEAK)
C
      CHARACTER*8 A(15), AP
      CHARACTER*8 ABLK(3)
C
C-----------------------------------------------------------------------
      COMMON/UNITS/ DATIM(3), TIMEI,  KSTEP, NINP, NOUT, NDUMP,
     !           NFLUX1,NSORCE,NBULIB,NCXS,NGUESS,NSCRAT
      CHARACTER*4 FMTTIT,FMTDSH,FMTEQL,FMTAST,FMTSP2,FMTSP3
      COMMON/UNIT1/ FMTTIT(13),
     !           FMTDSH(4),FMTEQL(4),FMTAST(4),FMTSP2(2),FMTSP3(2)
      CHARACTER*4 ID
      COMMON /UNIT3/ ID(20)
C-----------------------------------------------------------------------
      COMMON /BLOC/
     ! IREGAD,IEVTYP,ISERCH,  NGPS,NXDOWN,NXCARD,NXTAPE,IGUESS,
     ! MOUTER,MINNER,IALDIR,IOVLAY, IGEOM,    IM,    JM,NZONES,
     !   NMAT,NMIXCD,  IBCL,  IBCR,  IBCT,  IBCB,NIZDEL,NJZDEL,
     !   NPRT,NLIBMT,NBUSTP,IXSTRT,IXEMIC, IEDIT,IGPBUK,IDUP17,
     !  JDUM2, JDUM3, JDUM4, JDUM5,    EV,   EVM, PAREV,  BUCK,
     !   ALAL,  ALAH,   EPS,EPSPAR,EPSFLX,   POD,   ORF, POWER,
     ! FISMEV, XMWFA, ORFFS,ABLYVO,  DUM3,  DUM4,
     ! KOUTER,KINNER,KGROUP,KIITOT, KPAGE,   K07, KDUM1, KDUM2,
     ! IBUCON,IGEOMP,   IMP,   JMP, NGPSP,NZONEP,NXSETS,IDETED,
     !  NSHUF,IBATCH,KONFLX,KONSCH,IALPHA,IDELTA,NEWOLD, IPBAR,
     !  ISBAR,  IMJM,   IHS,   IHT,   ITL,  ITL1,MAXMIN,MAXSEC,
     !  ITEMP,   MGC,  MPIC,  MPJC,ITEMP1,ITEMP2,  NUMX,IBEGIN,
     !     IP,    JP, NGOTO, INVDIR,NGPS2,NBUMAX,  NVAR, KNEG0,
     !    ALA,  ALAP, ALAPP,  ALAR,FLXCHM,   DAY,  DELT,    EQ,
     !   EVPP,   E01,   E02,   E03,  ORFP,CHISUM,  TOTV,  TEMP,
     !  TEMP2, TEMP3, TEMP4,    TI,FISSEN,SFISSP,ALFABS,GPSORS,
     !    EVP, TEMP1,FLXCHG,SERR2P,ESTKHI,ESTKLO,XTRAPK,ESTDOM
C-----------------------------------------------------------------------
      DIMENSION P(16,NGPSP,NZONEP),  IED(NZONES,1), VOL(NZONEP),
     !          C(ITL,NMAT,NGPS),    GAM(NZONES,1),  FV(NGPS2,NZONEP),
     !             IZMAT(NZONES), CHIIN(NGPS)
C
C-----------------------------------------------------------------
               DIMENSION PBLK(3,NGPSP,NZONEP),IPEAK(NZONEP,4)
C-----------------------------------------------------------------------
      DATA A/3*'        ','FLUX    ','FLUX*VOL', 'FIS SORS',
     ! 'FISSIONS', 'ABSORPTN', 'NU*FISSN', 'IN SCAT ', 'SELFSCAT',
     !            'REMOVAL ', 'DB2 LEAK', 'X-Y LEAK', 'TOT LEAK'/
C-----------------------------------------------------------------------
      DATA ABLK/  'ABS  IN ','LKG  TO ','BLACKRG '/
C-----------------------------------------------------------------
C ******************************************************************
C      PBLK(1,NGPS,NZONE) = LEAK FROM/TO BLACKREGION WHERE
C                           NZONE IS THE ACTUAL ZONE(REGION) NO.
C
C      PBLK(2,NGPS,NZED ) = LEAK   TO    BLACKREGION LOCATED IN
C                           THE EDIT   ZONE(REGION)  NZED
C
C      PBLK(3,NGPS,NZED ) = LEAK  FROM   BLACKREGION  TO THE
C                           EDIT   ZONE(REGION) NZED
C
C ******************************************************************
C
      NED = IEDIT
      IF( IEDIT.LE. 0 )  RETURN
C
C
      DO 800 N=1,NED
         NK=N
         MAXED=0
C
              CALL CLEARS(0 ,IPEAK, NZONEP*2)
C
C------CLEAR  PART OF PBLK( 3,NGPSP,NZONEP)---------------------------
C------CLEAR  PART OF P   (16,NGPSP,NZONEP)---------------------------
            DO 80 IG=1,NGPSP
            DO 80 IZ=1,NZONEP
            PBLK(2,IG,IZ) = 0.0
            PBLK(3,IG,IZ) = 0.0
            IF(IG.GT.1) P(16,IG,IZ) = 0.0
            DO 80 I =1,15
            P(I,IG,IZ) = 0.0
80          CONTINUE
C
CCCCCCC   CALL CLEARS( 0.0, P, 16*NGPSP*NZONEP ) CC MOVED TO S8850
C
         DO 250 I=1,NZONES
            J=IZMAT(I)
            KI=IED(I,NK)
            IF( VOL(I).LE. 0.0 )          GO TO 250
            IF(KI.LE.0 .OR. KI.GT.NZONES) GO TO 250
            MAXED=MAX0(MAXED,KI)
C
C--------   SPECIAL ITEMS  ----------------------------------------
C                                      REGION POWER
            P(1,1,KI)=P(1,1,KI)+FV(NGPSP,I)
C                                      REGION VOL
            P(3,1,KI)=P(3,1,KI)+VOL(I)
C ----------------------  MAXIMUM POWER DENS.(MW/(1000 CM3) ) ---
                   IF( P(16,2,KI).GT.P(16,1, I)) GO TO 90
                                    P(16,2,KI) =  P(16,1, I)
                                    IPEAK(KI,1)= IPEAK( I,3)
                                    IPEAK(KI,2)= IPEAK( I,4)
90          CONTINUE
C
C           GROUP RATES FOR REGION
C
            DO 200 K=1,NGPS
               CBLK = C(IHT,J,K)
               FVIG=FV(K,I)
C                                      FLUX VOL
               P(5,K,KI)=P(5,K,KI)+FVIG
C                                      FISS SOURCE
               P(6,K,KI)=P(6,K,KI)+FV(NGPS2,I)*CHIIN(K)
C                                      FISSIONS
               P(7,K,KI)=P(7,K,KI)+FVIG*C(1,J,K)
C                                      ABSORPTIONS
               P(8,K,KI)=P(8,K,KI)+FVIG*C(2,J,K)
C                                      NU-FISSIONS
               P(9,K,KI)=P(9,K,KI)+FVIG*C(3,J,K)
C                                      IN-SCATTER
               DO 110 KK=1,NXDOWN
                  IF(K.LE.KK) GO TO 120
                  P(10,K,KI)=P(10,K,KI)+FV(K-KK,I)*C(5+KK,J,K)
C
C ---------------------------------------------------------------
              IF(CBLK.GT. 0.0) GO TO 110
                  P( 8,K,KI)=P( 8,K,KI)+FV(K-KK,I)*C(5+KK,J,K)
C ---------------------------------------------------------------
C
  110          CONTINUE
  120          CONTINUE
C                                      SELF-SCATTER
               P(11,K,KI)=P(11,K,KI)+FVIG*C(5,J,K)
C                                      DOWN-SCATTER
               DO 130 KK=1,NXDOWN
                  IF(K+KK .GT. NGPS) GO TO 140
                  P(12,K,KI)=P(12,K,KI)+FV(K,I)*C(5+KK,J,K+KK)
  130          CONTINUE
  140          CONTINUE
C                                      DB2 LEAKAGE
               KGB=1+IGPBUK*(K-1)
          DP13 = 0.0
          IF(C(4,J,K).GT.0.0) DP13= BUCK*GAM(I,KGB)*FVIG /(3.*C(4,J,K))
          P(13,K,KI)=P(13,K,KI) + DP13
C --------------------------------------------------------------------
              IF( CBLK ) 150,150,160
150           PBLK(2,K,KI)= PBLK(2,K,KI) + PBLK(1,K,I)
              GO TO 200
160           PBLK(3,K,KI)= PBLK(3,K,KI) + PBLK(1,K,I)
C --------------------------------------------------------------------
C
  200       CONTINUE
C
C
  250    CONTINUE
C
C
C NOW, GET REACTION RATE TOTALS OVER
C             GROUPS FOR EACH REGION,
C             REGIONS FOR EACH GROUP,
C             ALL REGIONS FOR EACH GROUP,
C             ALL GROUPS FOR EACH REGION,
C             ALL GROUPS & ALL REGIONS.
C
              XEV = 1.0
              IF(ISERCH.EQ.1) XEV= PAREV
              IF(IEVTYP.LE.1) XEV = EV
C
         ITOT=MAXED+1
         DO 300 I=1,MAXED
C
          IF(P(3,1,I).LE.0.0) GO TO 300
            DO 255 K=1,NGPS
C-------------------------------------------------------------------
               P(14,K,I)=P(10,K,I)+P(6,K,I)/XEV
     !                       -( P(8,K,I)+P(12,K,I)+P(13,K,I) )
     #                       - PBLK(3,K,I)
               IF(P(5,K,I).EQ. 0.0) P(14,K,I) = 0.0
C
               P(15,K,I)=P(14,K,I)+P(13,K,I)
     #                   + PBLK(3,K,I)
C-------------------------------------------------------------------
               P(4,K,I)=P(5,K,I)/P(3,1,I)
  255       CONTINUE
C
C
            DO 270 K=1,NGPS
               DO 260 J=5,15
                  P(J,NGPSP,I)=P(J,NGPSP,I)+P(J,K,I)
                  P(J,K,ITOT)=P(J,K,ITOT)+P(J,K,I)
                  P(J,NGPSP,ITOT)=P(J,NGPSP,ITOT)+P(J,K,I)
  260          CONTINUE
C
C --------------------------------------------------------------------
            PBLK(2,NGPSP,I   )= PBLK(2,NGPSP,I   ) + PBLK(2,K,I)
            PBLK(2,K    ,ITOT)= PBLK(2,K    ,ITOT) + PBLK(2,K,I)
            PBLK(2,NGPSP,ITOT)= PBLK(2,NGPSP,ITOT) + PBLK(2,K,I)
C
            PBLK(3,NGPSP,I   )= PBLK(3,NGPSP,I   ) + PBLK(3,K,I)
            PBLK(3,K    ,ITOT)= PBLK(3,K    ,ITOT) + PBLK(3,K,I)
            PBLK(3,NGPSP,ITOT)= PBLK(3,NGPSP,ITOT) + PBLK(3,K,I)
C --------------------------------------------------------------------
C
  270       CONTINUE
C
C           ALSO, TOTAL POWER & VOL FOR EACH REGION:
C
            P(1,1,ITOT)=P(1,1,ITOT)+P(1,1,I)
            P(3,1,ITOT)=P(3,1,ITOT)+P(3,1,I)
C
C                             FOR ONE-GROUP, ALL SCATTER IS SELF-SCAT
            P(11,NGPSP,I) = P(11,NGPSP,I) + P(12,NGPSP,I)
            P(10,NGPSP,I)=0.
            P(12,NGPSP,I)=0.
C
C                                   POWER DENSITY FOR REGION
            P(2,1,I)=P(1,1,I)/P(3,1,I)
C                                   FAST/THERMAL FOR REGION
          P(3,2,I)= 0.0
          IF(P(5,NGPS,I).GT.0.) P(3,2,I)=P(5,NGPSP,I)/P(5,NGPS,I) -1.
C                                   ONE-GROUP FLUX FOR EACH REGION
            P(4,NGPSP,I)=P(5,NGPSP,I)/P(3,1,I)
  300    CONTINUE
C
C
C
C                                   AVE FLUX (ALL)
         DO 350 K=1,NGPSP
            P(4,K,ITOT)=P(5,K,ITOT)/P(3,1,ITOT)
  350    CONTINUE
C
C                                   AVE POWER-DENSITY (ALL)
         P(2,1,ITOT)=P(1,1,ITOT)/P(3,1,ITOT)
C                                   AVE FAST/THREMAL (ALL)
         P(3,2,ITOT)=P(5,NGPSP,ITOT)/P(5,NGPS,ITOT) - 1.
C
C
C     FINAL LOOP OVER REGIONS
C
                      PMAX = 0.0
                      IMAX = 0
                      JMAX = 0
C
         DO 400 I=1,MAXED
                      IF(P(1,1,ITOT).LE.0.0) GO TO 400
C                                   POWER FRACTION FOR REGION
            P(1,2,I)=P(1,1,I)/P(1,1,ITOT)
C
C---------------------------------- EDIT REGION PEAKING FACTOR --
C-------------------------------------------------- PER REGION --
                      IF(PMAX.GE.P(16,2,I)) GO TO 395
                      PMAX = P(16,2,I)
                      IMAX = IPEAK(I,1)
                      JMAX = IPEAK(I,2)
C
395                   IF(P(2,1,I).LE.0.0) GO TO 400
                      P(16,2,I)  = (P(16,2,I)*0.001 )/P(2,1,I)
C                                   REL POWER DENSITY FOR REGION
                      P(2,2,I)=P(2,1,I)/P(2,1,ITOT)
  400    CONTINUE
C
C---------------------------------- EDIT    PEAKING FACTOR --
C--------------------------------------------- PER REACTOR --
                      P(16,2,ITOT)=(PMAX*0.001)/P(2,1,ITOT)
                      IPEAK(ITOT,1) = IMAX
                      IPEAK(ITOT,2) = JMAX
C
C
C     PRINT OUT
C
         WRITE(NOUT,FMTTIT) ID, DATIM, KSTEP
         WRITE(NOUT,405)  NK
  405    FORMAT('0',130('*')/'0',51X,
     !            'R E G I O N    E D I T   #',I3/)
         WRITE(NOUT,FMTDSH)
C
         DO 415 L=1,NZONES,30
            LL=MIN0(L+29, NZONES)
            WRITE(NOUT,410) (J,J=L,LL)
            WRITE(NOUT,411) (IED(J,NK),J=L,LL)
            WRITE(NOUT,FMTDSH)
  410       FORMAT(' ZONE  #:',30I4)
  411       FORMAT(' REGION#:',30I4)
  415    CONTINUE
C
  416    WRITE(NOUT,417) ITOT, NGPSP
  417    FORMAT(45X,'REGION #',I3,' IS TOTAL OVER ALL EDIT REGIONS'/
     !          45X,' GROUP #',I3,' IS TOTAL OVER ALL GROUPS')
         WRITE(NOUT,FMTDSH)
C
         P(1,2,ITOT)=1.0
         P(2,2,ITOT)=1.0
         P(10,NGPSP,ITOT)=0.0
         P(12,NGPSP,ITOT)=0.0
C
         DO 700 L=1,ITOT,10
            LL=MIN0( L+9, ITOT )
            WRITE(NOUT,420) NK, (J,J=L,LL)
  420                   FORMAT('1',130('=')/8X,'GROUP',44X,
     !                        'EDIT REGIONS FOR EDIT #',I3/
     !                        10X,'*',I6,9I12 )
            WRITE(NOUT,FMTEQL)
            WRITE(NOUT,430) (P(1,1,K),K=L,LL)
  430          FORMAT(' POWER   ',2X,1P10E12.4)
            WRITE(NOUT,FMTDSH)
            WRITE(NOUT,450) (P(1,2,K),K=L,LL)
  450          FORMAT(' POWER FRAC',1P10E12.4)
            WRITE(NOUT,460) (P(2,1,K),K=L,LL)
  460          FORMAT(' POWER DENS',1P10E12.4)
C--------------------------------------------------PEAKING FACTOR----
                       WRITE(NOUT,465) (P(16,2,K),K=L,LL)
  465                  FORMAT(' (PD)MAX/  '/
     #                        '   <PD>REG ',1P10E12.4)
               WRITE(NOUT,466) (IPEAK(K,1),IPEAK(K,2),K=L,LL)
  466          FORMAT(' AT (I,J)  ', 10(I6,I3,3X) )
C
            WRITE(NOUT,470) (P(2,2,K),K=L,LL)
  470          FORMAT(' <PD>REG/  '/
     #                '   <PD>TOT ',1P10E12.4)
            WRITE(NOUT,FMTDSH)
            WRITE(NOUT,480) (P(3,1,K),K=L,LL)
  480          FORMAT(' VOLUME    ',1P10E12.4)
            WRITE(NOUT,490) (P(3,2,K),K=L,LL)
  490          FORMAT(' FAST/THERM',1P10E12.4)
C
        DO 493 M=4,8
               AP=A(M)
               WRITE(NOUT,FMTDSH)
               DO 492 J=1,NGPSP
                  IF(J.GT.1) AP=A(1)
                  WRITE(NOUT,491) AP,J,(P(M,J,K),K=L,LL)
  491                FORMAT(1X,A8,I2,1P10E12.4)
  492          CONTINUE
  493       CONTINUE
C
C-----------------------------------------------------------------HN
C
        WRITE(NOUT,FMTDSH)
        AP = ABLK(1)
        J1 = 1
        WRITE(NOUT,491) AP,J1,(PBLK(2,1,K),K=L,LL)
        AP = ABLK(3)
        DO 500 J=2,NGPSP
        WRITE(NOUT,491) AP,J,(PBLK(2,J,K),K=L,LL)
        AP=A(1)
500     CONTINUE
C
        DO 505 M=9,12
        AP=A(M)
        WRITE(NOUT,FMTDSH)
        DO 505 J=1,NGPSP
        IF(J.GT.1) AP=A(1)
        WRITE(NOUT,491) AP,J,(P(M,J,K),K=L,LL)
505     CONTINUE
C
        WRITE(NOUT,FMTDSH)
        AP = ABLK(2)
        J1 = 1
        WRITE(NOUT,491) AP,J1,(PBLK(3,1,K),K=L,LL)
        AP = ABLK(3)
        DO 510 J=2,NGPSP
        WRITE(NOUT,491) AP,J,(PBLK(3,J,K),K=L,LL)
        AP=A(1)
510     CONTINUE
C
        DO 520 M=13,15
        AP=A(M)
        WRITE(NOUT,FMTDSH)
        DO 520 J=1,NGPSP
        IF(J.GT.1) AP=A(1)
        WRITE(NOUT,491) AP,J,(P(M,J,K),K=L,LL)
520     CONTINUE
C
600     CONTINUE
C
C-----------------------------------------------------------------HN
C
          WRITE(NOUT,FMTEQL)
  700    CONTINUE
C
       WRITE(NOUT,FMTAST)
C
  800 CONTINUE
C
      RETURN
      END
C$ FIDAS ===============================================================
      SUBROUTINE FIDAS (D,LDTK,LDAI,LL2,J3,N5,N6)
C
      CHARACTER*2 LDL,LS,LR1,LI,LT,LSS,LF,LA,LAP,LPL,
     !  LMI,LZ,LV,LU,BB,LQ,LM,LN,LKI,LO,LC,LSLS,LE,LLI,K,LB,LBB
      CHARACTER*4 FMT,E1,E2,E3,E4,PRT,VMT
C
C-----------------------------------------------------------------------
C   *** DATA ARRAY MODIFICATION
      DIMENSION IN(37),K(37),V(37),LDTK(1),FMT(3),VMT(18),W(12)
     !  ,D(1),LDAI(1)
      DIMENSION PRT(3)
      EQUIVALENCE (BB,LBB)
      DATA LDL,LS,LR1,LI,LT,LSS/'$','*','R','I','T','S'/
C
      DATA FMT(1),E1,E2,E3,E4/'(1X,','10E1','2.5)','20I6',' )  '/
C
      DATA LF,LA,LAP,LPL,LMI/'F','A','+','+','-'/
      DATA LZ,LV,LU,BB/'Z','V','U',' '/
      DATA LQ,LM,LN/'Q','M','N'/,LE/'E'/,LLI/'L'/
      DATA LKI/'K'/
      DATA LO,LC,PRT(1),PRT(2),PRT(3),IPRTRG/'O','C','OFF ',
     !  'PRT ','ON  ',-1/
      DATA  LSLS /'/'/
      LLJ = J3
      J=0
      J3=0
      III=0
      IVMT=0
      NCOUNT=0
C
    1 CALL FFREAD(IN,K,V,NF,N5,N6,  0   )
C
   10 FORMAT(6(I2,A1,F9.0),T5,2A4,5(4X,2A4))
      DO 27 I=1,NF
      IF(K(I).NE.LPL .AND. K(I).NE.LAP .AND. K(I).NE.LMI)GO TO 27
C   *** EXPONENTIATION (+,+,-)
      L=IN(I)
      IF(L.EQ.0)GO TO 27
      E=10.0**L
      IF(K(I).EQ.LMI)GO TO 28
      V(I)=V(I)*E
      GO TO 27
   28 V(I)=V(I)/E
   27 CONTINUE
 1002 DO 2 I=1,NF
      IF(III.EQ.0)GO TO 4
      IF(III-2)3,44,48
    4 III=0
      IF(K(I).EQ.LBB)GO TO 14
      IF(K(I).EQ.LDL)GO TO 5
      IF(K(I).EQ.LS )GO TO 6
      IF(K(I).EQ.LR1)GO TO 7
      IF(K(I).EQ.LI )GO TO 8
      IF(K(I).EQ.LT )GO TO 9
      IF(K(I).EQ.LSS)GO TO 11
      IF(K(I).EQ.LF)GO TO 23
      IF(K(I).EQ.LA)GO TO 26
      IF(K(I).EQ.LZ)GO TO 31
      IF(K(I).EQ.LE)GO TO 39
      IF(K(I).EQ.LQ)GO TO 35
      IF(K(I).EQ.LM .OR. K(I).EQ.LN)GO TO 36
      IF(K(I).EQ.LU)GO TO 33
      IF(K(I).EQ.LV)GO TO 34
      IF(K(I).EQ.LLI)GO TO 42
      IF(K(I).EQ.LKI)GO TO 46
      IF(K(I).EQ.LO)GO TO 55
      IF(K(I).EQ.LC)GO TO 56
      IF (K(I) .EQ. LSLS)  GO TO 13
      GO TO 14
C   *** TERMINATE (T)
    9 J2=0
      ITEST=IN(I)
      IF(J.EQ.0)GO TO 16
      GO TO 12
C   *** VARIABLE FORMAT CONTROL (U,V)
   33 READ(N5,80)VMT
   34 IVMT=1
C   *** BEGIN NEW ARRAY (*,$)
    6 KKK=0
      GO TO 13
    5 KKK=1
   13 IF(NCOUNT+J .EQ. 0)GO TO 15
      J2=1
   12 WRITE (N6,20) LL,LB,J
C
      IF(IPRTRG.GT.0) GO TO 120
C
      IF(J.EQ.NCOUNT)GO TO 16
C
  120 CONTINUE
C
      IMAX=J1 + J - 1
      IF(J.GT.10000) IMAX = J + 99
      FMT(2)=E1
      FMT(3)=E2
      IF(KK.NE.1)GO TO 22
      FMT(2)=E3
      FMT(3)=E4
   22 WRITE (N6,FMT) (D(II),II=J1,IMAX)
C
      IF(J.EQ.NCOUNT) GO TO 16
C
      J3=J3 + 1
      WRITE (N6,30) NCOUNT,LL,LB
   16 IF(J2.NE.0)GO TO 15
      WRITE(N6,50)IN(I),LT
  999 RETURN
   15 IF (K(I) .EQ. LSLS)  GO TO 935
  915 LL=IN(I)
      LL3=LL + LL2 - 1
      KK=KKK
      LB=K(I)
      J=V(I)
  412 J1 = LDAI(LL3   ) + J
      NCOUNT = LDAI(LL3+ 1) - J1
   41 J=0
      IF(IVMT.EQ.0)GO TO 2
C   *** VARIABLE FORMAT CONTROL (U,V)
   32 IF(NCOUNT.EQ.0)GO TO 1
      J=NCOUNT
      NCC=J1 + NCOUNT - 1
      READ(N5,VMT) (D(J2),J2=J1,NCC)
      IVMT=0
      GO TO 1
C   *** FILL ARRAY (F)
   23 IF(J.GE.NCOUNT)GO TO 25
      NCC=J+1
      DO 24 II=NCC,NCOUNT
      J2=J1 + II -1
      D(J2)=V(I)
   24 IF(KK.NE.0)LDTK(J2)=V(I)
      J=NCOUNT
      GO TO 2
   25 WRITE (N6,60) LL,LB
      GO TO 2
C   *** END ARRAY (E)
   39 IF(J.LE.NCOUNT)J=NCOUNT
      GO TO 2
C   *** ADDRESS MODIFICATION (A)
   26 J=V(I)
      IF(J.GT.NCOUNT .OR. J.LE.0)WRITE(N6,70)J,LL,LB
      J=J-1
      GO TO 2
C   *** SKIP (S)
   11 J=J + IN(I)
      GO TO 2
C   *** TURN PRINT TRIGGER ON/OFF
   55 IPRTRG=-IPRTRG
      WRITE(N6,110)PRT(2),PRT(IPRTRG+2),IN(I),LO
  110 FORMAT(53X,2A4,I7,A1)
      GO TO 2
C   *** PRINT COUNT IN CURRENT ARRAY
   56 WRITE(N6,90)LL,LB,J,IN(I),LC
   90 FORMAT(90X,I5,A1,' ARRAY',I7,' ENTRIES READ AT',I4,A1)
      GO TO 2
C   *** NO MODIFICATION
   14 CONTINUE
   17 J2=J1 + J
      D(J2)=V(I)
      J=J + 1
      IF ( KK.EQ.0 ) GO TO 2
      LDTK(J2) = V(I)
      GO TO 2
C   *** ZERO (Z)
   31 IN(I)=V(I) + IN(I)
      V(I)=0.0
C   *** REPEAT (R)
    7 L=IN(I)
      DO 18 II=1,L
      J2=J1 + J
      D(J2)=V(I)
      IF(KK.NE.0)LDTK(J2)=V(I)
   18 J=J + 1
      GO TO 2
C   *** SEQUENCE REPEAT (Q)
   35 L=V(I) + IN(I)
      LSEQ=1
      IF(V(I).EQ.0.0  .OR.  IN(I).EQ.0)GO TO 51
      L=V(I)
      LSEQ=IN(I)
   51 DO 52 LSQ=1,LSEQ
      DO 37 II=1,L
      J2=J1 + J
      J4=J2 - L
      D(J2)=D(J4)
   37 J=J + 1
   52 CONTINUE
      GO TO 2
C   *** INVERTED SEQUENCE REPEAT (N)
   36 L=V(I) + IN(I)
      LSEQ=1
      IF(V(I).EQ.0.0  .OR.  IN(I).EQ.0)GO TO 53
      L=V(I)
      LSEQ=IN(I)
   53 DO 54 LSQ=1,LSEQ
      DO 38 II=1,L
      J2=J1 + J
      J4=J2 - II - II + 1
      D(J2)=D(J4)
C   *** REVERSED SIGN INVERTED SEQUENCE REPEAT (M)
      IF(K(I).EQ.LM)D(J2)=-D(J2)
   38 J=J + 1
   54 CONTINUE
      GO TO 2
C   *** LOGARITHMIC INTERPOLATION (L)
   42 L=IN(I) + 1
      VV=V(I)
      III=2
      GO TO 2
  44  VU = V(I)/VV
      DEL = EXP(ALOG(VU)/L)
      J2=J1 + J
      D(J2)=VV
      J=J + 1
      DO 45 II=2,L
      J2=J1 + J
      D(J2)=DEL*D(J2-1)
   45 J=J + 1
      IF(III.NE.0)GO TO 4
      GO TO 2
C   *** FIXED 10 LOG INTERP.  (K)
   46 L=IN(I) + 1
      VV=V(I)
      III=3
      GO TO 2
   48 DIF=(V(I)-VV)*.1111111
      DEL=EXP(2.302585/L)
      J2=J1 + J
      D(J2)=VV
      VV=VV-DIF
      J=J+1
      DO 49 II=2,L
      J2=J1 + J
      DIF=DIF*DEL
      D(J2)=VV + DIF
   49 J=J+1
      IF(III.NE.0)GO TO 4
      GO TO 2
C   *** INTERPOLATE (I)
    8 L=IN(I) + 1
      VV=V(I)
      III=1
      GO TO 2
    3 DEL=(V(I)-VV)/FLOAT(L)
      DO 21 II=1,L
      J2=J1 + J
      DELT=DEL*FLOAT(II-1) + VV
      D(J2)=     DELT
      IF(KK.NE.0)LDTK(J2)=DELT + SIGN(0.5,DEL)
   21 J=J + 1
      IF(III.NE.0)GO TO 4
    2 CONTINUE
      GO TO 1
C   *** READ ALPHANUMERIC
  935 LL=IN(I)
      LL3=LL+LL2-1
      J2=1
      J=0
      NCOUNT=0
      MODE = 0
      IF(V(1).EQ.0.)MODE = 1
      LSTART = V(MODE+1)
      LSTOP  = V(MODE+2)
      LSTAR=  LDTK(LL3)+3*LSTART -3
      LSTO=   LDTK(LL3)+3*LSTOP-1
      READ(N5,63)(LDTK(II),II=LSTAR,LSTO)
   63 FORMAT(18A4)
      WRITE(N6,64)LL,LSTART,LSTOP
   64 FORMAT('0',I5,'/ ARRAY READ FROM',I5,' TO',I5)
      GO TO 1
   20 FORMAT(1H0,I5,A1,6H ARRAY,I7,13H ENTRIES READ)
   30 FORMAT(14H0****** ERROR ,I7,20H ENTRIES REQUIRED IN ,I3,A1,
     ! 6H ARRAY,/,21H0 DATA EDIT CONTINUES)
   50 FORMAT(1H0,I5,A1)
   60 FORMAT(31H0****** FILL OPTION IGNORED IN ,I2,A1,6H ARRAY)
   70 FORMAT(24H0****** WARNING  ADDRESS,I7,20H IS BEYOND LIMITS OF,I3,
     ! A1,6H ARRAY)
   80 FORMAT(18A4)
      END
C$ FFREAD ==============================================================
      SUBROUTINE FFREAD(IN,K,V,NF,N5,N6,IPRTRG)
C
C****** FREE- AND FIXED-FIELD CARD IMAGE TRANSLATOR
C
      CHARACTER*2 NY,K,NUMB,NT,NBB,NDP,NPL,NPA,NMI,NSS,NDL,NS,NE,
     *  NQ,NM,NN,NR,NI,NFF,NA,NL,NK,NSLS,NCOM,NSL,NYNCC
C-----------------------------------------------------------------------
      DIMENSION NY(80),IN(2),K(2),V(2)
      DIMENSION NUMB(10)
      DATA NUMB/'0','1','2','3','4','5','6','7','8','9'/
      DATA NT,NBB,NDP,NPL,NPA,NMI/'T',' ','.','+','+','-'/
      DATA NSS,NDL,NS,NE/'S','$','*','E'/
      DATA NQ,NM,NN/'Q','M','N'/
      DATA NR,NI,NFF,NA,NL,NK/'R','I','F','A','L','K'/
      DATA NSLS/'/'/,NCOM/','/,NSL/''''/,IFREE/0/
      DATA ONE/1.0D0/,TEN/10.0D0/
C-----------------------------------------------------------------------
C
C      HOLLRITH CONSTANTS WERE USED FOR THE COMMA AND SINGLE QUOTE
C      COMPILER REJECTED ATTEMPS TO SET IN QUOTES - WARNING LEVEL
C      MESSAGES SHOULD BE EXPECTED.
C
 1998 DO 1 I=1,37
      IN(I)=0
      V(I)=0.0
    1 K(I)=NBB
      IEXP=0
      NSCL=0
      NDPN=0
      IEX=0
      VNUM = 0.0
      SGN = ONE
      IBLNK=0
      NF=1
      NCC=1
      IFC=0
      IDS=0
  112 READ (N5,10) NY
      IF(IPRTRG.GT.0)WRITE(N6,30)NY
   30 FORMAT(53X,80A1)
C
      IF(NY(1).NE.NSL .AND. NY(1).NE.NSLS )GO TO 111
C
      IF(NY(1).EQ.NSLS)   WRITE(N6,10)(NY(I),I=2,80)
      GO TO 112
   10 FORMAT(80A1)
  111 NYNCC=NY(NCC)
      IF(NYNCC.EQ.NCOM) NYNCC=NBB
      IF(IFREE.EQ.0)GO TO 122
      IFC=IFC+1
      IF(IFC.GT.12)IFC=1
      IF(IFC.EQ.3)GO TO 124
      IF(IFC.EQ.11 .AND. IEX.NE.0 .AND. NYNCC.EQ.NBB)GO TO 106
      IF(NYNCC.EQ.NE .AND. IFC.GT.4)GO TO 203
  122 IF(NYNCC.EQ.NBB)GO TO 101
      IF(NYNCC.EQ.NPL .OR. NYNCC.EQ.NPA)GO TO 103
      IF(NYNCC.EQ.NMI)GO TO 104
      IF(NYNCC.EQ.NE .AND. IBLNK.EQ.1)GO TO 203
      IBLNK=1
      IF(NYNCC.EQ.NDP)GO TO 102
 124  DO 125 NUM=1,10
      IF ( NUMB(NUM).EQ.NYNCC ) GO TO 105
 125  CONTINUE
  121 IF(K(NF).NE.NBB .AND. NYNCC.EQ.NBB)GO TO 101
      K(NF)=NYNCC
      IN(NF) = VNUM
      VNUM = 0.0
      IBLNK=0
      IF(NYNCC.EQ.NBB)GO TO 106
      IF(K(NF).NE.NDL .AND. K(NF).NE.NS)GO TO 113
      IFREE=0
      IDS=1
      IF(NF.EQ.1)GO TO 108
      IF(K(NF).NE.K(NF-1))GO TO 108
      IDS=0
      K(NF)=NBB
      GO TO 106
  113 IF(IFREE.EQ.0 .AND.
     !   NYNCC.NE.NSLS .AND.
     !   NYNCC.NE.NR .AND. NYNCC.NE.NI .AND. NYNCC.NE.NFF .AND.
     !   NYNCC.NE.NA .AND. NYNCC.NE.NL .AND. NYNCC.NE.NK .AND.
     !   NYNCC.NE.NQ .AND. NYNCC.NE.NM .AND. NYNCC.NE.NN )GO TO 108
      IF(IFREE.EQ.1 .AND. NYNCC.EQ.NSS)GO TO 108
      IF(NCC.EQ.72)WRITE(N6,20)NY
   20 FORMAT('0 ****** INCOMPLETE FIELD AT END OF CARD, SOME DATA MAY BE
     ! LOST'/'         CARD IMAGE FOLLOWS'/1X,80A1)
      GO TO 106
 105  CONTINUE
      IF ( IEX.NE.0 ) GO TO 107
      DNUM = NUM-1
      VNUM = TEN*VNUM + DNUM
      NSCL=NSCL + NDPN
      GO TO 206
  102 NDPN=-1
      GO TO 206
 107  CONTINUE
      IEXP = IEXP*10 + IEX*(NUM-1)
  206 IF(IFC.EQ.12)GO TO 301
      GO TO 106
 103  IF ( VNUM.NE.0.0 ) GO TO 203
      SGN = ONE
      GO TO 106
  203 IEX=1
      GO TO 106
 104  IF ( VNUM.NE.0.0 ) GO TO 204
      SGN = -ONE
      GO TO 106
  204 IEX=-1
      GO TO 106
  123 IFREE=1
      IDS=0
      GO TO 109
  101 IF(IDS.EQ.1)GO TO 123
      IF(IFREE.EQ.1 .AND. IFC.EQ.12 .AND. K(NF).NE.NBB)GO TO 301
      IF(IBLNK.EQ.0)GO TO 106
      IF(IFREE.EQ.1 .AND. IFC.NE.12)GO TO 106
 301  VNUM = SGN*VNUM
      DUM = TEN**IABS(IEXP+NSCL)
      IF ( IEXP+NSCL.GE.0 ) V(NF) = VNUM*DUM
      IF ( IEXP+NSCL.LT.0 ) V(NF) = VNUM/DUM
      NDPN=0
      IEX=0
      IEXP=0
      NSCL=0
      IBLNK=0
      VNUM = 0.0
      SGN = ONE
  108 NF=NF + 1
      IF(NYNCC.EQ.NSS)GO TO 106
  109 IFC=0
      IF(IFREE.EQ.1)NCC=((NCC+11)/12)*12
      IF(K(NF-1).EQ.NT)GO TO 999
  106 IF(NCC.GE.73)GO TO 999
      NCC=NCC+1
      IF(NCC.LE.72)GO TO 111
      GO TO 101
  999 NF=NF-1
      IF(NF.LE.0)GO TO 1998
      RETURN
      END
C$ BUREAD ==============================================================
      SUBROUTINE BUREAD
C
C-----------------------------------------------------------------------
      COMMON/UNITS/ DATIM(3), TIMEI,  KSTEP, NINP, NOUT, NDUMP,
     !           NFLUX1,NSORCE,NBULIB,NCXS,NGUESS,NSCRAT
      CHARACTER*4 FMTTIT,FMTDSH,FMTEQL,FMTAST,FMTSP2,FMTSP3
      COMMON/UNIT1/ FMTTIT(13),
     !           FMTDSH(4),FMTEQL(4),FMTAST(4),FMTSP2(2),FMTSP3(2)
      CHARACTER*4 ID
      COMMON /UNIT3/ ID(20)
C-----------------------------------------------------------------------
      CHARACTER*80 TITLE
C     DIMENSION TITLE(1),XSEC(NUMX,KBU), BURN(KVAR,KBU),DATE(1)
      DIMENSION          XSEC(NUMX,KBU), BURN(KVAR,KBU)
      CHARACTER*6       NAME
      CHARACTER*8 CXID, XID
      CHARACTER*4 DATE
C-----------------------------------------------------------------------
C
      ENTRY BUINFO( MATID, TITLE, XID, NAME, DATE, NBU, IGM, I2DB,
     !         NVAR,  ITL,  ULOAD,KPRT,NUMX,KBU,KVAR,BURN,XSEC)
C
      KREC =  1+ (MATID-1)*6
      REWIND NBULIB
      NSKIP=KREC-1
      IF(NSKIP.EQ.0) GO TO 5
      DO 4 N=1,NSKIP
   4  READ (NBULIB,END=90)
   5  CONTINUE
      READ(NBULIB,END=90,ERR=90)  TITLE
      READ(NBULIB) CXID, NAME, DATE
      READ(NBULIB) NBU, IGM, I2DB, NVAR, ITL
      READ(NBULIB) ULOAD
C
C     STORE CHARACTER DATA INTO REAL VARIABLE
C
C     CALL FLTCHR(XID,CXID,1)
      XID = CXID
      IF(KPRT.LE.0) GO TO 80
      IF(KPRT.GE.2) GO TO 50
        WRITE(NOUT,20) MATID, TITLE           , DATE           ,
     !                 XID,NAME,NBU,IGM,I2DB,NVAR,ITL,ULOAD
   20   FORMAT(1X,I6,5X,A80 ,  A4/15X,A8,A6,5I8,1PE20.7)
      GO TO 80
   50 CONTINUE
           WRITE(NOUT,FMTTIT) ID,DATIM,KSTEP
C
           WRITE(NOUT,60) MATID,
     !      TITLE           ,XID,NAME,
     !     NBU,IGM,I2DB, NVAR, ITL, ULOAD
C
           READ(NBULIB,END=90,ERR=90) ((BURN(I,J),I=1,KVAR),J=1,NBU)
           WRITE(6,70) ((BURN(I,J),I=1,KVAR),J=1,NBU)
           READ(NBULIB,END=90,ERR=90) ((XSEC(I,J),I=1,NUMX),J=1,NBU)
           WRITE(6,75) ((XSEC(I,J),I=1,NUMX),J=1,NBU)
   60 FORMAT(//'*****MATERIAL #',I3,'  BURNUP LIBRARY*****'/
     !  // ' TITLE:',T10, A80/' XID:',T10,A8/' NAME:',T10,A6/
     !     ' #BU STEPS:  ',I3/
     !     ' #GROUPS:  ',I3/' I2DB:  ',I3/' NVAR:  ',I3
     !  /  ' ITL:  ',I3/' LOADING:  ',1PE15.6 )
   70 FORMAT(/// ' ** BURN ARRAY **'//(1X,1P10E12.3))
   75 FORMAT(/// ' ** CROSS-SECTION ARRAY **'//(1X,1P8E15.3))
      WRITE(NOUT,FMTSP2)
      WRITE(NOUT,FMTDSH)
   80 CONTINUE
      RETURN
C
   90 CONTINUE
      WRITE(NOUT,91) MATID
   91    FORMAT('0***ERROR IN READING FORMATTED INFO FROM BU-LIBRARY',
     !           'FOR MATID #',I5)
      CALL ERRO2('BUINFO',90,1)
      RETURN
C
C
      ENTRY BUXSEC( MATID, KBU, NUMX, KVAR,BURN,XSEC )
C
      KREC =  5 + (MATID-1)*6
      REWIND NBULIB
      NSKIP=KREC-1
      DO 100 N=1,NSKIP
  100 READ (NBULIB)
      READ(NBULIB,END=900,ERR=900) BURN
      READ(NBULIB,END=900,ERR=900) XSEC
      RETURN
C
  900 CONTINUE
      WRITE(NOUT,901) MATID
  901    FORMAT('0*** ERROR IN READING BINARY RECORDS IN BU-LIBRARY',
     !          'FOR MATID #',I5)
      CALL ERRO2('BUXSEC',900,1)
      RETURN
      END
      SUBROUTINE DATE (DATIM)
      DIMENSION DATIM(3)
      CHARACTER*4 DATIM
      DO 10 I=1,3
      DATIM(I)='    '
   10 CONTINUE
      RETURN
      END
      SUBROUTINE TIME (T)
      DIMENSION T(2)
      CHARACTER*4 T
      DO 10 I=1,2
      T(I)='    '
   10 CONTINUE
      RETURN
      END
      SUBROUTINE TDBCIT1
C                 VERSAO REVISADO PARA MICRO 386 - NOV/92 - G.T.O.
C  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C  * ESTE PROGRAMA PREPARA AS SECOES DE CHOQUE MACROSCOPICAS *
C  *        CALCULADAS PELO TDB PARA O CITATION              *
C  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C
      DIMENSION T( 8,200,4),C( 9,200,4)
      DATA GAMA/3.2E-11/
C
      OPEN(UNIT=1,FILE='TWODB30.BIN',STATUS='OLD',FORM='UNFORMATTED')
      OPEN(UNIT=2,FILE='TDBCIT.DAT')
C
      NCASE=0
C
  998 READ(1,END=999) NGPS,NMAT,ITL
      DO 10 K=1,NGPS
      READ(1)((T(I,N,K),I=1,ITL),N=1,NMAT)
   10 CONTINUE
C
      NCASE=NCASE+1
      WRITE(6,1000) NCASE
C
      NSEC=8
      NUPS=0
      NDOWNS=NGPS-1
      WRITE(2,1010) NSEC
      WRITE(2,1010) NGPS,NDOWNS,NUPS
C
      IF(NGPS .GT. 2) GO TO 60
C
      DO 50 N=1,NMAT
      DO 40 K=1,NGPS
      C(1,N,K)=1./(3.*T(4,N,K))
      C(2,N,K)=T(2,N,K)
      C(3,N,K)=T(3,N,K)
      C(4,N,K)=0.0
      C(5,N,K)=GAMA*T(1,N,K)
      GO TO (20,30),K
   20 C(6,N,K)=0.0
      C(7,N,K)=T(6,N,2)
      GO TO 40
   30 C(6,N,K)=0.0
      C(7,N,K)=0.0
   40 CONTINUE
   50 CONTINUE
C
      GO TO 130
C
   60 DO 120 N=1,NMAT
      DO 110 K=1,NGPS
      C(1,N,K)=1./(3.*T(4,N,K))
      C(2,N,K)=T(2,N,K)
      C(3,N,K)=T(3,N,K)
      C(4,N,K)=0.0
      C(5,N,K)=GAMA*T(1,N,K)
      GO TO (70,80,90,100),K
   70 C(6,N,K)=0.0
      C(7,N,K)=T(6,N,2)
      C(8,N,K)=T(7,N,3)
      C(9,N,K)=T(8,N,4)
      GO TO 110
   80 C(6,N,K)=0.0
      C(7,N,K)=0.0
      C(8,N,K)=T(6,N,3)
      C(9,N,K)=T(7,N,4)
      GO TO 110
   90 C(6,N,K)=0.0
      C(7,N,K)=0.0
      C(8,N,K)=0.0
      C(9,N,K)=T(6,N,4)
      GO TO 110
  100 C(6,N,K)=0.0
      C(7,N,K)=0.0
      C(8,N,K)=0.0
      C(9,N,K)=0.0
  110 CONTINUE
  120 CONTINUE
C
  130 DO 150 N=1,NMAT
      DO 140 K=1,NGPS
      WRITE(2,1020) N,K,(C(I,N,K),I=1,5)
  140 WRITE(2,1030) (C(I+5,N,K),I=1,NGPS)
  150 CONTINUE
C
 1000 FORMAT(1X,'*****  CONJUNTO ',I2,'  *****')
 1010 FORMAT(24I3)
 1020 FORMAT(2I6,1P5E12.5)
 1030 FORMAT(1P6E12.5)
C
      GO TO 998
C
  999 Return
      END
C                 VERSAO REVISADO PARA XP - NOV/2009 - G.T.O.
C  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C  * ESTE PROGRAMA PREPARA A SAIDA DO TDBCIT PARA SE TORNAR  *
C  *        ENTRADA DO CITATION CITATION                     *
C  *  Usa os parƒmetros de potˆncia dado pelo 2DB            *
C  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C
      SUBROUTINE Crinp2bcit
C
C
C
      CHARACTER*100 HOL
      CHARACTER*65 HOL1
      CHARACTER*3 HOL2
      CHARACTER*21 HOL3
      CHARACTER*57 HOL4
      CHARACTER*2 HOL5
      CHARACTER*54 HOL6
      CHARACTER*45 HOL7
      CHARACTER*58 HOL8
      CHARACTER*69 HOL9
      CHARACTER*32 HOL10
      CHARACTER*55 HOL11
      CHARACTER*62 HOL12
      CHARACTER*67 HOL13
      CHARACTER*61 HOL14
      CHARACTER*68 HOL15
      CHARACTER*4 HOL16
      CHARACTER*24 HOL17
      CHARACTER*1 HOL18
      CHARACTER*9 HOL19
      CHARACTER*16 HOLA17
      CHARACTER*24 HOLA24
      CHARACTER*3 HOLA3
      CHARACTER*40 HOLA40
      CHARACTER*28 HOLA28
      CHARACTER*65 HOLA65
      CHARACTER*31 HOLA31
      CHARACTER*27 HOLA27,HOLB27
      CHARACTER*26 HOLA26, HOLB26
      INTEGER N,L, N1,N2
	REAL SCN1,SCN2,SCN3,SCN4,SCN5,SCN6,SCN7,POT,POT2
C
      OPEN(UNIT=1,FILE='TDBCIT.DAT')
      OPEN(UNIT=2,FILE='INP2ACITATION.DAT')
      OPEN(UNIT=3,FILE='INP2BCITATION.DAT')
      OPEN(UNIT=4,FILE='inp1twodb.dat')
C
	REWIND(1)
	REWIND(2)
	Rewind(3)
	Rewind(4)
C
      read(4,1017)HOL15
      N=0
701   N=N+1
      read(4,1011)HOL9
      if(N.LT.6) go to 701
      Read(4,1670) HOLA28
      Read(4,1018) HOL16
      Read(4,1021)HOL18
      read(4,1004) HOL2
      read(4,1011)HOL9
      N=0
702   N=N+1
      read(4,1671)HOLA65
      if(N.LT.6) go to 702
      read(4,1017) HOL15
      read(4,1017) HOL15
      read(4,1004) HOL2
      read(4,1011)HOL9
      read(4,1671)HOLA65
      read(4,1671)HOLA65
      read(4,1015) HOL13
      read(4,1672) HOLA27,POT,HOLA31
      read(2,1003) HOL1
      write(3,1003)HOL1    !Linha1!
      read(2,1003) HOL1
      write(3,1003)HOL1     !Linha2!
      read(2,1004) HOL2
      write(3,1004)HOL2     !Linha3!
      read(2,1005) HOL3
      write(3,1005)HOL3     !Linha4!
      read(2,1006) HOL4
      write(3,1006)HOL4     !Linha5!
      read(2,1007) HOL5
      write(3,1007)HOL5     !Linha6!
      read(2,1007) HOL5
      write(3,1007)HOL5     !Linha7!
      read(2,1004) HOL2
      write(3,1004)HOL2     !Linha8!
      read(2,1008) HOL6
      write(3,1008)HOL6    !9!
      read(2,1009) HOL7
      write(3,1009)HOL7    !10!
      POT=POT*60
      read(2,1673) HOLA26,POT2,HOLA28

      write(3,1673)HOLA26,POT,HOLA28   !11! !Potencia!

      
      
      read(2,1004) HOL2
      write(3,1004)HOL2   !12!
      read(2,1011) HOL9
      write(3,1011)HOL9   !13!
      read(2,1011) HOL9
      write(3,1011)HOL9   !14!
      read(2,1012) HOL10
      write(3,1012)HOL10      !15!
      read(2,1011) HOL9
      write(3,1011)HOL9          !16!
      read(2,1011) HOL9
      write(3,1011)HOL9           !17!
      read(2,1011) HOL9
      write(3,1011)HOL9            !18!
      read(2,1011) HOL9
      write(3,1011)HOL9           !19!
      read(2,1012) HOL10
      write(3,1012)HOL10          !20!
      read(2,1011) HOL9
      write(3,1011)HOL9          !21!
      read(2,1013) HOL11
      write(3,1013)HOL11         !22!
      read(2,1004) HOL2
      write(3,1004)HOL2          !23!
      read(2,1014) HOL12
      write(3,1014)HOL12         !24!
      N=0
1     N=N+1
      read(2,1009) HOL7
      write(3,1009)HOL7
      if (N.LT.26) go to 1       !Linha50!
      read(2,1015) HOL13
      write(3,1015)HOL13       !Linha51!
      N=0
2     N=N+1
      read(2,1009) HOL7
      write(3,1009)HOL7
      if (N.LT.26) go to 2     !P gina2 Linha 16!
      L=0
4     L=L+1
      read(2,1011) HOL9
      write(3,1011)HOL9        !P gina2 Linha 16!
      N=0
3     N=N+1
      read(2,1009) HOL7
      write(3,1009)HOL7
      if (N.LT.26) go to 3
      if (L.LT.5) go to 4             !Linha29 da pagina4!
      read(2,1015) HOL13
      write(3,1015)HOL13               !pagina 4 Linha 30!
      N=0
5     N=N+1
      read(2,1009) HOL7
      write(3,1009)HOL7
      if (N.LT.26) go to 5              !pagina 4 Linha56!
      read(2,1016) HOL14
      write(3,1016)HOL14                !Pagina 4 linha 57!
      N=0
6     N=N+1
      read(2,1009) HOL7
      write(3,1009)HOL7
      if (N.LT.26) go to 6              !Linha 22 pagina 5!
      read(2,1017) HOL15
      write(3,1017)HOL15                 !Linha 23 pagina 5!
      N=0
7     N=N+1
      read(2,1009) HOL7
      write(3,1009)HOL7                  !Linha 49 pagina 5!
      if (N.LT.26) go to 7
      read(2,1014) HOL12
      write(3,1014)HOL12                  !Linha 50 Pagina 5!
      N=0
8     N=N+1
      read(2,1009) HOL7
      write(3,1009)HOL7                  !Linha 15 pagina 6!
      if (N.LT.26) go to 8
      read(2,1004) HOL2
      write(3,1004)HOL2                  !!Linha 16!

      N=0
9     N=N+1
      read(2,1018) HOL16
      write(3,1018)HOL16
      read(2,1019) HOL17
      write(3,1019)HOL17
      read(2,1019) HOL17
      write(3,1019)HOL17
      write(3,1024)
      read(2,1021) HOL18   !Linha32 pagina 6!
      if (N.LT.4) go to 9
      write(3,1024)
      read(2,1021) HOL18        !Linha 33 pagina 6!
      read(2,1004) HOL2
      write(3,1004)HOL2
      read(2,1022) HOL19
      write(3,1022)HOL19           !Linha 35 pagina 6!
      
!     Certo daqui pra frente!
      N=0
10    N=N+1
      read (2,1040)     N1,N2,SCN1,SCN2,SCN3,SCN4,SCN5
      write(3,1040)     N1,N2,SCN1,SCN2,SCN3,SCN4,SCN5
      read (2,1050)     SCN6, SCN7
      write(3,1050)     SCN6,SCN7
      if (N.LT.32) go to 10
      N=0
11    N=N+1
      read (1,1040)     N1,N2,SCN1,SCN2,SCN3,SCN4,SCN5
      read (1,1050)     SCN6, SCN7
      if (N.LT.33) go to 11
      N=0
12    N=N+1
      read (1,1040)     N1,N2,SCN1,SCN2,SCN3,SCN4,SCN5
      write(3,1040)     N1,N2,SCN1,SCN2,SCN3,SCN4,SCN5
      read (1,1050)     SCN6, SCN7
      write(3,1050)     SCN6,SCN7
      if (N.LT.130) go to 12
      N=0
17    N=N+1
      read (2,1040)     N1,N2,SCN1,SCN2,SCN3,SCN4,SCN5
      read (2,1050)     SCN6, SCN7
      if (N.LT.130) go to 17
      N=0
13    N=N+1
      read (2,1040)     N1,N2,SCN1,SCN2,SCN3,SCN4,SCN5
      write(3,1040)     N1,N2,SCN1,SCN2,SCN3,SCN4,SCN5
      read (2,1050)     SCN6, SCN7
      write(3,1050)     SCN6,SCN7
      if (N.LT.18) go to 13
      N=0
14    N=N+1
      read(2,1669) HOLA40
      write(3,1669)HOLA40
      read(2,1666) HOLA24
      Write(3,1666)HOLA24
      read(2,1669) HOLA40
      write(3,1669)HOLA40
      read(2,1668) HOLA17
      write(3,1668)HOLA17
      if (N.LT.7) go to 14

      write(3,1024)
      read(2,1021) HOL18
      read(2,1668) HOLA17
      write(3,1668)HOLA17
      read(2,1667) HOLA3
      write(3,1667)HOLA3
      write(3,1024)
      write(3,1024)
      write(3,1024)

 300  CLOSE(1)
	CLOSE(2)
	CLOSE(3)
C
1000  FORMAT(A100)
1001  FORMAT(I3)

1003  FORMAT(A65)
1004  FORMAT(A3)
1005  FORMAT(A21)
1006  FORMAT(A57)
1007  FORMAT(A2)
1008  FORMAT(A54)
1009  FORMAT(A45)
1010  FORMAT(A58)
1011  FORMAT(A69)
1012  FORMAT(A32)
1013  FORMAT(A55)
1014  FORMAT(A62)
1015  FORMAT(A67)
1016  FORMAT(A61)
1017  FORMAT(A68)
1018  FORMAT(A4)
1019  FORMAT(A24)
1021  FORMAT(A1)
1022  FORMAT(A9)
1023  Format(A15)

1024  Format ('')
1666  Format(A24)
1667  Format(A3)
1668  Format(A16)
1669  Format(A40)
1670  Format(A28)
1671  Format(A65)
1672  FORMAT(A27,1(1P,(1X,E8.4)),A31)
1673  Format(A26,F4.1,A28)

1020  FORMAT(2(4X,I2),5(1X,E11.5))
1030  FORMAT(2(1X,E11.5))
1040  FORMAT(2(4X,I2),1P,5(1X,E11.5))
1050  FORMAT(2(1P,(1X,E11.5)))
1060  FORMAT(2(4X,I2),1P,3(1X,E11.5))
1070  FORMAT(2(1P,(1X,E11.5)))
C
      return
	END
	SUBROUTINE CITAT
C----------------------------------------------------
C VERSAO REVISADA PARA MICRO-COMPUTADOR PC (OUT/2003)
C     COMPILADOR LAHEY FORTRAN 90 VERSION 4.50i
C----------------------------------------------------
COMMENT*****CITATION--REVISION 2, JULY 1971. FORTRAN DECK FOLLOWS.
COMMENT*****THE FIRST ROUTINE IS THE CORE ALLOCATION ROUTINE FOR DATA
COMMENT*****STORAGE. THE A ARRAY SHOULD BE DIMENSIONED ACCORDINGLY.
CSTRT --001 ***CITATION*** CORE ALLOCATION AND START PROGRAM
C**********DIMENSION THE VARIABLE 'A' ACCORDING TO THE PROBLEM SIZE
C**********AND SET THE VARIABLE 'MEMORY' TO THIS VALUE
C
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C *   VERSAO IPEN - DOCUMENTACAO SETEMBRO 1994                      *
C *      AS MODIFICACOES INTRODUZIDAS ESTAO ENTRE OS COMENTARIOS:   *
C *   C*IPEN                                                        *
C *         COMANDO(S) ACRESCENTADO(S)                              *
C *   C*                                                            *
C *      QUANDO DA ALTERACAO DE UM COMANDO, O ORIGINAL ESTAH        *
C *   COMENTADO COM C*                                              *
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C
      COMMON /ARRAY/A(15000000)
  100 MEMORY=15000000
C
      CALL INPT(A,MEMORY)
      Return
      END
CTCOF --155 ***CITATION*** TEMPERATURE COEFFICIENT OF REACTIVITY CALC.
      SUBROUTINE TCOF(SIG,F1,SS1,SS2,SS3,SS4,SS5,CONC,NJJR,SOURE, NNDI1,
     >  SSC,BAL,SCAC,NRGNE,NCOMP,P1E,P2E,PVOL,DCONBE, DCONRE,DCONBK,
     > ONEOV,BIGD,XII,BND,BBND,IVX,JVX,KBVX, KVX,LVX,MVX,NVX,NSETVX,
     > IVXP1,JVXP1,KBVXP1,IVZ,KVZ, KPOINT,MNPR, JIVX,JIP1VX,JP1IXZ,IOVX,
     >  IOVZ,A,MEMORY,AIO,IX3738,MVZ,ZONEN,NNXTRA)
C
      DOUBLE PRECISION XII
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     >  , XNAME(3,200)
C
      DIMENSION SIG(KVX,MVX,10),F1(KVX,MVX),SS1(KVX,NVX,NSETVX),
     > SS2(KVX,NVX,NSETVX),SS3(KVX,NVX,NSETVX),SS4(KVX,NVX,NSETVX),
     > SS5(KVX,NVX,NSETVX),CONC(NVX,MVX),NJJR(NVX,NSETVX), NNDI1(NVX,
     > NSETVX),SSC(KVX,KVX ),BAL(KVX,MVX, 8), SCAC(KVX,MVZ,KVX)
      DIMENSION NRGNE(JVX,IVX,KBVX),NCOMP(LVX),P1E(JIVX, KBVX),
     > P2E(JIVX, KBVX,KVX),PVOL(LVX),DCONBE(JIP1VX,KBVX,IOVX),
     > DCONRE(JP1IXZ,KBVX,KVZ),DCONBK(JIVX,KBVXP1,KVX), ONEOV(KVX,
     > NSETVX),XII(KVX),BND(6,KVX),BBND(KVX), SOURE(JVX,IVX,KBVX)
      DIMENSION AIO(IX3738)
      DIMENSION A(MEMORY)
      DIMENSION ZONEN( 1 ),NNXTRA(NVX,NSETVX)
C
      IX37 = IX(37)
      IX38 = IX(38)
      IO15 = IX(82)
      IF (IX37.GT.0) REWIND IO15
  100 IO10 = IX(77)
      IO11 = IX(78)
      IO14 = IX(81)
      IO26 = IX(93)
      IO19 = IX(86)
      IO22 = IX(89)
  101 READ(IO10,END=180)INSEC,NREC
      IF (INSEC.EQ.40) GO TO 103
      IF (NREC.EQ.0) GO TO 101
      DO 102 N = 1,NREC
      READ(IO10)
  102 CONTINUE
      GO TO 101
  103 IF (NREC.EQ.0) GO TO 105
      DO 104 N = 1,NREC
      READ(IO10)
  104 CONTINUE
  105 READ(IO10)INSEC,NREC
      IF (NREC.EQ.0) GO TO 107
      DO 106 N = 1,NREC
      READ(IO10)
  106 CONTINUE
  107 CONTINUE
C     SAVE SCAC ARRAY
      REWIND IO2
      WRITE(IO2) (((SCAC(KK,L,K),KK=1,KMAX),L=1,MVZ ),K=1,KMAX)
      REWIND IO2
C     INPUT F1 ARRAY FROM IO14 AND WRITE IT OUT ON IO14 AFTER THE
C      ORIGINAL F1  SO THAT IT IS IN THE PROPER FORM TO BE INPUT LATER
      REWIND IO14
      DO 108 K=1,KMAX
      READ(IO14) ((SCAC(KK,M,K),KK=1,KMAX),M=1,MMAX)
  108 CONTINUE
      DO 109 KK=1,KMAX
      WRITE(IO14) ((SCAC(KK,M,K),K=1,KMAX),M=1,MMAX)
  109 CONTINUE
      REWIND IO14
      REWIND IO3
      WRITE(IO3)(((SIG(K,M,I),K=1,KMAX),M=1,MMAX),I=1,8)
      WRITE(IO3)((SIG(K,M,6),K=1,KMAX),M=1,MMAX)
      DO 111 NS = 1,NSETMX
      NNC = NSIG2(NS)
      DO 110 N = 1,NNC
      WRITE(IO3)(SS1(K,N,NS),SS2(K,N,NS),SS3(K,N,NS), SS4(K,N,NS),SS5(K,
     >  N,NS),K=1,KMAX)
  110 CONTINUE
  111 CONTINUE
      WRITE(IO3)((CONC(N,M),N=1,NMAX),M=1,MMAX)
      REWIND IO3
      REWIND IO22
      MNPR = 0
      DO 177 NTEP = 1,100
  112 READ(IO10)INSEC,NREC,N2SETS,NAAX,MAAX
      IF ((NAAX.EQ.NMAX).AND.(MAAX.EQ.MMAX)) GO TO 113
      WRITE(IOUT,1000)
      REWIND IO10
      GO TO 186
  113 CONTINUE
      IF (NREC.EQ.0) GO TO 183
      IF (N2SETS.EQ.0) GO TO 114
      READ(IO10)(NXTR1(N),N=1,N2SETS)
  114 CONTINUE
      READ(IO10)((CONC(N,M),N=1,NMAX),M=1,MMAX)
      REWIND IO11
      IF (N2SETS.EQ.0) GO TO 124
      DO 122 NN = 1,N2SETS,2
      NREL = NXTR1(NN)
      IF (NREL.EQ.0) GO TO 123
      NS = NXODR(NREL)
      NTNU = NXTR1(NN+1)
      IF (NTNU.EQ.1) GO TO 117
      NTNUL = NTNU-1
      DO 116 NNN = 1,NTNUL
      READ(IOSIG,END=181)
      READ(IOSIG)NIIN1,NIIN2
      I = NIIN2
      READ(IOSIG)
      DO 115 N = 1,I
      READ(IOSIG)
      READ(IOSIG)
  115 CONTINUE
      READ(IOSIG)
  116 CONTINUE
  117 CONTINUE
      READ(IOSIG)
      READ(IOSIG)NT,I,NG
      IF (I.NE.NSIG2(NS)) GO TO 178
      IF (NG.NE.KMAX) GO TO 178
      READ(IOSIG)
      WRITE(IO11)I,NS
      DO 121 N = 1,I
      READ(IOSIG)II,M,IT
      IF (II.NE.NJJR(N,NS)) GO TO 178
      IF (IT.NE.NNDI1(N,NS)) GO TO 178
      IF (IT.GT.1) GO TO 119
      IF (IT.EQ.1) GO TO 118
      READ(IOSIG)(SS1(K,N,NS),SS2(K,N,NS),SS3(K,N,NS), SS4(K,N,NS),
     > SS5(K,N,NS),K=1,KMAX), ((SSC(KK,K ),KK=1,KMAX),K=1,KMAX)
      GO TO 120
  118 READ(IOSIG)(SS1(K,N,NS),SS2(K,N,NS),SS3(K,N,NS), SS4(K,N,NS),
     > SS5(K,N,NS),K=1,KMAX)
      GO TO 120
  119 READ(IOSIG)(SS1(K,N,NS),K=1,KMAX)
  120 CONTINUE
      WRITE(IO11)((SSC(KK,K),KK=1,KMAX),K=1,KMAX)
  121 CONTINUE
      REWIND IOSIG
  122 CONTINUE
  123 CONTINUE
      REWIND IOSIG
      REWIND IO11
  124 CONTINUE
      DO 128 M = 1,MMAX
      DO 127 K = 1,KMAX
      DO 125 I = 1,5
      SIG(K,M,I) = 0.0
  125 CONTINUE
      SIG(K,M,7) = 0.0
      SIG(K,M,8) = 0.0
      DO 126 KK = 1,KMAX
C**** F1(KK,K,M) = 0.0 ****
      SCAC(KK,M,K) = 0.0
  126 CONTINUE
  127 CONTINUE
  128 CONTINUE
      IF (IX(166).LE.1) GO TO 129
      IO12 = IX(79)
      REWIND IO12
      READ(IO12)
  129 CONTINUE
      DO 147 M=1,MMAX
      NS = NXSET(M)
      NR = NXODR(NS)
      NSX = NSIG2(NR)
      IF (IX(166).LE.1) GO TO 130
      NSUBZ = NZON(M)
      NL = NSX*NSUBZ
      READ(IO12)
      READ(IO12) (ZONEN(L),L=1,NL)
  130 CONTINUE
      DO 146 K=1,KMAX
      DO 145 N=1,NSX
      IF (IX(166).LE.0) GO TO 137
      IF (NNXTRA(N,NR).NE.10) GO TO 137
      IF (IX(166).NE.1) GO TO 133
      CN = CONC(N,M)
      IF (CN.EQ.0.0) GO TO 131
      CNS = SS5(K,N,NR)
      IF (CNS.EQ.0.0) GO TO 131
      C = CNS/CN
      IF (C.GT.200) GO TO 131
      Y = 2.0*(SQRT(C*(C+1)) - C)
      GO TO 132
  131 Y = 1.0
  132 S1 = Y*SS1(K,N,NR)
      S2 = Y*SS2(K,N,NR)
      CSS1 = CN*S1
      CSS2 = CN*S2
      GO TO 140
  133 CONTINUE
      CSS1 = 0.0
      CSS2 = 0.0
      DO 136 LZ =1,NSUBZ
      NSZ = (LZ-1)*NSX + N
      CN = ZONEN(NSZ)
      IF (CN.EQ.0.0) GO TO 134
      CNS = SS5(K,N,NR)
      IF (CNS.EQ.0.0) GO TO 134
      C = CNS/CN
      IF (C.GT.200) GO TO 134
      Y = 2.0*(SQRT(C*(C+1)) - C)
      GO TO 135
  134 Y = 1.0
  135 S1 = Y*SS1(K,N,NR)
      S2 = Y*SS2(K,N,NR)
      CSS1 = CSS1 + CN*S1
      CSS2 = CSS2 + CN*S2
  136 CONTINUE
      ZN = FLOAT(NSUBZ)
      CSS1 = CSS1/ZN
      CSS2 = CSS2/ZN
      GO TO 140
  137 CONTINUE
      IF (NNXTRA(N,NR).NE.6) GO TO 138
      CSS1 = CONC(N,M)*(SS1(K,N,NR) - 2.0*SS5(K,N,NR))
      GO TO 139
  138 CSS1 = CONC(N,M)*SS1(K,N,NR)
  139 CSS2 = CONC(N,M)*SS2(K,N,NR)
  140 CONTINUE
      DTMP = 3.0*CONC(N,M)*SS3(K,N,NR)
      IF (SIG(K,M,1)) 141,142,141
  141 DTMP = DTMP+1.0/SIG(K,M,1)
  142 IF (DTMP) 143,144,143
  143 SIG(K,M,1) = 1.0/DTMP
  144 SIG(K,M,3) = SIG(K,M,3) + CSS1
      SIG(K,M,4) = SIG(K,M,4) + CSS2*SS4(K,N,NR)
  145 CONTINUE
  146 CONTINUE
  147 CONTINUE
      IF (IX(166).GT.1) REWIND IO12
      NLIM = N2SETS/2
      DO 158 NS = 1,NSETMX
      NSX = NSIG2(NS)
      NSS = 0
      DO 157 N = 1,NSX
      READ(IO4)((SSC(KK,K),KK=1,KMAX),K=1,KMAX)
      IF (N2SETS.EQ.0) GO TO 153
      IF (NSS.EQ.NS) GO TO 152
      DO 148 NN = 1,N2SETS,2
      NREL = NXTR1(NN)
      NSS = NXODR(NREL)
      IF (NSS.EQ.NS) GO TO 149
  148 CONTINUE
      GO TO 153
  149 DO 151 NN = 1,NLIM
      READ(IO11)I,NSS
      IF (NSS.EQ.NS) GO TO 152
      DO 150 I3X = 1,I
      READ(IO11)
  150 CONTINUE
  151 CONTINUE
      GO TO 182
  152 READ(IO11)((SSC(KK,K),KK=1,KMAX),K=1,KMAX)
  153 CONTINUE
      DO 156 M = 1,MMAX
      NSQ = NXSET(M)
      NR = NXODR(NSQ)
      IF (NR.NE.NS) GO TO 156
      DO 155 K = 1,KMAX
      DO 154 KK = 1,KMAX
      IF (K.EQ.KK) GO TO 154
C**** F1(KK,K,M) = F1(KK,K,M)+SSC(KK,K  )*CONC(N,M) ****
      SCAC(KK,M,K) = SCAC(KK,M,K) + SSC(KK,K)*CONC(N,M)
  154 CONTINUE
  155 CONTINUE
  156 CONTINUE
  157 CONTINUE
      REWIND IO11
  158 CONTINUE
      REWIND IO4
      DO 161 M = 1,MMAX
      DO 160 K = 1,KMAX
      DO 159 KK = 1,KMAX
C**** SIG(K,M,2) = SIG(K,M,2)+F1(KK,K,M) ****
      SIG(K,M,2) = SIG(K,M,2)+ SCAC(KK,M,K)
  159 CONTINUE
  160 CONTINUE
  161 CONTINUE
C     SKIP OVER SCAC ARRAY
      READ(IO2)
C     AT THIS POINT THE VALUES FOR F1 ARE STORED IN SCAC
      DO 162 KK=1,KMAX
      WRITE(IO2) ((SCAC(KK,M,K),K=1,KMAX),M=1,MMAX)
  162 CONTINUE
      REWIND IO2
C     NOW RESTORE SCAC TO ORIGINAL VALUES
      READ(IO2) (((SCAC(KK,L,K),KK=1,KMAX),L=1,MVZ ),K=1,KMAX)
C     SKIP OVER THE ORIGINAL F1
      DO 163 K=1,KMAX
      READ(IO14)
  163 CONTINUE
      READ(IO3)(((SIG(K,M,I),K=1,KMAX),M=1,MMAX),I=5,8)
      READ(IO3)((BAL(K,M,6),K=1,KMAX),M=1,MMAX)
      MNPR = MNPR+1
      IF (KPOINT.GT.0) REWIND IO26
      DO 172 N= 1,KMAX
C     NOW INPUT NEWLY CALCULATED F1
      READ(IO2) ((F1(K1,M),K1=1,KMAX),M=1,MMAX)
C     NOW INPUT OLD VALUES OF F1
      READ(IO14) ((BAL(K1,M, 1),K1=1,KMAX),M=1,MMAX)
      IF (KPOINT.LE.0) GO TO 169
      IDN = 1
      IX(43) = N
      IX(42) = 5
      IX(20) = N
      READ(IO26) P1E
      IF (IX37.EQ.0) GO TO 164
      IX(20) = 1
      READ(IO15) AIO
  164 CONTINUE
      REWIND IO19
      DO 168 KB = 1,KBMAX
      DO 167 I = 1,IMAX
      DO 166 J = 1,JMAX
      READ(IO19) SSC
      L = NRGNE(J,I,KB)
      M = NCOMP(L)
      CALL PURT(SCAC,BAL,NRGNE,NCOMP,P1E,P2E,SIG,PVOL, DCONBE,DCONRE,
     > DCONBK,ONEOV, BIGD, IDN, XII,BND,BBND, IVX,JVX,KBVX,KVX,LVX,MVX,
     > NSETVX,IVXP1,JVXP1,KBVXP1,IVZ,KVZ, JIVX,JIP1VX,JP1IXZ,IOVX,IOVZ,
     > MVZ,SSC)
      T1 = BAL(N,1,2)*(SIG(N,M,7)-SIG(N,M,3))
      T2 = BAL(N,1,3)*(SIG(N,M,8)-SIG(N,M,4))
      T3 = BAL(N,1,2)*(SIG(N,M,6)-SIG(N,M,2))
      T4 = BAL(N,1,4)*(SIG(N,M,5)-SIG(N,M,1))
      T5 = BAL(N,1,2)*(SIG(N,M,5)-SIG(N,M,1))*BAL(N,M,6)
      T6 = 0.0
      DO 165 K1 = 1,KMAX
      T6 = T6 + SSC(K1,N) *(BAL(K1,M, 1)-F1(K1,M))
  165 CONTINUE
      T6 = T6/BIGD
      SOURE(J,I,KB) = -T1-T2-T3-T4-T5-T6
  166 CONTINUE
  167 CONTINUE
  168 CONTINUE
      WRITE(IO22) (((SOURE(J,I,KB),J=1,JMAX),I=1,IMAX),KB=1,KBMAX)
      GO TO 172
  169 CONTINUE
      DO 171 M = 1,MMAX
      T1 = BAL(N,M,2)*(SIG(N,M,7)-SIG(N,M,3))
      T2 = BAL(N,M,3)*(SIG(N,M,8)-SIG(N,M,4))
      T3 = BAL(N,M,2)*(SIG(N,M,6)-SIG(N,M,2))
      T4 = BAL(N,M,4)*(SIG(N,M,5)-SIG(N,M,1))
      T5 = BAL(N,M,2)*(SIG(N,M,5)-SIG(N,M,1))*BAL(N,M,6)
      T6 = 0.0
      DO 170 K1 = 1,KMAX
      T6 = T6 + SCAC(N,M,K1)*(BAL(K1,M, 1)-F1(K1,M))
  170 CONTINUE
      BAL(N,M, 7) = -T1-T2-T3-T4-T5-T6
  171 CONTINUE
  172 CONTINUE
      IF (KPOINT.LE.0) GO TO 173
      IF (IX37.GT.0) REWIND IO15
      REWIND IO26
      REWIND IO19
  173 CONTINUE
      REWIND IO3
      REWIND IO2
      REWIND IO14
      IF (KPOINT.GT.0) GO TO 177
      TMPDLK = 0.0
      DO 175 M = 1,MMAX
      DO 174 K = 1,KMAX
      TMPDLK = TMPDLK+BAL(K,M, 7)
  174 CONTINUE
  175 CONTINUE
      WRITE(IOUT,1001)NTEP,TMPDLK
      WRITE(IOUT,1002)
      DO 176 K = 1,KMAX
      WRITE(IOUT,1003)K,MMAX
      WRITE(IOUT,1004)(BAL(K,M, 7),M=1,MMAX)
  176 CONTINUE
  177 CONTINUE
      GO TO 183
  178 NRR = 22
  179 WRITE(IOUT,1005)NRR
      GO TO 183
  180 NRR = 23
      GO TO 179
  181 NRR = 24
      GO TO 179
  182 WRITE(IOUT,1006)I,NS,NSS,NLIM
  183 REWIND IO10
      REWIND IOSIG
      READ(IO3)(((SIG(K,M,I),K=1,KMAX),M=1,MMAX),I=1,8)
      READ(IO3)
      DO 185 NS = 1,NSETMX
      NNC = NSIG2(NS)
      DO 184 N = 1,NNC
      READ(IO3)(SS1(K,N,NS),SS2(K,N,NS),SS3(K,N,NS), SS4(K,N,NS),SS5(K,
     > N,NS),K=1,KMAX)
  184 CONTINUE
  185 CONTINUE
      READ(IO3)((CONC(N,M),N=1,NMAX),M=1,MMAX)
      REWIND IO3
      IF (KPOINT.LE.0) GO TO 186
      REWIND IO22
  186 CONTINUE
      RETURN
 1000 FORMAT('0**********ERROR STOP 26')
 1001 FORMAT('0'/'0DELTA-K/K FOR PERTURBATION SPECIFICATION',I3,'  IS',
     > 1PE14.6)
 1002 FORMAT('0DELTA-K/K BY ZONE AND GROUP')
 1003 FORMAT('0GROUP',I3,'  ZONES 1 TO',I4)
 1004 FORMAT(1X,1P9E13.5)
 1005 FORMAT('0ERROR STOP',I3)
 1006 FORMAT('0SOMETHING WRONG IN TCOF',4I5)
      END
CIPTM --006 ***CITATION*** INPUT MANAGER ROUTINE
      SUBROUTINE IPTM(A,MEMORY,NTITE,IMEM,NM1VX,NSM1VX,MM1AC5)
C
       DOUBLE PRECISION FLOTR
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AMESH/BMESH(30),NREGI,NREGJ,NREGKB,XSHI(100),XSHJ(100),
     > XSHKB(100), MSHI(100),MSHJ(100),MSHKB(100),Y(211),YY(211), X(211)
     >  ,XX(211),Z(211),ZZ(211), ZONVOL(200),AVZPD(200),PDI(211),
     > PDJ(211) , PDK(211)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     >  , XNAME(3,200)
      COMMON/AVDLM/IVDLM(1),IVX,JVX,KBVX,KVX,LVX,MVX,NVX,IVXP1,JVXP1,
     > KBVXP1,NSETVX,NVO,IVO,IVZ,KVZ,NCRP,NSPA,N3DDIM,NBLOCK, JIVX,
     > JIP1VX,JP1IXZ,IOVX,IOVZ
      COMMON/AKADD/KAY(1),K1,K2,K3,K4,K5,K6,K7,K8,K9,K10,K11, K12,K13,
     > K131,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23,K24, K25,K26,K27,
     > K28,K29,K30,K31,K32,K33,K34,K35,K36,K37, K38,K39,K40,K41,K42,K43,
     >  K44,K45,K46,K47,K48,K49, K50,K51,K52,K53,K54,K55,K56,K57,K58,
     > K59, K60,K61,K62, K63,K64,K65,K66,K67,K68,K69,K70,K71,K72,K73,
     > K74,K75, K76,K77,K78,K79,K80,K81,K82,K83,K84,K85,K86,K87, K88,
     > K89,K90, K91,K92,K93,K94,K95,K96,K97,K98, K99,K100,NDATA,KNRGN,
     > KNCOMP, KPVOL,KRVOL,MEMVRY, MEMX
      COMMON/ASRCH/ BSRCH(30),XK1,XK2,XK3,XN1,XN2,XN3, DELK1,DELK2,
     > DELK3,BATTY,DRV,TBF,GWC,EK2,RCCM,DNDK(5), NSC(5),NSCN,NXZ,NXN,
     > NXM,NXS,INIL,INIU,INID
      COMMON/CMARY/MEMARY,IMN,MNI,IJLMN,NMLJI,IY(50),AX(50),TITL(36)
      COMMON/COOPD/FLOTR(200),INTGR(100)
C
      DIMENSION A(MEMORY)
      DIMENSION NTXR1(100)
C
      NUO = IX(190)
      NHEX = IX(191)
      NRVX = IX(192)
      IJKBX = IX(193)
      NTYP18 = INNO(18)
      DO 100 I = 1,100
      NER(I) = 0
      INNO(I) = 0
      NXTR1(I) = 0
  100 CONTINUE
      IF (IX(27).EQ.0) GO TO 101
      CALL SHOX(A(K30),A(K31),A(K32),A(K33),NVX,NSETVX)
      IF (NCRP.EQ.1) NSPA = 0
  101 CONTINUE
      NTYP = 0
      INCT = 0
  102 CONTINUE
      NTYP0 = NTYP
      I9193 = 0
      READ(IOIN,1003)NTYP
  103 CONTINUE
      INTGR(16) = 0
      INCT = INCT+1
      IF (NTYP-999) 104,192,105
  104 IF (NTYP) 105,107,107
  105 IERR = 1
  106 NER(IERR) = IERR
      INCT = INCT-1
      WRITE(IOUT,1004)(NTXR1(I),I=1,INCT),NTYP
      GO TO 206
  107 CONTINUE
      IF (NTYP.LT.NTYP0) GO TO 105
      IF (NTYP.NE.0) GO TO 108
      REWIND IO1
      WRITE(IO1)(A(I),I=1,MEMORY)
      REWIND IO1
      IO30 = IX(97)
      IIIN = IOIN
      IIUT = IOUT
      II2 = IO2
      II3 = IO3
      II7 = IO7
      IISIG = IOSIG
      II30 = IO30
      CALL OPT1(A,MEMORY,IIIN,IIUT,II2,II3,II7,IISIG,II30)
      READ(IO1)(A(I),I=1,MEMORY)
      REWIND IO1
      READ(IOIN,1003)NTYP
      IX(167) = 0
      IF (NTYP.EQ.999) IX(167) = 1
      IF (NTYP.EQ.999) GO TO 209
      NTYP0 = NTYP
      GO TO 103
  108 CONTINUE
  109 INNO(NTYP) = NTYP
      NTXR1(INCT) = NTYP
      IF ((NTYP.EQ.91).OR.(NTYP.EQ.93)) GO TO 187
      GO TO (111,116,117,118,122,127,132,133,137,138,139,140,147,148,
     > 149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,
     > 167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,
     > 183,184,185,186),NTYP
  110 WRITE(IOUT,1005) NTYP
      GO TO 208
  111 CALL CNTR
      IF (NGC(2).EQ.0) GO TO 114
      CALL RSTR(NTITE,A,MEMORY)
      IX(27) = 1
      IF (NCRP.EQ.1) NSPA = 0
      REWIND IO2
      N1 = KNRGN+IVX*JVX*KBVX-1
      WRITE(IO2)(A(N),N=KNRGN,N1)
      REWIND IO2
      IRV = 1
      CALL BNSB(A(K50),A(K51),KVX,IRV)
C*******************************(BBND,BND,KVX,IRV)
      IMEM = 1
      IF (NGC(19).GT.0) GO TO 102
      CALL KXNX
      IF ((NMAX.EQ.NVX).AND.(KMAX.EQ.KVX)) GO TO 112
      WRITE(IOUT,1000)NMAX,NVX,KMAX,KVX
      GO TO 208
  112 CONTINUE
      ISRTT = 1
      CALL TAPE(A(K9), A(K12), A(K13) ,A(K10),A(K1),A(K2), A(K3),A(K4),
     > A(K5),A(K6),A(K8),A(K7),A(K16), A(K30),A(K31),A(K32), A(K33),
     > A(K14),KVX,NVX,NSETVX,NRVX,ISRTT)
C**************(NJJR,NREFNO,NNDI1,NNDI2,NNXTRA,MJJR,SS1,SS2,SS3,
C ****SS4,SS5,SSC,HOL,ONEOV,XI,HOX,NFO,NNFO,NIC,SIG,KVX,NVX,NSETVX,NRVX)
      NUO = 0
      DO 113 M = 1,MMAX
      N1 = NZON(M)
      N2 = NXSET(M)
      N3 = NXODR(N2)
      N4 = NSIG2(N3)
      NUO = NUO+N1*N4
  113 CONTINUE
      IF (NTITE.LE.0) GO TO 102
      INTGR(16) = 1
      IO13 = IX(80)
      INTGR(13) = IO13
      INTGR(14) = NGC(2)
      INTGR(15) = NGC(3)
      IO12 = IX(79)
      INTGR(17) = IO12
      IO24 = IX(91)
      INTGR(18) = IO24
      I9193 = 1
      GO TO 187
  114 CONTINUE
      IF (IX(27).GT.0) GO TO 102
      DO 115 N = 1,MEMORY
      A(N) = 0.0
  115 CONTINUE
      GO TO 102
  116 CALL HIST
      IX(76) = 0
      IF (NGC(2).GT.0) IX(76) = 1
      GO TO 102
  117 CALL GEOMCIT(A(1))
      NHEX = 0
      IF ((NUAC(5).EQ.9).OR.(NUAC(5).EQ.13)) NHEX=1
      IF (IX(27).EQ.0) GO TO 102
      IVZ = IVX+NHEX
      KVZ = KVX*(NHEX+1)
      GO TO 102
  118 CALL LVMX
      IF (LVX.NE.LMAX) IX(7) = 1
      LVX = LMAX
      KRVOL = MEMORY-LVX+1
      KPVOL = KRVOL-LVX
      KNCOMP = KPVOL-LVX
      KNO = IABS(KNCOMP)
      IF (KNCOMP.LE.0) GO TO 207
      CALL MESH(A(KRVOL),A(KPVOL),LVX)
C**************(RVOL,PVOL,LVX)
      IVX = IMAX
      IVXP1 = IMXP1
      JVX = JMAX
      JVXP1 = JMXP1
      KBVX = KBMAX
      KBVXP1 = KBMXP1
      KNRGN = 1
      IF (IX(27).GT.0) KNRGN = K19
      IJKBX = IVX*JVX*KBVX
      ISK = 0
      IF (NUAC(5)-10) 119,119,120
  119 CALL COMP(ISK,A(KNRGN),A(KNCOMP),IVX,JVX,LVX)
C**************(ISK,NRGN,NCOMP,IVX,JVX,LVX)
      GO TO 121
  120 CALL KOMP(ISK,A(KNRGN),A(KNCOMP),IVX,JVX,KBVX,LVX)
C**************(ISK,NRGNE,NCOMP,IVX,JVX,KBVX,LVX)
  121 REWIND IO2
      N1 = KNRGN+IJKBX-1
      WRITE(IO2)(A(N),N=KNRGN,N1)
      REWIND IO2
      GO TO 102
  122 ISK = 1
      IF (NUAC(5)-10) 123,123,124
  123 CALL COMP(ISK,A(KNRGN),A(KNCOMP),IVX,JVX,LVX)
C**************(ISK,NRGN,NCOMP,IVX,JVX,LVX)
      GO TO 125
  124 CALL KOMP(ISK,A(KNRGN),A(KNCOMP),IVX,JVX,KBVX,LVX)
C**************(ISK,NRGNE,NCOMP,IVX,JVX,KBVX,LVX)
  125 CONTINUE
      IF (NGC(2).EQ.0) GO TO 126
      IF (MMAX.EQ.MVX) GO TO 126
      WRITE(IOUT,1000)MMAX,MVX
      GO TO 208
  126 MVX = MMAX
      GO TO 102
  127 CONTINUE
      IF (INNO(5).NE.5) GO TO 105
      N1 = NDATA+1+IJKBX
      NT1 = MEMORY-(N1+LVX)+1
      NT2 = (NT1-2*LVX)/3
      N2 = N1+LVX+NT2
      N3 = N2+LVX+NT2
      NCHECK = N3+LVX
      IF (NCHECK.LE.MEMORY) GO TO 128
      WRITE(IOUT,1006)NDATA,MEMORY,LVX,N1,NT1,NT2,N2,N3
      STOP
  128 CONTINUE
      DO 129 N = 1,LVX
      NN = N-1
      NN1 = KNCOMP+NN
      NN2 = N1+NN
      NN3 = KPVOL+NN
      NN4 = N2+NN
      NN5 = KRVOL+NN
      NN6 = N3+NN
      A(NN2) = A(NN1)
      A(NN4) = A(NN3)
      A(NN6) = A(NN5)
  129 CONTINUE
      NNN1 = N1+LVX-1
      LSZ = NT2+LVX
      CALL OVER(A(KNRGN),A(N1),A(N3),A(N2),IVX,JVX,KBVX,LSZ,NNN1,N2)
C**************(NRGN,NCOMP,RVOL,PVOL,IVX,JVX,KBVX,LSZ,NNN1,N2)
      REWIND IO2
      NLIM = KNRGN+IVX*JVX*KBVX-1
      WRITE(IO2)(A(N),N=KNRGN,NLIM)
      REWIND IO2
      LVX = LMAX
      MVX = MMAX
      KRVOL = MEMORY-LVX+1
      KPVOL = KRVOL-LVX
      KNCOMP = KPVOL-LVX
      DO 130 N = 1,LVX
      NN = N-1
      NN1 = N1+NN
      NN2 = KNCOMP+NN
      NN3 = N2+NN
      NN4 = KPVOL+NN
      NN5 = N3+NN
      NN6 = KRVOL+NN
      A(NN2) = A(NN1)
      A(NN4) = A(NN3)
      A(NN6) = A(NN5)
      A(NN1) = 0.0
      A(NN3) = 0.0
      A(NN5) = 0.0
  130 CONTINUE
      IF (NUAC(5).GT.10) GO TO 131
      CALL CMOT(A(KNRGN),A(KNCOMP),IVX,JVX,LVX)
C**************(NRGN,NCOMP,IVX,JVX,LVX)
      GO TO 102
  131 CALL KMOT(A(KNRGN),A(KNCOMP),IVX,JVX,KBVX,LVX)
C**************(NRGNE,NCOMP,IVX,JVX,KBVX,LVX)
      GO TO 102
  132 CONTINUE
      GO TO 102
  133 READ(IOIN,1007)NSIG3(1),NSIG4(1),NSIG5(1)
      IF (NSIG3(1).GT.0) GO TO 134
      IX(136) = 1
      IOMC = IX(137)
      REWIND IOMC
      READ(IOMC,1007) NATE
      IF (NATE.NE.8) NER(35) = 35
      READ(IOMC,1007) NSIG3(1),NSIG4(1),NSIG5(1)
      GO TO 135
  134 CONTINUE
      IX(136) = 0
      IOMC = IOIN
  135 CONTINUE
      NLIM = KNRGN+IVX*JVX*KBVX-1
      DO 136 N = KNRGN,NLIM
      A(N) = 0.0
  136 CONTINUE
      NSIG1(1) = 0
      NSIG2(1) = 0
      KMAX = NSIG3(1)
      NMAX = 1
      IX(28) = NSIG4(1)
      IX(29) = NSIG5(1)
      NVX = NMAX
      KVX = KMAX
      NSETMX = 1
      NSETVX = 1
      NRVX = 1
      CALL KSIG(KVX,MVX,NVX,NSETVX)
      KNO = K18-KNCOMP
      IF (KNO.GE.0) GO TO 207
      CALL MACR(A(K14),A(K15),A(K16),MVX,KVX,IOMC)
C**************(SIG,F1,XI,MVX,KVX,IOMC)
      IF (IX(136).GT.0) REWIND IOMC
      NUO = 1
      NVO = 1
      IVO = 1
      IVZ = IVX+NHEX
      KVZ = KVX*(NHEX+1)
      CALL KRST(IVX,JVX,KBVX,KVX,LVX,MVX,NVX,IVXP1,JVXP1, KBVXP1,NSETVX,
     >  NVO,IVO,IVZ,KVZ,N3DDIM)
      IMEM = 1
      KNO = K62-KNCOMP
      IF (KNO.GE.0) GO TO 207
      IF (NGC(19).EQ.0) NGC(19) = 1
      GO TO 102
  137 CONTINUE
      GO TO 102
  138 CONTINUE
      GO TO 102
  139 CONTINUE
      GO TO 102
  140 CONTINUE
      IF (NGC(19).GT.0) GO TO 142
      NLIM = KNRGN+IVX*JVX*KBVX-1
      DO 141 N = KNRGN,NLIM
      A(N) = 0.0
  141 CONTINUE
  142 CONTINUE
      CALL SSET
      NSETVX = NSETMX
      IF (NGC(19).GT.0) NSETMX = 1
      IF (NGC(19).GT.0) NSETVX = 1
      IF (NGC(19)) 143,143,102
  143 CALL KXNX
      NVX = NMAX
      KVX = KMAX
      CALL KSIG(KVX,MVX,NVX,NSETVX)
      KNO = K18-KNCOMP
      IF (KNO.GE.0) GO TO 207
      NN = K14-1
      DO 144 N = 1,NN
      A(N) = 0.0
  144 CONTINUE
      NN = K34-1
      DO 145 N = K30,NN
      A(N) = 0.0
  145 CONTINUE
      ISRTT = 0
      CALL TAPE(A(K9), A(K12), A(K13) ,A(K10),A(K1),A(K2), A(K3),A(K4),
     > A(K5),A(K6),A(K8),A(K7),A(K16), A(K30),A(K31),A(K32), A(K33),
     > A(K14),KVX,NVX,NSETVX,NRVX,ISRTT)
C**************(NJJR,NREFNO,NNDI1,NNDI2,NNXTRA,MJJR,SS1,SS2,SS3,
C ****SS4,SS5,SSC,HOL,ONEOV,XI,HOX,NFO,NNFO,NIC,SIG,KVX,NVX,NSETVX,NRVX)
      IF (NTYP18.EQ.0) CALL TAPX(A(K9),NVX,NSETVX)
C******************************(NJJR,NVX,NSETVX)
      NUO = 0
      IVO = 0
      DO 146 M = 1,MMAX
      N1 = NZON(M)
      N2 = NXSET(M)
      N3 = NXODR(N2)
      N4 = NSIG2(N3)
      N1N4 = N1*N4
      IVO = MAX0(IVO,N1N4)
      NUO = NUO+N1N4
  146 CONTINUE
      NVO = IVO
      IVZ = IVX+NHEX
      KVZ = KVX*(NHEX+1)
      CALL KRST(IVX,JVX,KBVX,KVX,LVX,MVX,NVX,IVXP1,JVXP1, KBVXP1,NSETVX,
     >  NVO,IVO,IVZ,KVZ,N3DDIM)
      IMEM = 1
      KNO = K62-KNCOMP
      IF (KNO.GE.0) GO TO 207
      N1 = MEMORY-K18
      KNO = NUO-N1
      INSEC = -36
      REWIND IO3
      CALL DISK(A(K17),A(K18),INSEC,MVX,NVX,NVO, A(K30),A(K31),A(K32),
     > A(K33),NSETVX)
      IF (KNO.GT.0) GO TO 207
      GO TO 102
  147 CONTINUE
      GO TO 102
  148 CONTINUE
      GO TO 102
  149 CONTINUE
      GO TO 102
  150 CONTINUE
      GO TO 102
  151 CONTINUE
      GO TO 102
  152 CALL CLAS
      GO TO 102
  153 CONTINUE
      GO TO 102
  154 IDTOR = 0
      CALL DENS(A(K17),A(K18),A(K10),A(K9),IDTOR,MVX,NVX,NSETVX,NVO,NUO)
C**************(CONC,ZONEN,MJJR,NJJR,IDTOR,MVX,NVX,NSETVX,NVO,NTO)
      GO TO 102
  155 CONTINUE
      GO TO 102
  156 CONTINUE
      GO TO 102
  157 CONTINUE
      GO TO 102
  158 CONTINUE
      CALL BKLE(A(K14),MVX,KVX)
C**************(SIG,MVX,KVX)
      GO TO 102
  159 CONTINUE
      GO TO 102
  160 CONTINUE
      N1 = JVX*IVX*KBVX
      N2 = K62 + N1
      N3 = N2 + N1
      KNO = N3 - KNCOMP
      IF (KNO.GE.0) GO TO 207
      N4 = N3 - 1
      REWIND IO2
      READ(IO2) (A(N),N=N2,N4)
      REWIND IO2
      CALL FXSO(A(K62),A(K45),A(KPVOL),A(N2 ),A(KNCOMP), JVX,IVX,KBVX,
     > KVX,LVX)
C**************(SPAR  ,BIEMS ,PVOL    ,NRGNE   ,NCOMP    ,
C***** JVX,IVX,KBVX,KVX,LVX)
      DO 161 N=N2,N4
  161 A(N) = 0.0
      NSPA = 1
      IX(131) = 1
      GO TO 102
  162 CONTINUE
      GO TO 102
  163 INSEC = 28
      REWIND IO3
      CALL DISK(A(K17),A(K18),INSEC,MVX,NVX,NVO, A(K30),A(K31),A(K32),
     > A(K33),NSETVX)
C**************(CONC,   ZONEN,INSEC,MVX,NVX,KVX,NVO)
      CALL SRCH(A(K17),A(K10),NVX,MVX,NSETVX)
C**************(CONC,MJJR,NVX,MVX,NSETVX)
      GO TO 102
  164 CONTINUE
      GO TO 102
  165 CONTINUE
      INSEC = 30
      REWIND IO3
      CALL DISK(A(K17),A(K18),INSEC,MVX,NVX,NVO, A(K30),A(K31),A(K32),
     > A(K33),NSETVX)
      N1 = JVX*IVX*KBVX
      N2 = K62 + N1*NSPA
      N3 = N2 + N1
      KNO = N3 - KNCOMP
      IF (KNO.GE.0) GO TO 207
      N4 = N3 - 1
      REWIND IO2
      READ(IO2) (A(N),N=N2,N4)
      REWIND IO2
      CALL RODI(A(N2),A(KNCOMP),JVX,IVX,KBVX,LVX,A(K10),NSETVX)
C*************(NRGNE,NCOMP,JVX,IVX,KBVX,LVX,MJJR,NSETVX)
      DO 166 N=N2,N4
  166 A(N) = 0.0
      IX(142) = 1
      GO TO 102
  167 CONTINUE
      GO TO 102
  168 CONTINUE
      GO TO 102
  169 CONTINUE
      GO TO 102
  170 CALL DCAY(A(K8),A(K9),A(K10),NVX,NSETVX)
C**************(HOL,NJJR,MJJR,NVX,NSETVX)
      CALL YELD(A(K30),A(K9),A(K10),A(K31),A(K32),NVX,NSETVX)
C**************(HOX,NJJR,MJJR,NFO,NNFO,NVX,NSETVX)
      GO TO 102
  171 CONTINUE
      GO TO 102
  172 CALL CHAN(A(K8),A(K10),A(K30),A(K31),A(K32),A(K33),NVX,NSETVX)
C**************(HOL,MJJR,HOX,NFO,NNFO,NIC,NVX,NSETVX)
      GO TO 102
  173 CONTINUE
      GO TO 102
  174 CONTINUE
      CALL IMXS(A(K50),KVX)
      GO TO 102
  175 CONTINUE
      GO TO 102
  176 INSEC = 40
      REWIND IO3
      CALL DISK(A(K17),A(K18),INSEC,MVX,NVX,NVO, A(K30),A(K31),A(K32),
     > A(K33),NSETVX)
C**************(CONC,   ZONEN,INSEC,MVX,NVX,KVX,NVO)
      CALL IPRT(A(K17),A(K18),A(K10),A(K9),A(K8),MVX,NVX,NSETVX,NVO,NUO)
C**************(CONC,ZONEN,MJJR,NJJR,HOL,MVX,NVX,NSETVX,NVO,NTO)
      GO TO 102
  177 CONTINUE
      GO TO 102
  178 CALL DYPD
      GO TO 102
  179 CONTINUE
      GO TO 102
  180 CONTINUE
      GO TO 102
  181 CONTINUE
      GO TO 102
  182 CONTINUE
      GO TO 102
  183 CONTINUE
      GO TO 102
  184 CONTINUE
      GO TO 102
  185 CONTINUE
      GO TO 102
  186 CONTINUE
      GO TO 102
  187 CONTINUE
      REWIND IO1
      WRITE(IO1)(A(I),I=1,MEMORY)
      REWIND IO1
      INTGR(11) = 1
      INTGR(100) = NTYP
      CALL GEDT(A,MEMORY,IO3)
      IF (INTGR(16).EQ.0) GO TO 189
      INTGR(16) = 0
      NGC(2) = INTGR(14)
      IX(19) = NGC(2)
      IOR = IX(80)
      IO12 = IX(79)
      REWIND IO12
      IF (NGC(2).GT.0) GO TO 189
      READ(IOR)II
      IX19 = II
      IX22 = IX(22)
      IX2 = IX(2)
      IX39 = IX(39)
      IX198 = IX(198)
      READ(IOR)N12,(IX(I),I=1,200),(SPARE(I),I=1,200), (A(I),I=K17,N12)
      IX(22) = IX22
      IX(19) = IX19
      IX(2) = IX2
      IX(39) = IX39
      IX(198) = IX198
      BACKSPACE IOR
      BACKSPACE IOR
      NZN2 = 0
      WRITE(IO12)MMAX,MMAX,MMAX,MMAX,MMAX
      INCR = K18-1
      DO 188 M = 1,MMAX
      NACT = NXSET(M)
      MS1 = NXODR(NACT)
      NZN1 = NZN2+1
      NZN2 = NZN2+NJM(MS1)*NZON(M)
      J1 = NZN1+INCR
      J2 = NZN2+INCR
      WRITE(IO12)NZN1,NZN2
      WRITE(IO12)(A(I),I=J1,J2)
  188 CONTINUE
      REWIND IO12
      IX(27) = 1
  189 CONTINUE
      READ(IO1)(A(I),I=1,MEMORY)
      REWIND IO1
      IF (I9193.EQ.0) GO TO 102
      IF (NGC(2).GT.0) GO TO 190
      GO TO 102
  190 CONTINUE
      READ(IO12)
      DO 191 M = 1,MVX
      READ(IO12)
      READ(IO12)
  191 CONTINUE
      IEND = K17 + NMAX * MMAX - 1
      READ(IO12)(A(I),I=K17,IEND)
      REWIND IO12
      IX19 = IX(19)
      IX22 = IX(22)
      IX2 = IX(2)
      IX39 = IX(39)
      IX198 = IX(198)
      READ(IO13)(IX(I),I=1,200),(SPARE(I),I=1,200)
      IX(19) = IX19
      IX(22) = IX22
      IX(2) = IX2
      IX(39) = IX39
      IX(198) = IX198
      IX(27) = 1
      GO TO 102
  192 CONTINUE
      IF (NGC(19).GT.0) GO TO 194
      IF (IX(27).EQ.0) GO TO 193
      IF ((INNO(34).EQ.34).OR.(INNO(36).EQ.36)) GO TO 193
      GO TO 194
  193 CONTINUE
      CALL WIO3(A(K30),A(K31),A(K32),A(K33),NVX,NSETVX)
      INSEC = 36
      CALL DISK(A(K17),A(K18),INSEC,MVX,NVX,NVO, A(K30),A(K31),A(K32),
     > A(K33),NSETVX)
  194 CONTINUE
      IF (NGC(2).EQ.0) GO TO 195
      IO26 = IX(93)
      REWIND IO26
      READ(IO26) N11,(A(I),I=K24,N11)
      REWIND IO26
  195 CONTINUE
      IF (IX(27).EQ.0) GO TO 196
      IF (IMEM.GT.0) GO TO 196
      IVZ = IVX+NHEX
      KVZ = KVX*(NHEX+1)
      CALL KSIG(KVX,MVX,NVX,NSETVX)
      KNO = K18-KNCOMP
      IF (KNO.GE.0) GO TO 207
      CALL KRST(IVX,JVX,KBVX,KVX,LVX,MVX,NVX,IVXP1,JVXP1, KBVXP1,NSETVX,
     >  NVO,IVO,IVZ,KVZ,N3DDIM)
      KNO = K62-KNCOMP
      IF (KNO.GE.0) GO TO 207
  196 CONTINUE
      IRV = 0
      IF (NGC(19).EQ.0) CALL CPNC
      IF (KVX.GT.1000) STOP 445
      CALL BNSB(A(K50),A(K51),KVX,IRV)
C*******************************(BBND,BND,KVX,IRV)
C     NSPA = NUMBEROFSPACEPOINTARRAYS-----
C            0FORSTATICSORDEPLETIONPROBLEMS.
C            1FORFIXED-SOURCEPROBLEMS.
C            5FORXENONPROBLEMS.
C            2TIMESTHENUMBEROFDELAYED-NEUTRONGROUPS
C            PLUS5FORDYNAMICSPROBLEMS.
      IF (NGC(10).NE.(-5)) GO TO 197
      IF (IX(131).EQ.1) GO TO 197
      IERR = 50
      GO TO 206
  197 CONTINUE
      NCRP = IVX*JVX*KBVX
      IF (NSPA.EQ.0) NCRP = 1
      IF (NSPA.EQ.0) NSPA = 1
      K64 = K62+NCRP*NSPA
      NBLOCK = 2200
      CALL CNIO(IVX,JVX,KBVX,KVX,IVXP1,JVXP1,KBVXP1,IVZ,KVZ, N3DDIM,LVX,
     >  NBLOCK,IOVX,IOVZ)
      IF (IX(37).EQ.0) GO TO 198
      WRITE(IOUT,1001)
      GO TO 199
  198 WRITE(IOUT,1002)
  199 CONTINUE
      NDATA = K68
      KNRGN = NDATA+1
      N1 = KNRGN+IVX*JVX*KBVX
      KNO = N1-KNCOMP
      IF (KNO.GE.0) GO TO 207
      N2 = N1-1
      READ(IO2)(A(N),N=KNRGN,N2)
      REWIND IO2
  200 WRITE(IOUT,1008)JMAX,IMAX,KBMAX,KMAX,IX(29),IX(28),LMAX,MMAX
      NUSE = NDATA+IVX*JVX*KBVX+3*LVX
      MEMX = MEMORY-NUSE
      WRITE(IOUT,1009)MEMORY,NUSE,MEMX
      CALL SIZE(IVX,JVX,KBVX,KVX,MVX,NVX,NSETVX,NRVX)
      IF (IX(27).EQ.0) GO TO 201
      IF (NGC(2).NE.0) GO TO 201
      IF ((NUAC(5).NE.MM1AC5).AND.(INNO(4).EQ.0)) NER(28) = 28
      IF ((MM1VX.EQ.MMAX).AND.(KM1VX.EQ.KMAX).AND.(NM1VX.EQ.NMAX)
     > .AND.(NSM1VX.EQ.NSETVX)) GO TO 201
      IF ((INNO(8).EQ.0).AND.(NGC(19).GT.0)) NER(25) = 25
      IF ((NGC(19).EQ.0).AND.(INNO(20).EQ.0)) NER(25) = 25
      IF (INNO(24).EQ.0) NER(25) = 25
  201 N1 = 0
      IF ((IX(7).EQ.1).AND.(INNO(5).EQ.0)) NER(19) = 19
      DO 203 I = 1,100
      IF (NER(I)) 203,203,202
  202 N1 = NER(I)
      WRITE(IOUT,1010)N1
  203 CONTINUE
      IF (N1) 204,204,208
  204 CONTINUE
      IF (IX(27)) 205,205,209
  205 N1 = INNO(1)+INNO(3)+INNO(4)+INNO(5)
      N2 = N1*INNO(8)
      N3 = N1*INNO(12)*INNO(20)
      N = N2+N3
      IF (N) 105,105,209
  206 WRITE(IOUT,1010)IERR
      GO TO 208
  207 WRITE(IOUT,1013)KNO
      WRITE(IOUT,1008)JMAX,IMAX,KBMAX,KMAX,IX(29),IX(28),LMAX,MMAX
  208 STOP
  209 CONTINUE
      IF (NGC(2).EQ.0.AND.NDPL(11).GT.0) CALL RODO(A(KNCOMP),LVX)
      IX(190) = NUO
      IX(191) = NHEX
      IX(192) = NRVX
      IX(193) = IJKBX
      IX(150) = 0
      IF (NGC(5).NE.0.AND.NGC(1).EQ.0) IX(150) = 1
      RETURN
 1000 FORMAT('0ERROR STOP 27',4I5)
 1001 FORMAT('0'/'0EQUATION CONSTANTS WILL BE STORED ON I/O LOGICAL 15')
 1002 FORMAT('0'/'0EQUATION CONSTANTS WILL BE STORED IN CORE')
 1003 FORMAT(24I3)
 1004 FORMAT('0THE FOLLOWING INPUT SECTIONS HAVE BEEN READ'/1X,32I4/
     > 1X,32I4)
 1005 FORMAT('0INPUT SECTION NUMBER',I6,'    IS IN ERROR')
 1006 FORMAT('0NCHECK',8I8)
 1007 FORMAT(24I3)
 1008 FORMAT('0NUMBER OF---COLUMNS, ROWS, PLANES, GROUPS, UPSCAT, DOWNSC
     >AT, REGIONS, AND ZONES    ',8I4)
 1009 FORMAT('0MEMORY LOCATIONS RESERVED FOR DATA STORAGE---',I7/
     > ' MEMORY LOCATIONS USED FOR THIS PROBLEM-------',I7/
     > ' MEMORY LOCATIONS NOT USED--------------------',I7)
 1010 FORMAT('0ERROR STOP NUMBER',I3)
 1011 FORMAT('0'/1H0,111('*'))
 1012 FORMAT('0',111('*'))
 1013 FORMAT('0ERROR STOP NUMBER 2'/
     > ' MEMORY RESERVED FOR DATA EXCEEDED BY MORE THAN',I7,' WORDS')
      END
CPERT --153 ***CITATION*** PERTURBATION CONTROL/ CF-OUTC
      SUBROUTINE PERT(P2E,P1E,SCAC,BAL,NRGNE,NCOMP,SIG,MJJR,SSC,CONC,
     > P2,XII,ONEOV,SOURE, IVX,JVX,KBVX,KVX,LVX,MVX,NVX,NSETVX,IVZ,KVZ,
     > IVXP1,JVXP1,KBVXP1, NBLOCK,JIVX,JIP1VX,JP1IXZ,IOVX,IOVZ,A,MEMORY,
     >  AIO,IX3738,MVZ)
C
      DOUBLE PRECISION XII,P2
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AMESH/BMESH(30),NREGI,NREGJ,NREGKB,XSHI(100),XSHJ(100),
     > XSHKB(100), MSHI(100),MSHJ(100),MSHKB(100),Y(211),YY(211), X(211)
     >  ,XX(211),Z(211),ZZ(211), ZONVOL(200),AVZPD(200),PDI(211),
     > PDJ(211) , PDK(211)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     >  , XNAME(3,200)
      COMMON/AKADD/KAY(1),K1,K2,K3,K4,K5,K6,K7,K8,K9,K10,K11, K12,K13,
     > K131,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23,K24, K25,K26,K27,
     > K28,K29,K30,K31,K32,K33,K34,K35,K36,K37, K38,K39,K40,K41,K42,K43,
     >  K44,K45,K46,K47,K48,K49, K50,K51,K52,K53,K54,K55,K56,K57,K58,
     > K59, K60,K61,K62, K63,K64,K65,K66,K67,K68,K69,K70,K71,K72,K73,
     > K74,K75, K76,K77,K78,K79,K80,K81,K82,K83,K84,K85,K86,K87, K88,
     > K89,K90, K91,K92,K93,K94,K95,K96,K97,K98, K99,K100,NDATA,KNRGN,
     > KNCOMP, KPVOL,KRVOL,MEMVRY, MEMX
C
      DIMENSION P2E(JIVX ,KBVX,KVX),P1E(JIVX ,KBVX) , SCAC(KVX, MVZ,
     > KVX),BAL(KVX,MVX, 8),NRGNE(JVX,IVX,KBVX), NCOMP(LVX), SIG(KVX,
     > MVX,10),MJJR(200,NSETVX),SSC(KVX,KVX),CONC(NVX,MVX), P2(JVX,IVX,
     > KVX),ONEOV(KVX,NSETVX),XII(KVX)
      DIMENSION SOURE(JVX,IVX,KBVX)
      DIMENSION AIO(IX3738)
      DIMENSION A(MEMORY)
C
      IX37 = IX(37)
      IX38 = IX(38)
      IO15 = IX(82)
      IO26 = IX(93)
      IO19 = IX(86)
      IO22 = IX(89)
      IF (IX37.GT.0) REWIND IO15
  100 IO10 = IX(77)
      DO 104 M = 1,MVZ
      DO 103 K = 1,KMAX
      DO 101 KK = 1,KMAX
      SCAC(K,M,KK) = 0.0
  101 CONTINUE
      DO 102 I = 2,8
      BAL(K,M,I) = 0.0
  102 CONTINUE
  103 CONTINUE
  104 CONTINUE
      CALL PIOS(P1E,P2E,P2,SCAC,SSC,SIG,NRGNE,NCOMP, A(KPVOL),A(K41),
     > A(K41), SOURE,XII,BIGD,JVX,IVX,KBVX,KVX,MVX,LVX,JIVX,MVZ)
      WRITE(IOUT,1000)(TITL1(I),I=1,18)
      WRITE(IOUT,1001)(TITL2(I),I=1,18)
      IDN = 0
      REWIND IO26
      DO 109 K = 1,KMAX
      IX(43) = K
      IX(42) = 1
      IX(20) = K
      READ(IO26) P1E
      IF (IX37.EQ.0) GO TO 105
      IX(20) = 1
      READ(IO15) AIO
  105 CONTINUE
      DO 108 KB = 1,KBMAX
      DO 107 I = 1,IMAX
      DO 106 J = 1,JMAX
      CALL PURT(SCAC,BAL,NRGNE,NCOMP,P1E,P2E,SIG, A(KPVOL),A(K65),A(K64)
     >  ,A(K66), ONEOV, BIGD, IDN, XII, A(K51),A(K50), IVX,JVX,KBVX,KVX,
     >  LVX,MVX, NSETVX,IVXP1,JVXP1,KBVXP1,IVZ,KVZ, JIVX,JIP1VX,JP1IXZ,
     > IOVX,IOVZ, MVZ,SSC)
  106 CONTINUE
  107 CONTINUE
  108 CONTINUE
  109 CONTINUE
      REWIND IO26
      IF (IX37.GT.0) REWIND IO15
      DO 112 KK = 1,KMAX
      DO 111 M = 1,MMAX
      DO 110 K = 1,KMAX
      SCAC(K,M,KK) = SCAC(K,M,KK)/BIGD
  110 CONTINUE
  111 CONTINUE
  112 CONTINUE
      XLIFE = 0.0
      DO 117 M = 1,MMAX
      IF (NGC(19).GT.0) GO TO 113
      NACT = NXSET(M)
      NSET = NXODR(NACT)
  113 CONTINUE
      DO 116 K = 1,KMAX
      BAL(K,M,2) = -SCAC(K,M,K)
      IF (NGC(19).GT.0) GO TO 114
      XLIFE = XLIFE-BAL(K,M,2)*ONEOV(K,NSET)
  114 CONTINUE
      BAL(K,M,4) = BAL(K,M,4)/BIGD
      BAL(K,M,5) = BAL(K,M,2)*SIG(K,M,1)
      DO 115 KK = 1,KMAX
      BAL(K,M,3) = BAL(K,M,3)+XII(KK)*SCAC(KK,M,K)
  115 CONTINUE
  116 CONTINUE
  117 CONTINUE
      WRITE(IOUT,1003)BIGD
      WRITE(IOUT,1004)
      DO 121 M = 1,MMAX
      DO 120 K = 1,KMAX
      IF (K.GT.1) GO TO 118
      WRITE(IOUT,1005)M,(XNAME(I,M),I=1,3),K,(BAL(K,M,I),I=2,5)
      GO TO 119
  118 WRITE(IOUT,1006) K,(BAL(K,M,I),I=2,5)
  119 CONTINUE
  120 CONTINUE
  121 CONTINUE
      WRITE(IOUT,1007)
      DO 125 M = 1,MMAX
      DO 124 K = 1,KMAX
      IF (K.GT.1) GO TO 122
      WRITE(IOUT,1008)M,(XNAME(I,M),I=1,3),K,(SCAC(K,M,KK),KK=1,KMAX)
      GO TO 123
  122 WRITE(IOUT,1009) K,(SCAC(K,M,KK),KK=1,KMAX)
  123 CONTINUE
  124 CONTINUE
  125 CONTINUE
      IF (NGC(19).GT.0) GO TO 126
      WRITE(IOUT,1010)XLIFE
  126 CONTINUE
      IF (IXPUT(25).EQ.0) GO TO 127
      CALL KOKN(MJJR,SIG,A(K1),A(K2),A(K3),A(K4),BAL,SSC,SCAC,CONC,
     > A(K8),KVX,MVX,LVX,NVX,NSETVX,A(K44),MVZ)
  127 CONTINUE
      IF (IXPUT(29).EQ.0) GO TO 128
      CALL BEFF(BIGD,NRGNE,NCOMP,A(K2),A(K4),P1E,P2E,A(KPVOL),CONC,
     > A(K8),A(K44),A(K9),MJJR,A(K67),A(K46),A(K47),A(K48), IVX,JVX,
     > KBVX,KVX,LVX,MVX,NVX,NSETVX,JIVX,SSC,A(K30))
  128 CONTINUE
      IF (IXPUT(30).EQ.0) GO TO 129
      KPOINT = 0
      CALL TCOF(SIG,A(K15),A(K1),A(K2),A(K3),A(K4),A(K5),CONC,A(K9),
     > SOURE,A(K12),SSC,BAL,SCAC,NRGNE,NCOMP,P1E,P2E,A(KPVOL),A(K65),
     > A(K64),A(K66),ONEOV,BIGD,XII,A(K51),A(K50), IVX,JVX,KBVX, KVX,
     > LVX,MVX,NVX,NSETVX,IVXP1, JVXP1,KBVXP1,IVZ,KVZ, KPOINT,MNPR,
     > JIVX,JIP1VX,JP1IXZ,IOVX,IOVZ, A,MEMORY,AIO,IX3738,MVZ, A(K18),
     > A(K13))
  129 CONTINUE
      IF (IXPUT(33).EQ.0) GO TO 132
      CALL VMAP(P1E,P2E,ONEOV,SOURE,NRGNE,NCOMP,BIGD, IVX,JVX,KBVX,KVX,
     > LVX,NSETVX,JIVX,SSC)
      IND = 7
      IF (NUAC(5).GT.10) GO TO 130
      CALL POUT(P2,A(K41),IND,SOURE,IVX,JVX,KBVX,KVX)
      GO TO 131
  130 CONTINUE
      CALL KOUT(P2E,A(K41),IND,SOURE,IVX,JVX,KBVX,KVX,JIVX)
  131 CONTINUE
  132 CONTINUE
      IF (IXPUT(34).EQ.0) GO TO 149
      NN = IXPUT(34)
      REWIND IO4
      DO 135 K = 1,KMAX
      DO 134 NS = 1,NSETMX
      DO 133 KK = 1,KMAX
      SCAC(KK,NS+2,K) = 0.0
  133 CONTINUE
  134 CONTINUE
  135 CONTINUE
      DO 142 NS = 1,NSETMX
      NNN = NSIG2(NS)
      N = MJJR(NN,NS)
      ISNL = 0
      DO 138 NIN = 1,NNN
      IF (NIN-N) 137,136,137
  136 READ(IO4)((SSC(KK,K),KK=1,KMAX),K=1,KMAX)
      ISNL = 1
      GO TO 138
  137 READ(IO4)
  138 CONTINUE
      IF (ISNL.EQ.0) GO TO 142
  139 CONTINUE
      DO 141 K = 1,KMAX
      DO 140 KK = 1,KMAX
      SCAC(KK,NS+2,K) = SSC(KK,K)
  140 CONTINUE
  141 CONTINUE
  142 CONTINUE
      REWIND IO4
      REWIND IO26
      REWIND IO22
      IDN = -1
      DO 147 K = 1,KMAX
      IX(43) = K
      IX(42) = 1
      IX(20) = K
      READ(IO26) P1E
      IF (IX37.EQ.0) GO TO 143
      IX(20) = 1
      READ(IO15) AIO
  143 CONTINUE
      REWIND IO19
      DO 146 KB = 1,KBMAX
      DO 145 I = 1,IMAX
      DO 144 J = 1,JMAX
      READ(IO19) SSC
      CALL PURT(SCAC,BAL,NRGNE,NCOMP,P1E,P2E,SIG, A(KPVOL),A(K65),A(K64)
     >  ,A(K66), ONEOV, BIGD, IDN, XII, A(K51),A(K50), IVX,JVX,KBVX,KVX,
     >  LVX,MVX, NSETVX,IVXP1,JVXP1,KBVXP1,IVZ,KVZ, JIVX,JIP1VX,JP1IXZ,
     > IOVX,IOVZ, MVZ,SSC)
      CALLNMAP(SCAC,BAL,NRGNE,NCOMP,SIG,SOURE,MJJR, A(K1),A(K2),A(K3),
     > A(K4), IVX,JVX,KBVX,KVX,LVX,MVX,NVX,NSETVX,MVZ,SSC,BIGD,NN)
  144 CONTINUE
  145 CONTINUE
  146 CONTINUE
      WRITE(IO22) (((SOURE(J,I,KB),J=1,JMAX),I=1,IMAX),KB=1,KBMAX)
  147 CONTINUE
      REWIND IO22
      REWIND IO3
      REWIND IO26
      REWIND IO19
      WRITE(IO3)(((P2E(JI,KB,K),JI=1,JIVX),KB=1,KBVX),K=1,KVX)
      REWIND IO3
      PSUM = 0.0
      CALL RFLX(P2E,SOURE,NRGNE,A(KPVOL),PSUM,JVX,IVX,KBVX,KVX,JIVX,LVX)
      SPARE(91) = PSUM
      REWIND IO22
      READ(IO3)(((P2E(JI,KB,K),JI=1,JIVX),KB=1,KBVX),K=1,KVX)
      REWIND IO3
      IF (IX37.GT.0) REWIND IO15
      IND = 5
      IF (NUAC(5).GT.10) GO TO 148
      CALL POUT(P2,A(K41),IND,SOURE,IVX,JVX,KBVX,KVX)
      GO TO 149
  148 CONTINUE
      CALL KOUT(P2E,A(K41),IND,SOURE,IVX,JVX,KBVX,KVX,JIVX)
  149 CONTINUE
      IF (IXPUT(35).EQ.0) GO TO 170
      NN = IXPUT(35)
      REWIND IO4
      DO 152 K = 1,KMAX
      DO 151 NS = 1,NSETMX
      DO 150 KK = 1,KMAX
      SCAC(KK,NS+2,K) = 0.0
  150 CONTINUE
  151 CONTINUE
  152 CONTINUE
      DO 159 NS = 1,NSETMX
      NNN = NSIG2(NS)
      N = MJJR(NN,NS)
      ISNL = 0
      DO 155 NIN = 1,NNN
      IF (NIN-N) 154,153,154
  153 READ(IO4)((SSC(KK,K),KK=1,KMAX),K=1,KMAX)
      ISNL = 1
      GO TO 155
  154 READ(IO4)
  155 CONTINUE
      IF (ISNL.EQ.0) GO TO 159
  156 CONTINUE
      DO 158 K = 1,KMAX
      DO 157 KK = 1,KMAX
      SCAC(KK,NS+2,K) = SSC(KK,K)
  157 CONTINUE
  158 CONTINUE
  159 CONTINUE
      REWIND IO4
      REWIND IO26
      IDN = -1
      DO 164 K = 1,KMAX
      IX(43) = K
      IX(42) = 1
      IX(20) = K
      READ(IO26) P1E
      IF (IX37.EQ.0) GO TO 160
      IX(20) = 1
      READ(IO15) AIO
  160 CONTINUE
      REWIND IO19
      DO 163 KB = 1,KBMAX
      DO 162 I = 1,IMAX
      DO 161 J = 1,JMAX
      READ(IO19) SSC
      CALL PURT(SCAC,BAL,NRGNE,NCOMP,P1E,P2E,SIG, A(KPVOL),A(K65),A(K64)
     >  ,A(K66), ONEOV, BIGD, IDN, XII, A(K51),A(K50), IVX,JVX,KBVX,KVX,
     >  LVX,MVX, NSETVX,IVXP1,JVXP1,KBVXP1,IVZ,KVZ, JIVX,JIP1VX,JP1IXZ,
     > IOVX,IOVZ, MVZ,SSC)
      CALLNMAP(SCAC,BAL,NRGNE,NCOMP,SIG,SOURE,MJJR, A(K1),A(K2),A(K3),
     > A(K4), IVX,JVX,KBVX,KVX,LVX,MVX,NVX,NSETVX,MVZ,SSC,BIGD,NN)
  161 CONTINUE
  162 CONTINUE
  163 CONTINUE
      WRITE(IO22) (((SOURE(J,I,KB),J=1,JMAX),I=1,IMAX),KB=1,KBMAX)
  164 CONTINUE
      IF (IX37.GT.0) REWIND IO15
  165 CONTINUE
      REWIND IO26
      REWIND IO19
      REWIND IO22
      WRITE(IO3)(((P2E(JI,KB,K),JI=1,JIVX),KB=1,KBVX),K=1,KVX)
      REWIND IO3
      PSUM = 0.0
      CALL RFLX(P2E,SOURE,NRGNE,A(KPVOL),PSUM,JVX,IVX,KBVX,KVX,JIVX,LVX)
      REWIND IO22
      READ(IO3)(((P2E(JI,KB,K),JI=1,JIVX),KB=1,KBVX),K=1,KVX)
      REWIND IO3
      DO 168 KB = 1,KBMAX
      DO 167 I = 1,IMAX
      DO 166 J = 1,JMAX
      L = NRGNE(J,I,KB)
      M = NCOMP(L)
      NACT = NXSET(M)
      NSET = NXODR(NACT)
      N = MJJR(NN,NSET)
      SOURE(J,I,KB) = SOURE(J,I,KB)*CONC(N,M)
  166 CONTINUE
  167 CONTINUE
  168 CONTINUE
      IND = 6
      IF (NUAC(5).GT.10) GO TO 169
      CALL POUT(P2,A(K41),IND,SOURE,IVX,JVX,KBVX,KVX)
      GO TO 170
  169 CONTINUE
      CALL KOUT(P2E,A(K41),IND,SOURE,IVX,JVX,KBVX,KVX,JIVX)
  170 CONTINUE
      IF (IXPUT(36).EQ.0) GO TO 174
      IND = 9
      KPOINT = 1
      CALL TCOF(SIG,A(K15),A(K1),A(K2),A(K3),A(K4),A(K5),CONC,A(K9),
     > SOURE,A(K12),SSC,BAL,SCAC,NRGNE,NCOMP,P1E,P2E,A(KPVOL),A(K65),
     > A(K64),A(K66),ONEOV,BIGD,XII,A(K51),A(K50), IVX,JVX,KBVX, KVX,
     > LVX,MVX,NVX,NSETVX,IVXP1, JVXP1,KBVXP1,IVZ,KVZ, KPOINT,MNPR,
     > JIVX,JIP1VX,JP1IXZ,IOVX,IOVZ, A,MEMORY,AIO,IX3738,MVZ, A(K18),
     > A(K13))
      IF (MNPR.EQ.0) GO TO 174
      DO 173 N9 = 1,MNPR
      PSUM = 0.0
      CALL RFLX(P2E,SOURE,NRGNE,A(KPVOL),PSUM,JVX,IVX,KBVX,KVX,JIVX,LVX)
      WRITE(IOUT,1002)N9,PSUM
      IF (NUAC(5).GT.10) GO TO 171
      CALL POUT(P2,A(K41),IND,SOURE,IVX,JVX,KBVX,KVX)
      GO TO 172
  171 CONTINUE
      CALL KOUT(P2E,A(K41),IND,SOURE,IVX,JVX,KBVX,KVX,JIVX)
  172 CONTINUE
  173 CONTINUE
      REWIND IO22
  174 CONTINUE
      REWIND IOFLX
      DO 176 K=1,KMAX
      IF (NUAC(5).GT.10) GO TO 175
      READ(IOFLX)((P2(J,I,K),J=1,JMAX),I=1,IMAX)
      GO TO 176
  175 READ(IOFLX) ((P2E(N1,KB,K),N1=1,JIVX),KB=1,KBMAX)
  176 CONTINUE
      REWIND IOFLX
C     FORWARD FLUX NOW IN CORE
  177 CONTINUE
      RETURN
 1000 FORMAT('1',18A4)
 1001 FORMAT(1X,18A4)
 1002 FORMAT('0DELTA-K/K BY SPACE POINT FOR PERTURBATION SPECIFICATION',
     > I3,' VOLUME INTEGRAL IS',1PE13.5)
 1003 FORMAT('0PERTURBATION RESULTS---DELTA-K/(K*DELTA-S) WHERE S REPRES
     >ENTS MACRO. CROSS SECTIONS.     LAMBDA(PHI* M PHI) =',1PE14.6)
 1004 FORMAT('0 COMP     NAME     GRP  SIGA,SIGR,DB**2    NU*SIGF      D
     >IFF. COEF.       B**2')
 1005 FORMAT(1X,I4,2X,3A4,I3,1PE17.6,4E15.6)
 1006 FORMAT(1X,I21,1PE17.6,4E15.6)
 1007 FORMAT('0'/'0 COMP     NAME     GRP. K --- SIGS(FROM ALL GRPS. KK
     >TO GRP. K)')
 1008 FORMAT(1X,I4,2X,3A4,I4,1P7E14.6/(24X,7E14.6))
 1009 FORMAT(1X,18X,I4,1P7E14.6/(24X,7E14.6))
 1010 FORMAT('0PROMPT-NEUTRON LIFETIME IS',1PE13.5,'  SEC.')
      END
CCNST --101 ***CITATION*** EQ. CNSTS. FOR 1,2-D/ CF-EIGN
      SUBROUTINE CNST(NRGN, SCAC,DCONB, DCONR,F1, SIG,PTSA,NCOMP,PVOL,
     > BBND,BND, IVX,JVX,KVX,LVX,MVX,IVXP1,JVXP1, IVZ,KVZ, IOVX,IOVZ,A,
     > MEMORY,AIO,IX3738)
C
      DOUBLE PRECISION TPTSA,D1,D2,D3,D4,D5,D6,D7
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AMESH/BMESH(30),NREGI,NREGJ,NREGKB,XSHI(100),XSHJ(100),
     > XSHKB(100), MSHI(100),MSHJ(100),MSHKB(100),Y(211),YY(211), X(211)
     >  ,XX(211),Z(211),ZZ(211), ZONVOL(200),AVZPD(200),PDI(211),
     > PDJ(211) , PDK(211)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     >  , XNAME(3,200)
C
      DIMENSION NRGN(JVX,IVX), SCAC(KVX,MVX,KVX),DCONB(JVX,IVXP1,IOVX),
     > DCONR(JVXP1,IVZ,IOVZ), F1(KVX,MVX),SIG(KVX,MVX,10),PTSA(JVX,IVX,
     > IOVX)
      DIMENSION NCOMP(LVX),PVOL(LVX)
      DIMENSION BBND(KVX),BND(6,KVX)
      DIMENSION AIO(IX3738)
      DIMENSION A(MEMORY)
C     INRB = 1  ORDINARY
C     INRB = 2  PERIODIC(REPEATING)
C     INRB = 3  90 DEGREE ROTATIONAL
C     INRB = 4  180 DEGREE ROTATIONAL
      INRB=IX(72)+1
      KMAXP1 = KMAX + 1
      IO14 = IX(81)
      REWIND IO14
      GO TO (107,107,102,100),INRB
  100 I=IVX/2
      DO 101J=1,I
      K=IVX+1-J
      TAL=(YY(J)-Y(J))/(Y(K)-YY(K+1))
      IF (NUAC(5).EQ.10) TAL=(PDI(I)-YY(I))/(YY(K+1)-Y(K))
      EPICH = ABS(TAL-1.0)
      IF (EPICH.GT.1.0E-4) GO TO 103
  101 CONTINUE
      GO TO 107
  102 CONTINUE
      IDA = IVX
      IF (NUAC(5).EQ.10) IDA = 2*IVX
      IF (JVX.EQ.IDA) GO TO 104
  103 JB=32
      WRITE(IOUT,1000) JB,I,J
      STOP
  104 CONTINUE
      J = 1
      DO 106 I = 1,IVX
      TAL=Y(I)/X(I)
      IF (NUAC(5).NE.10.OR.I.EQ.1) GO TO 105
      J=J+2
      TAL=(Y(I)-PDI(I-1))/(X(J)-X(J-1))
  105 EPICH = ABS(TAL - 1.0)
      IF (EPICH.GT.1.0E-4) GO TO 103
  106 CONTINUE
  107 CONTINUE
      IX37 = IX(37)
      IX38 = IX(38)
      IO15 = IX(82)
      IOADJ = IO15
      IF (IX(71).GT.0) IOADJ = IO2
      IF (IX37.GT.0) REWIND IOADJ
      IF (IX(71).GT.0) IX(5) = IX(17)
      EPICH=1.0E-5
      SPARE(51) = -1.0E+30
      SPARE(57) = -1.0E+30
      N17 = NUAC(17)
      SQUIRE=1.1547005
      IF (N17) 114,114,108
  108 IF (XMIS(2)) 114,109,109
  109 DO 113 K = 1,KMAX
      IF (XMIS(2)) 113,110,111
  110 T1 = 0.4692
      GO TO 112
  111 T1 = XMIS(2)
  112 BBND(K) = T1
  113 CONTINUE
  114 CONTINUE
      NDIM = IX(25)
      NGEM = IX(26)
      PI = 3.141593
      IF (IX37.GT.0) GO TO 121
      DO 117 K = 1,IOVX
      DO 116 I = 1,IVXP1
      DO 115 J = 1,JVX
      DCONB(J,I,K) = 0.0
  115 CONTINUE
  116 CONTINUE
  117 CONTINUE
      DO 120 K = 1,IOVZ
      DO 119 I = 1,IVZ
      DO 118 J = 1,JVXP1
      DCONR(J,I,K) = 0.0
  118 CONTINUE
  119 CONTINUE
  120 CONTINUE
  121 CONTINUE
  122 CONTINUE
      SPARE(98) = 0.0
      DO 134 K = 1,KMAX
      READ(IO14) ((F1(KK,M),KK=1,KMAX),M=1,MMAX)
      DO 133 M=1,MMAX
      IF (M-N17) 128,123,128
  123 IF (XMIS(2)) 124,125,125
  124 IF (BBND(K)) 125,128,125
  125 DO 126 L=1,10
      SIG(K,M,L) = 0.0
  126 CONTINUE
      DO 127 KK = 1,KMAX
      SCAC(K,M,KK) = 0.0
  127 CONTINUE
      GO TO 133
  128 CONTINUE
      SIG(K,M,9) = SIG(K,M,1)*SIG(K,M,6)
      SPARE(98) = SPARE(98) + SIG(K,M,8)
C***************************SEARCH OPTIONS******************************
      IF (IX(5).NE.-2) GO TO 131
      IF ((IX(44).EQ.0).AND.(IX(49).EQ.0)) GO TO 130
      IF (IX(49).GT.0) GO TO 129
      IF ((M.EQ.IX(44)).OR.(M.EQ.IX(45)).OR.(M.EQ.IX(46))
     > .OR.(M.EQ.IX(47)).OR.(M.EQ.IX(48))) GO TO 130
      GO TO 131
  129 IF (IX(49).NE.NCLASS(M)) GO TO 131
  130 SIG(K,M,5) = SIG(K,M,9)
      SIG(K,M,9) = 0.0
  131 CONTINUE
      DO 132 KK = 1,KMAX
      SCAC(K,M,KK) = F1(KK,M)
  132 CONTINUE
  133 CONTINUE
  134 CONTINUE
      REWIND IO14
      T1 = 0.0
      DO 141 K = 1,KMAX
      DO 140 M=1,MMAX
      TPTSA=0.D+0
      DO 135 KK = 1,KMAX
      TPTSA = TPTSA + SCAC(K,M,KK)
  135 CONTINUE
      SIG(K,M,2) = TPTSA
      TPTSA = TPTSA + SIG(K,M,3) + SIG(K,M,9)
      SIG(K,M,10) = TPTSA
      SIG(K,M,3) = SIG(K,M,10) - SIG(K,M,2) - SIG(K,M,9)
      IF ((SIG(K,M,10).EQ.0.0).OR.(SIG(K,M,5).EQ.0.0)) GO TO 136
      SPARE(51) = AMAX1(SPARE(51),SIG(K,M,5)/SIG(K,M,10))
C****************************SEARCH OPTIONS*****************************
  136 CONTINUE
      IF (IX(5).EQ.(-5)) GO TO 139
      IF ((IX(5).EQ.0).OR.(IX(5).GE.2)) GO TO 139
      IF ((IX(44).EQ.0).AND.(IX(49).EQ.0)) GO TO 138
      IF (IX(49).GT.0) GO TO 137
      IF ((M.EQ.IX(44)).OR.(M.EQ.IX(45)).OR.(M.EQ.IX(46))
     > .OR.(M.EQ.IX(47)).OR.(M.EQ.IX(48))) GO TO 138
      GO TO 139
  137 IF (IX(49).NE.NCLASS(M)) GO TO 139
  138 T1 = T1 + SIG(K,M,5)
  139 CONTINUE
  140 CONTINUE
  141 CONTINUE
C****************************SEARCH OPTIONS*****************************
      IF (IX(5).EQ.(-5)) GO TO 143
      IF ((IX(5).EQ.0).OR.(IX(5).GE.2)) GO TO 143
  142 IF (T1.NE.0.0) GO TO 143
      JB = 16
      WRITE(IOUT,1000) JB
      STOP
  143 CONTINUE
      DO 243 KT1=1,KMAX
      K = KT1
      N = KT1
      IF (IX37.EQ.0) GO TO 149
      N = 1
      IF (IX(71).GT.0) K= KMAXP1 - KT1
      DO 145 I = 1,IVXP1
      DO 144 J = 1,JVX
      DCONB(J,I,1) = 0.0
  144 CONTINUE
  145 CONTINUE
      DO 148 K1= 1,IOVZ
      DO 147 I = 1,IVX
      DO 146 J = 1,JVXP1
      DCONR(J,I,K1)= 0.0
  146 CONTINUE
  147 CONTINUE
  148 CONTINUE
  149 CONTINUE
      DO 230 I = 1,IMAX
      T1 = YY(I+1)-YY(I)
      DELTT = 0.0
      IF (I-1) 151,151,150
  150 DELTT = YY(I)-Y(I-1)
      IF (NGEM.EQ.10) DELTT = YY(I)-PDI(I-1)
  151 DELT = Y(I)-YY(I)
      DELB = YY(I+1)-Y(I)
      IF (NGEM.EQ.10) DELB = YY(I+1)-PDI(I)
      DELBB = 0.0
      IF (I-IMAX) 152,153,153
  152 DELBB = Y(I+1)-YY(I+1)
  153 CONTINUE
      DO 229 J = 1,JMAX
      N2 = J
      NRN = NRGN(J,I)
      NOE = J-(J/2)*2
      DELLL = 0.0
      IF (J-1) 155,155,154
  154 DELLL = XX(J)-X(J-1)
      IF (NGEM.EQ.10) N2 = N2-1
  155 DELL = X(J)-XX(J)
      DELR = XX(J+1)-X(J)
      DELRR = 0.0
      IF (J-JMAX) 156,157,157
  156 DELRR = X(J+1)-XX(J+1)
  157 CONTINUE
      GO TO (163,164,166,169,169,163,164,165,158,167),NGEM
  158 TAT=SQUIRE*DELT
      TAL=SQUIRE*DELL
      TAR=DELR+DELL
      TAB=DELB+DELT
      TD1 = X(J+1)-X(J)
  159 TD2 = Y(I)-Y(I-1)
      IF (I.EQ.1) TD2 = 2*Y(I)
      IF (J.EQ.JMAX) TD1 = TD2
      DELHT = 0.5*SQRT(TD1**2+TD2**2-TD1*TD2)
      DELHB = DELHT
      TAR=TAL
      TAB=TAT
      TAH=SQUIRE*DELHT
      MH=0
      IF (J-JMAX) 160,162,162
  160 IF (I-1) 162,162,161
  161 NHN=NRGN(J+1,I-1)
      MH=NCOMP(NHN)
  162 GO TO 169
  163 TAL = T1
      TAR = T1
      TAT = XX(J+1)-XX(J)
      TAB = TAT
      GO TO 169
  164 TAL = 2.0*PI*XX(J)*T1
      TAR = 2.0*PI*XX(J+1)*T1
      TAT = PI*(XX(J+1)**2-XX(J)**2)
      TAB = TAT
      GO TO 169
  165 TAL = T1
      TAR = T1
      TAT = YY(I)*(XX(J+1)-XX(J))
      TAB = YY(I+1)*(XX(J+1)-XX(J))
      DELR = DELR*Y(I)
      DELRR = DELRR*Y(I)
      DELL = DELL*Y(I)
      DELLL = DELLL*Y(I)
      GO TO 169
  166 TAL = 4.0*PI*XX(J)**2
      TAR = 4.0*PI*XX(J+1)**2
      TAT = 0.0
      TAB = 0.0
      GO TO 169
  167 CONTINUE
      TAL = 3.46410*(X(J)-XX(J))
C     2*SQRT(3) = 3.46410
      TAR = 3.46410*(XX(J+1)-X(J))
      IF (NOE.EQ.0) GO TO 168
      TAT = 3.46410*(Y(I)-YY(I))
      TAB = 0.0
      GO TO 169
  168 CONTINUE
      TAB = 3.46410*(YY(I+1)-PDI(I))
      TAT = 0.0
  169 CONTINUE
      M = NCOMP(NRN)
      IF (I.EQ.1) GO TO 170
      NRNT = NRGN(J,I-1)
      IF ((NGEM.EQ.10).AND.(J.LT.JMAX)) NRNT = NRGN(J+1,I-1)
      MT = NCOMP(NRNT)
  170 IF (J.EQ.1) GO TO 171
      NRNL = NRGN(J-1,I)
      ML = NCOMP(NRNL)
      GO TO 172
  171 IF (INRB.NE.2) GO TO 172
      NRNL = NRGN(JMAX,I)
      ML = NCOMP(NRNL)
  172 IF (I.EQ.IMAX) GO TO 173
      NRNB = NRGN(J,I+1)
      IF ((NGEM.EQ.10).AND.(J.GT.1)) NRNB = NRGN(J-1,I+1)
      MB = NCOMP(NRNB)
      GO TO 174
  173 IF (INRB.NE.3) GO TO 174
      NRNB=NRGN(JVX,J)
      IF (NGEM.EQ.10) NRNB = NRGN(JVX,J/2)
      MB=NCOMP(NRNB)
      DELB=XX(JVXP1)-X(JVX)
  174 IF (J.EQ.JMAX) GO TO 175
      NRNR = NRGN(J+1,I)
      MR = NCOMP(NRNR)
      GO TO 179
  175 GO TO (179,176,177,178),INRB
  176 CONTINUE
      NRNR = NRGN(1,I)
      MR = NCOMP(NRNR)
      DELRR = X(1)
      IF(NGEM.EQ.8) DELRR = DELRR*Y(I)
      GO TO 179
  177 CONTINUE
      NRNR=NRGN(I,IVX)
      IF (NGEM.EQ.10) NRNR = NRGN(2*I,IVX)
      MR=NCOMP(NRNR)
      DELRR=YY(IVXP1)-Y(IVX)
      IF (NGEM.EQ.10) DELRR = YY(IVXP1)-PDI(IVX)
      GO TO 179
  178 CONTINUE
      NRNR=NRGN(JVX,IVXP1-I)
      MR=NCOMP(NRNR)
      DELRR=DELR
  179 CONTINUE
      IF (M.NE.N17) GO TO 180
      IF (XMIS(2).GE.0.0) GO TO 196
      IF (BBND(K).NE.0.0) GO TO 196
  180 IF (I.GT.1) GO TO 181
      DCONB(J,I,N) = BND(2,K)*TAT/ (1.0+DELT*BND(2,K)/SIG(K,M,1))
  181 IF (J.GT.1) GO TO 182
      IF (INRB.EQ.2) GO TO 182
      DCONR(J,I,N) = BND(1,K)*TAL/ (1.0+DELL*BND(1,K)/SIG(K,M,1))
  182 IF (I.LT.IMAX) GO TO 183
      DCONB(N2,I+1,N) = BND(4,K)*TAB/ (1.0+DELB*BND(4,K)/SIG(K,M,1))
      IF (DCONB(N2,I+1,N).EQ.0.0) DCONB(N2,I+1,N) = 4096.0E-13
  183 IF (J.LT.JMAX) GO TO 184
      IF (INRB.GT.1) GO TO 184
      DCONR(J+1,I,N) = BND(3,K)*TAR/ (1.0+DELR*BND(3,K)/SIG(K,M,1))
      IF (DCONR(J+1,I,N).EQ.0.0) DCONR(J+1,I,N) = 4096.0E-13
      GO TO 185
  184 DCONR(J+1,I,N) = SIG(K,MR,1)*TAR/(DELRR+SIG(K,MR,1)*DELR/ SIG(K,M,
     >  1))
      IF (DCONR(J+1,I,N).EQ.0.0) DCONR(J+1,I,N) = 4096.0E-13
  185 IF (I.GE.IMAX) GO TO 186
      DCONB(N2,I+1,N)= TAB*SIG(K,MB,1)/(DELBB+DELB*SIG(K,MB,1)/ SIG(K,M,
     >  1))
      IF (DCONB(N2,I+1,N).EQ.0.0) DCONB(N2,I+1,N) = 4096.0E-13
  186 CONTINUE
      IF (N17.LE.0) GO TO 196
      IF (XMIS(2).GE.0.0) GO TO 187
      IF (BBND(K).EQ.0.0) GO TO 196
  187 IF (IMAX.LE.1) GO TO 192
      IF (I.NE.IMAX) GO TO 189
      IF (INRB.NE.3) GO TO 190
      IF (MB.NE.N17) GO TO 190
      DCONB(J,I+1,N) = BBND(K)*TAB/(1.0+DELB*BBND(K)/SIG(K,M,1))
      IF (DCONB(J,I+1,N).EQ.0.0) DCONB(J,I+1,N) = 4096.0E-13
      IF (NGEM.EQ.10) GO TO 188
      DCONR(JVXP1,I,N)=DCONB(J,I+1,N)
      GO TO 190
  188 CONTINUE
      IF ((J/2)*2.NE.J) GO TO 190
      DCONR(JVXP1,J/2,N) = DCONB(N2,I+1,N)
      GO TO 190
  189 IF (MB.NE.N17) GO TO 190
      DCONB(N2,I+1,N) = BBND(K)*TAB/(1.0+DELB*BBND(K)/SIG(K,M,1))
      IF (DCONB(N2,I+1,N).EQ.0.0) DCONB(N2,I+1,N) = 4096.0E-13
  190 IF (I.EQ.1) GO TO 192
  191 IF (MT.NE.N17) GO TO 192
      DCONB(J,I,N) = BBND(K)*TAT/(1.0+DELT*BBND(K)/SIG(K,M,1))
  192 CONTINUE
      IF (JMAX.LE.1) GO TO 196
      IF (J.LT.JMAX) GO TO 193
      IF (INRB.LE.1) GO TO 195
  193 IF (MR.NE.N17) GO TO 194
      DCONR(J+1,I,N) = BBND(K)*TAR/(1.0+DELR*BBND(K)/SIG(K,M,1))
      IF (DCONR(J+1,I,N).EQ.0.0) DCONR(J+1,I,N) = 4096.0E-13
      IF (INRB.EQ.4) DCONR(JVXP1,IVXP1-I,N)=DCONR(JVXP1,I,N)
  194 IF (J.GT.1) GO TO 195
      IF (INRB.NE.2) GO TO 196
      IF (ML.NE.N17) GO TO 196
      DCONR(JVXP1,I,N) = BBND(K)*TAL/(1.0+DELL*BBND(K)/SIG(K,M,1))
      IF (DCONR(JVXP1,I,N).EQ.0.0) DCONR(JVXP1,I,N) = 4096.0E-13
      GO TO 196
  195 IF (ML.NE.N17) GO TO 196
      DCONR(J,I,N) = BBND(K)*TAL/(1.0+DELL*BBND(K)/SIG(K,M,1))
      IF (DCONR(J,I,N).EQ.0.0) DCONR(J ,I,N) = 4096.0E-13
  196 IF (NGEM.NE.9) GO TO 228
  197 KKK = IOVX+N
      IF (N17) 198,198,199
  198 CONTINUE
      IF (J.EQ.JMAX) GO TO 209
      IF (I.EQ.1) GO TO 224
      DCONR(J+1,I,KKK)=TAH*SIG(K,MH,1)/(DELHT+DELHB*SIG(K,MH,1)/SIG(K,M,
     >  1))
      GO TO 208
  199 IF (XMIS(2)) 200,202,202
  200 IF (BBND(K)) 198,198,202
  201 DCONR(J+1,I,KKK)=0
      GO TO 208
  202 IF (MH-N17) 205,203,205
  203 IF (M-N17) 204,201,204
  204 DCONR(J+1,I,KKK)=BBND(K)*TAH/(1.0+DELHT*BBND(K)/SIG(K,M,1))
      GO TO 208
  205 IF (M-N17) 198,206,198
  206 IF (MH) 201,201,207
  207 DCONR(J+1,I,KKK)=BBND(K)*TAH/(1.0+DELHB*BBND(K)/SIG(K,MH,1))
  208 IF (J-JMAX) 216,209,209
  209 DCONR(J+1,I,KKK)=0
      IF (I-1) 210,210,214
  210 IF (DCONR(J+1,I,N)-4096.0E-13) 211,212,211
  211 DCONR(J+1,I,N)=1.5*DCONR(J+1,I,N)/SQUIRE
  212 IF (DCONB(J,I,N)-4096.0E-13) 213,224,213
  213 DCONB(J,I,N)=1.5*DCONB(J,I,N)/SQUIRE
      GO TO 224
  214 IF (DCONR(J+1,I,N)-4096.0E-13) 215,216,215
  215 DCONR(J+1,I,N)=2.0*DCONR(J+1,I,N)/SQUIRE
  216 IF (I-IMAX) 224,217,217
  217 DCONR(J,I+1,KKK)=0
      IF (J-1) 218,218,222
  218 IF (DCONR(J,I,N)-4096.0E-13) 219,220,219
  219 DCONR(J,I,N)=1.5*DCONR(J,I,N)/SQUIRE
  220 IF (DCONB(J,I+1,N)-4096.0E-13) 221,224,221
  221 DCONB(J,I+1,N)=1.5*DCONB(J,I+1,N)/SQUIRE
      GO TO 224
  222 IF (DCONB(J,I+1,N)-4096.0E-13) 223,224,223
  223 DCONB(J,I+1,N)=2.0*DCONB(J,I+1,N)/SQUIRE
  224 IF (I-1) 225,225,226
  225 DCONR(J+1,I,KKK)=0
      IF (J.NE.JMAX) DCONB(J,1,N) = 2.0*DCONB(J,1,N)/SQUIRE
  226 IF (J-1) 227,227,228
  227 DCONR(J,I+1,KKK)=0
      IF (I.NE.IMAX) DCONR(1,I,N) = 2.0*DCONR(1,I,N)/SQUIRE
  228 CONTINUE
  229 CONTINUE
  230 CONTINUE
      GO TO (237,235,233,231),INRB
  231 I=IVX/2
      DO 232LL=1,I
      DCONR(JVXP1,IVXP1-LL,N)=DCONR(JVXP1,LL,N)
  232 CONTINUE
      GO TO 237
  233 DCONR(JVXP1,IVX,N)=4096.0E-13
      LJ = 1
      DO 234 LL = 1,IVX
      DCONB(LJ,IVXP1,N) = DCONR(JVXP1,LL,N)
      LJ = LJ+1
      IF (NGEM.EQ.10) LJ = LJ+1
  234 CONTINUE
      GO TO 237
  235 DO 236I=1,IVX
      DCONR(1,I, N )=DCONR(JVXP1,I,N)
  236 CONTINUE
  237 CONTINUE
      DO 242 I=1,IMAX
      DO 241 J=1,JMAX
      NRN = NRGN(J,I)
      M = NCOMP(NRN)
      D1 = DCONB(J,I,N)
      D2 = DCONB(J,I+1,N)
      IF (NGEM.NE.10) GO TO 238
      D2 = 0.0
      IF (J.EQ.1) GO TO 238
      D2 = DCONB(J-1,I+1,N)
  238 CONTINUE
      D3 = DCONR(J,I,N)
      D4 = DCONR(J+1,I,N)
      D7 = SIG(K,M,10)
      TPTSA = D1 + D2 + D3 + D4 + D7*PVOL(NRN)
      IF (NGEM.NE.9) GO TO 239
      D5 = DCONR(J,I+1,KKK)
      D6 = DCONR(J+1,I,KKK)
      TPTSA = TPTSA+D5+D6
  239 CONTINUE
      PTSA(J,I,N)=TPTSA
      IF ((TPTSA.EQ.0.0).OR.(SIG(K,M,5).EQ.0.0)) GO TO 240
      SPARE(57) = AMAX1(SPARE(57),SIG(K,M,5)*PVOL(NRN)/PTSA(J,I,N))
  240 CONTINUE
  241 CONTINUE
  242 CONTINUE
      IF (IX37.EQ.0) GO TO 243
      WRITE(IOADJ) AIO
  243 CONTINUE
      IF (IX37.EQ.0) GO TO 244
      REWIND IOADJ
  244 CONTINUE
C     DIAGONAL SYMMETRY CHECKOUT
      IF (IX(71).GT.0) GO TO 262
      IF (NUAC(8)) 247,262,245
  245 IF (IMAX-JMAX) 246,254,246
  246 NUAC(8)=0
      WRITE(IOUT,1001)
      GO TO 261
  247 II=IMAX/2
      DO 253 N = 1,KMAX
      K = N
      IF (IX37.EQ.0) GO TO 248
      K =1
      READ(IO15) AIO
  248 CONTINUE
      DO 252I=1,II
      L=IMAX-I+1
      DO 251J=1,JMAX
      M=JMAX-J+1
      MT=NRGN(J,I)
      ML=NRGN(M,L)
      IF (NCOMP(MT)-NCOMP(ML)) 246,249,246
  249 CONTINUE
      IF (PTSA(J,I,K).EQ.0.0) GO TO 250
      IF (ABS(PTSA(M,L,K)/PTSA(J,I,K)-1.0)-EPICH) 250,246,246
  250 CONTINUE
  251 CONTINUE
  252 CONTINUE
  253 CONTINUE
      GO TO 261
  254 CONTINUE
      DO 260 N = 1,KMAX
      K = N
      IF (IX37.EQ.0) GO TO 255
      K = 1
      READ(IO15) AIO
  255 CONTINUE
      DO 259 I = 1,IMAX
      DO 258J=I,JMAX
      MT=NRGN(J,I)
      ML=NRGN(I,J)
      IF (NCOMP(MT)-NCOMP(ML)) 246,256,246
  256 CONTINUE
      IF (PTSA(I,J,K).EQ.0.0) GO TO 257
      IF (ABS(PTSA(J,I,K)/PTSA(I,J,K)-1.0)-EPICH) 257,246,246
  257 CONTINUE
  258 CONTINUE
  259 CONTINUE
  260 CONTINUE
      NUAC(20)=1
  261 CONTINUE
      IF (IX37.GT.0) REWIND IO15
  262 CONTINUE
      IF (SPARE(51).NE.0.0) SPARE(51) = -1.0/SPARE(51)
      IF (SPARE(57).NE.0.0) SPARE(57) = -1.0/SPARE(57)
      IF (IX(71).GT.0) IX(5)= 0
      RETURN
 1000 FORMAT('0ERROR STOP',4I6)
 1001 FORMAT('0DIAGONAL SYMMETRY OPTION DENIED')
      END
CKNST --117 ***CITATION*** EQ. CONSTANTS FOR 3-D/ CF-EIGN
      SUBROUTINE KNST(NRGNE, SCAC,DCONBE,DCONRE, DCONBK,F1,SIG,PTSAE,
     > NCOMP,PVOL,BBND,BND, IVX,JVX,KBVX,KVX,LVX, MVX,IVXP1,JVXP1,
     > KBVXP1,IVZ,KVZ, JIVX,JIP1VX,JP1IXZ,IOVX,IOVZ,A, MEMORY,AIO,
     > IX3738)
C
      DOUBLE PRECISION TPTSA,D1,D2,D3,D4,D5,D6,D7,D8,D9
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AMESH/BMESH(30),NREGI,NREGJ,NREGKB,XSHI(100),XSHJ(100),
     > XSHKB(100), MSHI(100),MSHJ(100),MSHKB(100),Y(211),YY(211), X(211)
     >  ,XX(211),Z(211),ZZ(211), ZONVOL(200),AVZPD(200),PDI(211),
     > PDJ(211) , PDK(211)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     >  , XNAME(3,200)
C
      DIMENSION NRGNE(JVX,IVX,KBVX), SCAC(KVX,MVX,KVX),DCONBE(JIP1VX ,
     > KBVX,IOVX),DCONRE(JP1IXZ , KBVX, IOVZ),DCONBK(JIVX ,KBVXP1,IOVX),
     >  F1(KVX ,MVX),SIG(KVX, MVX,10), PTSAE(JIVX ,KBVX,IOVX)
      DIMENSION NCOMP(LVX),PVOL(LVX)
      DIMENSION BBND(KVX),BND(6,KVX)
      DIMENSION A(MEMORY)
      DIMENSION AIO(IX3738)
CCCCC ********* SUBSCRIPT DEFINITIONS (KNST E-010) ********* CCCCC
C    NEW         OLD            NEW         OLD
C     N1         J,I             N5 *       J,I+1
C     N2         J,I+1           N6         J,I
C     N3 *       J,I             N7         M,L
C     N4 *     J+1,I             N8         I,J
C     N9 *       1,I             N10 *  JVX+1,I
C     N11 *  JVXP1,IVXP1-I       N12 *  JVXP1,I
C     N14        J,IVXP1         N15 *      1,I
C     N2       J-1,I+1 FOR TRIANGULAR ONLY
C  THE * ABOVE REFERS TO INDEXING IN ARRAYS LARGER THAN JVX X IVX
C     INRB = 1  ORDINARY
C     INRB = 2  PERIODIC(REPEATING)
C     INRB = 3  90 DEGREE ROTATIONAL
C     INRB = 4  180 DEGREE ROTATIONAL
      INRB=IX(72)+1
      KMAXP1 = KMAX + 1
      IX72 = IX(72)
      IX37 = IX(37)
      IX38 = IX(38)
      IO15 = IX(82)
      IOADJ = IO15
      IF (IX(71).GT.0) IOADJ = IO2
      IF (IX37.GT.0) REWIND IOADJ
      IF (IX(71).GT.0) IX(5) = IX(17)
      IO14 = IX(81)
      REWIND IO14
      GO TO (107,107,102,100),INRB
  100 I=IVX/2
      DO 101J=1,I
      K=IVX+1-J
      TAL=(YY(J)-Y(J))/(Y(K)-YY(K+1))
      IF (NUAC(5).EQ.14) TAL=(PDI(I)-YY(I))/(YY(K+1)-Y(K))
      EPICH = ABS(TAL-1.0)
      IF (EPICH.GT.1.0E-4) GO TO 103
  101 CONTINUE
      GO TO 107
  102 CONTINUE
      IDA = IVX
      IF (NUAC(5).EQ.14) IDA = 2*IVX
      IF (JVX.EQ.IDA) GO TO 104
  103 CONTINUE
      JB = 32
      WRITE(IOUT,1000)JB,I,J
      return
  104 CONTINUE
      J = 1
      DO 106 I = 1,IVX
      TAL = Y(I)/X(I)
      IF ((NUAC(5).NE.14).OR.(I.EQ.1)) GO TO 105
      J = J+2
      TAL = (Y(I)-PDI(I-1))/(X(J)-X(J-1))
  105 CONTINUE
      EPICH = ABS(TAL-1.0)
      IF (EPICH.GT.1.0E-4) GO TO 103
  106 CONTINUE
  107 CONTINUE
      EPICH=1.0E-5
      SPARE(51) = -1.0E+30
      SPARE(57) = -1.0E+30
      N17 = NUAC(17)
      SQUIRE=1.1547005
      IF (N17) 114,114,108
  108 IF (XMIS(2)) 114,109,109
  109 DO 113 K = 1,KMAX
      IF (XMIS(2)) 113,110,111
  110 T1 = 0.4692
      GO TO 112
  111 T1 = XMIS(2)
  112 BBND(K) = T1
  113 CONTINUE
  114 CONTINUE
      NDIM = IX(25)
      NGEM = IX(26)
      PI = 3.141593
      IF (IX37.GT.0) GO TO 116
C**** ZERO DCONBE,DCONRE,DCONBK,PTSAE IF NO I/O
      NL = IX(169)
      NU = IX(170)
      DO 115 NIO=NL,NU
      A(NIO) = 0.0
  115 CONTINUE
C****
  116 CONTINUE
      SPARE(98) = 0.0
  117 DO 129 K = 1,KMAX
      READ(IO14) ((F1(KK,M),KK=1,KMAX),M=1,MMAX)
      DO 128 M=1,MMAX
      IF (M-N17) 123,118,123
  118 IF (XMIS(2)) 119,120,120
  119 IF (BBND(K)) 120,123,120
  120 DO 121 L=1,10
      SIG(K,M,L) = 0.0
  121 CONTINUE
      DO 122 KK = 1,KMAX
      SCAC(K,M,KK) = 0.0
  122 CONTINUE
      GO TO 128
  123 CONTINUE
      SIG(K,M,9) = SIG(K,M,1)*SIG(K,M,6)
      SPARE(98) = SPARE(98) + SIG(K,M,8)
C***************************SEARCH OPTIONS******************************
      IF (IX(5).NE.-2) GO TO 126
      IF ((IX(44).EQ.0).AND.(IX(49).EQ.0)) GO TO 125
      IF (IX(49).GT.0) GO TO 124
      IF ((M.EQ.IX(44)).OR.(M.EQ.IX(45)).OR.(M.EQ.IX(46))
     > .OR.(M.EQ.IX(47)).OR.(M.EQ.IX(48))) GO TO 125
      GO TO 126
  124 IF (IX(49).NE.NCLASS(M)) GO TO 126
  125 SIG(K,M,5) = SIG(K,M,9)
      SIG(K,M,9) = 0.0
  126 CONTINUE
      DO 127 KK = 1,KMAX
      SCAC(K,M,KK) = F1(KK,M)
  127 CONTINUE
  128 CONTINUE
  129 CONTINUE
      REWIND IO14
      T1 = 0.0
      DO 136 K = 1,KMAX
      DO 135 M=1,MMAX
      TPTSA=0.D+0
      DO 130 KK = 1,KMAX
      TPTSA = TPTSA + SCAC(K,M,KK)
  130 CONTINUE
      SIG(K,M,2) = TPTSA
      TPTSA = TPTSA + SIG(K,M,3) + SIG(K,M,9)
      SIG(K,M,10) = TPTSA
      SIG(K,M,3) = SIG(K,M,10) - SIG(K,M,2) - SIG(K,M,9)
      IF ((SIG(K,M,10).EQ.0.0).OR.(SIG(K,M,5).EQ.0.0)) GO TO 131
      SPARE(51) = AMAX1(SPARE(51),SIG(K,M,5)/SIG(K,M,10))
C****************************SEARCH OPTIONS*****************************
  131 CONTINUE
      IF (IX(5).EQ.(-5)) GO TO 134
      IF ((IX(5).EQ.0).OR.(IX(5).GE.2)) GO TO 134
      IF ((IX(44).EQ.0).AND.(IX(49).EQ.0)) GO TO 133
      IF (IX(49).GT.0) GO TO 132
      IF ((M.EQ.IX(44)).OR.(M.EQ.IX(45)).OR.(M.EQ.IX(46))
     > .OR.(M.EQ.IX(47)).OR.(M.EQ.IX(48))) GO TO 133
      GO TO 134
  132 IF (IX(49).NE.NCLASS(M)) GO TO 134
  133 T1 = T1 + SIG(K,M,5)
  134 CONTINUE
  135 CONTINUE
  136 CONTINUE
C****************************SEARCH OPTIONS*****************************
      IF (IX(5).EQ.(-5)) GO TO 138
      IF ((IX(5).EQ.0).OR.(IX(5).GE.2)) GO TO 138
  137 IF (T1.NE.0.0) GO TO 138
      JB = 16
      WRITE(IOUT,1000) JB
      return
  138 CONTINUE
      NEM = NGEM-10
      DO 250 KT1=1,KMAX
      K = KT1
      N = KT1
      IF (IX37.EQ.0) GO TO 140
      N = 1
      IF (IX(71).GT.0) K = KMAXP1 - KT1
C**** ZERO DCONBE,DCONRE,DCONBK,PTSAE IF I/O
      DO 139 NIO=IX37,IX38
      A(NIO) = 0.0
  139 CONTINUE
C****
  140 CONTINUE
      DO 233 KB = 1,KBMAX
      L = KB
      TB = ZZ(KB+1)-ZZ(KB)
      DELFR = 0.0
      IF (KB-1) 142,142,141
  141 DELFR = ZZ(KB)-ZZ(KB-1)
  142 DELF = Z(KB)-ZZ(KB)
      DELK = ZZ(KB+1)-Z(KB)
      DELBK = 0.0
      IF (KB-KBMAX) 143,144,144
  143 DELBK = Z(KB+1)-ZZ(KB+1)
  144 CONTINUE
      DO 232 I = 1,IMAX
      NN1= (I-1)*JVX
      NN2= (I-1)*JVXP1
      N12 = I*JVXP1
      T1 = YY(I+1)-YY(I)
      DELTT = 0.0
      IF (I-1) 146,146,145
  145 DELTT = YY(I)-Y(I-1)
      IF (NEM.EQ.4) DELTT = YY(I)-PDI(I-1)
  146 DELT = Y(I)-YY(I)
      DELB = YY(I+1)-Y(I)
      IF (NEM.EQ.4) DELB = YY(I+1)-PDI(I)
      DELBB = 0.0
      IF (I-IMAX) 147,148,148
  147 DELBB = Y(I+1)-YY(I+1)
  148 CONTINUE
      DO 231 J = 1,JMAX
      NRN = NRGNE(J,I,KB)
      NOE = J-(J/2)*2
      N1= NN1 + J
      N2 = N1 + JVX
      N3= NN2 + J
      N4 = N3 + 1
      N5 = N3 + JVXP1
      DELLL = 0.0
      IF (J-1) 150,150,149
  149 DELLL = XX(J)-X(J-1)
      IF (NEM.EQ.4) N2 = N2-1
  150 DELL = X(J)-XX(J)
      DELR = XX(J+1)-X(J)
      DELRR = 0.0
      IF (J-JMAX) 151,152,152
  151 DELRR = X(J+1)-XX(J+1)
  152 CONTINUE
      GO TO (159,158,153,160),NEM
  153 TAT=SQUIRE*DELT*TB
      TAL=SQUIRE*DELL*TB
      TAR=DELR+DELL
      TAB=DELB+DELT
      TD1 = X(J+1)-X(J)
  154 TD2 = Y(I)-Y(I-1)
      IF (I.EQ.1) TD2 = 2*Y(I)
      IF (J.EQ.JMAX) TD1 = TD2
      DELHT = 0.5*SQRT(TD1**2+TD2**2-TD1*TD2)
      DELHB = DELHT
      TAR=TAL
      TAB=TAT
      TAH=SQUIRE*DELHT*TB
      TABK=SQUIRE*(DELT**2+DELL**2+DELHT**2)
      TAF = TABK
      MH=0
      IF (J-JMAX) 155,157,157
  155 IF (I-1) 157,157,156
  156 NHN=NRGNE(J+1,I-1,KB)
      MH=NCOMP(NHN)
  157 GO TO 162
  158 T2 = XX(J+1)-XX(J)
      TAL = TB*T1
      TAR = TAL
      TAT = YY(I)*T2*TB
      TAB = YY(I+1)*T2*TB
      TAF = 0.5*(YY(I+1)**2-YY(I)**2)*T2
      TABK = TAF
      DELR = DELR*Y(I)
      DELRR = DELRR*Y(I)
      DELL = DELL*Y(I)
      DELLL = DELLL*Y(I)
      GO TO 162
  159 TAL = T1*TB
      TAR = TAL
      TAT = (XX(J+1)-XX(J))*TB
      TAB = TAT
      TAF = (XX(J+1)-XX(J))*T1
      TABK = TAF
      GO TO 162
  160 CONTINUE
      TAL = 3.46410*(X(J)-XX(J))*TB
C     2*SQRT(3) = 3.46410
      TAR = 3.46410*(XX(J+1)-X(J))*TB
      TAF = PVOL(NRN)/TB
      TABK = TAF
      IF (NOE.EQ.0) GO TO 161
      TAT = 3.46410*(Y(I)-YY(I))*TB
      TAB = 0.0
      GO TO 162
  161 CONTINUE
      TAB = 3.46410*(YY(I+1)-PDI(I))*TB
      TAT = 0.0
  162 CONTINUE
      M = NCOMP(NRN)
      IF (KB.EQ.1) GO TO 163
      NRNF = NRGNE(J,I,KB-1)
      MF = NCOMP(NRNF)
  163 IF (I.EQ.1) GO TO 164
      NRNT = NRGNE(J,I-1,KB)
      IF ((NEM.EQ.4).AND.(J.LT.JMAX)) NRNT = NRGNE(J+1,I-1,KB)
      MT = NCOMP(NRNT)
  164 IF (J.EQ.1) GO TO 165
      NRNL = NRGNE(J-1,I,KB)
      ML = NCOMP(NRNL)
      GO TO 166
  165 IF (INRB.NE.2) GO TO 166
      NRNL = NRGNE(JMAX,I,KB)
      ML = NCOMP(NRNL)
  166 IF (KB.EQ.KBMAX) GO TO 167
      NRNBK = NRGNE(J,I,KB+1)
      MBK = NCOMP(NRNBK)
  167 IF (I.EQ.IMAX) GO TO 168
      NRNB = NRGNE(J,I+1,KB)
      IF ((NEM.EQ.4).AND.(J.GT.1)) NRNB = NRGNE(J-1,I+1,KB)
      MB = NCOMP(NRNB)
      GO TO 169
  168 IF (INRB.NE.3) GO TO 169
      NRNB = NRGNE(JVX,J,KB)
      IF (NGEM.EQ.14) NRNB = NRGNE(JVX,J/2,KB)
      MB = NCOMP(NRNB)
      DELB = XX(JVXP1) - X(JVX)
  169 IF (J.EQ.JMAX) GO TO 170
      NRNR = NRGNE(J+1,I,KB)
      MR = NCOMP(NRNR)
      GO TO 174
  170 GO TO (174,171,172,173),INRB
  171 CONTINUE
      NRNR = NRGNE(1,I,KB)
      MR = NCOMP(NRNR)
      DELRR = X(1)
      IF(NGEM.EQ.2) DELRR = DELRR*Y(I)
      GO TO 174
  172 CONTINUE
      NRNR = NRGNE(I,IVX,KB)
      IF (NGEM.EQ.14) NRNR = NRGNE(2*I,IVX,KB)
      MR = NCOMP(NRNR)
      DELRR = YY(IVXP1) - Y(IVX)
      IF (NGEM.EQ.14) DELRR = YY(IVXP1)-PDI(IVX)
      GO TO 174
  173 CONTINUE
      NRNR = NRGNE(JVX,IVXP1-I,KB)
      MR = NCOMP(NRNR)
      DELRR = DELR
  174 CONTINUE
      IF (M.NE.N17) GO TO 175
      IF (XMIS(2).GE.0.0) GO TO 198
      IF (BBND(K).NE.0.0) GO TO 198
  175 IF (KB.GT.1) GO TO 176
      DCONBK(N1 ,KB,N) = BND(5,K)*TAF/(1.0+DELF*BND(5,K)/SIG(K,M,1))
  176 IF (I.GT.1) GO TO 177
      DCONBE(N1 ,KB,N) = BND(2,K)*TAT/(1.0+DELT*BND(2,K)/SIG(K,M,1))
  177 IF (J.GT.1) GO TO 178
      IF (INRB.EQ.2) GO TO 178
      DCONRE(N3 ,KB,N) = BND(1,K)*TAL/(1.0+DELL*BND(1,K)/SIG(K,M,1))
  178 IF (KB.LT.KBMAX) GO TO 179
      DCONBK(N1 ,KB+1,N) = BND(6,K)*TABK/(1.0+DELK*BND(6,K)/SIG(K,M,1))
      IF (DCONBK(N1,KB+1,N).EQ.0.0) DCONBK(N1 ,KB+1,N) = 4096.0E-13
  179 IF (I.LT.IMAX) GO TO 180
      DCONBE(N2 ,KB,N) = BND(4,K)*TAB/(1.0+DELB*BND(4,K)/SIG(K,M,1))
      IF (DCONBE(N2,KB,N).EQ.0.0) DCONBE(N2 ,KB,N) = 4096.0E-13
  180 IF (J.LT.JMAX) GO TO 181
      IF (INRB.GT.1) GO TO 181
      DCONRE(N4 ,KB,N) = BND(3,K)*TAR/(1.0+DELR*BND(3,K)/SIG(K,M,1))
      IF (DCONRE(N4,KB,N).EQ.0.0) DCONRE(N4 ,KB,N) = 4096.0E-13
      GO TO 182
  181 DCONRE(N4 ,KB,N) = TAR*SIG(K,MR,1)/(DELRR+DELR*SIG(K,MR,1)/ SIG(K,
     >  M,1))
      IF (DCONRE(N4,KB,N).EQ.0.0) DCONRE(N4 ,KB,N) = 4096.0E-13
  182 IF (I.GE.IMAX) GO TO 183
      DCONBE(N2 ,KB,N) = TAB*SIG(K,MB,1)/(DELBB+DELB*SIG(K,MB,1)/ SIG(K,
     >  M,1))
      IF (DCONBE(N2,KB,N).EQ.0.0) DCONBE(N2 ,KB,N) = 4096.0E-13
  183 IF (KB.GE.KBMAX) GO TO 184
      DCONBK(N1 ,KB+1,N) = TABK*SIG(K,MBK,1)/(DELBK+DELK*SIG(K,MBK,1)/
     > SIG(K,M,1))
      IF (DCONBK(N1,KB+1,N).EQ.0.0) DCONBK(N1 ,KB+1,N) = 4096.0E-13
  184 CONTINUE
      IF (N17.LE.0) GO TO 198
      IF (XMIS(2).GE.0.0) GO TO 185
      IF (BBND(K).EQ.0.0) GO TO 198
  185 IF (KBMAX.LE.1) GO TO 188
      IF (KB.EQ.KBMAX) GO TO 187
      IF (MBK.NE.N17) GO TO 186
      DCONBK(N1,KB+1,N) = BBND(K)*TABK/(1.0+DELK*BBND(K)/SIG(K,M,1))
      IF (DCONBK(N1,KB+1,N).EQ.0.0) DCONBK(N1 ,KB+1,N) = 4096.0E-13
  186 IF (KB.EQ.1) GO TO 188
  187 IF (MF.NE.N17) GO TO 188
      DCONBK(N1 ,KB,N) = BBND(K)*TAF/(1.0+DELF*BBND(K)/SIG(K,M,1))
  188 CONTINUE
      IF (IMAX.LE.1) GO TO 193
      IF (I.NE.IMAX) GO TO 190
      IF (INRB.NE.3) GO TO 191
      IF (MB.NE.N17) GO TO 191
      DCONBE(N2 ,KB,N) = BBND(K)*TAB/(1.0+DELB*BBND(K)/SIG(K,M,1))
      IF (DCONBE(N2,KB,N).EQ.0.0) DCONBE(N2 ,KB,N) = 4096.0E-13
      IF (NGEM.EQ.14) GO TO 189
      DCONRE(N12,KB,N) = DCONBE(N2,KB,N)
      GO TO 191
  189 CONTINUE
      IF ((J/2)*2.NE.J) GO TO 191
      N122 = (J/2-1)*JVXP1+JVXP1
      DCONRE(N122,KB,N) = DCONBE(N2,KB,N)
      GO TO 191
  190 IF (MB.NE.N17) GO TO 191
      DCONBE(N2 ,KB,N) = BBND(K)*TAB/(1.0+DELB*BBND(K)/SIG(K,M,1))
      IF (DCONBE(N2,KB,N).EQ.0.0) DCONBE(N2 ,KB,N) = 4096.0E-13
  191 IF (I.EQ.1) GO TO 193
  192 IF (MT.NE.N17) GO TO 193
      DCONBE(N1 ,KB,N) = BBND(K)*TAT/(1.0+DELT*BBND(K)/SIG(K,M,1))
  193 CONTINUE
      IF (JMAX.LE.1) GO TO 198
      IF (J.LT.JMAX) GO TO 194
      IF (INRB.LE.1) GO TO 197
  194 IF (MR.NE.N17) GO TO 196
      DCONRE(N4 ,KB,N) = BBND(K)*TAR/(1.0+DELR*BBND(K)/SIG(K,M,1))
      IF (DCONRE(N4,KB,N).EQ.0.0) DCONRE(N4,KB,N) = 4096.0E-13
      IF (INRB.NE.4) GO TO 195
      N11 = IVXP1*JVXP1 - N12
      DCONRE(N11,KB,N) = DCONRE(N12,KB,N)
  195 CONTINUE
  196 IF (J.GT.1) GO TO 197
      IF (INRB.NE.2) GO TO 198
      IF (ML.NE.N17) GO TO 198
      DCONRE(N12,KB,N) = BBND(K)*TAL/(1.0+DELL*BBND(K)/SIG(K,M,1))
      IF (DCONRE(N12,KB,N).EQ.0.0) DCONRE(N12,KB,N) = 4096.0E-13
      GO TO 198
  197 IF (ML.NE.N17) GO TO 198
      DCONRE(N3 ,KB,N) = BBND(K)*TAL/(1.0+DELL*BBND(K)/SIG(K,M,1))
      IF (DCONRE(N3,KB,N).EQ.0.0) DCONRE(N3,KB,N) = 4096.0E-13
  198 CONTINUE
      IF (NEM-3) 230,199,230
  199 KKK = IOVX + N
      IF (N17) 200,200,201
  200 CONTINUE
      IF (J.EQ.JMAX) GO TO 211
      IF (I.EQ.1) GO TO 226
      DCONRE(N4 ,KB,KKK)=TAH*SIG(K,MH,1)/(DELHT+DELHB*SIG(K,MH,1)/
     > SIG(K,M,1))
      GO TO 210
  201 IF (XMIS(2)) 202,204,204
  202 IF (BBND(K)) 200,200,204
  203 DCONRE(N4 ,KB,KKK)=0
      GO TO 210
  204 IF (MH-N17) 207,205,207
  205 IF (M-N17) 206,203,206
  206 DCONRE(N4 ,KB,KKK)=BBND(K)*TAH/(1.0+DELHT*BBND(K)/SIG(K,M,1))
      GO TO 210
  207 IF (M-N17) 200,208,200
  208 IF (MH) 203,203,209
  209 DCONRE(N4 ,KB,KKK)=BBND(K)*TAH/(1.0+DELHB*BBND(K)/SIG(K,MH,1))
  210 IF (J-JMAX) 218,211,211
  211 DCONRE(N4 ,KB,KKK)=0
      IF (I-1) 212,212,216
  212 IF (DCONRE(N4,KB,N)-4096.0E-13) 213,214,213
  213 DCONRE(N4 ,KB,N)=1.5*DCONRE(N4 ,KB,N)/SQUIRE
  214 IF (DCONBE(N1,KB,N)-4096.0E-13) 215,226,215
  215 DCONBE(N1 ,KB,N)=1.5*DCONBE(N1 ,KB,N)/SQUIRE
      GO TO 226
  216 IF (DCONRE(N4,KB,N)-4096.0E-13) 217,218,217
  217 DCONRE(N4 ,KB,N)=2.0*DCONRE(N4 ,KB,N)/SQUIRE
  218 IF (I-IMAX) 226,219,219
  219 DCONRE(N5 ,KB,KKK)=0
      IF (J-1) 220,220,224
  220 IF (DCONRE(N3,KB,N)-4096.0E-13) 221,222,221
  221 DCONRE(N3 ,KB,N)=1.5*DCONRE(N3 ,KB,N)/SQUIRE
  222 IF (DCONBE(N2,KB,N)-4096.0E-13) 223,226,223
  223 DCONBE(N2 ,KB,N)=1.5*DCONBE(N2 ,KB,N)/SQUIRE
      GO TO 226
  224 IF (DCONBE(N2,KB,N)-4096.0E-13) 225,226,225
  225 DCONBE(N2 ,KB,N)=2.0*DCONBE(N2 ,KB,N)/SQUIRE
  226 IF (I-1) 227,227,228
  227 DCONRE(N4 ,KB,KKK)=0
      IF (J.NE.JMAX) DCONBE( J,KB,N)=2.0*DCONBE( J,KB,N)/SQUIRE
  228 IF (J-1) 229,229,230
  229 DCONRE(N5 ,KB,KKK)=0
      IF (I.NE.IMAX) DCONRE(N3 ,KB,N)=2.0*DCONRE(N3 ,KB,N)/SQUIRE
  230 CONTINUE
  231 CONTINUE
  232 CONTINUE
  233 CONTINUE
      IF (INRB.LE.1) GO TO 242
      DO 241 KB=1,KBMAX
      GO TO (240,238,236,234),INRB
  234 CONTINUE
      I = IVX/2
      J2 = IVXP1*JVXP1
      DO 235 LL=1,I
      N12 = LL*JVXP1
      N11 = J2 - N12
      DCONRE(N11,KB,N) = DCONRE(N12,KB,N)
  235 CONTINUE
      GO TO 240
  236 CONTINUE
      DCONRE(JP1IXZ,KB,K) = 4096.0E-13
      LJ = 1
      DO 237 LL = 1,IVX
      N12 = LL*JVXP1
      N14 = JIVX+LJ
      DCONBE(N14,KB,N) = DCONRE(N12,KB,N)
      LJ = LJ+1
      IF (NGEM.EQ.14) LJ = LJ+1
  237 CONTINUE
      GO TO 240
  238 CONTINUE
      DO 239 I=1,IVX
      N12 = I*JVXP1
      N15 = N12 - JVX
      DCONRE(N15,KB,N) = DCONRE(N12,KB,N)
  239 CONTINUE
  240 CONTINUE
  241 CONTINUE
  242 CONTINUE
      DO 249 KB=1,KBMAX
      DO 248 I=1,IMAX
      NN1= (I-1)*JVX
      NN2= (I-1)*JVXP1
      DO 247 J=1,JMAX
      N1= NN1 + J
      N2 = N1 + JVX
      N3= NN2 + J
      N4 = N3 + 1
      N5 = N3 + JVXP1
      NRN = NRGNE(J,I,KB)
      M = NCOMP(NRN)
      D1 = DCONBE(N1 ,KB,N)
      IF (NEM.NE.4) GO TO 243
      IF (J.EQ.1) D2 = 0.0
      IF (J.EQ.1) GO TO 244
      N2 = N2-1
  243 CONTINUE
      D2 = DCONBE(N2 ,KB,N)
  244 CONTINUE
      D3 = DCONRE(N3 ,KB,N)
      D4 = DCONRE(N4 ,KB,N)
      D5 = DCONBK(N1 ,KB,N)
      D6 = DCONBK(N1 ,KB+1,N)
      D9 = SIG(K,M,10)
      TPTSA = D1+D2+D3+D4+D5+D6+D9*PVOL(NRN)
      IF (NEM.NE.3) GO TO 245
      D7 = DCONRE(N5 ,KB,KKK)
      D8 = DCONRE(N4 ,KB,KKK)
      TPTSA = TPTSA + D7+D8
  245 CONTINUE
      PTSAE(N1 ,KB,N) = TPTSA
      IF ((TPTSA.EQ.0.0).OR.(SIG(K,M,5).EQ.0.0)) GO TO 246
      SPARE(57) = AMAX1(SPARE(57),SIG(K,M,5)*PVOL(NRN)/PTSAE(N1,KB,N))
  246 CONTINUE
  247 CONTINUE
  248 CONTINUE
  249 CONTINUE
      IF (IX37.EQ.0) GO TO 250
      WRITE(IOADJ) AIO
  250 CONTINUE
      IF (IX37.EQ.0) GO TO 251
      REWIND IOADJ
  251 CONTINUE
C     DIAGONAL SYMMETRY CHECKOUT
      IF (IX(71).GT.0) GO TO 271
      IF (NUAC(8)) 254,271,252
  252 IF (IMAX-JMAX) 253,262,253
  253 NUAC(8)=0
      WRITE(IOUT,1001)
      GO TO 270
  254 II=IMAX/2
      DO 261 N=1,KMAX
      K = N
      IF (IX37.EQ.0) GO TO 255
      K = 1
      READ(IO15) AIO
  255 CONTINUE
      DO 260I=1,II
      L=IMAX-I+1
      NN1= (I-1)*JVX
      NN2= (L-1)*JVX
      DO 259J=1,JMAX
      M=JMAX-J+1
      N6= NN1 + J
      N7= NN2 + M
      DO 258KB=1,KBMAX
      MT=NRGNE(J,I,KB)
      ML=NRGNE(M,L,KB)
      IF (NCOMP(MT)-NCOMP(ML)) 253,256,253
  256 CONTINUE
      IF (PTSAE(N6,KB,K).EQ.0) GO TO 257
      IF (ABS(PTSAE(N7,KB,K)/PTSAE(N6,KB,K)-1.0)-EPICH) 257,253,253
  257 CONTINUE
  258 CONTINUE
  259 CONTINUE
  260 CONTINUE
  261 CONTINUE
      GO TO 270
  262 CONTINUE
      DO 269 N=1,KMAX
      K = N
      IF (IX37.EQ.0) GO TO 263
      K = 1
      READ(IO15) AIO
  263 CONTINUE
      DO 268 KB=1,KBMAX
      DO 267I=1,IMAX
      NN1= (I-1)*JVX
      DO 266J=1,JMAX
      N6= NN1 + J
      N8 = (J-1)*JVX + I
      MT=NRGNE(J,I,KB)
      ML=NRGNE(I,J,KB)
      IF (NCOMP(MT)-NCOMP(ML)) 253,264,253
  264 CONTINUE
      IF (PTSAE(N8,KB,K).EQ.0) GO TO 265
      IF (ABS(PTSAE(N6,KB,K)/PTSAE(N8,KB,K)-1.0)-EPICH) 265,253,253
  265 CONTINUE
  266 CONTINUE
  267 CONTINUE
  268 CONTINUE
  269 CONTINUE
      NUAC(20)=0
  270 CONTINUE
      IF (IX37.GT.0) REWIND IO15
  271 CONTINUE
      IF (SPARE(51).NE.0.0) SPARE(51) = -1.0/SPARE(51)
      IF (SPARE(57).NE.0.0) SPARE(57) = -1.0/SPARE(57)
      IF (IX(71).GT.0) IX(5)= 0
      RETURN
C
 1000 FORMAT('0ERROR STOP',4I6)
 1001 FORMAT('0DIAGONAL SYMMETRY OPTION DENIED')
      END
CPURT --156 ***CITATION*** CALCULATES DELTA-K/(K*DELTA-X) CF-PERT
      SUBROUTINE PURT(SCAC,BAL,NRGNE,NCOMP,P1E,P2E,SIG,PVOL, DCONBE,
     > DCONRE,DCONBK,ONEOV, BIGD, IDN, XII,BND,BBND, IVX,JVX,KBVX,KVX,
     > LVX,MVX,NSETVX,IVXP1,JVXP1,KBVXP1,IVZ,KVZ, JIVX,JIP1VX,JP1IXZ,
     > IOVX,IOVZ,MVZ,SSC)
C
      DOUBLE PRECISION XII
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AMESH/BMESH(30),NREGI,NREGJ,NREGKB,XSHI(100),XSHJ(100),
     > XSHKB(100), MSHI(100),MSHJ(100),MSHKB(100),Y(211),YY(211), X(211)
     >  ,XX(211),Z(211),ZZ(211), ZONVOL(200),AVZPD(200),PDI(211),
     > PDJ(211) , PDK(211)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     >  , XNAME(3,200)
C
      DIMENSION SCAC(KVX,MVZ,KVX),BAL(KVX,MVX, 8),NRGNE(JVX,IVX,KBVX),
     > NCOMP(LVX),P1E(JIVX ,KBVX) ,P2E(JIVX ,KBVX,KVX), SIG(KVX, MVX,10)
     >  ,PVOL(LVX),DCONBE(JIP1VX ,KBVX,IOVX), DCONRE(JP1IXZ , KBVX,
     > IOVZ) ,DCONBK(JIVX ,KBVXP1,IOVX),ONEOV(KVX,NSETVX),XII(KVX)
      DIMENSION BND(6,KVX),BBND(KVX)
      DIMENSION SSC(KVX,KVX)
CCCCC ********* SUBSCRIPT DEFINITIONS (PURT F-152) ********* CCCCC
C    NEW         OLD            NEW         OLD
C     N1         J,I             N6       J-1,I+1
C     N2         J,I-1           N7       J+1,I-1
C     N3         J,I+1           N8 *       J,I
C     N4       J-1,I             N9 *       J,I+1
C     N5       J+1,I             N10 *    J+1,I
C     N11        1,I             N12     JMAX,I
C     N13        I,IVX           N14      JVX,IVXP1-I
C     N15      JVX,J
C     INRB = 1  ORDINARY
C     INRB = 2  PERIODIC(REPEATING)
C     INRB = 3  90 DEGREE ROTATIONAL
C     INRB = 4  180 DEGREE ROTATIONAL
      NU812 = 0
      IF ((NUAC(5).EQ.8).OR.(NUAC(5).EQ.12)) NU812 = 1
      INRB = IX(72) + 1
      NUAC5 = NUAC(5)
      K = IX(43)
      N = IX(42)
      L = NRGNE(J,I,KB)
      M = NCOMP(L)
      IF (M.NE.NUAC(17)) GO TO 100
      IF (XMIS(2).GE.0) GO TO 169
      IF (BBND(K).NE.0) GO TO 169
  100 CONTINUE
      IXH = 0
      IF ((NUAC(5).EQ.9).OR.(NUAC(5).EQ.13)) IXH = 1
      I1 = IX(20)
      KKK = I1+IOVX
      NN1 = (I-1)*JVX
      N1 = NN1 + J
      N2= N1 - JVX
      N3= N1 + JVX
      IF ((NUAC5.NE.10).AND.(NUAC5.NE.14)) GO TO 101
      N2 = N2+1
      N3 = N3-1
  101 CONTINUE
      N4= N1 - 1
      N5= N1 + 1
      N6= N1 + JVX - 1
      N7= N1 - JVX + 1
      N8= (I-1)*JVXP1 + J
      N9= N8 + JVXP1
      N10= N8 + 1
      N11 = NN1 + 1
      N12 = NN1 + JMAX
      MTOP = 0
      MBOT = 0
      MLFT = 0
      MRIT = 0
      MFNT = 0
      MBAK = 0
      MH1 = 0
      MH2 = 0
      PTOP = 0.0
      PBOT = 0.0
      PLFT = 0.0
      PRIT = 0.0
      PFNT = 0.0
      PBAK = 0.0
      PHEX1 = 0.0
      PHEX2 = 0.0
      TTOP = 0.0
      TBOT = 0.0
      TLFT = 0.0
      TRIT = 0.0
      TFNT = 0.0
      TBAK = 0.0
      THEX1 = 0.0
      THEX2 = 0.0
      TER1 = 0.0
      TER2 = 0.0
      TER3 = 0.0
      TER4 = 0.0
      TER5 = 0.0
      TER6 = 0.0
      TER7 = 0.0
      TER8 = 0.0
      T1 = 0.0
C     BAL(K,M,2) = SIGA,SIGR,D*B**2
C     BAL(K,M,3) = NU*SIGF
C     BAL(K,M,4) = D
C     BAL(K,M,5) = B**2
C     BAL(K,M,6) = NOT USED
C     SCAC(K,M,KK) = INSCATTER
  102 CONTINUE
      NOE = J-(J/2)*2
      IF (J.EQ.1) GO TO 103
      LLFT = NRGNE(J-1,I,KB)
      MLFT = NCOMP(LLFT)
      PLFT = P1E(N4 ,KB)
      GO TO 104
  103 IF (INRB.NE.2) GO TO 104
      LLFT = NRGNE(JMAX,I,KB)
      MLFT = NCOMP(LLFT)
      PLFT = P1E(N12 ,KB)
  104 IF (J.EQ.JMAX) GO TO 105
      LRIT = NRGNE(J+1,I,KB)
      MRIT = NCOMP(LRIT)
      PRIT = P1E(N5 ,KB)
      GO TO 109
  105 GO TO (109,106,107,108),INRB
  106 CONTINUE
      LRIT = NRGNE(1,I,KB)
      MRIT = NCOMP(LRIT)
      PRIT = P1E(N11,KB)
      GO TO 109
  107 CONTINUE
      LRIT = NRGNE(I,IVX,KB)
      MRIT = NCOMP(LRIT)
      N13 = (IVX-1)*JVX + I
      PRIT = P1E(N13,KB)
      IF ((NUAC5.NE.10).AND.(NUAC5.NE.14)) GO TO 109
      LRIT = NRGNE(2*I,IVX,KB)
      MRIT = NCOMP(LRIT)
      N13 = (IVX-1)*JVX+2*I
      PRIT = P1E(N13,KB)
      GO TO 109
  108 CONTINUE
      LRIT = NRGNE(JVX,IVXP1-I,KB)
      MRIT = NCOMP(LRIT)
      N14 = (IVX-I)*JVX + JVX
      PRIT = P1E(N14,KB)
  109 IF (IX(25).EQ.1) GO TO 119
      IF (I.EQ.1) GO TO 111
      LTOP = NRGNE(J,I-1,KB)
      IF ((NUAC5.NE.10).AND.(NUAC5.NE.14)) GO TO 110
      IF (J.EQ.JMAX) GO TO 111
      LTOP = NRGNE(J+1,I-1,KB)
  110 CONTINUE
      MTOP = NCOMP(LTOP)
      PTOP = P1E(N2 ,KB)
  111 IF (I.EQ.IMAX) GO TO 113
      LBOT = NRGNE(J,I+1,KB)
      IF ((NUAC5.NE.10).AND.(NUAC5.NE.14)) GO TO 112
      IF (J.EQ.1) GO TO 114
      LBOT = NRGNE(J-1,I+1,KB)
  112 CONTINUE
      MBOT = NCOMP(LBOT)
      PBOT = P1E(N3 ,KB)
      GO TO 114
  113 IF (INRB.NE.3) GO TO 114
      LBOT = NRGNE(JVX,J,KB)
      MBOT = NCOMP(LBOT)
      N15 = J*JVX
      PBOT = P1E(N15,KB)
      IF ((NUAC5.NE.10).AND.(NUAC5.NE.14)) GO TO 114
      LBOT = NRGNE(JVX,J/2,KB)
      MBOT = NCOMP(LBOT)
      N15 = J*JVX/2
      PBOT = P1E(N15,KB)
  114 IF (IX(25).EQ.2) GO TO 116
      IF (KB.EQ.1) GO TO 115
      LFNT = NRGNE(J,I,KB-1)
      MFNT = NCOMP(LFNT)
      PFNT = P1E(N1 ,KB-1)
  115 IF (KB.EQ.KBMAX) GO TO 116
      LBAK = NRGNE(J,I,KB+1)
      MBAK = NCOMP(LBAK)
      PBAK = P1E(N1 ,KB+1)
  116 IF (IXH.EQ.0) GO TO 119
      IF ((J.EQ.1).OR.(I.EQ.IMAX)) GO TO 117
      NH1 = NRGNE(J-1,I+1,KB)
      MH1 = NCOMP(NH1)
      PHEX1 = P1E(N6 ,KB)
  117 IF ((I.EQ.1).OR.(J.EQ.JMAX)) GO TO 118
      NH2 = NRGNE(J+1,I-1,KB)
      MH2 = NCOMP(NH2)
      PHEX2 = P1E(N7 ,KB)
  118 CONTINUE
  119 CONTINUE
      TLFT = DCONRE(N8 ,KB,I1)
      TRIT = DCONRE(N10 ,KB,I1)
      IF (IX(25).EQ.1) GO TO 123
      TTOP = DCONBE(N1 ,KB,I1)
      IF ((NUAC5.NE.10).AND.(NUAC5.NE.14)) GO TO 120
      IF (J.EQ.1) GO TO 121
  120 CONTINUE
      TBOT = DCONBE(N3 ,KB,I1)
  121 CONTINUE
      IF (IX(25).EQ.2) GO TO 122
      TFNT = DCONBK(N1 ,KB,I1)
      TBAK = DCONBK(N1 ,KB+1,I1)
  122 IF (IXH.EQ.0) GO TO 123
      THEX1 = DCONRE(N9 ,KB,KKK)
      THEX2 = DCONRE(N10 ,KB,KKK)
  123 CONTINUE
      PSMID = P2E(N1 ,KB,K)
      PMID = P1E(N1 ,KB)
      TERM1 = (PTOP-PMID)*TTOP
      TERM2 = (PBOT-PMID)*TBOT
      TERM3 = (PLFT-PMID)*TLFT
      TERM4 = (PRIT-PMID)*TRIT
      TERM5 = (PFNT-PMID)*TFNT
      TERM6 = (PBAK-PMID)*TBAK
      TERM7 = (PHEX1-PMID)*THEX1
      TERM8 = (PHEX2-PMID)*THEX2
      IF ((IDN.EQ.0).AND.(M.EQ.MLFT)) GO TO 129
      DELC = X(J) - XX(J)
      IF (NU812.GT.0) DELC = DELC*Y(I)
      IF (J.GT.1) GO TO 124
      IF (INRB.NE.2) GO TO 127
  124 IF (PLFT.EQ.0.0) GO TO 128
      IF (J.EQ.1) GO TO 125
      DELL = XX(J) - X(J-1)
      IF (NU812.GT.0) DELL = DELL*Y(I)
      PSLFT = P2E(N4 ,KB,K)
      GO TO 126
  125 DELL = XX(JMAX+1) - X(JMAX)
      IF (NU812.GT.0) DELL = DELL*Y(I)
      PSLFT = P2E(N12 ,KB,K)
  126 T1 = SIG(K,M,N)*DELL/(SIG(K,MLFT,N)*DELC)
      TER3 = (PSMID-PSLFT)*(1.0/(1.0+T1))
      GO TO 130
  127 TER3 = PSMID*BND(1,K)/(BND(1,K)+SIG(K,M,N)/DELC)
      GO TO 130
  128 TER3 = PSMID*BBND(K)/(BBND(K)+SIG(K,M,N)/DELC)
      GO TO 130
  129 TER3 = PSMID
  130 CONTINUE
      IF ((IDN.EQ.0).AND.(M.EQ.MRIT)) GO TO 139
      DELC = XX(J+1) - X(J)
      IF (NU812.GT.0) DELC = DELC*Y(I)
      IF (J.LT.JMAX) GO TO 131
      IF (INRB.LE.1) GO TO 137
  131 IF (PRIT.EQ.0.0) GO TO 138
      IF (J.EQ.JMAX) GO TO 132
      DELR = X(J+1) - XX(J+1)
      IF (NU812.GT.0) DELR = DELR*Y(I)
      PSRIT = P2E(N5 ,KB,K)
      GO TO 136
  132 GO TO (137,133,134,135),INRB
  133 CONTINUE
      DELR = X(1)
      IF (NU812.GT.0) DELR = DELR*Y(I)
      PSRIT = P2E(N11,KB,K)
      GO TO 136
  134 CONTINUE
      DELR = YY(IVXP1) - Y(IVX)
      IF ((NUAC5.EQ.10).OR.(NUAC5.EQ.14)) DELR = YY(IVXP1)-PDI(IVX)
      PSRIT = P2E(N13,KB,K)
      GO TO 136
  135 CONTINUE
      DELR = DELC
      PSRIT = P2E(N14,KB,K)
  136 CONTINUE
      T1 = SIG(K,M,N)*DELR/(SIG(K,MRIT,N)*DELC)
      TER4 = (PSMID-PSRIT)*(1.0/(1.0+T1))
      GO TO 140
  137 TER4 = PSMID*BND(3,K)/(BND(3,K)+SIG(K,M,N)/DELC)
      GO TO 140
  138 TER4 = PSMID*BBND(K)/(BBND(K)+SIG(K,M,N)/DELC)
      GO TO 140
  139 TER4 = PSMID
  140 CONTINUE
      IF (IX(25).EQ.1) GO TO 167
      IF ((IDN.EQ.0).AND.(M.EQ.MTOP)) GO TO 144
      DELC = Y(I)-YY(I)
      IF (I.EQ.1) GO TO 142
      IF (PTOP.EQ.0.0) GO TO 143
      DELT = YY(I)-Y(I-1)
      IF ((NUAC5.NE.10).AND.(NUAC5.NE.14)) GO TO 141
      IF (NOE.EQ.0) GO TO 145
      DELT = YY(I)-PDI(I-1)
  141 CONTINUE
      T1 = SIG(K,M,N)*DELT/(SIG(K,MTOP,N)*DELC)
      TER1 = (PSMID-P2E(N2 ,KB,K))*(1.0/(1.0+T1))
      GO TO 145
  142 TER1 = PSMID*BND(2,K)/(BND(2,K)+SIG(K,M,N)/DELC)
      GO TO 145
  143 TER1 = PSMID*BBND(K)/(BBND(K)+SIG(K,M,N)/DELC)
      GO TO 145
  144 TER1 = PSMID
  145 CONTINUE
      IF ((IDN.EQ.0).AND.(M.EQ.MBOT)) GO TO 152
      DELC = YY(I+1)-Y(I)
      IF ((NUAC5.NE.10).AND.(NUAC5.NE.14)) GO TO 146
      IF (NOE.NE.0) GO TO 153
      DELC = YY(I+1)-PDI(I)
  146 CONTINUE
      IF (I.LT.IMAX) GO TO 147
      IF (INRB.NE.3) GO TO 150
  147 IF (PBOT.EQ.0.0) GO TO 151
      IF (I.EQ.IMAX) GO TO 148
      DELB = Y(I+1)-YY(I+1)
      PSBOT = P2E(N3,KB,K)
      GO TO 149
  148 CONTINUE
      DELB = XX(JVXP1) - X(JVX)
      IF (NU812.GT.0) DELB = DELB*Y(I)
      PSBOT = P2E(N15,KB,K)
  149 T1 = SIG(K,M,N)*DELB/(SIG(K,MBOT,N)*DELC)
      TER2 = (PSMID - PSBOT)*(1.0/(1.0+T1))
      GO TO 153
  150 TER2 = PSMID*BND(4,K)/(BND(4,K)+SIG(K,M,N)/DELC)
      GO TO 153
  151 TER2 = PSMID*BBND(K)/(BBND(K)+SIG(K,M,N)/DELC)
      GO TO 153
  152 TER2 = PSMID
  153 CONTINUE
      IF (IX(25).EQ.2) GO TO 162
      IF ((IDN.EQ.0).AND.(M.EQ.MFNT)) GO TO 156
      DELC = Z(KB)-ZZ(KB)
      IF (KB.EQ.1) GO TO 154
      IF (PFNT.EQ.0.0) GO TO 155
      DELF = ZZ(KB)-Z(KB-1)
      T1 = SIG(K,M,N)*DELF/(SIG(K,MFNT,N)*DELC)
      TER5 = (PSMID-P2E(N1 ,KB-1,K))*(1.0/(1.0+T1))
      GO TO 157
  154 TER5 = PSMID*BND(5,K)/(BND(5,K)+SIG(K,M,N)/DELC)
      GO TO 157
  155 TER5 = PSMID*BBND(K)/(BBND(K)+SIG(K,M,N)/DELC)
      GO TO 157
  156 TER5 = PSMID
  157 IF ((IDN.EQ.0).AND.(M.EQ.MBAK)) GO TO 160
      DELC = ZZ(KB+1)-Z(KB)
      IF (KB.EQ.KBMAX) GO TO 158
      IF (PBAK.EQ.0.0) GO TO 159
      DELBK = Z(KB+1)-ZZ(KB+1)
      T1 = SIG(K,M,N)*DELBK/(SIG(K,MBAK,N)*DELC)
      TER6 = (PSMID-P2E(N1 ,KB+1,K))*(1.0/(1.0+T1))
      GO TO 161
  158 TER6 = PSMID*BND(6,K)/(BND(6,K)+SIG(K,M,N)/DELC)
      GO TO 161
  159 TER6 = PSMID*BBND(K)/(BBND(K)+SIG(K,M,N)/DELC)
      GO TO 161
  160 TER6 = PSMID
  161 CONTINUE
  162 IF (IXH.EQ.0) GO TO 166
      IF ((J.NE.1).AND.(I.NE.IMAX)) TER7 = PSMID
      IF ((I.NE.1).AND.(J.NE.JMAX)) TER8 = PSMID
      IF ((IDN.EQ.0).AND.(M.EQ.MH1)) GO TO 164
      IF ((J.EQ.1).OR.(I.EQ.IMAX)) GO TO 164
      IF (PHEX1.EQ.0.0) GO TO 163
      T1 = SIG(K,M,N)/SIG(K,MH1,N)
      TER7 = (PSMID-P2E(N6 ,KB,K))*(1.0/(1.0+T1))
      GO TO 164
  163 TD1 = Y(I+1)-Y(I)
      TD2 = X(J)-X(J-1)
      DELC = 0.5*SQRT(TD1**2+TD2**2-TD1*TD2)
      TER7 = PSMID*BBND(K)/(BBND(K)+SIG(K,M,N)/DELC)
  164 IF ((IDN.EQ.0).AND.(M.EQ.MH2)) GO TO 166
      IF ((I.EQ.1).OR.(J.EQ.JMAX)) GO TO 166
      IF (PHEX2.EQ.0.0) GO TO 165
      T1 = SIG(K,M,N)/SIG(K,MH2,N)
      TER8 = (PSMID-P2E(N7 ,KB,K))*(1.0/(1.0+T1))
      GO TO 166
  165 TD1 = Y(I)-Y(I-1)
      TD2 = X(J+1)-X(J)
      DELC = 0.5*SQRT(TD1**2+TD2**2-TD1*TD2)
      TER8 = PSMID*BBND(K)/(BBND(K)+SIG(K,M,N)/DELC)
  166 CONTINUE
  167 CONTINUE
      IF (IDN.EQ.0) GO TO 168
      BAL(K,1,4) = (TERM1*TER1 + TERM2*TER2 + TERM3*TER3 + TERM4*TER4 +
     > TERM5*TER5 + TERM6*TER6 + TERM7*TER7 + TERM8*TER8)/ (SIG(K,M,N)*
     > PVOL(L)*BIGD)
      GO TO 169
  168 CONTINUE
      BAL(K,M,4) = BAL(K,M,4) + (TERM1*TER1 + TERM2*TER2 + TERM3*TER3 +
     > TERM4*TER4 + TERM5*TER5 + TERM6*TER6 + TERM7*TER7 + TERM8*TER8) /
     >  SIG(K,M,N)
  169 CONTINUE
      IF (IDN.EQ.0) GO TO 171
      BAL(K,1,2) = -SSC(K,K)/BIGD
      BAL(K,1,5) = BAL(K,1,2)*SIG(K,M,N)
      BAL(K,1,3) = 0.0
      DO 170 KK = 1,KMAX
      BAL(K,1,3) = BAL(K,1,3)+XII(KK)*SSC(K,KK)/BIGD
  170 CONTINUE
  171 CONTINUE
  172 CONTINUE
      RETURN
      END
CTAPE --049 ***CITATION*** PROCESS MICRO. SIGMA TAPE/ CF-IPTM
C     IRSTRT=0-NO RESTART , RESTART OTHERWISE
      SUBROUTINE TAPE(NJJR, NNDI1, NNXTRA,MJJR,SS1,SS2,SS3, SS4,SS5,SSC,
     > HOL,ONEOV,XI,HOX,NFO,NNFO,NIC,SIG,KVX,NVX,NSETVX, NRVX,IRSTRT)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     > , XNAME(3,200)
C*IPEN
C*    COMMON ACRESCENTADO. APARECEM NAS SUBROTINAS TAPE, OUTC, BKLE,
C*           EDIN, SSET, RERT, BIGS, HIST, SETV, TSCL.
C*
C* NBSTEP - NUMERO DE DADOS NO CARTAO 7+ DA SECAO 002.
C* NCONJU - NUMERO DE CONJUNTOS DE SECOES DE CHOQUE MICROSCOPICAS QUE
C*          SAO EFETIVAMENTE USADOS. ESTA VARIAVEL EH IGUAL A NSETVX.
C* NXCON  - ORDEM DOS CONJUNTOS DE SECOES DE CHOQUE MICROSCOPICAS
C*          NO FILE 8.
C* BSTEP  - VALORES DAS QUEIMAS (MWD/T) CORRESPONDENTES A CADA CONJUNTO
C*          DE SECOES DE CHOQUE FORNECIDOS NO CARTAO 7+ DA SECAO 002.
C* FMASS  - MASSA INICIAL (KG) DO COMBUSTIVEL POR ZONA (MATERIAIS
C*          FISSEIS + FERTEIS).
C* QACUM  - QUEIMA ACUMULADA (MWD/T) POR ZONA.
C* NXSEC  - VALORES INICIAIS DE NXSET.
C* NBUCKB - = IND = 4 (SECAO 024). OPCAO PARA UTILIZACAO DE BUCKLING
C*          DEPENDENTE DA QUEIMA DO COMBUSTIVEL.
C* NOPBUC - NUMERO DE DADOS DE ENTRADA NO CARTAO 5 DA SECAO 024.
C* BUCBUR - VALORES DE BUCKLING DEPENDENTE DA QUEIMA.
      COMMON/QUEIMA/NBSTEP,NCONJU,NXCON(50),BSTEP(50),FMASS(200),
     > QACUM(200),NXSEC(200),NBUCKB,NOPBUC,BUCBUR(50)
C*
      DIMENSION NJJR(NVX,NSETVX), NNDI1(NVX,NSETVX), NNXTRA(NVX,NSETVX),
     > MJJR(200,NSETVX), SS1(KVX, NVX,NSETVX),SS2(KVX,NVX,NSETVX),
     > SS3(KVX,NVX,NSETVX), SS4(KVX,NVX, NSETVX),SS5(KVX,NVX,NSETVX),
     > SSC(KVX,KVX ), HOL(NVX,NSETVX,10), ONEOV(KVX,NSETVX),XI(KVX),
     > HOX(NVX,NSETVX,20),NFO(20,NSETVX), NNFO(20,NSETVX),NIC(1000),
     > SIG(KVX,1,8),NREAL(50)
C
      REWIND IO3
      IF (IRSTRT.NE.0) GO TO 103
      DO 102 I = 1,10
      DO 101 NS = 1,NSETMX
      DO 100 N = 1,NMAX
      HOL(N,NS,I) = 0.0
  100 CONTINUE
  101 CONTINUE
  102 CONTINUE
  103 CONTINUE
      WRITE(IOUT,1001)
      NW = IOUT
      REWIND IO4
      NZ=0
      NZN=0
      NL=0
      IX(18) = 0
C*IPEN
      MCMAX=MMAX
      IF(NDPL(24).NE.0) MCMAX=NCONJU
C*
      DO 220 NRLE = 1,100
      READ(IOSIG,END=221) (XTR1(I),I=1,18)
C*    DO 104 M=1,MMAX
      DO 104 M=1,MCMAX
      NS=NXSET(M)
C*IPEN
      IF(NDPL(24).NE.0) NS=NXCON(M)
C*
      IF (NS-NRLE) 104,106,104
  104 CONTINUE
      READ(IOSIG)N1,N2
      NNUM = 2*N2+2
      DO 105 LC = 1,NNUM
      READ(IOSIG)
  105 CONTINUE
      GO TO 220
  106 NORD = NXODR(NS)
      NL=NL+1
      READ(IOSIG)NSIG1(NORD),NSIG2(NORD),NSIG3(NORD), NSIG4(NORD),
     > NSIG5(NORD),NSIG6(NORD)
      IF (IRSTRT.EQ.0) WRITE(IOUT,1019)
      WRITE(IOUT,1002)NS,NSIG2(NORD),NSIG3(NORD),NSIG5(NORD),
     > NSIG4(NORD),(XTR1(I),I=1,18)
  107 CONTINUE
      NREAL(NORD) = NS
      NKC = NSIG3(NORD)
      NNC = NSIG2(NORD)
      NJM(NORD) = NNC
      READ(IOSIG)(SIG(K,1,3),K=1,NKC),(SIG(K,1,1),K=1,NKC),(SIG(K,1,2),
     > K=1,NKC), (ONEOV(K,NORD),K=1,NKC)
      IF (IRSTRT.NE.0) GO TO 108
      WRITE(IOUT,1003)
  108 CONTINUE
      SUMXI = 0.0
      DO 110 K = 1,KMAX
      IF (NL.GT.1) GO TO 109
      XI(K)=SIG(K,1,3)
  109 SUMXI = SUMXI+SIG(K,1,3)
      IF (IRSTRT.NE.0) GO TO 110
      WRITE(IOUT,1004)K, SIG(K,1,1),SIG(K,1,2),ONEOV(K,NORD),SIG(K,1,3)
  110 CONTINUE
      IF (IRSTRT.NE.0) GO TO 111
      WRITE(IOUT,1005)SUMXI
  111 CONTINUE
      DO 112N=1,200
      MJJR(N,NORD)=0
  112 CONTINUE
      DO 125 N = 1,NNC
      IF (IRSTRT.NE.0) GO TO 113
      READ(IOSIG)II ,IJE , NNDI1(N,NORD),IFG, NNXTRA(N,NORD), (HOL(N,
     > NORD,I),I=1,10) ,(XTR1(I),I=1,15), (HOX(N,NORD,I),I=1,20),X,
     > (XTR2(I),I=1,20)
      GO TO 114
  113 CONTINUE
      READ(IOSIG)II ,IJE , NNDI1(N,NORD),IFG, NNXTRA(N,NORD),(XTR1(I),I=
     > 1,46),(XTR2(I),I=1,20)
  114 CONTINUE
      WRITE(IO3)NORD,(XTR2(I),I=1,20)
      IA = 0
      DO 1114 IB = 1,10
      IF(XTR2(IB).EQ.0) GO TO 1114
      IA = IA+1
 1114 CONTINUE
      IX(18) = MAX0(IX(18),IA)
      IF (II) 115,115,116
  115 WRITE(IOUT,1006)NS,II
      NER(8) = 8
      GO TO 221
  116 NJJR(N,NORD) = II
      MJJR(II,NORD) = N
      IF (NNDI1(N,NORD)-1) 117,118,121
  117 READ(IOSIG)(SS1(K,N,NORD),SS2(K,N,NORD),SS3(K,N,NORD),SS4(K,N,
     > NORD),SS5(K,N,NORD),K=1,NKC),((SSC(KK,K ),KK=1,NKC),K=1,NKC)
      GO TO 124
  118 READ(IOSIG)(SS1(K,N,NORD),SS2(K,N,NORD),SS3(K,N,NORD), SS4(K,N,
     > NORD),SS5(K,N,NORD),K=1,NKC)
      DO 120 KK = 1,NKC
      DO 119 K = 1,NKC
      SSC(KK,K ) = 0.0
  119 CONTINUE
  120 CONTINUE
      IF (K.LT.NKC) SSC(K+1,K ) = SS5(K,N,NORD)
      GO TO 124
  121 READ(IOSIG)(SS1(K,N,NORD),K=1,NKC)
      DO 123 K = 1,NKC
      SS2(K,N,NORD) = 0.0
      SS3(K,N,NORD) = 0.0
      SS4(K,N,NORD) = 0.0
      SS5(K,N,NORD) = 0.0
      DO 122 KK = 1,NKC
      SSC(KK,K ) = 0.0
  122 CONTINUE
  123 CONTINUE
  124 CONTINUE
      WRITE(IO4)((SSC(KK,K),KK=1,NKC),K=1,NKC)
  125 CONTINUE
      READ(IOSIG)NEND
      IF (NEND) 127,126,126
  126 WRITE(IOUT,1007)NS,NEND
      NER(7) = 7
C     SET UP FISSION PRODUCT FUEL DATA
  127 NKZ=0
      IF (IRSTRT.NE.0) GO TO 219
      DO 131I=1,NNC
      IF (HOL(I,NORD,9)) 131,131,128
  128 NKZ=NKZ+1
      IF (NKZ-20) 130,130,129
  129 WRITE(IOUT,1008)NS
      NKZ = 20
      GO TO 132
  130 NXTR1(NKZ)=NJJR(I,NORD)
      M=NJJR(I,NORD)
      NFO(NKZ,NORD) = M
      NNFO(NKZ,NORD) = MJJR(M,NORD)
  131 CONTINUE
  132 IF (NKZ) 133,133,134
  133 WRITE(NW,1009)NORD
      GO TO 137
  134 DO 135I=1,NNC
      C=I
      DO 135NN=1,NKZ
      IF (HOX(I,NORD,NN)) 136,135,136
  135 CONTINUE
  136 NJMM(NORD)=I
  137 NJNQ(NORD)=NKZ
      IF (NDPL(22).GT.0) GO TO 219
  138 CONTINUE
C     SET UP STANDARD CHAINS
      MKMJ=0
      IF ((NGC(1).EQ.0).OR.(NSIG1(NORD).EQ.-2).OR.(NSIG1(NORD).EQ.1))
     > GO TO 219
      IF (NZ.GT.0) GO TO 141
      NIC(901)= 6
      NIC(902)=-007
      NIC(903)= 8
      NIC(904)= 9
      NIC(905)= 10
      NIC(906)= 11
      NIC(907)= 18
      NIC(908)= 19
      NIC(909)= 0
      NIC(910)= 6
      NIC(911)= 7
      NIC(912)= 209
      NIC(913)= 210
      NIC(914)= 211
      NIC(915)= 218
      NIC(916)= 219
      NIC(917)= 0
      NIC(918)= 12
      NIC(919)=-013
      NIC(920)= 14
      NIC(921)= 15
      NIC(922)= 16
      NIC(923)= 17
      NIC(924)= 20
      NIC(925)= 21
      NIC(926)= 0
      NIC(927)= 12
      NIC(928)= 13
      NIC(929)= 215
      NIC(930)= 216
      NIC(931)= 217
      NIC(932)= 220
      NIC(933)= 221
      NIC(934)= 0
      NIC(935)= 69
      NIC(936)= 70
      NIC(937)= 71
      NIC(938)= 72
      NIC(939)= 73
      NIC(940)= 0
      NIC(941)=-062
      NIC(942)= 563
      NIC(943)=4500
      NIC(944)= 64
      NIC(945)=-066
      NIC(946)= 67
      NIC(947)= 68
      NIC(948)= 69
      NIC(949)= 70
      NIC(950)= 0
      NIC(951)=-062
      NIC(952)= 563
      NIC(953)=5500
      NIC(954)= 65
      NIC(955)=-266
      NIC(956)= 267
      NIC(957)= 268
      NIC(958)= 269
      NIC(959)= 270
      NIC(960)= 0
      NIC(961)=60
      NIC(962)=0
      NIC(963)=61
      NIC(964)= 0
      NIC(965)=-054
      NIC(966)= 55
      NIC(967)= 56
      NIC(968)= 0
      NIC(969)= 48
      NIC(970)= 49
      NIC(971)= 0
      NIC(972)= 50
      NIC(973)= 0
      NIC(974)= 51
      NIC(975)= 0
      NIC(976)= 52
      NIC(977)= 0
      NIC(978)= 53
      NIC(979)= 0
      NIC(980)=75
      NIC(981)=74
      NIC(982)=0
      NIC(983)=-057
      NIC(984)=-058
      NIC(985)=59
      NIC(986)= 0
      NIC(987)= 0
      IF (NDPL(23)) 140,140,139
  139 N=10*NDPL(23)
      NIC(954)=N
      NIC(964)=10000-N
  140 CONTINUE
  141 NZ=NZ+1
      JJ=NZ
      NCH(NORD)=JJ
      NN=0
      MZ=NZ
      L=1
      I=900
      DO 175 J=1,200
      I=I+1
      NZ=NZ+1
      M=NIC(I)
      IF (M) 142,143,148
  142 MM=-M
      GO TO 149
  143 IF (J-1) 176,176,144
  144 IF (NIC(NZ-1)) 147,145,147
  145 IF (L) 146,176,146
  146 NZ=NZ-1
      GO TO 174
  147 NIC(NZ)=0
      MKMJ=MKMJ+1
      GO TO 174
  148 MM=M
  149 KY=KY+1
      IF (MM-200) 150,150,157
  150 N=MJJR(MM,NORD)
  151 IF (N) 171,171,152
  152 IF (M) 153,154,154
  153 N=-N
  154 NIC(NZ)=N
      IF (J-2) 174,174,155
  155 IF (NIC(NZ-1)) 174,156,174
  156 IF (NIC(NZ)-NIC(NZ-2)) 174,163,174
  157 IF (MM-500) 158,158,164
  158 MM=MM-200
      N=MJJR(MM,NORD)
      IF (N) 171,171,159
  159 IF (M) 160,161,161
  160 N=-N-200
      GO TO 162
  161 N=N+200
  162 IF (NIC(NZ-1)) 151,163,151
  163 NZ=NZ-1
      GO TO 175
  164 MM=MM-500
      N=MJJR(MM,NORD)
      IF (N) 165,165,166
  165 I=I+1
      GO TO 171
  166 IF (M) 167,167,168
  167 N=-N-500
      GO TO 169
  168 N=N+500
  169 NIC(NZ)=N
      I=I+1
      NZ=NZ+1
      N=NIC(I)
      IF (N) 170,171,170
  170 NIC(NZ)=N
      GO TO 174
  171 NN=NN+1
      NXTR1(NN)=M
      NZ=NZ-1
      IF (NZ-JJ) 174,174,172
  172 IF (NIC(NZ)) 173,174,173
  173 NZ=NZ+1
      NIC(NZ)=0
      MKMJ=MKMJ+1
  174 CONTINUE
      L=M
  175 CONTINUE
  176 IF (NN) 178,178,177
  177 WRITE(IOUT,1010)(NXTR1(I),I=1,NN)
  178 IF (NSIG1(NORD)+1) 188,179,188
  179 J=0
      DO 186I=JJ,NZ
      IF (NIC(I)) 183,180,183
  180 IF (I-JJ) 182,181,182
  181 NZ=JJ-1
      NCH(NORD)=0
      MKMJ=0
      GO TO 188
  182 J=0
      GO TO 186
  183 IF (J) 186,184,186
  184 J=1
      M=NIC(I)
      IF (IABS(NJJR(M,NORD))-47) 186,186,185
  185 NZ=I
      GO TO 187
  186 CONTINUE
      NZ=NZ-1
  187 N=MJJR(77,NORD)
      NIC(NZ)=N
      NZ=NZ+1
      N=MJJR(76,NORD)
      NIC(NZ)=N
      NZ=NZ+1
      NIC(NZ)=0
      NZ=NZ+1
      NIC(NZ)=0
      MKMJ=MKMJ+1
  188 NIC(JJ)=MKMJ
C     EDIT CHAIN DATA
      WRITE(IOUT,1011)NCH(NORD),(NIC(I),I=1,NZ)
      IF (MKMJ) 189,189,190
  189 NZ=NZ-1
      WRITE(IOUT,1000)NORD
      GO TO 217
  190 J=MZ
      WRITE(IOUT,1012)NS ,MKMJ,(NFO(I,NORD),I=1,NKZ)
      DO 216I=1,900
      J=J+1
      IF (J-NZ) 192,191,191
  191 IF (NIC(J)) 208,217,208
  192 IF (IABS(NIC(J-1))-500) 194,193,193
  193 J=J+1
  194 IF (NIC(J)) 195,196,197
  195 M=-NIC(J)
      NNN=1
      GO TO 198
  196 WRITE(NW,1017)
      GO TO 216
  197 M=NIC(J)
      NNN=2
  198 IF (M-500) 202,199,199
  199 L=M-500
      KY=IABS(NIC(J+1))
      IF (NIC(J+1)) 201,200,200
  200 NNN=3
      GO TO 207
  201 NNN=4
      GO TO 207
  202 IF (M-200) 206,206,203
  203 L=M-200
      IF (NNN-1) 204,204,205
  204 NNN=5
      GO TO 207
  205 NNN=6
      GO TO 207
  206 L=M
  207 N=NJJR(L,NORD)
      IF (N) 208,208,209
  208 JB=1019
      JOEY=2
      WRITE(NW,1018)JB,N,M,L,NNN,J,NIC(J)
  209 GO TO (212,213,214,215,210,211),NNN
  210 N=N+200
      WRITE(NW,1013)N
      GO TO 216
  211 N=N+200
      WRITE(NW,1014)N
      GO TO 216
  212 WRITE(NW,1013)N,(HOX(M ,NORD,K ),K=1,NKZ)
      GO TO 216
  213 WRITE(NW,1014)N,(HOX(M ,NORD,K ),K=1,NKZ)
      GO TO 216
  214 WRITE(NW,1015)N,KY,(HOX(M ,NORD,K ),K=1,NKZ)
      GO TO 216
  215 WRITE(NW,1016)N,KY,(HOX(M ,NORD,K ),K=1,NKZ)
  216 CONTINUE
  217 IF (NZ-1000) 219,218,218
  218 JB=1020
      JOEY=2
      WRITE(NW,1018)JB,N,M,NZ,NZZ
  219 CONTINUE
      IF (NL.EQ.NSETVX) GO TO 221
  220 CONTINUE
  221 CONTINUE
      REWIND IO3
      REWIND IO1
      WRITE(IO1) HOX
      REWIND IO1
      DO 222J=1,NSETVX
      NN=NJM(J)
      DO 222N=1,NN
      READ(IO3)NORD,(HOX(N,NORD,I),I=1,20)
  222 CONTINUE
      REWIND IO3
      NXTR1(1)=-1
      WRITE(IO4) NXTR1
      WRITE(IO4) HOX
      REWIND IO4
      READ(IO1) HOX
      REWIND IO1
      REWIND IOSIG
  223 IX(28) = NSIG4(1)
      IX(29) = NSIG5(1)
      IX(36) = NSIG6(1)
      IF (NSETMX-1) 226,226,224
  224 DO 225IS=2,NSETMX
      IX(28) = MAX0(IX(28),NSIG4(IS))
      IX(29) = MAX0(IX(29),NSIG5(IS))
      IX(36) = MAX0(IX(36),NSIG6(IS))
      IF (NSIG3(IS-1).NE.KMAX) NER(4) = 4
  225 CONTINUE
  226 CONTINUE
      IRECV = IX(36)+1
      NRVX = 0
      MM=NDPL(16)
      L=0
      DO 234 NS = 1,NSETMX
      JM=NJM(NS)
      NX=0
      IF (MM.EQ.0) GO TO 227
      L=MJJR(MM,NS)
  227 DO 228J=1,JM
      IF (NNXTRA(J,NS).NE.10) GO TO 228
      IF (J.NE.L) GO TO 229
      NX=1
      GO TO 228
  228 CONTINUE
      IF (NX.EQ.0) GO TO 232
      GO TO 230
  229 NX=2
  230 DO 231M=1,MMAX
      NACT=NXSET(M)
      NSET=NXODR(NACT)
      IF (NS.NE.NSET) GO TO 231
      IF (NDP(M).LT.0) GO TO 231
      NDP(M)=NX
  231 CONTINUE
      IX(166)=1
      IF (IX(199).GT.0) IX(166)=2
  232 CONTINUE
      DO 233 N = 1,NMAX
      NREL = NJJR(N,NS)
      NRVX = MAX0(NRVX,NREL)
  233 CONTINUE
  234 CONTINUE
      RETURN
 1000 FORMAT('0NO CHAINS FOR SET ',I6)
 1001 FORMAT('0DESCRIPTION OF MICROSCOPIC CROSS SECTIONS')
 1002 FORMAT(1X,I4,I7,I6,2I7,4X,18A4)
 1003 FORMAT('  GROUP  UPPER ENERGY   MEAN ENERGY',
     > '  1/V X-SECTION  DIST.FUNCT')
 1004 FORMAT(1X,I4,1PE16.6,2E14.6,0PF11.6)
 1005 FORMAT('   SUM                                           ',F11.6)
 1006 FORMAT('0SIGMA SET',I3,'HAS',I4,'FOR A NUC. NO.')
 1007 FORMAT('0SIGMA SET',I3,' HAS',I4,' AS LAST NUMBER')
 1008 FORMAT('0**********WARNING----CROSS SECTION SET',I3,
     > '  HAS MORE THAN 20 FISSILE NUCLIDES. '/
     > ' ONLY THE FIRST 20 WILL YIELD FISSION PRODUCTS.')
 1009 FORMAT('0NO FUEL NUCLIDES IN SET',I6)
 1010 FORMAT(' *****WARNING -- NUCLIDES NOT IN SET',20I4/(1X,30I4))
 1011 FORMAT('0CHAIN ARRAY (',I4,')',25I4/(1X,28I4))
 1012 FORMAT('0CHAIN DATA FOR SET',I6,' ,',I6,' CHAINS'/
     > '0 DECAY   CAPTURE / YIELD NUCLIDE',I6,8I10/14X,11I10)
 1013 FORMAT(1X,I4,28X,9F10.7/20X,11F10.7)
 1014 FORMAT(1X,I12,20X,9F10.7/20X,11F10.7)
 1015 FORMAT(1X,I12,'FN CAPT *10000',I5,1H ,9F10.7/20X,11F10.7)
 1016 FORMAT(1X,I12,'FN FISS *1000',I5,2H  ,9F10.7/20X,11F10.7)
 1017 FORMAT('0',10X,'END CHAIN')
 1018 FORMAT('0****DATA ERROR STOP',8I4)
 1019 FORMAT('0  SET   NUCS   GRPS   UPSC   DWSC   ,         TITLE')
      END
COUTC --136 ***CITATION*** PROBLEM EDIT CONTROL/ CF-CALR
C     IF(INDTOR.EQ.0) INITIALIZATION CALCULATION
C*****TX2 IN THE FOLLOWING LINE IS BIK IN CALR
      SUBROUTINE OUTC (A,CONC,BAL,B4,SIG,RATE,XL,XI,TX2,SCAC,NDX,MDX,
     > KDX,IX3738,INDTOR,MVZ,B5)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AMESH/BMESH(30),NREGI,NREGJ,NREGKB,XSHI(100),XSHJ(100),
     > XSHKB(100), MSHI(100),MSHJ(100),MSHKB(100),Y(211),YY(211), X(211)
     >  ,XX(211),Z(211),ZZ(211), ZONVOL(200),AVZPD(200),PDI(211),
     > PDJ(211) , PDK(211)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     >  , XNAME(3,200)
      COMMON/AKADD/KAY(1),K1,K2,K3,K4,K5,K6,K7,K8,K9,K10,K11, K12,K13,
     > K131,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23,K24, K25,K26,K27,
     > K28,K29,K30,K31,K32,K33,K34,K35,K36,K37, K38,K39,K40,K41,K42,K43,
     >  K44,K45,K46,K47,K48,K49, K50,K51,K52,K53,K54,K55,K56,K57,K58,
     > K59, K60,K61,K62, K63,K64,K65,K66,K67,K68,K69,K70,K71,K72,K73,
     > K74,K75, K76,K77,K78,K79,K80,K81,K82,K83,K84,K85,K86,K87, K88,
     > K89,K90, K91,K92,K93,K94,K95,K96,K97,K98, K99,K100,NDATA,KNRGN,
     > KNCOMP, KPVOL,KRVOL,MEMVRY, MEMX
      COMMON/AVDLM/IVDLM(1),IVX,JVX,KBVX,KVX,LVX,MVX,NVX,IVXP1,JVXP1,
     > KBVXP1,NSETVX,NVO,IVO,IVZ,KVZ,NCRP,NSPA,N3DDIM,NBLOCK, JIVX,
     > JIP1VX,JP1IXZ,IOVX,IOVZ
      COMMON/QUEIMA/NBSTEP,NCONJU,NXCON(50),BSTEP(50),FMASS(200),
     > QACUM(200),NXSEC(200),NBUCKB,NOPBUC,BUCBUR(50)
C
      DIMENSION A(1),CONC(NDX,MDX),BAL(KDX,MDX, 8),B4(MDX,KDX), SIG(KDX,
     >  MDX,10),RATE(NDX,MDX,10),XL(6,KDX),XI(KDX),TX2(KDX,20),
     > SCAC(KDX, MDX,KDX)
      DIMENSION B5(MDX,KDX)
      DIMENSION TX1(20)
C
      KNBAL = KVX
      IF (NGC(19).GT.0) GO TO 101
      IF (INDTOR.NE.0) GO TO 101
      REWIND IO1
      DO 100 M = 1,MMAX
      NACT = NXSET(M)
      NSET = NXODR(NACT)
      JM = NJM(NSET)
      WRITE(IO1)(CONC(N,M),N=1,JM)
  100 CONTINUE
      REWIND IO1
  101 CONTINUE
      NGMI = 0
      IF (NUAC(5).GT.10) NGMI = 1
  102 RECPRK = SPARE(18)
      DO 103 M = 1,MMAX
      AVZPD(M) = 0.0
  103 CONTINUE
      DO 105 N = 1,20
      TX1(N) = 0.0
      DO 104 K = 1,KNBAL
      TX2(K,N) = 0.0
  104 CONTINUE
  105 CONTINUE
      ISH=IX(5)
      IF (IX(24).GT.0) ISH=IX(17)
      DO 110 M=1,MMAX
      DO 109 K = 1,KMAX
      BAL(K,M,8) = 0.0
      BAL(K,M,1) = 0.0
      V=B4(M,K)*ZONVOL(M)
      BAL(K,M,2) = B5(M,K)
      IF((ISH.EQ.1).AND.(NSRH(11).EQ.0))
     *BAL(K,M,2) = BAL(K,M,2)+V*SIG(K,M,5)
      BAL(K,M,3) = V*SIG(K,M,4)
      BAL(K,M,4) = V *SIG(K,M,7)
      BAL(K,M,5) = V *SIG(K,M,2)
      BAL(K,M,7) = V *SIG(K,M,9)
      BAL(K,M,2) = BAL(K,M,2)-BAL(K,M,7)
C**************************SEARCH OPTIONS*******************************
      IF (ISH.EQ.(-5)) GO TO 107
      IF (ISH) 106,107,107
  106 BAL(K,M,1) = V *SIG(K,M,5)*SPARE(27)
      IF (ISH.NE.-2) GO TO 107
      T9 = BAL(K,M,1)
      BAL(K,M,1) = 0.0
      IF (T9.NE.0.0) BAL(K,M,7) = T9
  107 CONTINUE
      T1 = 0.0
      DO 108 KK = 1,KMAX
      T1 = T1 + SCAC(KK,M,K)*B4(M,KK)
  108 CONTINUE
      BAL(K,M,6) = T1*ZONVOL(M)
  109 CONTINUE
  110 CONTINUE
      IF (NUAC(3).GT.0) GO TO 139
      CALL RQED(IX(105),IND)
      IF (IND.NE.0) GO TO 124
  111 WRITE(IOUT,1000)
      WRITE(IOUT,1001)
  112 WRITE(IOUT,1002)
      DO 114 K = 1,KMAX
      DO 113 N = 1,6
      TX1(N+13) = TX1(N+13)+XL(N,K)
      TX2(K,12) = TX2(K,12)+XL(N,K)
  113 CONTINUE
  114 CONTINUE
C     AB-2,PR-3,FS-4,OS-5,IS-6,BSQ-7,XE-8,POS-9,SO-10,K-11,
C     TOTLOSS-12,TOTGAIN-13.
      DO 117 K = 1,KMAX
      DO 116 M = 1,MMAX
      DO 115 N = 1,8
      TX2(K,N) = TX2(K,N)+BAL(K,M,N)
      TX1(N) = TX1(N)+BAL(K,M,N)
  115 CONTINUE
  116 CONTINUE
      TX2(K,12) = TX2(K,2)+TX2(K,5)+TX2(K,7)+ TX2(K,8)+TX2(K,1)+XL(1,K)+
     >  XL(2,K)+XL(3,K)+XL(4,K)+XL(5,K)+XL(6,K)
      TX1(12) = TX1(12)+TX2(K,12)
  117 CONTINUE
      DO 118 K = 1,KMAX
      WRITE(IOUT,1003)K,(XL(N,K),N=1,6),TX2(K,7),TX2(K,1),TX2(K,8)
  118 CONTINUE
      WRITE(IOUT,1004)(TX1(N),N=14,19),TX1(7),TX1(1),TX1(8)
      WRITE(IOUT,1005)
      DO 123 K = 1,KMAX
      TX2(K,10) = RECPRK*XI(K)*TX1(3)
      TX1(10) = TX1(10)+TX2(K,10)
      TX2(K,13) = TX2(K,6)+TX2(K,10)
      TX1(13) = TX1(13)+TX2(K,13)
      T1 = TX2(K,12)-TX2(K,6)
      IF (T1) 119,120,119
  119 TX2(K,11) = XI(K)*TX1(3)/T1
  120 T2 = 0.0
      IF (TX2(K,2)) 121,122,121
  121 T2 = TX2(K,3)/TX2(K,2)
  122 WRITE(IOUT,1006)K,TX2(K,2),TX2(K,5),TX2(K,10),TX2(K,6), TX2(K,12),
     >  TX2(K,13),T2
  123 CONTINUE
      WRITE(IOUT,1004)TX1(2),TX1(5),TX1(10),TX1(6),TX1(12),TX1(13)
      IF (MMAX.EQ.1) GO TO 131
  124 CONTINUE
      CALL RQED(IX(106),IND)
      IF (IND.NE.0) GO TO 131
  125 WRITE(IOUT,1007)
      DO 130 M = 1,MMAX
      DO 126 N = 2,9
      TX1(N) = 0.0
  126 CONTINUE
      WRITE(IOUT,1008)M,(XNAME(I,M),I=1,3),ZONVOL(M)
      WRITE(IOUT,1009)
      T1 = 0.0
      DO 127 K = 1,KMAX
      T1 = T1+BAL(K,M,3)
  127 CONTINUE
      T2 = 0.0
      DO 129 K = 1,KMAX
      T3 = RECPRK*XI(K)*T1
      T2 = T2+T3
      WRITE(IOUT,1010)K,BAL(K,M,2),BAL(K,M,5),BAL(K,M,7),BAL(K,M,1),
     > BAL(K,M,8),BAL(K,M,6),T3,BAL(K,M,4),B4(M,K)
      DO 128 N = 1,8
      TX1(N) = TX1(N)+BAL(K,M,N)
  128 CONTINUE
  129 CONTINUE
      WRITE(IOUT,1011)TX1(2),TX1(5),TX1(7),TX1(1),TX1(8),TX1(6),T2,
     > TX1(4)
  130 CONTINUE
  131 CONTINUE
      CALL RQED(IX(109),IND)
      IF (IND.NE.0) GO TO 134
  132 WRITE(IOUT,1012)
      DO 133 M = 1,MMAX
      WRITE(IOUT,1013)M,(XNAME(I,M),I=1,3)
      WRITE(IOUT,1014)(B4(M,K),K=1,KMAX)
  133 CONTINUE
  134 CONTINUE
      IF(IXPUT(24).EQ.0) GO TO 204
      IF(SPARE(9).EQ.0) GO TO 204
      WRITE(IOUT,1016)
      WRITE(IOUT,1014)(QACUM(N),N=1,MMAX)
  204 CONTINUE
      CALL RQED(IX(112),IND)
      IF (IND.NE.0) GO TO 139
  135 WRITE(IOUT,1015)
      DO 138 M = 1,MMAX
      DO 137 K = 1,KMAX
      IF (ZONVOL(M)) 136,137,136
  136 CONTINUE
      AVZPD(M) = AVZPD(M)+BAL(K,M,4)/ZONVOL(M)
  137 CONTINUE
  138 CONTINUE
      WRITE(IOUT,1014)(AVZPD(M),M=1,MMAX)
  139 CONTINUE
      IF(NDPL(24).EQ.0.AND.IXPUT(24).EQ.0)GO TO 203
      IF(IND.EQ.0) GO TO 203
      DO 202 M=1,MMAX
      DO 201 K=1,KMAX
      IF(ZONVOL(M))200,201,200
  200 CONTINUE
      AVZPD(M)=AVZPD(M)+BAL(K,M,4)/ZONVOL(M)
  201 CONTINUE
  202 CONTINUE
  203 CONTINUE
      IF (IX(150).LE.0 .AND. NGC(5).EQ.0) GO TO 140
      CALL CMXS(SIG,SCAC,XI,BAL,A(K6),B4,ZONVOL,KVX,MVX)
  140 CONTINUE
      CALL RQED(IX(110),IND)
      IF (IND.NE.0) GO TO 144
  141 IND = 0
      IF (NGMI.EQ.1) GO TO 142
      CALL POUT (A(K24),A(K41),IND,A(K19),IVX,JVX,KBVX,KVX)
      GO TO 143
  142 CONTINUE
      CALL KOUT (A(K24),A(K41),IND,A(K19),IVX,JVX,KBVX,KVX,JIVX)
  143 CONTINUE
  144 CONTINUE
      IF(NGC(6). NE. -1) GO TO 206
      IND=11
      IF(NGMI.EQ.1) GO TO 205
      CALL POUT (A(K24),A(K41),IND,A(K19),IVX,JVX,KBVX,KVX)
      GO TO 206
  205 CONTINUE
      CALL KOUT (A(K24),A(K41),IND,A(K19),IVX,JVX,KBVX,KVX,JIVX)
  206 CONTINUE
      IF(NGC(7).LT.0) GO TO 145
      IF ((IX(113).EQ.0).AND.(IX(114).EQ.0)) GO TO 151
  145 CONTINUE
      IPRN = 0
      IF (NGMI.EQ.1) GO TO 146
      CALL PDWT (A(K24),A(K41),A(KNRGN),A(KPVOL),IPRN,IVX,JVX,KVX,LVX,
     > SIG,A(KNCOMP),MVX)
      GO TO 147
  146 CONTINUE
      CALL KDWT (A(K24),A(K41),A(KNRGN),A(KPVOL),IPRN,IVX,JVX,KBVX, KVX,
     >  LVX,JIVX,SIG,A(KNCOMP),MVX)
  147 CONTINUE
      CALL RQED(IX(114),IND)
      IF (IND.NE.0) GO TO 151
  148 IND = 1
      IF (NGMI.EQ.1) GO TO 149
      CALL POUT (A(K24),A(K41),IND,A(K19),IVX,JVX,KBVX,KVX)
      GO TO 150
  149 CONTINUE
      CALL KOUT (A(K24),A(K41),IND,A(K19),IVX,JVX,KBVX,KVX,JIVX)
  150 CONTINUE
  151 CONTINUE
      IF(NGC(7).GE.0) GO TO 208
      IND=12
      IF(NGMI.EQ.1) GO TO 207
      CALL POUT (A(K24),A(K41),IND,A(K19),IVX,JVX,KBVX,KVX)
      GO TO 208
  207 CONTINUE
      CALL KOUT (A(K24),A(K41),IND,A(K19),IVX,JVX,KBVX,KVX,JIVX)
  208 CONTINUE
      CALL RQED(IX(115),IND)
      IF (IND.NE.0) GO TO 155
      IF ((IX(113).NE.0).OR.(IX(114).NE.0)) GO TO 153
      IPRN = 1
      IF (NGMI.EQ.1) GO TO 152
      CALL PDWT (A(K24),A(K41),A(KNRGN),A(KPVOL),IPRN,IVX,JVX,KVX,LVX,
     > SIG,A(KNCOMP),MVX)
      GO TO 153
  152 CONTINUE
      CALL KDWT (A(K24),A(K41),A(KNRGN),A(KPVOL),IPRN,IVX,JVX,KBVX, KVX,
     >  LVX,JIVX,SIG,A(KNCOMP),MVX)
  153 CONTINUE
      CALL HEAT (A(K41),A(K19), IVX,JVX,KBVX)
      IND = 8
      IF (NGMI.EQ.1) GO TO 154
      CALL POUT (A(K24),A(K41),IND,A(K19),IVX,JVX,KBVX,KVX)
      GO TO 155
  154 CONTINUE
      CALL KOUT (A(K24),A(K41),IND,A(K19),IVX,JVX,KBVX,KVX,JIVX)
  155 CONTINUE
      IF (NGC(19).GT.0) GO TO 164
      CALL RQED(IX(116),IND)
      IF (IND.NE.0) GO TO 159
  156 CONTINUE
      IF (NGMI.EQ.1) GO TO 157
      CALL NUDN (A(K7),A(KNCOMP),A(K24),A(KNRGN),A(K41),A(K19),IVX,JVX,
     > KBVX,KVX,LVX,MVX,NSETVX)
      GO TO 158
  157 CONTINUE
      CALL KUDN (A(K7),A(KNCOMP),A(K24),A(KNRGN),A(K41),A(K19),IVX,JVX,
     > KBVX,KVX,LVX,MVX,NSETVX,JIVX)
  158 CONTINUE
  159 CONTINUE
      NND = 0
      IF (IX(2).EQ.0) GO TO 160
      CALL RQED(IX(116),IND)
      IF (IND.NE.0) GO TO 163
  160 CONTINUE
      IF (IX(117).LE.0) GO TO 163
  161 CONTINUE
      IF (NGMI.EQ.1) GO TO 162
      CALL PTAB (A(K24),A(K41),A(KNRGN),A(KNCOMP),A(KPVOL),A(K1),A(K2),
     > A(K4),CONC,A(K10),A(K19),IVX,JVX,KBVX,KVX,LVX,MVX,NVX,NSETVX,
     > NND,A(K13),A(K5))
      GO TO 163
  162 CONTINUE
      CALL KTAB (A(K24),A(K41),A(KNRGN),A(KNCOMP),A(KPVOL),A(K1),A(K2),
     > A(K4),CONC,A(K10),A(K19),IVX,JVX,KBVX,KVX,LVX,MVX,NVX,NSETVX,
     > JIVX,NND,A(K13),A(K5))
  163 CONTINUE
      IF (NND.GT.0) GO TO 164
      CALL RQED(IX(119),IND)
      IF (IND.NE.0) GO TO 164
      NND = 1
      GO TO 161
  164 CONTINUE
      IF (NGC(13).GT.0) GO TO 166
      IF (IX(24).EQ.0) GO TO 167
  165 IX(24) = 0
  166 CONTINUE
      IX6364 = K63-K64
      CALL PERT(A(K24),A(K41),SCAC,BAL,A(KNRGN),A(KNCOMP),SIG,A(K10),
     > A(K6),CONC,A(K24),A(K49),A(K7),A(K19),IVX,JVX,KBVX,KVX,LVX,MVX,
     > NVX,NSETVX,IVZ,KVZ,IVXP1,JVXP1,KBVXP1,NBLOCK,JIVX,JIP1VX,JP1IXZ,
     > IOVX,IOVZ,A,MEMVRY,A(K64),IX6364 ,MVZ)
  167 CONTINUE
      IF (NGC(19).GT.0) GO TO 171
      IF (IX(2).EQ.1) GO TO 168
      IF (INDTOR.NE.0) GO TO 169
  168 CONTINUE
      IO1X16=0
      CALL RERT(CONC,A(K9),RATE,A(K1),A(K2),A(K4),A(K5),A(K38), ZONVOL,
     > A(K18),A(K8),A(K43),A(K67),A(K13),KVX,MVX,NVX,NSETVX, NVO,IO1X16)
      IF (IX(2).EQ.1) IO1X16 = 16
      CALL TABL(RATE,A(K10),MVX,NVX,NSETVX,IO1X16)
  169 CONTINUE
      IO1X16 = 0
      IF (NGC(1).NE.0) GO TO 171
      CALL RQED(IX(102),IND)
      IF (IND.NE.0) GO TO 170
      CALL EDIN(CONC,A(K18),A(K9),MVX,NVX,NSETVX,NVO)
  170 CONTINUE
  171 CONTINUE
      RETURN
 1000 FORMAT('0')
 1001 FORMAT('0')
 1002 FORMAT('0GROSS NEUTRON BALANCE              '/
     > '0GRP  LFT LEAKAGE ',
     > ' TOP LEAKAGE  RIT LEAKAGE  BOT LEAKAGE ',
     > ' FNT LEAKAGE  BAK LEAKAGE',
     > '  B**2 LOSSES    1/V LOSS   XENON LOSS')
 1003 FORMAT(1X,I2,1PE14.5,8E13.5)
 1004 FORMAT('0SUM',1P9E13.5)
 1005 FORMAT('0'/' GRP  ABSORPTIONS  OUT-SCATTER    SOURCE',
     >'     IN-SCATTER  TOTAL LOSSES  TOTAL GAINS                    ',
     >'        PROD/ABSORP')
 1006 FORMAT(1X,I2,1PE14.5,5E13.5,E39.5)
 1007 FORMAT('0'/'0GROUP NEUTRON BALANCE FOR EACH ZONE')
 1008 FORMAT('0ZONE NUMBER',I4,'--',3A4,'    VOLUME',1PE13.5)
 1009 FORMAT('0GRP  ABSORPTIONS  OUT-SCATTER  B**2 LOSSES    1/V',
     > ' LOSS   XENON LOSS   IN-SCATTER     SOURCE    POWER(WATTS)',
     > '  AVERAGE FLUX')
 1010 FORMAT(1X,I2,1PE14.5,8E13.5)
 1011 FORMAT('0SUM',1P9E13.5//)
 1012 FORMAT('0'/'0AVERAGE FLUXES BY ZONE AND GROUP')
 1013 FORMAT('0ZONE',I4,'--',3A4)
 1014 FORMAT(1X,1PE14.5,8E13.5)
 1015 FORMAT('0'/'0ZONE AVERAGE POWER DENSITIES(WATTS/CC)')
 1016 FORMAT('0'/'0ZONE AVERAGE ACCUMULATED BURNUP(MWD/T)')
      END
CGRIT --003 ***CITATION*** BLOCK DATA TRANSFER ROUTINE
      SUBROUTINE GRIT (X,I,J,IO,L)
C        X IS THE DATA ARRAY
C        I IS ITS LENGTH
C        J IS THE RECORD ORDER NUMBER
C             WHEN J IS 0, THE UNIT IS ASSUMED TO BE POSITIONED AND
C             NO END OF FILE IS WRITTEN
C        IO IS THE I/O DEVICE, LOGICAL NUMBER
C        L IS THE I/O CONTROL (1- READ, 2- WRITE)
C     WARNING *** USE SYMBOLIC PARAMETERS, NOT NUMBERS
C
      DIMENSION X(I)
C
  100 IF (J.EQ.0) GO TO 102
      REWIND IO
      IF (J.LE.1) GO TO 102
      M=J-1
      DO 101 K=1,M
  101 READ(IO)
  102 IF (L.EQ.1) GO TO 103
      WRITE(IO) X
      IF (J.EQ.0) GO TO 105
      GO TO 104
  103 READ(IO) X
  104 IF (J.EQ.0) GO TO 105
      REWIND IO
  105 RETURN
      END
CRQED --004 ***CITATION*** EDIT REQUIRED/ CF-MANY ROUTINES
C                                            RERT
C     IXED IS THE EDIT OPTION CYCLE
C     IND=0, YES EDIT          IND.NE.0, NO EDIT
      SUBROUTINE RQED(IXED,IND)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
C
  100 IND = 0
      IF (IXED.EQ.0) GO TO 101
      IF (IX(41).GT.0) GO TO 103
      IF (IX(14).EQ.0) GO TO 103
      GO TO 102
  101 IND = 1
      GO TO 103
  102 CONTINUE
      IND = IX(14)-(IX(14)/IXED)*IXED
  103 CONTINUE
      RETURN
      END
COPT1 --007***CITATION*** UPDATE ROUTINE/CF-IPTM
COPT1 CITATION SETUP FOR MICROSCOPIC CROSS-SECTION ROUTINES
C
      SUBROUTINE OPT1(A,MEMORY,IQIN,IQUT,IO2,IO3,IO7,IO8,IO30)
COMMENT CITATION TAPE IS LOGICAL 8
COMMENT EXTERMINATOR-2 TAPE IS LOGICAL 7
COMMENT UPDATED TAPE OR COPY TAPE IS LOGICAL 9
COMMENT TX(18) = FLOAT(LIT)
COMMENT TX(18) = 0.0  FINISHED.
COMMENT TX(18) = 4.0  FINISHED AFTER EDIT OF TITLES, ETC. FROM 8.
COMMENT TX(18) = 5.0  FINISHED AFTER COMPLETE EDIT OF LOGICAL 8.
COMMENT TX(18) = 1.0  EXTERMINATOR-2 TAPE TO CITATION TAPE (1 SET)
COMMENT TX(18) = 2.0  ADD EXTERMINATOR-2 SIGMAS TO CITATION TAPE
COMMENT TX(18) = 3.0  FIRST SET ON CITATION TAPE TO EXTERMINATOR-2 TAPE
COMMENT TX(18) = 6.0  UPDATE CITATION LOG 30 TO NEW LOG. 8.
COMMENT TX(18) = 7.0  TRANSFER SETS FROM LOG. 30 TO LOG. 8.
COMMENT TX(18) = 8.0  READ FULL CITATION CROSS SECTION SET FROM CARDS
COMMENT               AND PUT ON TAPE LOG. 8. SEE SECTION 105 OF THE
COMMENT               CITATION REPORT FOR FORMAT.
COMMENT TX(18) = 9.0  SAME AS 8.0 EXCEPT ADD SET FROM CARDS TO SETS
COMMENT               ALREADY ON LOG. 8.
COMMENT TX(18) =10.0 SELECTED SETS IN CITATION FORMAT ARE TO BE
COMMENT              CONVERTED TO ANISN FORMAT ON TAPE OR PUNCHED CARDS
COMMENT TX(18) = -1.0  SAME AS 1.0 EXCEPT READ CARDS FROM 7090
COMMENT TX(18) = -2.0  SAME AS 2.0 EXCEPT READ CARDS FROM 7090
COMMENT TX(18) = -9.0  SAME AS -1.0 EXCEPT DELETE LAST GROUP
C
      COMMON/SLSUB/ DUM(1),IOIN,IOUT,IOSIG,ICITA,TX18,IPTP,ICI,IOS,IEDT,
     >  NFREC(20),TX(18),TITLE(18),NT(6),GE(10),DL(10),NRON(20),IPUN,
     > IHT, NGG,NSELP(24),I1,I2,I3,I4,KX,NX,MX,LX
      COMMON/SKADD/ KAY(1),K1,K2,K3,K4,K5,K6,K7,K8,K9,K10, K11,K12,K13,
     > K14,K15,K16,K17,K18,K19,K20,MEMMAX,MEMTOT,MEMLFT
C
      DIMENSION A(MEMORY)
C**** ZERO COMMON/SLSUB/
      DO 100 I=1,147
  100 DUM(I) = 0
C**** ZERO COMMON/SKADD/
      DO 101 I=1,24
  101 KAY(I) = 0
      MEMMAX = MEMORY
C**** ZERO DATA ARRAY
      DO 102 I=1,MEMMAX
  102 A(I) = 0.0
      IOIN = IQIN
      IOUT = IQUT
      NFREC(1) = -1
      DO 103 I=2,20
  103 NFREC(I) = I
  104 CONTINUE
      WRITE(IOUT,1002)
C**** DETERMINE MAXIMUM VALUES FOR DIMENSIONS
      KVX = 1
      MVX = 1
      NVX = 1
      LVX = 1
      READ(IOIN,1000)LIT
      IF (LIT.EQ.0) GO TO 119
      TX(18) = 0.0
      IF (LIT.EQ.1) TX(18) = 1.0
      IF (LIT.EQ.2) TX(18) = 2.0
      IF (LIT.EQ.3) TX(18) = 3.0
      IF (LIT.EQ.4) TX(18) = 4.0
      IF (LIT.EQ.5) TX(18) = 5.0
      IF (LIT.EQ.6) TX(18) = 6.0
      IF (LIT.EQ.7) TX(18) = 7.0
      IF (LIT.EQ.8) TX(18) = 8.0
      IF (LIT.EQ.9) TX(18) = 9.0
      IF (LIT.EQ.10) TX(18) = 10.0
      IF (LIT.EQ.-1) TX(18) = -1.0
      IF (LIT.EQ.-2) TX(18) = -2.0
      IF (LIT.EQ.-9) TX(18) = -9.0
      IF (TX(18).EQ.0.0) GO TO 107
      TX18 = TX(18)
      WRITE(IOUT,1001)LIT
      IF (TX18.GT.0.0) GO TO 106
C****                            TX18 = -1.0,-2.0,-9.0
  105 CONTINUE
      READ(IOIN,1007) (TITLE(I),I=1,18)
      READ(IOIN,1008) DUMMY
      READ(IOIN,1008) I1,I2,I3,I4
      KVX = I1
      NVX = I2
      MVX = NVX
      GO TO 117
  106 CONTINUE
      IF (TX18.EQ.1.0) GO TO 108
      IF (TX18.EQ.2.0) GO TO 108
      IF (TX18.EQ.3.0) GO TO 109
      IF (TX18.EQ.4.0) GO TO 117
      IF (TX18.EQ.5.0) GO TO 110
      IF (TX18.EQ.6.0) GO TO 111
      IF (TX18.EQ.7.0) GO TO 112
      IF (TX18.EQ.8.0) GO TO 114
      IF (TX18.EQ.9.0) GO TO 115
      IF (TX18.EQ.10.0) GO TO 116
  107 CONTINUE
      WRITE(IOUT,1009)LIT
      return
C****                           TX18 = 1.0,2.0
  108 CONTINUE
      ICK = IO30
      CALL GETE(ICK,MAXNN,MAXNG,MAXND,MAXNU)
      KVX = MAXNG
      NVX = MAXNN
      MVX = NVX
      GO TO 117
C****                           TX18 = 3.0
  109 CONTINUE
      ICK = IO8
      CALL GETC(ICK,MAXNN,MAXNG,MAXND,MAXNU)
      KVX = MAXNG
      NVX = MAXNN
      MVX = NVX
      GO TO 117
C****                           TX18 = 5.0
  110 CONTINUE
      ICK = IO8
      CALL GETC(ICK,MAXNN,MAXNG,MAXND,MAXNU)
      KVX = MAXNG
      GO TO 117
C****                           TX18 = 6.0
  111 CONTINUE
      ICK = IO30
      CALL GETC(ICK,MAXNN,MAXNG,MAXND,MAXNU)
      KVX = MAXNG
      NVX = MAXNN + 10
      MVX = NVX
      GO TO 117
C****                          TX18 = 7.0
  112 CONTINUE
      READ(IOIN,1008) (NSELP(I),I=1,24)
      MN = 0
      MG = 0
      ICK = IO30
      CALL GETC(ICK,MAXNN,MAXNG,MAXND,MAXNU)
      IF (NSELP(1).LE.0) GO TO 113
      ICK = IO8
      CALL GETC(ICK,MN,MG,MAXND,MAXNU)
  113 KVX = MAX0(MAXNG,MG)
      NVX = MAX0(MAXNN,MN)
      MVX = NVX
      GO TO 117
C****                           TX18 = 8.0
  114 CONTINUE
      READ(IOIN,1007) (TITLE(I),I=1,18)
      READ(IOIN,1010) (NT(I),I=1,6)
      KVX = NT(3)
      NVX = NT(2)
      MVX = NVX
      GO TO 117
C****                           TX18 = 9.0
  115 CONTINUE
      READ(IOIN,1007) (TITLE(I),I=1,18)
      READ(IOIN,1010) (NT(I),I=1,6)
      ICK = IO8
      CALL GETC(ICK,MAXNN,MAXNG,MAXND,MAXNU)
      KVX = MAX0(MAXNG,NT(3))
      NVX = MAX0(MAXNN,NT(2))
      MVX = NVX
      GO TO 117
C****                               TX18 = 10.0
  116 CONTINUE
      READ(IOIN,1008) IPUN,IHT,NGG,(NRON(I),I=1,19)
      IHTT = IHT
      IF (IHTT.LE.0) IHTT = 3
      ICK = IO8
      CALL GETC(ICK,MAXNN,MAXNG,MAXND,MAXNU)
      KVX = MAXNG
      NVX = 1
      MVX = 4
      LVX = (IHTT + MAXNG + MAXNU + 1)*MAXNG
  117 CONTINUE
      KX = KVX
      NX = NVX
      MX = MVX
      LX = LVX
C****                  CALCULATE STARTING ADDRESSES
      K1 = 1
      K2 = K1 + KVX
      K3 = K2 + KVX
      K4 = K3 + KVX
      K5 = K4 + KVX
      K6 = K5 + NVX
      K7 = K6 + NVX
      K8 = K7 + NVX
      K9 = K8 + NVX
      K10 = K9 + NVX
      K11 = K10 + NVX
      K12 = K11 + NVX*66
      K13 = K12 + KVX*NVX
      K14 = K13 + KVX*NVX
      K15 = K14 + KVX*NVX
      K16 = K15 + KVX*NVX
      K17 = K16 + KVX*NVX
      K18 = K17 + KVX*KVX*MVX
      MEMTOT = K18 + LVX
      MEMLFT = MEMMAX - MEMTOT
      IF (MEMTOT.GT.MEMORY) GO TO 118
C
      CALL CSTC(A(K1),A(K2),A(K3),A(K4),A(K5),A(K6),A(K7),A(K8),A(K9),
     > A(K10),A(K11),A(K12),A(K13),A(K14),A(K15),A(K16),A(K17),A(K18),
     > KVX,NVX,MVX,LVX, IO2,IO3,IO7,IO8,IO30)
C
      IF ((TX18.EQ.5.0).OR.(TX18.EQ.4.0)) GO TO 119
      GO TO 104
C
  118 MEMX = MEMTOT - MEMORY
      WRITE(IOUT,1003) KVX,NVX,MVX,LVX
      WRITE(IOUT,1004) MEMMAX,MEMTOT,MEMLFT
      WRITE(IOUT,1005) MEMX
      return
  119 CONTINUE
      RETURN
 1000 FORMAT(I3)
 1001 FORMAT('0*******CONTROL OPTION IS',I3,'*******')
 1002 FORMAT('0'/'0 MICROSCOPIC CROSS-SECTION UPDATING FOLLOWS')
 1003 FORMAT('0 KVX= ',I4,' NVX= ',I4,' MVX= ',I4,' LVX= ',I7)
 1004 FORMAT('0 MEMORY LOCATIONS RESERVED FOR DATA STORAGE---',I6/
     > '  MEMORY LOCATIONS USED FOR THIS PROBLEM-------',I6/
     > '  MEMORY LOCATIONS NOT USED--------------------',I6)
 1005 FORMAT('0 DATA ARRAY ALLOCATION FOR UPDATING HAS BEEN EXCEEDED BY'
     > ,I7,'  WORDS - NOW STOP')
 1006 FORMAT(17A4,E4.0)
 1007 FORMAT(18A4)
 1008 FORMAT(24I3)
 1009 FORMAT('0LIT IS OUT OF RANGE',I6,' NOW STOP')
 1010 FORMAT(6I4)
 1011 FORMAT('0',17A4,F4.1)
      END
CGETC --008***CITATION*** UPDATE ROUTINE/CF-OPT1
CGETC CITATION GET MAXIMUM NUMBER OF NUCLIDES,GROUPS,DOWN-SCAT, AND
C              UP-SCAT FROM A CITATION TAPE
      SUBROUTINE GETC(NC,MAXNN,MAXNG,MAXND,MAXNU)
C
      MAXNN = 0
      MAXNG = 0
      MAXND = 0
      MAXNU = 0
      REWIND NC
      DO 101 NSET=1,100
      READ(NC,END=102)
      READ(NC) NT,NN,NG,ND,NU,NZ
      READ(NC)
      DO 100 I=1,NN
      READ(NC)
      READ(NC)
  100 CONTINUE
      READ(NC)
      MAXNN = MAX0(MAXNN,NN)
      MAXNG = MAX0(MAXNG,NG)
      MAXND = MAX0(MAXND,ND)
      MAXNU = MAX0(MAXNU,NU)
  101 CONTINUE
  102 CONTINUE
      REWIND NC
      RETURN
      END
CGETE --009***CITATION*** UPDATE ROUTINE/CF-OPT1
CGETE CITATION GET MAXIMUM NUMBER OF NUCLIDES,GROUPS,DOWN-SCAT, AND
C              UP-SCAT FROM AN EXTERMINATOR TAPE
      SUBROUTINE GETE(NC,MAXNN,MAXNG,MAXND,MAXNU)
C
      MAXNN = 0
      MAXNG = 0
      MAXND = 0
      MAXNU = 0
      REWIND NC
      DO 101 NSET=1,100
      READ(NC,END=102)
      READ(NC) NG,NN,ND,NU
      DO 100 I=1,NN
      READ(NC)
      READ(NC)
  100 CONTINUE
      READ(NC)
      READ(NC)
      MAXNN = MAX0(MAXNN,NN)
      MAXNG = MAX0(MAXNG,NG)
      MAXND = MAX0(MAXND,ND)
      MAXNU = MAX0(MAXNU,NU)
  101 CONTINUE
  102 CONTINUE
      REWIND NC
      RETURN
      END
CCSTC --010***CITATION*** UPDATE ROUTINE/CF-OPT1
CCSTC CITATION CROSS SECTION TAPE CODE
      SUBROUTINE CSTC(CHI,ET,EM,RV,N1,N2,N3,N4,N5,NAM, HOL,SS1,SS2,SS3,
     > SS4,SS5,SSC,XS,KVX,NVX,MVX,LVX, IO2,IO3,IO7,IO8,IO30)
C
      COMMON/SLSUB/ DUM(1),IOIN,IOUT,IOSIG,ICITA,TX18,IPTP,ICI,IOS,IEDT,
     >  NFREC(20),TX(18),TITLE(18),NT(6),GE(10),DL(10),NRON(20),IPUN,
     > IHT, NGG,NSELP(24),I1,I2,I3,I4,KX,NX,MX,LX
C
      DIMENSION CHI(KVX),ET(KVX),EM(KVX),RV(KVX),N1(NVX),N2(NVX),
     > N3(NVX),N4(NVX),N5(NVX),NAM(NVX),HOL(NVX,66),SS1(KVX,NVX),
     > SS2(KVX,NVX),SS3(KVX,NVX),SS4(KVX,NVX),SS5(KVX,NVX), SSC(KVX,KVX,
     >  MVX),XS(LVX)
C
      ICITA = IO8
      IOSIG = IO30
      IF (TX18) 100,152,115
  100 TX18 = -TX18
      IOSIG = IO2
      REWIND IOSIG
      WRITE(IOSIG)(TITLE(I),I=1,18)
  101 IF (TX18-9.0) 103,102,103
  102 I9 = I1-1
      WRITE(IOSIG)I9,I2,I3,I4
      GO TO 104
  103 CONTINUE
      WRITE(IOSIG)I1,I2,I3,I4
  104 CONTINUE
      DO 111 N = 1,I2
      READ(IOIN,1004)I5,EXTRA
      WRITE(IOSIG)I5,EXTRA
      DO 105 K = 1,I1
      READ(IOIN,1005)SS1(K,1),SS2(K,1),SS3(K,1),SS4(K,1)
  105 CONTINUE
      READ(IOIN,1005)((SSC(K,L,1),L=1,I1),K=1,I1)
  106 IF (TX18-9.0) 109,107,109
  107 CONTINUE
  108 WRITE(IOSIG)(SS1(K,1),SS2(K,1),SS3(K,1),SS4(K,1),K=1,I9),
     > ((SSC(K,L,1),L=1,I9),K=1,I9)
      GO TO 110
  109 CONTINUE
      WRITE(IOSIG)(SS1(K,1),SS2(K,1),SS3(K,1),SS4(K,1),K=1,I1),
     > ((SSC(K,L,1),L=1,I1),K=1,I1)
  110 CONTINUE
  111 CONTINUE
      I6 = -1
      I7 = 1
      WRITE(IOSIG)I6,I7
      READ(IOIN,1005)(CHI(K),K=1,I1)
  112 IF (TX18-9.0) 114,113,114
  113 I1 = I1-1
      TX18 = 1.0
  114 CONTINUE
      WRITE(IOSIG)(CHI(K),K=1,I1)
      REWIND IOSIG
  115 CONTINUE
      REWIND ICITA
      IF (TX18.NE.10.0) GO TO 124
      IF (IPUN.EQ.0) WRITE(IOUT,1007)
      IF (IPUN.GT.0) WRITE(IOUT,1008)
      WRITE(IOUT,1009)(NRON(K),K=1,19)
      IF (IPUN.EQ.0) IPUN = IO30
      NR = IO8
      DO 123 I=1,19
      IF (NRON(I).EQ.0) RETURN
      REWIND ICITA
  116 DO 121 NSET=1,100
      READ(NR,END=124)(TITLE(K),K=1,18)
      IF (NRON(I).NE.NSET) GO TO 117
      CALL RONE(CHI,ET,EM,RV,N1,N2,N3,N4,N5,NAM, HOL,SS1,SS2,SS3,SS4,
     > SS5,SSC,XS,KVX,NVX,MVX,LVX, NR,NSET,KMAX,NMAX,IEND, IO2,IO3,IO7,
     > IO8,IO30)
      GO TO 123
  117 READ(ICITA)(NT(K),K=1,6)
      NN=NT(2)
      READ(ICITA)
      DO 118 NNN=1,NN
      READ(ICITA)
      READ(ICITA)
  118 CONTINUE
      READ(ICITA)IND
      IF (IND) 120,119,119
  119 WRITE(IOUT,1015) NN,IND
      GO TO 152
  120 CONTINUE
  121 CONTINUE
  122 CONTINUE
  123 CONTINUE
  124 CONTINUE
      IF ((TX18.EQ.8.0).OR.(TX18.EQ.9.0)) GO TO 125
      GO TO 126
  125 CALL CRDR(CHI,ET,EM,RV,N1,N2,N3,N4,N5,NAM, HOL,SS1,SS2,SS3,SS4,
     > SS5,SSC,KVX,NVX,MVX, IO2,IO3,IO7,IO8,IO30)
      RETURN
  126 CONTINUE
      IF (TX18-7.0) 127,128,127
  127 CONTINUE
      IF (TX18-6.0) 129,128,129
  128 CONTINUE
      CALL UPDT(CHI,ET,EM,RV,N1,N2,N3,N4,N5,NAM, HOL,SS1,SS2,SS3,SS4,
     > SS5,SSC,KVX,NVX,MVX, IO2,IO3,IO7,IO8,IO30)
      RETURN
  129 CONTINUE
      IF (TX18-5.0) 131,130,131
  130 CONTINUE
      ICI = IO8
      IOS = IO2
      IEDT = 0
      CALL COPY(CHI,ET,EM,RV,N1,N2,N3,N4,N5,NAM, HOL,SS1,SS2,SS3,SS4,
     > SS5,SSC,KVX,NVX,MVX)
      RETURN
  131 CONTINUE
      IF (TX18-4.0) 132,133,132
  132 CONTINUE
      REWIND IOSIG
      IF (TX18-2.0) 139,133,156
  133 CONTINUE
      IF (TX18.EQ.4.0) WRITE(IOUT,1010)
      DO 136 NO = 1,100
C===  NO = NO
      READ(ICITA,END=137)(TX(I),I=1,18)
      IF (TX18.EQ.4.0) WRITE(IOUT,1011)(TX(I),I=1,18)
      READ(ICITA)NT(1),NT(2),NT(3),NT(4),NT(5),NT(6)
      IF (TX18.EQ.4.0) WRITE(IOUT,1012)(NT(I),I=1,6)
      NN = NT(2)
      READ(ICITA)
      DO 134 N = 1,NN
      READ(ICITA)
      READ(ICITA)
  134 CONTINUE
      READ(ICITA)IND
      IF (IND) 136,135,135
  135 WRITE(IOUT,1015)NN,IND
      GO TO 152
  136 CONTINUE
      WRITE(IOUT,1015)NO
      GO TO 152
  137 BACKSPACE ICITA
      IF (TX18-4.0) 139,138,139
  138 REWIND ICITA
      RETURN
  139 CONTINUE
      DO 141 N = 1,NX
      N2(N) = 0
      N3(N) = 0
      N4(N) = 0
      N5(N) = 0
      DO 140 K = 1,KX
      SS5(K,N) = 0.0
  140 CONTINUE
      DO 141 I = 1,66
      HOL(N,I) = 0.0
  141 CONTINUE
      DO 142 K = 1,KX
      ET(K) = 0.0
      EM(K) = 0.0
      RV(K) = 0.0
  142 CONTINUE
      DO 143 I = 1,10
      GE(I) = 0.0
      DL(I) = 0.0
  143 CONTINUE
      NT(1) = 1
      NT(6) = 0
      READ(IOSIG)(TITLE(I),I=1,18)
      READ(IOSIG)NT(3),NT(2),NT(4),NT(5)
      NMAX = NT(2)
      KMAX = NT(3)
      DO 148 N = 1,NMAX
      READ(IOSIG) N1(N)
      NN = N1(N)
      IF (NN) 144,144,145
  144 II = 1
      WRITE(IOUT,1015)II,N,NN
      GO TO 152
  145 CONTINUE
      READ(IOSIG) (SS1(K,N),SS2(K,N),SS3(K,N),SS4(K,N),K=1,KMAX),
     > ((SSC(KK,K,N),KK=1,KMAX),K=1,KMAX)
      T1 = 0.0
      DO 146 K = 1,KMAX
  146 T1 = T1 + SS2(K,N)
      IF (T1) 148,148,147
  147 HOL(N,9) = 3.0E-11
  148 CONTINUE
  149 READ(IOSIG)NN
      IF (NN) 153,150,150
  150 II = 2
  151 CONTINUE
      WRITE(IOUT,1015)II,NN
  152 return
  153 READ(IOSIG)(CHI(K),K=1,KMAX)
      REWIND IOSIG
      WRITE(ICITA)(TITLE(I),I=1,18)
      WRITE(ICITA)NT(1),NT(2),NT(3),NT(4),NT(5),NT(6)
      WRITE(ICITA)(CHI(K),K=1,KMAX),(ET(K),K=1,KMAX), (EM(K),K=1,KMAX),
     > (RV(K),K=1,KMAX),(DL(N), N=1,10),(GE(N),N=1,10)
      DO 154 N = 1,NMAX
      M = N
      WRITE(ICITA)N1(N),N2(N),N3(N),N4(N),N5(N), (HOL(M,I),I=1,66)
      WRITE(ICITA)(SS1(K,M),SS2(K,M),SS3(K,M),SS4(K,M), SS5(K,M),K=1,
     > KMAX),((SSC(KK,K,M),KK=1,KMAX),K=1,KMAX)
  154 CONTINUE
      NN = -1
      WRITE(ICITA)(NFREC(N),N=1,20)
      REWIND ICITA
  155 CONTINUE
      RETURN
  156 CONTINUE
      READ(ICITA)(TITLE(I),I=1,18)
      READ(ICITA)NT(1),NT(2),NT(3),NT(4),NT(5)
      KMAX = NT(3)
      NMAX = NT(2)
      READ(ICITA)(CHI(K),K=1,KMAX)
      DO 157 N = 1,NMAX
      READ(ICITA)N1(N)
      M = N
      READ(ICITA)(SS1(K,M),SS2(K,M),SS3(K,M),SS4(K,M),SS5(K,M), K=1,
     > KMAX),((SSC(KK,K,M),KK=1,KMAX),K=1,KMAX)
  157 CONTINUE
      READ(ICITA)NN
      IF (NN) 159,158,158
  158 II = 3
      GO TO 151
  159 WRITE(IOSIG)(TITLE(I),I=1,18)
      WRITE(IOSIG)NT(3),NT(2),NT(4),NT(5)
      TT11 = 0.0
      DO 160 N = 1,NMAX
      M = N
      WRITE(IOSIG) N1(N),TT11
      WRITE(IOSIG)(SS1(K,M),SS2(K,M),SS3(K,M),SS4(K,M),K=1,KMAX),
     > ((SSC(KK,K,M),KK=1,KMAX),K=1,KMAX)
  160 CONTINUE
      NN = -1
      WRITE(IOSIG)NN,TT11
      WRITE(IOSIG)(CHI(K),K=1,KMAX)
      REWIND ICITA
      REWIND IOSIG
      WRITE(IOUT,1022)
      GO TO 155
 1000 FORMAT(17A4,E4.0)
 1001 FORMAT('1',17A4,F4.1)
 1002 FORMAT(18A4)
 1003 FORMAT(24I3)
 1004 FORMAT(I3,E12.5)
 1005 FORMAT(6E12.5)
 1006 FORMAT(24I3)
 1007 FORMAT('1ANISN CARDS WILL BE PUNCHED')
 1008 FORMAT('1AN ANISN TAPE WILL BE WRITTEN ON LOGICAL 30')
 1009 FORMAT('0THE FOLLOWING CITATION SETS WILL BE CONVERTED  ',20I3)
 1010 FORMAT('0'/'0THE TITLES OF THE CROSS SECTION SETS',
     > ' PRESENTLY ON THIS CITATION'/
     > ' CROSS SECTION LIBRARY TAPE ARE-'///)
 1011 FORMAT('0',18A4)
 1012 FORMAT(' TYPE,NUCS,GRPS,DWS,UPS,X',6I4)
 1013 FORMAT('0THE TITLE OF THE EXTERMINATOR-2 CROSS SECTION SET',
     > ' ADDED TO THE CITATION LIBRARY IS'/'0',10X,18A4)
 1014 FORMAT('0GROUPS AND NUCLIDES ARE',2I3)
 1015 FORMAT('0CROSS SECTION TAPE NO GOOD',3I4)
 1016 FORMAT('0AND CONTAINS THE FOLLOWING NUCLIDES'/(1X,30I4))
 1017 FORMAT('0TYPE,NUCS,GRPS,DWS,UPS,X',6I4)
 1018 FORMAT('0FISSIONSPECTRUM'/(1H ,1P8E14.6))
 1019 FORMAT('0CROSS SECTIONS FOR NUCLIDE',I4)
 1020 FORMAT('0',1P8E14.6)
 1021 FORMAT(1X,1P8E14.6)
 1022 FORMAT('1CITATION TO EXTERMINATOR-2 TAPE MADE')
      END
CCRDR --011***CITATION*** UPDATE ROUTINE/CF-CSTC
CCRDR INPUT A FULL SIGMA SET FROM CARDS
      SUBROUTINE CRDR(CHI,ET,EM,RV,N1,N2,N3,N4,N5,NAM, HOL,SS1,SS2,SS3,
     > SS4,SS5,SSC,KVX,NVX,MVX, IO2,IO3,IO7,IO8,IO30)
C
      COMMON/SLSUB/ DUM(1),IOIN,IOUT,IOSIG,ICITA,TX18,IPTP,ICI,IOS,IEDT,
     >  NFREC(20),TX(18),TITLE(18),NT(6),GE(10),DL(10),NRON(20),IPUN,
     > IHT, NGG,NSELP(24),I1,I2,I3,I4,KX,NX,MX,LX
C
      DIMENSION CHI(KVX),ET(KVX),EM(KVX),RV(KVX),N1(NVX),N2(NVX),
     > N3(NVX),N4(NVX),N5(NVX),NAM(NVX),HOL(NVX,66),SS1(KVX,NVX),
     > SS2(KVX,NVX),SS3(KVX,NVX),SS4(KVX,NVX),SS5(KVX,NVX), SSC(KVX,KVX,
     >  MVX)
      DIMENSION THOL(6)
C
      KMAX = NT(3)
      READ(IOIN,1002)(CHI(K),K=1,KMAX)
      READ(IOIN,1002)(ET(K),K=1,KMAX)
      READ(IOIN,1002)(EM(K),K=1,KMAX)
      READ(IOIN,1002)(RV(K),K=1,KMAX)
      READ(IOIN,1002)(DL(N),N=1,10)
      READ(IOIN,1002)(GE(N),N=1,10)
      NMAX = NT(2)
      DO 105 N = 1,NMAX
      READ(IOIN,1003)N1(N),N2(N),N3(N),N4(N),N5(N), (THOL(I),I=1,6)
      DO 100 I = 1,6
      HOL(N,I) = THOL(I)
  100 CONTINUE
      READ(IOIN,1002)(HOL(N,I),I=7,66)
      DO 103 K = 1,KMAX
      IF (N3(N)-2) 101,101,102
  101 READ(IOIN,1002)SS1(K,N),SS2(K,N),SS3(K,N),SS4(K,N),SS5(K,N)
      GO TO 103
  102 SS1(K,N) = 0.0
  103 CONTINUE
      IF (N3(N)) 104,104,105
  104 READ(IOIN,1002)((SSC(KK,K,N),KK=1,KMAX),K=1,KMAX)
  105 CONTINUE
      NW = IO8
      IF (TX18.EQ.9.0) NW = IO2
      IF (TX18.EQ.9.0) REWIND IO2
      IEND = -1
      NSET = 1
      CALL WALL(CHI,ET,EM,RV,N1,N2,N3,N4,N5,NAM, HOL,SS1,SS2,SS3,SS4,
     > SS5,SSC,KVX,NVX,MVX,NW,NSET,KMAX,NMAX,IEND)
      REWIND NW
      IF (TX18.EQ.9.0) GO TO 106
      WRITE(IOUT,1004)
      GO TO 109
  106 NR = IO8
      DO 107 NSET = 1,100
      READ(NR,END=108)(TITLE(I),I=1,18)
      CALL RALL(CHI,ET,EM,RV,N1,N2,N3,N4,N5,NAM, HOL,SS1,SS2,SS3,SS4,
     > SS5,SSC,KVX,NVX,MVX,NR,NSET,KMAX,NMAX,IEND, IO2,IO3,IO7,IO8,IO30)
  107 CONTINUE
  108 BACKSPACE NR
      IEND = -1
      NR = IO2
      NSETT = 1
      READ(NR)(TITLE(I),I=1,18)
      CALL RALL(CHI,ET,EM,RV,N1,N2,N3,N4,N5,NAM, HOL,SS1,SS2,SS3,SS4,
     > SS5,SSC,KVX,NVX,MVX,NR,NSETT,KMAX,NMAX,IEND, IO2,IO3,IO7,IO8,
     > IO30)
      REWIND NR
      NW = IO8
      NSET = NSET+1
      CALL WALL(CHI,ET,EM,RV,N1,N2,N3,N4,N5,NAM, HOL,SS1,SS2,SS3,SS4,
     > SS5,SSC,KVX,NVX,MVX,NW,NSET,KMAX,NMAX,IEND)
      REWIND NW
      WRITE(IOUT,1005)
  109 CONTINUE
      RETURN
 1000 FORMAT(18A4)
 1001 FORMAT(6I4)
 1002 FORMAT(6E12.8)
 1003 FORMAT(I4,I8,3I4,6A4)
 1004 FORMAT('0'/'0NEW CROSS SECTION TAPE 8 MADE')
 1005 FORMAT('0'/'0CROSS SECTION SET ADDED TO TAPE 8')
      END
CUPDT --012***CITATION*** UPDATE ROUTINE/CF-CSTC
      SUBROUTINE UPDT(CHI,ET,EM,RV,N1,N2,N3,N4,N5,NAM, HOL,SS1,SS2,SS3,
     > SS4,SS5,SSC,KVX,NVX,MVX, IO2,IO3,IO7,IO8,IO30)
C
      COMMON/SLSUB/ DUM(1),IOIN,IOUT,IOSIG,ICITA,TX18,IPTP,ICI,IOS,IEDT,
     >  NFREC(20),TX(18),TITLE(18),NT(6),GE(10),DL(10),NRON(20),IPUN,
     > IHT, NGG,NSELP(24),I1,I2,I3,I4,KX,NX,MX,LX
C
      DIMENSION CHI(KVX),ET(KVX),EM(KVX),RV(KVX),N1(NVX),N2(NVX),
     > N3(NVX),N4(NVX),N5(NVX),NAM(NVX),HOL(NVX,66),SS1(KVX,NVX),
     > SS2(KVX,NVX),SS3(KVX,NVX),SS4(KVX,NVX),SS5(KVX,NVX), SSC(KVX,KVX,
     >  MVX)
      DIMENSION NSELT(24)
      DIMENSION SIXA4(6),SIXA(6)
      CHARACTER*4 SIXA4, SIXA, HOL
C
      DATA SIXA4/6*'    '/
C
      IF (TX18-7.0) 112,100,112
  100 NSELT(24) = 0
      DO 102 I = 2,23
      IF (NSELP(I)) 103,103,101
  101 ICOUNT = I-1
      NSELT(I-1) = NSELP(I)
  102 CONTINUE
  103 WRITE(IOUT,1001)(NSELT(I),I=1,ICOUNT)
      NR = IO30
      NW = IO8
      REWIND NW
      IF (NSELP(1)) 107,107,104
  104 DO 105 NSET = 1,100
      READ(NW,END=106)(TITLE(I),I=1,18)
      CALL RALL(CHI,ET,EM,RV,N1,N2,N3,N4,N5,NAM, HOL,SS1,SS2,SS3,SS4,
     > SS5,SSC,KVX,NVX,MVX,NW,NSET,KMAX,NMAX,IEND, IO2,IO3,IO7,IO8,IO30)
  105 CONTINUE
  106 BACKSPACE NW
  107 CONTINUE
      DO 110 NSET = 1,100
      READ(NR,END=111)(TITLE(I),I=1,18)
      CALL RALL(CHI,ET,EM,RV,N1,N2,N3,N4,N5,NAM, HOL,SS1,SS2,SS3,SS4,
     > SS5,SSC,KVX,NVX,MVX,NR,NSET,KMAX,NMAX,IEND, IO2,IO3,IO7,IO8,IO30)
      DO 108 I = 1,ICOUNT
      IF (NSELT(I)-NSET) 108,109,108
  108 CONTINUE
      GO TO 110
  109 CALL WALL(CHI,ET,EM,RV,N1,N2,N3,N4,N5,NAM, HOL,SS1,SS2,SS3,SS4,
     > SS5,SSC,KVX,NVX,MVX,NW,NSET,KMAX,NMAX,IEND)
  110 CONTINUE
  111 CONTINUE
      REWIND NR
      REWIND NW
      WRITE(IOUT,1002)
      GO TO 154
  112 CONTINUE
      NW = IO2
      ICI = IO30
      IOS = IO3
      IEDT = 1
      CALL COPY(CHI,ET,EM,RV,N1,N2,N3,N4,N5,NAM, HOL,SS1,SS2,SS3,SS4,
     > SS5,SSC,KVX,NVX,MVX)
      NR = IO3
      REWIND NW
  113 READ(IOIN,1003)ISSET,INUC,IREC,IDUM,(SIXA(I),I=1,6)
  114 CONTINUE
      IF (INUC-200) 115,115,153
  115 IF (ISSET) 150,150,116
  116 DO 118 NSET = 1,ISSET
      READ(NR,END=151)(TITLE(I),I=1,18)
      CALL RALL(CHI,ET,EM,RV,N1,N2,N3,N4,N5,NAM, HOL,SS1,SS2,SS3,SS4,
     > SS5,SSC,KVX,NVX,MVX,NR,NSET,KMAX,NMAX,IEND, IO2,IO3,IO7,IO8,IO30)
      IF (NSET-ISSET) 117,119,119
  117 CALL WALL(CHI,ET,EM,RV,N1,N2,N3,N4,N5,NAM, HOL,SS1,SS2,SS3,SS4,
     > SS5,SSC,KVX,NVX,MVX,NW,NSET,KMAX,NMAX,IEND)
  118 CONTINUE
  119 IF (INUC) 120,120,127
  120 IF (IREC-2) 121,125,126
  121 READ(IOIN,1004)(TITLE(I),I=1,18)
  122 READ(IOIN,1003)ISSET,INUC,IREC,IDUM,(SIXA(I),I=1,6)
      IF (ISSET.NE.0) GO TO 124
  123 CALL WART(CHI,ET,EM,RV,N1,N2,N3,N4,N5,NAM, HOL,SS1,SS2,SS3,SS4,
     > SS5,SSC,KVX,NVX,MVX,NW,NSET,KMAX,NMAX,IEND)
      NNRR = 1
      GO TO 147
  124 IF (ISSET.EQ.NSET) GO TO 119
      CALL WART(CHI,ET,EM,RV,N1,N2,N3,N4,N5,NAM, HOL,SS1,SS2,SS3,SS4,
     > SS5,SSC,KVX,NVX,MVX,NW,NSET,KMAX,NMAX,IEND)
      NNRR = 0
      GO TO 147
  125 READ(IOIN,1005)NT(1),NT(2),NT(3),NT(4),NT(5),NT(6)
      GO TO 122
  126 READ(IOIN,1006)(CHI(K),K=1,KMAX)
      READ(IOIN,1006)(ET(K),K=1,KMAX)
      READ(IOIN,1006)(EM(K),K=1,KMAX)
      READ(IOIN,1006)(RV(K),K=1,KMAX)
      READ(IOIN,1006)(DL(N),N=1,10)
      READ(IOIN,1006)(GE(N),N=1,10)
      GO TO 122
  127 DO 128 N = 1,NMAX
      NNN = N
      IF (N1(N)-INUC) 128,133,128
  128 CONTINUE
      IF (IREC.EQ.0) GO TO 129
      WRITE(IOUT,1007)INUC,ISSET,IREC,(SIXA(I),I=1,6)
      return
  129 CONTINUE
      NT(2) = NT(2)+1
      NMAX = NMAX+1
      READ(IOIN,1008)N1(NMAX),N2(NMAX),N3(NMAX),N4(NMAX), N5(NMAX),
     > (HOL(NMAX,I),I=1,6)
      N1(NMAX) = INUC
      READ(IOIN,1006)(HOL(NMAX,I),I=7,66)
      M = NMAX
      DO 131 K = 1,KMAX
      IF (N3(NMAX).LT.3) GO TO 130
      SS1(K,M) = 0.0
      GO TO 131
  130 READ(IOIN,1006)SS1(K,M),SS2(K,M),SS3(K,M),SS4(K,M),SS5(K,M)
  131 CONTINUE
      IF (N3(NMAX).NE.0) GO TO 132
      READ(IOIN,1006)((SSC(KK,K,M),KK=1,KMAX),K=1,KMAX)
  132 IEND = -1
      GO TO 122
  133 M = NNN
      DO 134 I = 1,6
      IF (SIXA(I).NE.SIXA4(I)) GO TO 135
  134 CONTINUE
      GO TO 137
  135 DO 136 I = 1,6
      HOL(M,I) = SIXA(I)
  136 CONTINUE
  137 CONTINUE
      IF (IDUM.LE.0) GO TO 138
      N5(NNN)=IDUM
  138 IF (IREC-3) 139,140,143
  139 IF (IREC-2) 140,141,122
  140 READ(IOIN,1008)N1(NNN),N2(NNN),N3(NNN),N4(NNN),N5(NNN), (HOL(M,I),
     >  I=1,6)
      READ(IOIN,1006)(HOL(M,I),I=7,66)
      IF (IREC-3) 122,141,122
  141 DO 142 K = 1,KMAX
      READ(IOIN,1006)SS1(K,M),SS2(K,M),SS3(K,M),SS4(K,M), SS5(K,M)
  142 CONTINUE
      READ(IOIN,1006)((SSC(KK,K,M),KK=1,KMAX),K=1,KMAX)
      GO TO 122
  143 IF (IREC-6) 145,144,145
  144 READ(IOIN,1006)(HOL( M , I ),I=7,12)
      GO TO 122
  145 DO 146 K = 1,KMAX
      READ(IOIN,1006)SS1(K,M),SS2(K,M),SS3(K,M),SS4(K,M), SS5(K,M)
  146 CONTINUE
      GO TO 122
  147 CONTINUE
      NSTRT = ISSET+1
      DO 148 NSET = NSTRT,100
      READ(NR,END=149) (TITLE(I),I=1,18)
      CALL RALL(CHI,ET,EM,RV,N1,N2,N3,N4,N5,NAM, HOL,SS1,SS2,SS3,SS4,
     > SS5,SSC,KVX,NVX,MVX,NR,NSET,KMAX,NMAX,IEND, IO2,IO3,IO7,IO8,IO30)
      CALL WALL(CHI,ET,EM,RV,N1,N2,N3,N4,N5,NAM, HOL,SS1,SS2,SS3,SS4,
     > SS5,SSC,KVX,NVX,MVX,NW,NSET,KMAX,NMAX,IEND)
  148 CONTINUE
  149 REWIND NR
      REWIND NW
      ICI = IO2
      IOS = IO3
      IEDT = 1
      CALL COPY(CHI,ET,EM,RV,N1,N2,N3,N4,N5,NAM, HOL,SS1,SS2,SS3,SS4,
     > SS5,SSC,KVX,NVX,MVX)
      IF (NNRR.EQ.1) GO TO 150
      GO TO 114
  150 ICI = IO3
      IOS = IO8
      IEDT = 1
      WRITE(IOUT,1009)
      CALL COPY(CHI,ET,EM,RV,N1,N2,N3,N4,N5,NAM, HOL,SS1,SS2,SS3,SS4,
     > SS5,SSC,KVX,NVX,MVX)
      GO TO 154
  151 WRITE(IOUT,1010)NSET
      IEDT = 0
      ICI = NR
      IOS = IO2
      CALL COPY(CHI,ET,EM,RV,N1,N2,N3,N4,N5,NAM, HOL,SS1,SS2,SS3,SS4,
     > SS5,SSC,KVX,NVX,MVX)
  152 return
  153 WRITE(IOUT,1011)INUC
      GO TO 152
  154 CONTINUE
      RETURN
 1000 FORMAT(24I3)
 1001 FORMAT(1X/' THE FOLLOWING CROSS SECTION SETS WILL BE TRANSFERED FR
     >OM LOG. TAPE 30 TO LOG. TAPE 8'/1X,23I4)
 1002 FORMAT(1X/' TRANSFER COMPLETED')
 1003 FORMAT(4I3,6A4)
 1004 FORMAT(18A4)
 1005 FORMAT(6I4)
 1006 FORMAT(6E12.8)
 1007 FORMAT('0NUCLIDE',I4,'  IS NOT IN CROSS SECTION SET',I3,
     > '  AND RECORD NUMBER IS',I4,'--NOT ZERO'/
     > ' NUCLIDE NAME IS  ',6A4)
 1008 FORMAT(I4,I8,3I4,6A4)
 1009 FORMAT('0UPDATE COMPLETE - EDIT OF THE UPDATED TAPE(LOGICAL 8) FOL
     >LOWS')
 1010 FORMAT('0SET NUMBER',I3,'  IS NOT ON THE TAPE  AND EDIT OF THE TAP
     >E FOLLOWS')
 1011 FORMAT('0INPUT NUC.NO.',I3,'  EXCEEDS 200')
      END
CRONE --013***CITATION*** UPDATE ROUTINE/CF-CSTC
CRONE READ SIGMAS FOR 1 NUCLIDE
      SUBROUTINE RONE(CHI,ET,EM,RV,N1,N2,N3,N4,N5,NAM, HOL,SS1,SS2,SS3,
     > SS4,SS5,SSC,XS,KVX,NVX,MVX,LVX, NR,NSET,KMAX,NMAX,IEND, IO2,IO3,
     > IO7,IO8,IO30)
C
      COMMON/SLSUB/ DUM(1),IOIN,IOUT,IOSIG,ICITA,TX18,IPTP,ICI,IOS,IEDT,
     >  NFREC(20),TX(18),TITLE(18),NT(6),GE(10),DL(10),NRON(20),IPUN,
     > IHT, NGG,NSELP(24),I1,I2,I3,I4,KX,NX,MX,LX
C
      DIMENSION CHI(KVX),ET(KVX),EM(KVX),RV(KVX),N1(NVX),N2(NVX),
     > N3(NVX),N4(NVX),N5(NVX),NAM(NVX),HOL(NVX,66),SS1(KVX,NVX),
     > SS2(KVX,NVX),SS3(KVX,NVX),SS4(KVX,NVX),SS5(KVX,NVX), SSC(KVX,KVX,
     >  MVX),XS(LVX)
      DIMENSION RON(6)
C
      WRITE(IOUT,1000)(TITLE(I),I=1,18)
      READ(NR)NT(1),NT(2),NT(3),NT(4),NT(5),NT(6)
      KMAX = NT(3)
      IF (IHT.LE.0) IHT=3
      IF (NGG.LE.0) NGG=IHT+NT(5)+1
      LENGTH=NGG+KMAX
      READ(NR)(CHI(K),K=1,KMAX),(ET(K),K=1,KMAX), (EM(K),K=1,KMAX),
     > (RV(K),K=1,KMAX), (DL(N),N=1,10),(GE(N),N=1,10)
      NMAX = NT(2)
      DO 105 N = 1,NMAX
      READ(NR)N1(1),N2(1),N3(1),N4(1),N5(1),(HOL(1,I),I=1,66)
      NPN=N4(1)+1
      IF (N3(1)-1) 100,101,102
  100 READ(NR)(SS1(K,1),SS2(K,1),SS3(K,1),SS4(K,1),SS5(K,1), K=1,KMAX),
     > (((SSC(KK,K,M),KK=1,KMAX),K=1,KMAX),M=1,NPN)
      GO TO 103
  101 READ(NR)(SS1(K,1),SS2(K,1),SS3(K,1),SS4(K,1),SS5(K,1), K=1,KMAX)
      GO TO 103
  102 READ(NR)(SS1(K,1),K=1,KMAX)
  103 CONTINUE
      DO 104 II=1,6
  104 RON(II)=HOL(1,II)
      CALL SNSN(SS1(1,1),SS2(1,1),SS4(1,1),SS3(1,1),KMAX,NGG,LENGTH,
     > SSC(1,1,1),NPN,XS(1 ),IPUN,RON(1) ,SS5(1,1),KVX)
  105 CONTINUE
      READ(NR)IEND
      IF (IEND) 108,106,106
  106 WRITE(IOUT,1001)NSET,IEND
  107 IEDT = 0
      ICI = NR
      IOS = IO2
      CALL COPY(CHI,ET,EM,RV,N1,N2,N3,N4,N5,NAM, HOL,SS1,SS2,SS3,SS4,
     > SS5,SSC,KVX,NVX,MVX)
      return
  108 CONTINUE
      RETURN
 1000 FORMAT('0CITATION SET TITLE    *****    ' ,18A4)
 1001 FORMAT('0SET NUMBER',I3,'  ENDS WITH',I3,'  INSTEAD OF A NEGATIVE
     >INTEGER - EDIT FOLLOWS')
      END
CRALL --014***CITATION*** UPDATE ROUTINE/CF-CRDR,UPDT
CRALL READ SIGMAS FOR 1 SET
      SUBROUTINE RALL(CHI,ET,EM,RV,N1,N2,N3,N4,N5,NAM, HOL,SS1,SS2,SS3,
     > SS4,SS5,SSC,KVX,NVX,MVX,NR,NSET,KMAX,NMAX,IEND, IO2,IO3,IO7,IO8,
     > IO30)
C
      COMMON/SLSUB/ DUM(1),IOIN,IOUT,IOSIG,ICITA,TX18,IPTP,ICI,IOS,IEDT,
     >  NFREC(20),TX(18),TITLE(18),NT(6),GE(10),DL(10),NRON(20),IPUN,
     > IHT, NGG,NSELP(24),I1,I2,I3,I4,KX,NX,MX,LX
C
      DIMENSION CHI(KVX),ET(KVX),EM(KVX),RV(KVX),N1(NVX),N2(NVX),
     > N3(NVX),N4(NVX),N5(NVX),NAM(NVX),HOL(NVX,66),SS1(KVX,NVX),
     > SS2(KVX,NVX),SS3(KVX,NVX),SS4(KVX,NVX),SS5(KVX,NVX), SSC(KVX,KVX,
     >  MVX)
C
      READ(NR)NT(1),NT(2),NT(3),NT(4),NT(5),NT(6)
      KMAX = NT(3)
      READ(NR)(CHI(K),K=1,KMAX),(ET(K),K=1,KMAX), (EM(K),K=1,KMAX),
     > (RV(K),K=1,KMAX), (DL(N),N=1,10),(GE(N),N=1,10)
      NMAX = NT(2)
      DO 104 N = 1,NMAX
      READ(NR)N1(N),N2(N),N3(N),N4(N),N5(N),(HOL(N,I),I=1,66)
      IF (N3(N)-1) 100,101,102
  100 READ(NR)(SS1(K,N),SS2(K,N),SS3(K,N),SS4(K,N),SS5(K,N), K=1,KMAX),
     > ((SSC(KK,K,N),KK=1,KMAX),K=1,KMAX)
      GO TO 103
  101 READ(NR)(SS1(K,N),SS2(K,N),SS3(K,N),SS4(K,N),SS5(K,N), K=1,KMAX)
      GO TO 103
  102 READ(NR)(SS1(K,N),K=1,KMAX)
  103 CONTINUE
  104 CONTINUE
      READ(NR)IEND
      IF (IEND) 107,105,105
  105 WRITE(IOUT,1000)NSET,IEND
  106 IEDT = 0
      ICI = NR
      IOS = IO2
      CALL COPY(CHI,ET,EM,RV,N1,N2,N3,N4,N5,NAM, HOL,SS1,SS2,SS3,SS4,
     > SS5,SSC,KVX,NVX,MVX)
      return
  107 CONTINUE
      RETURN
 1000 FORMAT('0SET NUMBER',I3,'  ENDS WITH',I3,'  INSTEAD OF A NEGATIVE
     >INTEGER - EDIT FOLLOWS')
      END
CCOPY --015***CITATION*** UPDATE ROUTINE/CF-CSTC,UPDT,RALL,RONE
CCOPY EDIT AND COPY SUBROUTINE FOR CITATION TAPE MAKER
      SUBROUTINE COPY(CHI,ET,EM,RV,N1,N2,N3,N4,N5,NAM, HOL,SS1,SS2,SS3,
     > SS4,SS5,SSC,KVX,NVX,MVX)
C
      COMMON/SLSUB/ DUM(1),IOIN,IOUT,IOSIG,ICITA,TX18,IPTP,ICI,IOS,IEDT,
     >  NFREC(20),TX(18),TITLE(18),NT(6),GE(10),DL(10),NRON(20),IPUN,
     > IHT, NGG,NSELP(24),I1,I2,I3,I4,KX,NX,MX,LX
C
      DIMENSION CHI(KVX),ET(KVX),EM(KVX),RV(KVX),N1(NVX),N2(NVX),
     > N3(NVX),N4(NVX),N5(NVX),NAM(NVX),HOL(NVX,66),SS1(KVX,NVX),
     > SS2(KVX,NVX),SS3(KVX,NVX),SS4(KVX,NVX),SS5(KVX,NVX), SSC(KVX,KVX,
     >  MVX)
C
      REWIND ICI
      REWIND IOS
      IF (IEDT) 100,100,102
  100 CONTINUE
  101 WRITE(IOUT,1000)
  102 CONTINUE
      DO 129 NSET = 1,50
      IF (IEDT) 103,103,104
  103 CONTINUE
      WRITE(IOUT,1001)NSET
  104 CONTINUE
      READ(ICI,END=130)(TITLE(I),I=1,18)
      WRITE(IOS)(TITLE(I),I=1,18)
      IF (IEDT) 105,105,106
  105 CONTINUE
      WRITE(IOUT,1002)
      WRITE(IOUT,1003)(TITLE(I),I=1,18)
  106 CONTINUE
      READ(ICI)NT(1),NT(2),NT(3),NT(4),NT(5),NT(6)
      WRITE(IOS)NT(1),NT(2),NT(3),NT(4),NT(5),NT(6)
      IF (IEDT) 107,107,108
  107 CONTINUE
      WRITE(IOUT,1005)
      WRITE(IOUT,1004)(NT(I),I=1,6)
  108 CONTINUE
      KMAX = NT(3)
      READ(ICI)(CHI(K),K=1,KMAX),(ET(K),K=1,KMAX), (EM(K),K=1,KMAX),
     > (RV(K),K=1,KMAX),(DL(N),N=1,10), (GE(N),N=1,10)
      WRITE(IOS)(CHI(K),K=1,KMAX),(ET(K),K=1,KMAX), (EM(K),K=1,KMAX),
     > (RV(K),K=1,KMAX),(DL(N),N=1,10), (GE(N),N=1,10)
      IF (IEDT) 109,109,110
  109 CONTINUE
      WRITE(IOUT,1006)
      WRITE(IOUT,1007)(CHI(K),K=1,KMAX)
      WRITE(IOUT,1008)( ET(K),K=1,KMAX)
      WRITE(IOUT,1009)( EM(K),K=1,KMAX)
      WRITE(IOUT,1010)( RV(K),K=1,KMAX)
      WRITE(IOUT,1012)( DL(N),N=1,10)
      WRITE(IOUT,1011)( GE(N),N=1,10)
  110 CONTINUE
      NMAX = NT(2)
      IR = 3
      DO 126 N = 1,NMAX
      IR = IR+1
      READ(ICI) N1(1),N2(1),N3(1),N4(1),N5(1),(HOL(1,I),I=1,66)
      IEND = N1(1)
      WRITE(IOS) N1(1),N2(1),N3(1),N4(1),N5(1),(HOL(1,I),I=1,66)
      IF (IEDT) 111,111,112
  111 CONTINUE
      WRITE(IOUT,1013)IR
      WRITE(IOUT,1014) N1(1),N2(1),N3(1),N4(1),N5(1),(HOL(1,I),I=1,66)
  112 CONTINUE
      IR = IR+1
      IF (IEND) 132,132,113
  113 IF (IEDT) 114,114,115
  114 CONTINUE
      WRITE(IOUT,1015)IR
  115 CONTINUE
      IF (N3(1)-1) 116,119,122
  116 READ(ICI)(SS1(K,1),SS2(K,1),SS3(K,1),SS4(K,1),SS5(K,1), K=1,KMAX),
     >  ((SSC(KK,K,1),KK=1,KMAX),K=1,KMAX)
      WRITE(IOS)(SS1(K,1),SS2(K,1),SS3(K,1),SS4(K,1),SS5(K,1), K=1,KMAX)
     >  ,((SSC(KK,K,1),KK=1,KMAX),K=1,KMAX)
      IF (IEDT) 117,117,118
  117 CONTINUE
      WRITE(IOUT,1016)(SS1(K,1),SS2(K,1),SS3(K,1),SS4(K,1),SS5(K,1), K=
     > 1,KMAX)
      WRITE(IOUT,1017)((SSC(KK,K,1),KK=1,KMAX),K=1,KMAX)
  118 CONTINUE
      GO TO 125
  119 READ(ICI)(SS1(K,1),SS2(K,1),SS3(K,1),SS4(K,1),SS5(K,1), K=1,KMAX)
      WRITE(IOS)(SS1(K,1),SS2(K,1),SS3(K,1),SS4(K,1),SS5(K,1), K=1,KMAX)
      IF (IEDT) 120,120,121
  120 CONTINUE
      WRITE(IOUT,1016)(SS1(K,1),SS2(K,1),SS3(K,1),SS4(K,1),SS5(K,1), K=
     > 1,KMAX)
  121 CONTINUE
      GO TO 125
  122 READ(ICI)(SS1(K,1),K=1,KMAX)
      WRITE(IOS)(SS1(K,1),K=1,KMAX)
      IF (IEDT) 123,123,124
  123 CONTINUE
      WRITE(IOUT,1018)(SS1(K,1),K=1,KMAX)
  124 CONTINUE
  125 CONTINUE
  126 CONTINUE
      READ(ICI)IEND
      WRITE(IOS)(NFREC(N),N=1,20)
      IR = IR+1
      IF (IEDT) 127,127,128
  127 CONTINUE
      WRITE(IOUT,1019)IR,IEND
  128 CONTINUE
      IF (IEND) 129,132,132
  129 CONTINUE
  130 REWIND ICI
  131 CONTINUE
      REWIND IOS
      GO TO 133
  132 WRITE(IOUT,1020)IEND
      GO TO 130
  133 CONTINUE
      RETURN
 1000 FORMAT('1EDIT OF CITATION CROSS SECTION TAPE FOLLOWS')
 1001 FORMAT('0'/'0CROSS SECTION SET',I3)
 1002 FORMAT('0RECORD 1')
 1003 FORMAT(' TITLE ***** ',18A4)
 1004 FORMAT(' DATA TYPE, NO.NUCS, NO.GRPS, DWSCAT, UPSCAT, EXTRA',6I4)
 1005 FORMAT('0RECORD 2')
 1006 FORMAT('0RECORD 3')
 1007 FORMAT(' GROUP CHIS'/(1X,1P9E14.6))
 1008 FORMAT(' UPPER ENERGY OF EACH GROUP'/(1X,1P9E14.6))
 1009 FORMAT(' MEAN ENERGY OF EACH GROUP'/(1X,1P9E14.6))
 1010 FORMAT(' 1/V SIGMA FOR EACH GROUP'/(1X,1P9E14.6))
 1011 FORMAT(' GAMMA ENERGY STRUCTURE'/(1X,1P9E14.6))
 1012 FORMAT(' DELAYED NEUT. PRECURSOR DECAY CONSTS.'/(1X,1P9E14.6))
 1013 FORMAT('0RECORD',I3)
 1014 FORMAT(' SIMPLE NUC.NO, OTHER NUC.NO, SIGMA IND, SCAT.IND, EXTRA',
     >I5,I9,3I5/' NAME ***** ',6A4/' GENERAL DATA'/(1X,1P9E14.6))
 1015 FORMAT('0RECORD',I3/'    (SIGA(K), SIGF(K), SIGTR(K), SNU(K), SIGX
     >(K), K=1,KMAX)/((SIGS(KK,K),KK=1,KMAX),K=1,KMAX)')
 1016 FORMAT(1X,1P5E14.6)
 1017 FORMAT(1X,1P9E14.6)
 1018 FORMAT(1X,1PE14.6)
 1019 FORMAT('0LAST RECORD NO.',I3,'   CONTAINS INTEGER  ',I3)
 1020 FORMAT('0SOMETHING WRONG WITH 30 **',I4)
      END
CWALL --016***CITATION*** UPDATE ROUTINE/CF-CRDR,UPDT
CWALL WRITE SIGMAS FOR 1 SET
      SUBROUTINE WALL(CHI,ET,EM,RV,N1,N2,N3,N4,N5,NAM, HOL,SS1,SS2,SS3,
     > SS4,SS5,SSC,KVX,NVX,MVX,NW,NSET,KMAX,NMAX,IEND)
C
      COMMON/SLSUB/ DUM(1),IOIN,IOUT,IOSIG,ICITA,TX18,IPTP,ICI,IOS,IEDT,
     >  NFREC(20),TX(18),TITLE(18),NT(6),GE(10),DL(10),NRON(20),IPUN,
     > IHT, NGG,NSELP(24),I1,I2,I3,I4,KX,NX,MX,LX
C
      DIMENSION CHI(KVX),ET(KVX),EM(KVX),RV(KVX),N1(NVX),N2(NVX),
     > N3(NVX),N4(NVX),N5(NVX),NAM(NVX),HOL(NVX,66),SS1(KVX,NVX),
     > SS2(KVX,NVX),SS3(KVX,NVX),SS4(KVX,NVX),SS5(KVX,NVX), SSC(KVX,KVX,
     >  MVX)
C
  100 WRITE(NW)(TITLE(I),I=1,18)
      WRITE(NW)NT(1),NT(2),NT(3),NT(4),NT(5),NT(6)
      WRITE(NW)(CHI(K),K=1,KMAX),(ET(K),K=1,KMAX), (EM(K),K=1,KMAX),
     > (RV(K),K=1,KMAX), (DL(N),N=1,10),(GE(N),N=1,10)
      DO 105 N = 1,NMAX
      WRITE(NW)N1(N),N2(N),N3(N),N4(N),N5(N),(HOL(N,I),I=1,66)
      IF (N3(N)-1) 101,102,103
  101 WRITE(NW)(SS1(K,N),SS2(K,N),SS3(K,N),SS4(K,N),SS5(K,N), K=1,KMAX),
     >  ((SSC(KK,K,N),KK=1,KMAX),K=1,KMAX)
      GO TO 104
  102 WRITE(NW)(SS1(K,N),SS2(K,N),SS3(K,N),SS4(K,N),SS5(K,N), K=1,KMAX)
      GO TO 104
  103 WRITE(NW)(SS1(K,N),K=1,KMAX)
  104 CONTINUE
  105 CONTINUE
      WRITE(NW)(NFREC(N),N=1,20)
      RETURN
      END
CWART --017***CITATION*** UPDATE ROUTINE/CF-UPDT
CWART WRITE SIGMAS FOR 1 SET ORDERING NUCLIDE NUMBERS SERIALLY
      SUBROUTINE WART(CHI,ET,EM,RV,N1,N2,N3,N4,N5,NAM, HOL,SS1,SS2,SS3,
     > SS4,SS5,SSC,KVX,NVX,MVX,NW,NSET,KMAX,NMAX,IEND)
C
      COMMON/SLSUB/ DUM(1),IOIN,IOUT,IOSIG,ICITA,TX18,IPTP,ICI,IOS,IEDT,
     >  NFREC(20),TX(18),TITLE(18),NT(6),GE(10),DL(10),NRON(20),IPUN,
     > IHT, NGG,NSELP(24),I1,I2,I3,I4,KX,NX,MX,LX
C
      DIMENSION CHI(KVX),ET(KVX),EM(KVX),RV(KVX),N1(NVX),N2(NVX),
     > N3(NVX),N4(NVX),N5(NVX),NAM(NVX),HOL(NVX,66),SS1(KVX,NVX),
     > SS2(KVX,NVX),SS3(KVX,NVX),SS4(KVX,NVX),SS5(KVX,NVX), SSC(KVX,KVX,
     >  MVX)
C
      NN = 0
      DO 102 L=1,200
      DO 100 N=1,NMAX
      IF (L.EQ.N1(N)) GO TO 101
  100 CONTINUE
      GO TO 102
  101 NN = NN + 1
      NAM(NN) = N
      IF (NN.GE.NMAX) GO TO 103
  102 CONTINUE
  103 CONTINUE
  104 WRITE(NW)(TITLE(I),I=1,18)
      WRITE(NW)NT(1),NT(2),NT(3),NT(4),NT(5),NT(6)
      WRITE(NW)(CHI(K),K=1,KMAX),(ET(K),K=1,KMAX), (EM(K),K=1,KMAX),
     > (RV(K),K=1,KMAX), (DL(N),N=1,10),(GE(N),N=1,10)
      DO 109 NN=1,NMAX
      N = NAM(NN)
      WRITE(NW)N1(N),N2(N),N3(N),N4(N),N5(N),(HOL(N,I),I=1,66)
      IF (N3(N)-1) 105,106,107
  105 WRITE(NW)(SS1(K,N),SS2(K,N),SS3(K,N),SS4(K,N),SS5(K,N), K=1,KMAX),
     >  ((SSC(KK,K,N),KK=1,KMAX),K=1,KMAX)
      GO TO 108
  106 WRITE(NW)(SS1(K,N),SS2(K,N),SS3(K,N),SS4(K,N),SS5(K,N), K=1,KMAX)
      GO TO 108
  107 WRITE(NW)(SS1(K,N),K=1,KMAX)
  108 CONTINUE
  109 CONTINUE
      WRITE(NW)(NFREC(N),N=1,20)
      RETURN
      END
CRAEN --018***CITATION*** UPDATE ROUTINE/CF-NONE
CRAEN THIS IS PRESENTLY A DUMMY SUBROUTINE
      SUBROUTINE RAEN
C
      COMMON/SLSUB/ DUM(1),IOIN,IOUT,IOSIG,ICITA,TX18,IPTP,ICI,IOS,IEDT,
     >  NFREC(20),TX(18),TITLE(18),NT(6),GE(10),DL(10),NRON(20),IPUN,
     > IHT, NGG,NSELP(24),I1,I2,I3,I4,KX,NX,MX,LX
C
      X = X
      RETURN
      END
CORDE --020***CITATION*** UPDATE ROUTINE/CF-SNSN
CORDE  PUT X-SECTS FROM P(ND,ND) FROM GROUP J OF NX GROUPS
C    IN A COLUMN OF S(N) X-SECTS--XSECT.
C    POSITION SIGMA GG IS NGG
C    NDS IS NUMBER OF DOWNSCATTERS
C    LENGTH IS TABLE LENGTH
      SUBROUTINE ORDE (XSECT,P,J,NGG,NDS,LENGTH,NX,ND)
C
      DIMENSION XSECT(1),P(ND,ND)
C
      JR=NX-J+1
      NFIRST=NGG-4+J
      IF (NFIRST.GT.NX) NFIRST=NX
      N=NGG-JR
      IF (N.LE.3) GO TO 101
      DO 100 I=4,N
  100 XSECT(I)=0.0
      N=N+1
      GO TO 102
  101 N=4
  102 DO 103 I=N,NGG
      XSECT(I)=P(J,NFIRST)
  103 NFIRST=NFIRST-1
      NDOWN=J-1
      N=NGG+1
      IF (NDOWN.EQ.0) GO TO 105
      NTOP=NGG+NDOWN
      IF (NTOP.GT.200) NTOP=200
      DO 104 I=N,NTOP
      XSECT(I)=P(J,NFIRST)
  104 NFIRST=NFIRST-1
      N=NTOP+1
      IF (NTOP.GT.200) RETURN
  105 DO 106 I=N,LENGTH
  106 XSECT(I)=0.0
      RETURN
      END
CPUNS --021***CITATION*** UPDATE ROUTINE/CF-SNSN
CPUNS  *** CLEVER SET OF SUBROUTINES WHICH PUNCH CARDS IN ANISN FORMAT
C   *** PUNSH SETS UP EACH CARD PUNCHED BY DTFPUN UTILIZING REPEATS
      SUBROUTINE PUNS (X,N,IO7)
C
      DIMENSION ETR(6),NN(6),R(6),X(1)
      CHARACTER*4 BB, RR, R
C
      DATA BB,RR/'    ','R   '/
C
      NCARD=1
      I6=0
      K=0
      ITRIP=0
      II=N+1
      DO 105 I=2,II
      IF (ITRIP.LE.0) GO TO 100
      ITRIP=0
      GO TO 103
  100 IF (I.GE.II) GO TO 101
      IF (X(I).NE.X(I-1)) GO TO 101
      K=K+1
      IF (K.LT.98) GO TO 105
      ITRIP=1
  101 I6=I6+1
      NN(I6)=0
      R(I6)=BB
      IF (K.LE.0) GO TO 102
      NN(I6)=K+1
      R(I6)=RR
      K=0
  102 ETR(I6)=X(I-1)
      IF (I6.GE.6) GO TO 104
  103 IF (I.LT.II) GO TO 105
  104 CALL DTFP (ETR,NN,R,I6,NCARD,IO7)
      NCARD=NCARD +1
      I6=0
  105 CONTINUE
      RETURN
      END
CDTFP --022***CITATION*** UPDATE ROUTINE/CF-PUNS
CDTFP   *** DTFPUN USES VARIABE FORMAT TO PUNCH AND NUMBER CARDS
      SUBROUTINE DTFP (E,NN,R,ISUM,NCARD,IO7)
C
      COMMON/SLSUB/ DUM(1),IOIN,IOUT,IOSIG,ICITA,TX18,IPTP,ICI,IOS,IEDT,
     >  NFREC(20),TX(18),TITLE(18),NT(6),GE(10),DL(10),NRON(20),IPUN,
     > IHT, NGG,NSELP(24),I1,I2,I3,I4,KX,NX,MX,LX
C
      DIMENSION E(6),NN(6),R(6),IE(6),IEXP(6),S1(6),S2(6)
      DIMENSION FMT(26),FBT(4),FET(2)
C
      CHARACTER*4 POS,XNEG,S1,S2
      CHARACTER*4 FMT,FET,FBT
C
      DATA POS,XNEG/'+   ','-   '/
      DATA FMT(1),FMT(26),FET(1),FET(2)/'(   ','I8) ','T73,','I8) '/
      DATA FBT(1),FBT(2) ,FBT(3),FBT(4)/'I2,2','A1,I','5,A1',',I2,'/
C
      DO 101 J=1,6
      K=(J-1)*4 + 1
      DO 100 I=1,4
      L=K+I
  100 FMT(L)=FBT(I)
  101 CONTINUE
      IF (ISUM.EQ.6) GO TO 102
      K=ISUM*4 + 2
      FMT(K)=FET(1)
      FMT(K+1)=FET(2)
  102 DO 103 I=1,ISUM
      S1(I)=POS
      IF (E(I).LT.0.0) S1(I)=XNEG
      CALL FLTF (E(I),IE(I),IEXP(I))
      S2(I)=XNEG
      IF (IEXP(I).GE.0) S2(I)=POS
      IEXP(I)=IABS(IEXP(I))
  103 CONTINUE
      WRITE(IO7,FMT)(NN(I),R(I),S1(I),IE(I),S2(I),IEXP(I),I=1,ISUM),
     > NCARD
C
      RETURN
      END
CFLTF --023***CITATION*** UPDATE ROUTINE/CF-DTFP
CFLTF  *** FLTFX CONVERTS FLOATING NUMBER TO INTEGER
      SUBROUTINE FLTF (E1,NE1,N1)
C
      N=-4
      E=ABS(E1)
      IF (E.NE.0.0) GO TO 101
      N=0
      NE=0
      GO TO 106
  100 E=E*10.0
      N=N-1
  101 IF (E.GE.1.0) GO TO 103
      GO TO 100
  102 E=E/10.0
      N=N+1
  103 IF (E.GE.10.0) GO TO 102
      E=E*10000.0
  104 NE=E
      E=E-FLOAT(NE)
      IF (E.LT.0.5) GO TO 106
      IF (NE.NE.99999) GO TO 105
      N=N+1
      NE=10000
      GO TO 106
  105 NE=NE+1
  106 NE1=NE
      N1=N
      RETURN
      END
CCNTR --025 ***CITATION*** READS INPUT SECTION 001/ CF-IPTM
      SUBROUTINE CNTR
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
C
  100 READ(IOIN,1000)(NGC(I),I=1,24)
      READ(IOIN,1000)(IEDG(I),I=1,24)
      ITMX(1) = 200
      ITMX(2) = 100
      ITMX(3) = 10
      ITMX(4) = 2
      ITMX(5) = 3
      ITMX(19) = 60/IX(1)
      ITMX(20) = 30/IX(1)
      ITMX(21) = 60/IX(1)
      ITMX(22) = 30/IX(1)
      ITMX(23) = 60/IX(1)
      ITMX(24) = 120/IX(1)
      DO 101 N = 6,18
      ITMX(N) = 0
  101 CONTINUE
      READ(IOIN,1000)(NXTR1(I),I=1,24)
      DO 103 I = 1,24
      IF (NXTR1(I)) 103,103,102
  102 ITMX(I) = NXTR1(I)
  103 CONTINUE
      GLIM(1) = 1.5
      GLIM(2) = 0.5
      GLIM(3) = 1.0E+10
      GLIM(4) = 1.0E+24
      GLIM(5) = 0.0
      GLIM(6) = 1.0
      READ(IOIN,1001)(XTR1(I),I=1,6)
      DO 105 I = 1,6
      IF (XTR1(I)) 104,105,104
  104 GLIM(I) = XTR1(I)
  105 CONTINUE
      WRITE(IOUT,1002)
      WRITE(IOUT,1003)(NGC(I),I=1,24)
      WRITE(IOUT,1004)(IEDG(I),I=1,24)
      WRITE(IOUT,1004)(ITMX(I),I=1,24)
      WRITE(IOUT,1005)(GLIM(I),I=1,6)
      IF (GLIM(6)) 107,106,107
  106 GLIM(6) = 1.0
  107 IX(5) = NGC(10)
      SPARE(50) = GLIM(6)
      RETURN
 1000 FORMAT(24I3)
 1001 FORMAT(6E12.0)
 1002 FORMAT('0'/'0GENERAL CONTROL INPUT - SECTION 001')
 1003 FORMAT('0',24I4)
 1004 FORMAT(1X,24I4)
 1005 FORMAT(1X,1P6E14.6)
      END
CLVMX --028 ***CITATION*** READS INPUT SECTION 004/ CF-IPTM
      SUBROUTINE LVMX
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AMESH/BMESH(30),NREGI,NREGJ,NREGKB,XSHI(100),XSHJ(100),
     > XSHKB(100), MSHI(100),MSHJ(100),MSHKB(100),Y(211),YY(211), X(211)
     >  ,XX(211),Z(211),ZZ(211), ZONVOL(200),AVZPD(200),PDI(211),
     > PDJ(211) , PDK(211)
C
      DIMENSION NX(6),TX(6)
C
  100 NREGJ = 0
      IMAX = 1
      KBMAX = 1
      NREGI = 1
      NREGKB = 1
      XSHI(1) = 1.0
      XSHKB(1) = 1.0
      MSHI(1) = 1
      MSHKB(1) = 1
      NDIM = IX(25)
      NGEM = IX(26)
      MGEM = 0
      IF (NGEM-8) 102,101,102
  101 MGEM = 8
      GO TO 103
  102 IF (NGEM-12) 103,101,103
  103 READ(IOIN,1000)(NX(I),TX(I),I=1,6)
      DO 105 I = 1,6
      IF (NX(I)) 106,106,104
  104 NREGJ = NREGJ+1
      MSHJ(NREGJ) = NX(I)
      XSHJ(NREGJ) = TX(I)
  105 CONTINUE
      GO TO 103
  106 IF (NDIM-2) 116,107,107
  107 NREGI = 0
  108 READ(IOIN,1000)(NX(I),TX(I),I=1,6)
      DO 110 I = 1,6
      IF (NX(I)) 111,111,109
  109 NREGI = NREGI+1
      MSHI(NREGI) = NX(I)
      XSHI(NREGI) = TX(I)
  110 CONTINUE
      GO TO 108
  111 IF (NDIM-2) 116,116,112
  112 NREGKB = 0
  113 READ(IOIN,1000)(NX(I),TX(I),I=1,6)
      DO 115 I = 1,6
      IF (NX(I)) 116,116,114
  114 NREGKB = NREGKB+1
      MSHKB(NREGKB) = NX(I)
      XSHKB(NREGKB) = TX(I)
  115 CONTINUE
      GO TO 113
  116 LMAX = NREGJ*NREGI*NREGKB
      RETURN
 1000 FORMAT(6(I3,E9.0))
      END
CCOMP --030 ***CITATION*** READS INPUT SECTION 005 1,2-D/ CF-IPTM
      SUBROUTINE COMP(ISK,NRGN,NCOMP, IVX,JVX,LVX)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AMESH/BMESH(30),NREGI,NREGJ,NREGKB,XSHI(100),XSHJ(100),
     > XSHKB(100), MSHI(100),MSHJ(100),MSHKB(100),Y(211),YY(211), X(211)
     >  ,XX(211),Z(211),ZZ(211), ZONVOL(200),AVZPD(200),PDI(211),
     > PDJ(211) , PDK(211)
C
      DIMENSION NRGN(JVX,IVX)
      DIMENSION NCOMP(LVX)
C
      IF (ISK) 100,104,100
  100 WRITE(IOUT,1000)
      NRE = 0
      DO 103 IR = 1,NREGI
      READ(IOIN,1001)(NXTR1(N),N=1,NREGJ)
      DO 102 JR = 1,NREGJ
      NRE = NRE+1
      NCOMP(NRE) = NXTR1(JR)
      IF (NCOMP(NRE)) 101,101,102
  101 NER(14) = 14
  102 CONTINUE
      WRITE(IOUT,1002)(NXTR1(N),N=1,NREGJ)
  103 CONTINUE
  104 CONTINUE
      I = 0
      DO 108 IR = 1,NREGI
      NIPTS = MSHI(IR)
      DO 107 INR = 1,NIPTS
      I = I+1
      J = 0
      NRE = (IR-1)*NREGJ
      DO 106 JR = 1,NREGJ
      NJPTS = MSHJ(JR)
      NREE = NRE+JR
      DO 105 JNR = 1,NJPTS
      J = J+1
      NRGN(J,I) = NREE
  105 CONTINUE
  106 CONTINUE
  107 CONTINUE
  108 CONTINUE
      IF (ISK) 109,112,109
  109 CONTINUE
      MMAX = 0
      DO 110 NR = 1,LMAX
      MMAX = MAX0(MMAX,NCOMP(NR))
  110 CONTINUE
  111 CALL CMOT(NRGN ,NCOMP, IVX,JVX,LVX)
  112 CONTINUE
      RETURN
 1000 FORMAT('0'/'0ZONE INPUT BY REGION')
 1001 FORMAT(24I3)
 1002 FORMAT(1X,30I4)
      END
CCMOT --031 ***CITATION*** PRINTS MAP FOR 1- AND 2-D/ CF-COMP,IPTM
      SUBROUTINE CMOT(NRGN ,NCOMP, IVX,JVX,LVX)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
C
      DIMENSION NRGN (JVX,IVX)
      DIMENSION NCOMP(LVX)
C
  100 IS1 = 0
      WRITE(IOUT,1000)
      N1J = JMAX
      N2J = 0
  101 IF (N1J-40) 102,102,103
  102 N1L = N2J+1
      N2J = JMAX
      IS1 = 1
      GO TO 104
  103 N1L = N2J+1
      N2J = N2J+40
      N1J = N1J-40
  104 CONTINUE
  105 WRITE(IOUT,1001)(J,J=N1L,N2J)
      WRITE(IOUT,1002)
      DO 107 I = 1,IMAX
      DO 106 J = N1L,N2J
      L = NRGN (J,I)
      NXTR1(J) = NCOMP(L)
  106 CONTINUE
      WRITE(IOUT,1003)I,(NXTR1(J),J= N1L,N2J)
  107 CONTINUE
      IF (IS1) 108,108,109
  108 WRITE(IOUT,1000)
      GO TO 101
  109 CONTINUE
      RETURN
 1000 FORMAT('0ZONE NUMBER AT EACH MESH INTERVAL')
 1001 FORMAT('0',I8,39I3)
 1002 FORMAT(1X)
 1003 FORMAT(1X,I3,I5,39I3)
      END
CKOMP --032 ***CITATION*** READS INPUT SECTION 005 FOR 3-D/ CF-IPTM
      SUBROUTINE KOMP(ISK,NRGNE,NCOMP, IVX,JVX,KBVX,LVX)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AMESH/BMESH(30),NREGI,NREGJ,NREGKB,XSHI(100),XSHJ(100),
     > XSHKB(100), MSHI(100),MSHJ(100),MSHKB(100),Y(211),YY(211), X(211)
     >  ,XX(211),Z(211),ZZ(211), ZONVOL(200),AVZPD(200),PDI(211),
     > PDJ(211) , PDK(211)
C
      DIMENSION NRGNE(JVX,IVX,KBVX)
      DIMENSION NCOMP(LVX)
C
      IF (ISK) 100,105,100
  100 WRITE(IOUT,1000)
      NRE = 0
      DO 104 KBR = 1,NREGKB
      WRITE(IOUT,1001)KBR
      DO 103 IR = 1,NREGI
      READ(5,1002)(NXTR1(N),N=1,NREGJ)
      WRITE(IOUT,1003)(NXTR1(N),N=1,NREGJ)
      DO 102 JR = 1,NREGJ
      NRE = NRE+1
      NCOMP(NRE) = NXTR1(JR)
      IF (NCOMP(NRE)) 101,101,102
  101 NER(14) = 14
  102 CONTINUE
  103 CONTINUE
  104 CONTINUE
  105 CONTINUE
      KB = 0
      DO 111 KBR = 1,NREGKB
      NKBPTS = MSHKB(KBR)
      DO 110 KBNR = 1,NKBPTS
      KB = KB+1
      I = 0
      DO 109 IR = 1,NREGI
      NIPTS = MSHI(IR)
      DO 108 INR = 1,NIPTS
      I = I+1
      J = 0
      NRE = (KBR-1)*NREGI*NREGJ+(IR-1)*NREGJ
      DO 107 JR = 1,NREGJ
      NJPTS = MSHJ(JR)
      NREE = NRE+JR
      DO 106 JNR = 1,NJPTS
      J = J+1
      NRGNE(J,I,KB) = NREE
  106 CONTINUE
  107 CONTINUE
  108 CONTINUE
  109 CONTINUE
  110 CONTINUE
  111 CONTINUE
      IF (ISK) 112,115,112
  112 CONTINUE
      MMAX = 0
      DO 113 NR = 1,LMAX
      MMAX = MAX0(MMAX,NCOMP(NR))
  113 CONTINUE
  114 CALL KMOT(NRGNE,NCOMP, IVX,JVX,KBVX,LVX)
  115 CONTINUE
      RETURN
 1000 FORMAT('0'/'0ZONE INPUT BY REGION')
 1001 FORMAT('0  PLANE NUMBER',I3)
 1002 FORMAT(24I3)
 1003 FORMAT(1X,30I4)
      END
CKMOT --033 ***CITATION*** PRINTS MAP FOR 3-D/ CF-KOMP,IPTM
      SUBROUTINE KMOT(NRGNE,NCOMP, IVX,JVX,KBVX,LVX)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
C
      DIMENSION NRGNE(JVX,IVX,KBVX)
      DIMENSION NCOMP(LVX)
C
      IF(IEDG(11) .LE. 0) GO TO 2000
C
  100 IS1 = 0
      WRITE(IOUT,1000)
      DO 110 KB = 1,KBMAX
      WRITE(IOUT,1001)KB
      N1J = JMAX
      N2J = 0
  101 IF (N1J-40) 102,102,103
  102 N1L = N2J+1
      N2J = JMAX
      IS1 = 1
      GO TO 104
  103 N1L = N2J+1
      N2J = N2J+40
      N1J = N1J-40
  104 CONTINUE
  105 WRITE(IOUT,1002)(J,J=N1L,N2J)
      WRITE(IOUT,1003)
      DO 107 I = 1,IMAX
      DO 106 J = N1L,N2J
      L = NRGNE(J,I,KB)
      NXTR1(J) = NCOMP(L)
  106 CONTINUE
      WRITE(IOUT,1004)I,(NXTR1(J),J= N1L,N2J)
  107 CONTINUE
      IF (IS1) 108,108,109
  108 WRITE(IOUT,1000)
      GO TO 101
  109 IS1 = 0
  110 CONTINUE
      RETURN
C
 2000 CONTINUE
 2100 IS1 = 0
C     WRITE(IOUT,1000)
      DO 2110 KB = 1,KBMAX
C     WRITE(IOUT,1001)KB
      N1J = JMAX
      N2J = 0
 2101 IF (N1J-40) 2102,2102,2103
 2102 N1L = N2J+1
      N2J = JMAX
      IS1 = 1
      GO TO 2104
 2103 N1L = N2J+1
      N2J = N2J+40
      N1J = N1J-40
 2104 CONTINUE
 2105 CONTINUE
C     WRITE(IOUT,1002)(J,J=N1L,N2J)
C     WRITE(IOUT,1003)
      DO 2107 I = 1,IMAX
      DO 2106 J = N1L,N2J
      L = NRGNE(J,I,KB)
      NXTR1(J) = NCOMP(L)
 2106 CONTINUE
C     WRITE(IOUT,1004)I,(NXTR1(J),J= N1L,N2J)
 2107 CONTINUE
      IF (IS1) 2108,2108,2109
 2108 CONTINUE
C     WRITE(IOUT,1000)
      GO TO 2101
 2109 IS1 = 0
 2110 CONTINUE
      RETURN
 1000 FORMAT('0ZONE NUMBER AT EACH MESH INTERVAL')
 1001 FORMAT('0'/'0SPECIFICATION FOR LAYER NUMBER',I3)
 1002 FORMAT('0',I8,39I3)
 1003 FORMAT(1X)
 1004 FORMAT(1X,I3,I5,39I3)
      END
CDENS --038 ***CITATION*** READS INPUT SECTION 020/ CF-IPTM
C     INDTOR = 0 - INITIAL INPUT,   INDTOR = 1 - PERTURBATION
      SUBROUTINE DENS(CONC,ZONEN,MJJR,NJJR,IDTOR, MVX,NVX,NSETVX,NVO,
     > NUO)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     > , XNAME(3,200)
C
      DIMENSION CONC(NVX,MVX),ZONEN(NUO),MJJR(200,NSETVX), NJJR(NVX,
     > NSETVX)
C
      IO12 = IX(79)
      REWIND IO12
      REWIND IO3
      IO11 = IX(78)
      IF (NUO.LE.NVO) GO TO 100
      REWIND IO11
      WRITE(IO11) ZONEN
      REWIND IO11
  100 CONTINUE
      IF (IDTOR.EQ.1) GO TO 108
      IF ((IX(27).GT.0).AND.(IX(69).EQ.0)) GO TO 105
  101 DO 102 N = 1,NUO
      ZONEN(N) = 0.0
  102 CONTINUE
      DO 104 M = 1,MVX
      DO 103 N = 1,NVX
      CONC(N,M) = 0.0
  103 CONTINUE
  104 CONTINUE
      GO TO 107
  105 READ(IO12)MVVX
      DO 106 M = 1,MVVX
      READ(IO12)NZN1,NZN2
      READ(IO12)(ZONEN(N),N=NZN1,NZN2)
  106 CONTINUE
      REWIND IO12
  107 WRITE(IOUT,1000)
  108 READ(IOIN,1001)MF,ML,NSB,NCR
      IF (IDTOR.EQ.1) NCR = 1
      IF (ML) 109,109,110
  109 ML = MF
  110 IF (MF) 149,149,111
  111 WRITE(IOUT,1002)MF,ML,NSB,NCR
  112 DO 148 MZO = MF,ML
      NFIRST = MZO-MF
      MFM = MZO-1
      NACT = NXSET(MZO)
      NST = NXODR(NACT)
      NMX = NSIG2(NST)
      NSUBZ = NZON(MZO)
      NPT = 0
      LIM = NSUBZ
  113 IF (MFM) 116,116,114
  114 DO 115 M = 1,MFM
      IACT = NXSET(M)
      IST = NXODR(IACT)
      IMX = NSIG2(IST)
      ISUBZ = NZON(M)
      NPT = NPT+IMX*ISUBZ
  115 CONTINUE
  116 DO 143 NS = 1,LIM
      NPTC = NPT+(NS-1)*NMX
      IF ((NS.GT.1).AND.(NSB.EQ.0)) GO TO 123
      IT = 0
      I2 = 0
  117 I1 = I2+1
      I2 = I1+5
      IF (NFIRST) 118,119,118
  118 READ(IO3)(NXTR1(I),XTR1(I),I= I1,I2)
      GO TO 120
  119 READ(IOIN,1003)(NXTR1(I),XTR1(I),I= I1,I2)
      WRITE(IO3)(NXTR1(I),XTR1(I),I= I1,I2)
  120 DO 122 I = I1,I2
      IF (NXTR1(I)) 121,123,121
  121 IT = IT+1
  122 CONTINUE
      GO TO 117
  123 IF (NFIRST) 124,124,125
  124 WRITE(IOUT,1004)(NXTR1(I),XTR1(I),I=1,IT)
  125 CONTINUE
      IF (IT.EQ.0) GO TO 142
  126 IF (NCR-1) 127,129,129
  127 DO 128 N = 1,NMX
      NNPT = NPTC+N
      ZONEN(NNPT)=0.0
  128 CONTINUE
  129 DO 134 N = 1,IT
      NRL = NXTR1(N)
      IF ((NRL.LE.0).OR.(NRL.GT.200)) GO TO 130
      IF (MJJR(NRL,NST).NE.0) GO TO 131
  130 CONTINUE
      WRITE(IOUT,1005)NRL,NACT
      NER(5) = 5
      NRL = 1
  131 CONTINUE
      NDOR = MJJR(NRL,NST)
      NNPT = NPTC+NDOR
      IF (NCR-1) 132,132,133
  132 ZONEN(NNPT) = XTR1(N)
      GO TO 134
  133 ZONEN(NNPT) = ZONEN(NNPT)+XTR1(N)
  134 CONTINUE
      NTO = NNPT
      IF (NSUBZ.GT.1) GO TO 142
  135 IF (NCR-1) 136,138,138
  136 DO 137 N = 1,NMX
      CONC(N,MZO) = 0.0
  137 CONTINUE
  138 DO 141 N = 1,IT
      NRL = NXTR1(N)
      NDOR = MJJR(NRL,NST)
      IF (NCR-1) 139,139,140
  139 CONC(NDOR,MZO) = XTR1(N)
      GO TO 141
  140 CONC(NDOR,MZO) = CONC(NDOR,MZO)+XTR1(N)
  141 CONTINUE
  142 CONTINUE
  143 CONTINUE
      REWIND IO3
      IF (NSUBZ.LE.1) GO TO 147
  144 DO 146 N = 1,NMX
      T1 = 0.0
      DO 145 NS = 1,NSUBZ
      NPTC = NPT+(NS-1)*NMX
      NNPT = NPTC+N
      T1 = T1+ZONEN(NNPT)
  145 CONTINUE
      T2 = NSUBZ
      CONC(N,MZO) = T1/T2
  146 CONTINUE
  147 CONTINUE
  148 CONTINUE
      GO TO 108
  149 CONTINUE
      IF (IDTOR.EQ.1) GO TO 151
      NZN2 = 0
      WRITE(IO12)MMAX
      DO 150 M = 1,MMAX
      NACT = NXSET(M)
      MS1 = NXODR(NACT)
      NZN1 = NZN2+1
      NZN2 = NZN2+NJM(MS1)*NZON(M)
      WRITE(IO12)NZN1,NZN2
      WRITE(IO12)(ZONEN(N),N=NZN1,NZN2)
  150 CONTINUE
      REWIND IO12
  151 CONTINUE
      IF (NUO.LE.NVO) GO TO 152
      READ(IO11) ZONEN
      REWIND IO11
  152 RETURN
 1000 FORMAT('0'/'0INPUT NUCLIDE DENSITIES(NUCLIDE NUMBER - DENSITY)')
 1001 FORMAT(24I3)
 1002 FORMAT('0ZONES',I3,'-',I3,'  SUB-ZONE INDICATOR',I3,
     > '  AND CONTROL OPTION',I3)
 1003 FORMAT(6(I3,E9.0))
 1004 FORMAT(1X,I6,1PE13.5,I6,E13.5,I6,E13.5,I6,E13.5,I6,E13.5,I6,E13.5)
 1005 FORMAT('0NUCLIDE',I4,'  IS NOT IN CROSS SECTION SET',I3)
      END
CBKLE --039 ***CITATION*** READS INPUT SECTION 024/ CF-IPTM
      SUBROUTINE BKLE(SIG, MVX,KVX)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/QUEIMA/NBSTEP,NCONJU,NXCON(50),BSTEP(50),FMASS(200),
     > QACUM(200),NXSEC(200),NBUCKB,NOPBUC,BUCBUR(50)
C
      DIMENSION SIG(KVX,MVX,10)
C
  100 READ(IOIN,1000)IND,BUCK
      GO TO (101,104,107,113),IND
  101 DO 103 M=1,MMAX
      DO 102 K = 1,KMAX
      SIG(K,M,6) = BUCK
  102 CONTINUE
  103 CONTINUE
      GO TO 112
  104 READ(IOIN,1001) (SIG(K,1,10),K=1,KMAX)
      DO 106 M = 1,MMAX
      DO 105 K = 1,KMAX
      SIG(K,M,6) = SIG(K,1,10)
  105 CONTINUE
  106 CONTINUE
      GO TO 112
  107 READ(IOIN,1002)N1,N2
      IF (N2) 108,108,109
  108 N2 = N1
      IF (N1) 112,112,109
  109 READ(IOIN,1001) (SIG(K,1,10),K=1,KMAX)
      DO 111 M = N1,N2
      DO 110 K = 1,KMAX
      SIG(K,M,6) = SIG(K,1,10)
  110 CONTINUE
  111 CONTINUE
      GO TO 107
  113 NOPBUC=IND
      NBUCKB=0
  114 READ(IOIN,1001) (SIG(I,1,10),I=1,6)
      DO 115 I=1,6
      IF(SIG(I,1,10) .LE. 0.0) GO TO 116
      NBUCKB=NBUCKB+1
      BUCBUR(NBUCKB)=SIG(I,1,10)
  115 CONTINUE
      GO TO 114
  116 DO 118 M=1,MMAX
      DO 117 K=1,KMAX
      SIG(K,M,6)=BUCBUR(1)
  117 CONTINUE
  118 CONTINUE
  112 RETURN
 1000 FORMAT(I3,E9.0)
 1001 FORMAT(6E12.0)
 1002 FORMAT(2I3)
      END
CFXSO --040 ***CITATION*** READS INPUT SECTION 026         /CF - IPTM
      SUBROUTINE FXSO(SPAR,BIEMS,PVOL,NRGNE,NCOMP,JVX,IVX,KBVX,KVX,LVX)
C
      DOUBLE PRECISION SAM
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
C
      DIMENSION SPAR(JVX,IVX,KBVX),BIEMS(KVX),PVOL(LVX), NRGNE(JVX,IVX,
     > KBVX),NCOMP(LVX)
C
      WRITE(IOUT,1000)
      READ(IOIN,1001) NFX1,NFX2
      IX(132) = NFX1
      N5 = NUAC(5)
      DO 102 KB=1,KBMAX
      DO 101 I=1,IMAX
      DO 100 J=1,JMAX
      SPAR(J,I,KB) = 0.0
  100 CONTINUE
  101 CONTINUE
  102 CONTINUE
      IF (NFX1.GT.0) GO TO 141
C     INPUT DISTRIBUTION FUNCTION
      READ(IOIN,1002) (BIEMS(K),K=1,KMAX)
      IF (NFX1.LT.0) GO TO 122
C     INPUT SOURCE BY MESH POINT
  103 READ(IOIN,1003) JL,JR,IT,IB,KBF,KBB,X
      IF (JL.LE.0) GO TO 130
C     CHECK MESH SPECIFICATIONS
      IF (JL.GE.1.AND.JL.LE.JMAX) GO TO 104
      GO TO 140
  104 IF (JR.GE.1.AND.JR.LE.JMAX) GO TO 105
      GO TO 140
  105 IF (JL.LE.JR) GO TO 106
      GO TO 140
  106 IF (N5.LE.5) GO TO 112
      IF (IT.GE.1.AND.IT.LE.IMAX) GO TO 107
      GO TO 140
  107 IF (IB.GE.1.AND.IB.LE.IMAX) GO TO 108
      GO TO 140
  108 IF (IT.LE.IB) GO TO 109
      GO TO 140
  109 IF (N5.LE.10) GO TO 113
      IF (KBF.GE.1.AND.KBF.LE.KBMAX) GO TO 110
      GO TO 140
  110 IF (KBB.GE.1.AND.KBB.LE.KBMAX) GO TO 111
      GO TO 140
  111 IF (KBF.LE.KBB) GO TO 114
      GO TO 140
  112 IT = 1
      IB = 1
  113 KBF = 1
      KBB = 1
  114 CONTINUE
      IF (X.NE.0.0) GO TO 117
      DO 116 KB=KBF,KBB
      DO 115 I=IT,IB
      READ(IOIN,1002) (SPAR(J,I,KB),J=JL,JR)
  115 CONTINUE
  116 CONTINUE
      GO TO 121
  117 CONTINUE
      DO 120 KB=KBF,KBB
      DO 119 I=IT,IB
      DO 118 J=JL,JR
      SPAR(J,I,KB) = X
  118 CONTINUE
  119 CONTINUE
  120 CONTINUE
  121 CONTINUE
      GO TO 103
  122 CONTINUE
C     INPUT SOURCE BY ZONE
      IT = 0
      I2 = 0
  123 I1 = I2 + 1
      I2 = I1 + 5
      READ(IOIN,1004) (NXTR1(N),XTR1(N),N=I1,I2)
      DO 124 N=I1,I2
      IF (NXTR1(N).EQ.0) GO TO 125
      IT = IT + 1
  124 CONTINUE
      GO TO 123
  125 CONTINUE
      WRITE(IOUT,1005)
      WRITE(IOUT,1006) (NXTR1(N),XTR1(N),N=1,IT)
      DO 129 N=1,IT
      M = NXTR1(N)
      X = XTR1(N)
      DO 128 KB=1,KBMAX
      DO 127 I=1,IMAX
      DO 126 J=1,JMAX
      L = NRGNE(J,I,KB)
      MM = NCOMP(L)
      IF (M.NE.MM) GO TO 126
      SPAR(J,I,KB) = X
  126 CONTINUE
  127 CONTINUE
  128 CONTINUE
  129 CONTINUE
  130 CONTINUE
      DO 133 KB=1,KBMAX
      DO 132 I=1,IMAX
      DO 131 J=1,JMAX
      L = NRGNE(J,I,KB)
      SPAR(J,I,KB) = SPAR(J,I,KB)*PVOL(L)
  131 CONTINUE
  132 CONTINUE
  133 CONTINUE
      SAM = 0.0D+0
      DO 136 KB=1,KBMAX
      DO 135 I=1,IMAX
      DO 134 J=1,JMAX
      SAM = SAM + SPAR(J,I,KB)
  134 CONTINUE
  135 CONTINUE
  136 CONTINUE
      SPARE(88) = SAM
      SAM = 0.0D+0
      DO 137 K=1,KMAX
      SAM = SAM + BIEMS(K)
  137 CONTINUE
      DO 138 K=1,KMAX
      BIEMS(K) = BIEMS(K)/SAM
  138 CONTINUE
C     EDIT FIXED SOURCE
      WRITE(IOUT,1007) (BIEMS(K),K=1,KMAX),SAM
      IF (NFX2.EQ.0) GO TO 139
      WRITE(IOUT,1008)
      CALL BEER(SPAR,JVX,IVX,KBVX)
  139 CONTINUE
      WRITE(IOUT,1009) SPARE(88)
      GO TO 146
  140 CONTINUE
      WRITE(IOUT,1010) JL,JR,IT,IB,KBF,KBB
      return 69
  141 CONTINUE
C     INPUT SOURCE FROM EXTERNAL DEVICE
      SAM = 0.0D+0
      IOFS = IX(84)
C     IOFS IS LOGICAL 17
      REWIND IOFS
      DO 145 K=1,KMAX
      READ(IOFS) SPAR
      DO 144 KB=1,KBMAX
      DO 143 I=1,IMAX
      DO 142 J=1,JMAX
      SAM = SAM + SPAR(J,I,KB)
  142 CONTINUE
  143 CONTINUE
  144 CONTINUE
      BIEMS(K) = 1.0
      IF (NFX2.EQ.0) GO TO 145
      WRITE(IOUT,1011) K
      CALL BEER(SPAR,JVX,IVX,KBVX)
  145 CONTINUE
      SPARE(88) = SAM
      WRITE(IOUT,1009) SPARE(88)
      REWIND IOFS
  146 CONTINUE
      IF (SPARE(88).NE.0.0) GO TO 147
      WRITE(IOUT,1012)
      NER(51) = 51
  147 CONTINUE
      RETURN
 1000 FORMAT('0'/'0FIXED SOURCE INPUT SECTION 026')
 1001 FORMAT(24I3)
 1002 FORMAT(6E12.0)
 1003 FORMAT(6I4,E12.0)
 1004 FORMAT(6(I3,E9.0))
 1005 FORMAT('0ZONE-SOURCE(N/CC-SEC)')
 1006 FORMAT(1X,I6,1PE13.5,I6,E13.5,I6,E13.5,I6,E13.5,I6,E13.5,I6,E13.5)
 1007 FORMAT('0SOURCE DISTRIBUTION AND SUM'/(1X,1P10E12.4))
 1008 FORMAT('0POINT NEUTRON SOURCE- N/SEC')
 1009 FORMAT('0TOTAL FIXED SOURCE',1PE15.6,' N/SEC')
 1010 FORMAT('1**** SOMETHING IS WRONG WITH THE FIXED SOURCE INPUT',6I5,
     > ' NOW STOP ****')
 1011 FORMAT('0POINT NEUTRON SOURCE(N/SEC) FOR GROUP',I5)
 1012 FORMAT('0***WARNING- THE TOTAL FIXED SOURCE IS ZERO ***')
      END
CBEER --041 ***CITATION*** EDITS FIXED SOURCE              /CF - FXSO
      SUBROUTINE BEER(SPAR,JVX,IVX,KBVX)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
C
      DIMENSION SPAR(JVX,IVX,KBVX)
C
      IS1 = 0
      IS2 = 0
      DO 110 KB = 1,KBMAX
      IF (NUAC(5).GT.10) WRITE(IOUT,1000) KB
      N1J = JMAX
      N2J = 0
  100 N1I = IMAX
      N2I = 0
      IF (N1J-11) 101,101,102
  101 N1L = N2J+1
      N2J = JMAX
      IS1 = 1
      GO TO 103
  102 N1L = N2J+1
      N2J = N2J+11
      N1J = N1J-11
  103 CONTINUE
      IF (N1I-50) 104,104,105
  104 N2L = N2I+1
      N2I = IMAX
      IS2 = 1
      GO TO 106
  105 N2L = N2I+1
      N2I = N2I+50
      N1I = N1I-50
  106 WRITE(IOUT,1001)(J,J=N1L,N2J)
      DO 107 I = N2L,N2I
      WRITE(IOUT,1002)I,(SPAR (J,I,KB ),J=N1L,N2J)
  107 CONTINUE
      IF (IS2) 103,103,108
  108 IS2 = 0
      IF (IS1) 100,100,109
  109 IS1 = 0
  110 CONTINUE
      RETURN
 1000 FORMAT('0 PLANE NUMBER',I3)
 1001 FORMAT('0',I10,10I11)
 1002 FORMAT(1X,I3,1PE12.3,10E11.3)
      END
CYELD --044 ***CITATION*** READS INPUT SECTION 034/ CF-IPTM
      SUBROUTINE YELD(HOX,NJJR,MJJR,NFO,NNFO,NVX,NSETVX)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     > , XNAME(3,200)
C
      DIMENSION HOX(NVX,NSETVX,20),NJJR(NVX,NSETVX),MJJR(200,NSETVX) ,
     > NFO(20,NSETVX),NNFO(20,NSETVX)
C     SET NNF TO MAX NO. OF NUCS. HAVING YIELD
      NNF = 20
C
  100 WRITE(IOUT,1001)
  101 READ(IOIN,1002)NS1,NS2
      IF (NS2) 102,102,103
  102 NS2 = NS1
  103 IF (NS1) 122,122,104
  104 WRITE(IOUT,1003)NS1,NS2
      READ(IOIN,1002)(NXTR1(I),I=1,NNF)
      WRITE(IOUT,1004)(NXTR1(I),I=1,NNF)
      DO 109 M = NS1,NS2
      N = NXODR(M)
  105 NJNQ(N) = 0
      N2 = NJM(N)
      DO 108 I = 1,NNF
      IF (NXTR1(I)) 109,109,106
  106 NJNQ(N) = NJNQ(N)+1
      N1 = NXTR1(I)
  107 N27 = MJJR(N1,N)
      NNFO(I,N) = N27
      NFO(I,N) = N1
  108 CONTINUE
  109 CONTINUE
      M = NXODR(NS1)
      N9 = NJNQ(M)
  110 READ(IOIN,1005)NUC,(XTR1(I),I=1,5)
      IF (NUC) 118,118,111
  111 IF (N9-5) 113,113,112
  112 READ(IOIN,1006)(XTR1(I),I=6,N9)
  113 WRITE(IOUT,1007)NUC,(XTR1(I),I=1,N9)
      DO 117 M = NS1,NS2
      N = NXODR(M)
      MUC = MJJR(NUC,N)
      IF (MUC.GT.0) GO TO 114
      NER(5) = 5
      WRITE(IOUT,1000)NUC,M
  114 CONTINUE
  115 DO 116 N12 = 1,N9
      HOX(MUC,N,N12 ) = XTR1(N12)
  116 CONTINUE
  117 CONTINUE
      GO TO 110
  118 DO 121 M = NS1,NS2
      NS = NXODR(M)
      NJMM(NS) = 0
      NX = NJM(NS)
      DO 120 N = 1,NX
      NJMM(NS) = NJMM(NS)+1
      DO 119 NN = 1,NNF
      IF (HOX(N,NS,NN)) 121,119,121
  119 CONTINUE
  120 CONTINUE
  121 CONTINUE
      GO TO 101
  122 RETURN
 1000 FORMAT('0NUCLIDE',I4,'  IS NOT IN CROSS SECTION SET',I3)
 1001 FORMAT('0CARD INPUT OF YIELD DATA')
 1002 FORMAT(24I3)
 1003 FORMAT('0  SIGMA-SETS',I3,'-',I2)
 1004 FORMAT('0FISS. NUCS'/1X,30I4)
 1005 FORMAT(I12,5E12.0)
 1006 FORMAT(6E12.0)
 1007 FORMAT('0YIELD FRACTIONS TO NUCLIDE',I4/(1X,1P8E14.6))
      END
CCHAN --045 ***CITATION*** READS INPUT SECTION 036/ CF-IPTM
      SUBROUTINE CHAN(HOL,MJJR, HOX,NFO,NNFO,NIC,NVX,NSETVX)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     > , XNAME(3,200)
C
      DIMENSION HOL(NVX,NSETVX,10),MJJR(200,NSETVX),NZI(25), HOX(NVX,
     > NSETVX,20),NFO(20,NSETVX), NNFO(20,NSETVX), NIC(1000)
C     SET ITUC TO STORAGE LIMIT FOR NIC
      ITUC = 1000
C
  100 NZ=0
      JOEY=0
      JB=0
      NR = IOIN
      NW = IOUT
      KKK=NSETMX
      WRITE(NW,1000)
C     SPECIFY CHAIN RELATIONSHIPS
  101 READ(NR,1001)N1,N2,N3,N4,J
      IF (N1) 156,156,102
  102 NZ=NZ+1
      IF (N2) 103,103,104
  103 N2=N1
  104 JB=JB+1
      NACT = N1
      NSET = NXODR(NACT)
      JNQ = NJNQ(NSET)
      IF (J) 105,106,105
  105 JB=93
      N=NCH(NSET)
      WRITE(NW,1003)JB,N4,NZ,NSET,NCH(NSET),NIC(N)
      JOEY=2
  106 IF (N4) 107,108,110
  107 WRITE(NW,1004)N1,N2,(NFO(I,NSET),I=1,JNQ)
      NZ=900
      N = NCH(NSET)
      NIC(N)=NIC(N)+N3
      GO TO 112
  108 WRITE(NW,1005)N1,N2,N3,( NFO(I,NSET),I=1,JNQ)
      DO 109K=N1,N2
      KKKK = NXODR(K)
  109 NCH(KKKK) = NZ
      NIC(NZ)=N3
      GO TO 112
  110 WRITE(NW,1006)N4,(NNFO(I,NSET),I=1,JNQ)
C     CIRCULATING SYSTEMS NOT TREATED HERE
      KKK=KKK+1
      NSET=KKK
      NCH(KKK)=NZ
      IF (KKK-10) 112,112,111
  111 JB=94
      WRITE(NW,1003)JB,N4,NZ,NX,LLX,M
      JOEY=2
  112 CONTINUE
      DO 140L=1,N3
      WRITE(NW,1007)
      NNN=0
      LK=2
      JK=1
      JL=18
  113 CONTINUE
      READ(NR,1002) (NZI(I),I=JK,JL)
      DO 115K=LK,JL
      IF (NZI(K)) 114,117,114
  114 NNN=NNN+1
  115 CONTINUE
      IF (NZI(1)-18) 117,117,116
  116 LK=1
      JK=19
      JL=24
      GO TO 113
  117 IF (NZI(1)-NNN) 118,119,118
  118 JB = 1006
      WRITE(NW,1003) JB,N1,NZ,NX,LLX,M
      JOEY=2
  119 IND=0
      IF (NZI(1)-24) 120,120,157
  120 NNN=NNN+1
      DO 138 M = 2,NNN
      IF (IND) 122,122,121
  121 IND=0
      LLX=NZI(M)
      GO TO 137
  122 NX = IABS(NZI(M))
      IA=(NX-1)*JNQ+1
      IB=IA+JNQ-1
      IF (NX-500) 127,127,123
  123 IND=1
      LLX=MJJR(NX-500,NSET)
      IF (LLX) 157,157,124
  124 CONTINUE
      IF (NZI(M+1)) 125,157,126
  125 KY = -NZI(M+1)
      WRITE(NW,1008)NX,KY,(HOX(LLX,NSET,K ),K=1,JNQ)
      LLX=-LLX-500
      GO TO 137
  126 CONTINUE
      WRITE(NW,1009)NX,NZI(M+1),(HOX(LLX,NSET,K ),K=1,JNQ)
      LLX= LLX+500
      GO TO 137
  127 IF (NX-200) 132,132,128
  128 LLX=MJJR(NX-200,NSET)
      IF (LLX) 157,157,129
  129 IF (NZI(M)) 130,139,131
  130 WRITE(NW,1010)NX
      LLX=-LLX-200
      GO TO 137
  131 WRITE(NW,1011)NX
      LLX= LLX+200
      GO TO 137
  132 CONTINUE
      LLX=MJJR(NX,NSET)
      IF (NX) 134,134,133
  133 IF (LLX) 157,157,134
  134 CONTINUE
      IF (NZI(M)) 135,139,136
  135 WRITE(NW,1010)NX,(HOX(LLX,NSET,K ),K=1,JNQ)
      LLX=-LLX
      GO TO 137
  136 WRITE(NW,1011)NX,(HOX(LLX,NSET,K ),K=1,JNQ)
  137 NZ=NZ+1
      NIC(NZ)=LLX
  138 CONTINUE
      NZ=NZ+1
      NIC(NZ)=0
  139 CONTINUE
  140 CONTINUE
      NZ=NZ+1
      NIC(NZ)=0
      IF (N4) 141,155,155
  141 J=NCH(NSET)
      JJ=J+2
      DO 142 K=JJ,901
      IF (NIC(K)+NIC(K-1)+NIC(K-2)+NIC(K-3)) 142,145,142
  142 CONTINUE
  143 JB=95
      I=LLX
  144 N1=NCH(NSETMX)
      WRITE(NW,1003)JB,N1,NZ,I,J,JJ
      JOEY=2
      GO TO 165
  145 N=NZ-901
      K=K-1
      DO 146 I=J,900
      IF (NIC(I)+NIC(I+1)) 146,147,146
  146 CONTINUE
      GO TO 143
  147 IF (I-J-1) 143,148,149
  148 I=I-1
  149 DO 150 L=I,K
      J=K+I-L
      II=J+N
  150 NIC(II)=NIC(J)
      JJ=I
      DO 151 J=901,NZ
      JJ=JJ+1
  151 NIC(JJ)=NIC(J)
      DO 154 L=1,NSETMX
      IF (NCH(L)) 154,154,152
  152 IF (NCH(L)-I) 154,154,153
  153 NCH(L)=NCH(L)+N
  154 CONTINUE
      NZ=K+N-1
C     THIS EDIT IS OF THE NUCLIDE CHAIN ARRAY AS USED (ORDER NO)
  155 NIC(NZ+1)=0
      NIC(NZ+2)=0
      WRITE(IOUT,1012)NCH(NSET),(NIC(I),I=1,NZ)
      GO TO 101
  156 CONTINUE
      IF (NZ-ITUC) 158,158,157
  157 JB=96
      GO TO 144
  158 I=1
C     CHECK CHAIN ARRAY
      K=I
      JJ=NIC(I)
      IF (JJ.EQ.0) GO TO 165
      J=0
  159 K=K+1
      IF (NIC(K)) 159,160,159
  160 K=K+1
      J=J+1
      IF (NIC(K)) 159,161,159
  161 IF (JJ-J) 162,163,162
  162 JB=97
      GO TO 144
  163 J=0
      K=K+1
      IF (NIC(K)+NIC(K+1)) 164,165,164
  164 JJ=NIC(K)
      GO TO 159
  165 IF (JOEY) 167,167,166
  166 return
  167 RETURN
 1000 FORMAT('0NUCLIDE CHAIN DESCRIPTIONS')
 1001 FORMAT(24I3)
 1002 FORMAT(18I4)
 1003 FORMAT('0*** DATA ERROR STOP NUMBER',I6,',',5I6)
 1004 FORMAT('0CHAINS ADDED TO SIG SETS ',I6,' TO',I6/'0'/
     > ' DECAY   CAPTURE / YIELD NUCLIDE',I6,8I10/14X,11I10)
 1005 FORMAT('0SIG.SET',I6,' THROUGH',I6,' CONTAIN',I6,' CHAINS'/'0'/
     > ' DECAY   CAPTURE / YIELD NUCLIDE',I6,8I10/14X,11I10)
 1006 FORMAT('0CIRCULATING SYSTEM NUMBER',I6/'0'/
     > ' DECAY   CAPTURE / YIELD NUCLIDE',I6,8I10/14X,11I10)
 1007 FORMAT('0NEW CHAIN STARTS')
 1008 FORMAT(1X,I12,'FN FISS *1000',I5,2X,9F10.7/20X,11F10.7)
 1009 FORMAT(1X,I12,'FN CAPT *10000',I5,1X,9F10.7/20X,11F10.7)
 1010 FORMAT(1X,I4,28X,9F10.7/20X,11F10.7)
 1011 FORMAT(1X,I12,20X,9F10.7/20X,11F10.7)
 1012 FORMAT('0CHAIN ARRAY (',I4,')',25I4/(1X,28I4))
      END
CDYPD --047 ***CITATION*** READS INPUT SECTION 042/ CF-IPTM
      SUBROUTINE DYPD
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
C
  100 T1 = 0.0
      RETURN
      END
CKXNX --048 ***CITATION*** GETS KMAX AND NMAX/ CF-IPTM
      SUBROUTINE KXNX
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     > , XNAME(3,200)
C
      REWIND IOSIG
      NMAX = 0
      MAXS = 0
      DO 100 M=1,MMAX
      MAXS = MAX0(MAXS,NXSET(M))
  100 CONTINUE
      DO 106 NSET=1,MAXS
      READ(IOSIG,END=107)
      READ(IOSIG)N1,N2,N3
      IF ((N2.LE.0).OR.(N2.GT.200)) GO TO 101
      IF ((N3.LE.0).OR.(N3.GT.1000)) GO TO 101
      GO TO 102
  101 WRITE(IOUT,1000)N2,N3
      return 442
  102 CONTINUE
      DO 104 M = 1,MMAX
      N4 = NXSET(M)
      IF (N4-NSET) 104,103,104
  103 NMAX = MAX0(NMAX,N2)
      KMAX = N3
  104 CONTINUE
      NNUM = 2*N2+2
      DO 105 LC = 1,NNUM
      READ(IOSIG)
  105 CONTINUE
  106 CONTINUE
      REWIND IOSIG
      RETURN
  107 CONTINUE
      WRITE(IOUT,1001)
      REWIND IOSIG
      return 443
 1000 FORMAT('0ERROR STOP NUMBER 29',2I4)
 1001 FORMAT('0MORE SETS WERE SPECIFIED THAN WERE PROVIDED ON THE CROSS
     >SECTION TAPE')
      END
CNSRT --051 ***CITATION*** SETS UP NUC. CLASSIFICATION ARRAY/ CF-TAPX
      SUBROUTINE NSRT(N,INO,IGER)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
C
  100 IDX = IGER
      IF (INO.NE.0) GO TO 102
  101 INO = INO+1
      IDX = IGER+INO
      NXTR1(IDX) = N
      GO TO 104
  102 DO 103 I = 1,INO
      IDX = IGER+I
      IF (NXTR1(IDX).EQ.N) GO TO 104
  103 CONTINUE
      GO TO 101
  104 CONTINUE
      RETURN
      END
CKSIG --052 ***CITATION*** CALCULATES A(K1-K18)/ CF-IPTM
      SUBROUTINE KSIG(KVX,MVX,NVX,NSETVX)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AKADD/KAY(1),K1,K2,K3,K4,K5,K6,K7,K8,K9,K10,K11, K12,K13,
     > K131,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23,K24, K25,K26,K27,
     > K28,K29,K30,K31,K32,K33,K34,K35,K36,K37, K38,K39,K40,K41,K42,K43,
     >  K44,K45,K46,K47,K48,K49, K50,K51,K52,K53,K54,K55,K56,K57,K58,
     > K59, K60,K61,K62, K63,K64,K65,K66,K67,K68,K69,K70,K71,K72,K73,
     > K74,K75, K76,K77,K78,K79,K80,K81,K82,K83,K84,K85,K86,K87, K88,
     > K89,K90, K91,K92,K93,K94,K95,K96,K97,K98, K99,K100,NDATA,KNRGN,
     > KNCOMP, KPVOL,KRVOL,MEMORY, MEMX
C
  100 K1 = 1
      KNNSX = KVX*NVX*NSETVX
      K2 = K1+KNNSX
      K3 = K2+KNNSX
      K4 = K3+KNNSX
      K5 = K4+KNNSX
      K6 = K5+KNNSX
      K7 = K6+KVX*KVX
      K8 = K7+KVX*NSETVX
      K9 = K8+NVX*NSETVX*10
      NNSX = NVX*NSETVX
      K10 = K9+NNSX
      K12 = K10+NSETVX*200
      K13 = K12+NNSX
      K14 = K13 +NNSX
      K15 = K14 + KVX*MVX*10
      K16 = K15 + KVX*MVX
      K17 = K16+KVX
      K18 = K17+NVX*MVX
C     OVERLAID STORAGE
      K30=K18+NVX*IX(168)+2*KVX*MVX
      K31=K30+20*NVX*NSETVX
      K32=K31+NSETVX*20
      K33=K32+NSETVX*20
      K34=K33+1000
      RETURN
      END
CKRST --053 ***CITATION*** CALCULATES A(K19-K62)/ CF-INPT
      SUBROUTINEKRST(IVX,JVX,KBVX,KVX,LVX,MVX,NVX, IVXP1,JVXP1,KBVXP1,
     > NSETVX,NVO,IVO,IVZ,KVZ,N3DDIM)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AKADD/KAY(1),K1,K2,K3,K4,K5,K6,K7,K8,K9,K10,K11, K12,K13,
     > K131,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23,K24, K25,K26,K27,
     > K28,K29,K30,K31,K32,K33,K34,K35,K36,K37, K38,K39,K40,K41,K42,K43,
     >  K44,K45,K46,K47,K48,K49, K50,K51,K52,K53,K54,K55,K56,K57,K58,
     > K59, K60,K61,K62, K63,K64,K65,K66,K67,K68,K69,K70,K71,K72,K73,
     > K74,K75, K76,K77,K78,K79,K80,K81,K82,K83,K84,K85,K86,K87, K88,
     > K89,K90, K91,K92,K93,K94,K95,K96,K97,K98, K99,K100,NDATA,KNRGN,
     > KNCOMP, KPVOL,KRVOL,MEMORY, MEMX
C
  100 N3DDIM = IVX*JVX*KBVXP1*KVX
      IF (KBVX.EQ.1) N3DDIM = 1
      JIKBX = JVX*IVX*KBVX
      JDP = JIKBX
C    THE STEP ON THE NEXT CARD IS FOR DOUBLE PRECISION, IBM/360
C           REMOVE THE CARD IF IT DOES NOT APPLY ON YOUR MACHINE
      IF (KBVX.EQ.1) JDP = 2*JDP
      LKX = LVX*KVX
      MKX = MVX*KVX
      K38=K18+NVO
      K39 = K38 + MKX
      K19=K39+MKX
C    THE STEP ON THE NEXT CARD IS FOR DOUBLE PRECISION
      K19=2*(K19/2)+1
      K20=K19+JDP
      K23 = K20+JDP
      N1 = MKX*KVX
      N2 = KVX*(NSETVX+2)*KVX
      N3 = MAX0(N1,N2)
      K24 = K23+N3
C    THE STEP ON THE NEXT CARD IS FOR DOUBLE PRECISION
      K24 = 2*(K24/2)+1
      JIKBKX = JIKBX*KVX
      JDP = JIKBKX
C    THE STEP ON THE NEXT CARD IS FOR DOUBLE PRECISION
      IF (KBVX.EQ.1) JDP = 2*JDP
      K41 = K24+JDP
C     OVERLAID STORAGE
      K54 = K34+NVX
      K55 = K54+NVX
      K56 = K55+NVX
      K57 = K56+NVX
      K58 = K57+NVX
      K59 = K58+NVX
      K60 = K59+IVO
      K61 = K60+IVO
C
      K42 = K41+JIKBX
      NT1 = NVX*MVX*10
      K42 = MAX0(K42,K19+NT1,K61+IVO)
      K43 = K42+1
      K44 = K43+NVX*6
      K45 = K44+MVX*10
      K46 = K45+KVX
      K47 = K46+KVX
      K48 = K47+KVX
      K49 = K48+KVX*20
C    THE STEP ON THE NEXT CARD IS FOR DOUBLE PRECISION
      K49 = 2*(K49/2)+1
      KVXD = KVX
C    THE STEP ON THE NEXT CARD IS FOR DOUBLE PRECISION
      KVXD = 2*KVX
      K50 = K49+KVXD
      K51 = K50+KVX
      K6X = KVX*6
      K52 = K51+K6X
      K62 = K52 + K6X
      RETURN
      END
CCNIO --054 ***CITATION*** CALCULATES A(K64-K67)/ CF-IPTM
      SUBROUTINE CNIO(IVX,JVX,KBVX,KVX,IVXP1,JVXP1,KBVXP1,IVZ,KVZ,
     > N3DDIM,LVX,NBLOCK,IOVX,IOVZ)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AKADD/KAY(1),K1,K2,K3,K4,K5,K6,K7,K8,K9,K10,K11, K12,K13,
     > K131,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23,K24, K25,K26,K27,
     > K28,K29,K30,K31,K32,K33,K34,K35,K36,K37, K38,K39,K40,K41,K42,K43,
     >  K44,K45,K46,K47,K48,K49, K50,K51,K52,K53,K54,K55,K56,K57,K58,
     > K59, K60,K61,K62, K63,K64,K65,K66,K67,K68,K69,K70,K71,K72,K73,
     > K74,K75, K76,K77,K78,K79,K80,K81,K82,K83,K84,K85,K86,K87, K88,
     > K89,K90, K91,K92,K93,K94,K95,K96,K97,K98, K99,K100,NDATA,KNRGN,
     > KNCOMP, KPVOL,KRVOL,MEMVRY, MEMX
C
  100 NHEX = 1
      MVX=MMAX
      LKX=LVX*KVX
      MKX=MVX*KVX
      MKXD = MKX
C    THE STEP ON THE NEXT CARD IS FOR DOUBLE PRECISION, IBM/360
      MKXD = 2*MKX
      IF (IVX.LT.IVZ) NHEX = 2
      N1 = JVX*IVX*KBVX
      N2 = JVXP1*IVZ*KBVX*NHEX
      N3 = JVX*IVXP1*KBVX
      N4 = JVX*IVX*KBVXP1
      IF (KBVX.EQ.1) N4 = 1
      M1 = N1*KVX
      M2 = N2*KVX
      M3 = N3*KVX
      M4 = N4*KVX
      IF (KBVX.EQ.1) M4 = 1
      MT = M2+M3+M4
      NDQ = MAX0(1+LKX+2*MKX+MKXD+N1,8*MKX,NBLOCK)
      NDR = MAX0(1+LKX+2*MKX+MKXD+M1,8*MKX,NBLOCK)
      NT=MT -N2-N3-N4-NDQ+NDR
      IF (NGC(23).GT.0) GO TO 101
      NSPACE=MEMVRY-K64-3*LVX-N1-NDR
      IF (NSPACE.GE.MT) GO TO 102
  101 CONTINUE
      IOVX = 1
      IOVZ = 2
      N3DDIM = N4
      K65 = K64+N2
      K66 = K65+N3
      K63=K66+N4
      K21=K63+N1
C    THE STEP ON THE NEXT CARD IS FOR DOUBLE PRECISION
      K21 = 2*(K21/2)+1
      IX(37) = K64
      IX(38) = K21-1
      GO TO 103
  102 IOVX = KVX
      IOVZ = KVZ
      K65 = K64+M2
      K66 = K65+M3
      K63=K66+M4
      K21=K63+M1
C    THE STEP ON THE NEXT CARD IS FOR DOUBLE PRECISION
      K21=2*(K21/2)+1
      NDQ=NDR
      IX(37) = 0
      IX(38) = 0
      N3DDIM = M4
  103 CONTINUE
      K29 = K21+MKXD
      K36=K29+LKX
      K37=K36+MKX
      K40=K63
      K67=K63
      K68=K63+NDQ
      WRITE(IOUT,1000)NT
      IX(169) = K64
      IX(170) = K21 - 1
      RETURN
 1000 FORMAT('0CORE STORAGE DIFFERENCE (WORDS) EQUATION CONSTANTS I/O IN
     >STEAD OF STORED',I8)
      END
CBNSB --055 ***CITATION*** PUT BND. COND. CNSTS. IN A(N)/ CF-IPTM
      SUBROUTINE BNSB(BBND,BND,KVX,IRV)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
C
      DIMENSION BBND(KVX),BND(6,KVX)
C
      IO19 = IX(86)
      REWIND IO19
      IF (IRV.NE.1) GO TO 100
      WRITE(IO19) ((BND(I,K),I=1,6),K=1,KVX),(BBND(K),K=1,KVX)
      GO TO 121
  100 IF (INNO(3).EQ.3) GO TO 101
      READ(IO19) ((BND(I,K),I=1,6),K=1,KVX),(BBND(K),K=1,KVX)
      GO TO 121
  101 DO 103 K=1,KVX
      DO 102 I=1,6
      BND(I,K) = 0.0
  102 CONTINUE
  103 CONTINUE
      IF (XMIS(1).GE.0.0.AND.XMIS(2).GE.0.0) GO TO 107
  104 READ(IO19,END=107) I,(BBND(K),K=1,KVX)
      IF (I.GT.6) GO TO 106
      IF (I.LT.1) GO TO 120
      DO 105 K=1,KVX
      BND(I,K) = BBND(K)
  105 CONTINUE
      GO TO 104
  106 IF (I.NE.7) GO TO 120
  107 CONTINUE
      IF (XMIS(1)) 113,108,109
  108 T1 = 0.4692
      GO TO 110
  109 T1 = XMIS(1)
  110 DO 112 I=11,16
      II = I - 10
      IF (NUAC(I).NE.0) GO TO 112
      DO 111 K=1,KVX
      BND(II,K) = T1
  111 CONTINUE
  112 CONTINUE
  113 CONTINUE
      IF (NUAC(17).GT.0) GO TO 115
      DO 114 K=1,KVX
      BBND(K) = 0.0
  114 CONTINUE
      GO TO 121
  115 CONTINUE
      IF (XMIS(2)) 121,116,117
  116 T1 = 0.4692
      GO TO 118
  117 T1 = XMIS(2)
  118 DO 119 K=1,KMAX
      BBND(K) = T1
  119 CONTINUE
      GO TO 121
  120 CONTINUE
      NER(33) = 33
  121 CONTINUE
      REWIND IO19
      RETURN
      END
CCPNC --056 ***CITATION*** PRINTS NUCLIDE CLASSIFICATION DATA/ CF-IPTM
      SUBROUTINE CPNC
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     > , XNAME(3,200)
C
  100 WRITE(IOUT,1000)
      I1 = IXPUT(94)
      I2 = IXPUT(95)
      I3 = IXPUT(96)
      I4 = IXPUT(97)
      I5 = IXPUT(98)
      I6 = IXPUT(99)
      I7 = IXPUT(100)
      I1F = 101
      I1L = I1F+I1-1
      I2F = I1L+1
      I2L = I2F+I2-1
      I3F = I2L+1
      I3L = I3F+I3-1
      I4F = I3L+1
      I4L = I4F+I4-1
      I5F = I4L+1
      I5L = I5F+I5-1
      I6F = I5L+1
      I6L = I6F+I6-1
      I7F = I6L+1
      I7L = I7F+I7-1
      IF (I1.EQ.0) GO TO 101
      WRITE(IOUT,1001)(IXPUT(I),I=I1F,I1L)
      GO TO 102
  101 WRITE(IOUT,1002)
  102 IF (I2.EQ.0) GO TO 103
      WRITE(IOUT,1003)(IXPUT(I),I=I2F,I2L)
      GO TO 104
  103 WRITE(IOUT,1004)
  104 IF (I3.EQ.0) GO TO 105
      WRITE(IOUT,1005)(IXPUT(I),I=I3F,I3L)
      GO TO 106
  105 WRITE(IOUT,1006)
  106 IF (I4.EQ.0) GO TO 107
      WRITE(IOUT,1007)(IXPUT(I),I=I4F,I4L)
      GO TO 108
  107 WRITE(IOUT,1008)
  108 IF (I5.EQ.0) GO TO 109
      WRITE(IOUT,1009)(IXPUT(I),I=I5F,I5L)
      GO TO 110
  109 WRITE(IOUT,1010)
  110 IF (I6.EQ.0) GO TO 111
      WRITE(IOUT,1011)(IXPUT(I),I=I6F,I6L)
      GO TO 112
  111 WRITE(IOUT,1012)
  112 IF (I7.EQ.0) GO TO 113
      WRITE(IOUT,1013)(IXPUT(I),I=I7F,I7L)
      GO TO 114
  113 WRITE(IOUT,1014)
  114 CONTINUE
      DO 115 I = 101,I7L
      IF (IXPUT(I).GT.200) NER(18) = 18
  115 CONTINUE
      IX(51) = I1F
      IX(52) = I1L
      IX(53) = I2F
      IX(54) = I2L
      IX(55) = I3F
      IX(56) = I3L
      IX(57) = I4F
      IX(58) = I4L
      IX(59) = I5F
      IX(60) = I5L
      IX(61) = I6F
      IX(62) = I6L
      IX(63) = I7F
      IX(64) = I7L
      RETURN
 1000 FORMAT('0')
 1001 FORMAT(' FISSILE NUCLIDES---',25I4)
 1002 FORMAT(' FISSILE NUCLIDES---NONE SPECIFIED')
 1003 FORMAT(' FERTILE NUCLIDES---',25I4)
 1004 FORMAT(' FERTILE NUCLIDES---NONE SPECIFIED')
 1005 FORMAT(' INTERMEDIATE NUCLIDES---',25I4)
 1006 FORMAT(' INTERMEDIATE NUCLIDES---NONE SPECIFIED')
 1007 FORMAT(' OTHER NUCLIDES---',25I4)
 1008 FORMAT(' OTHER NUCLIDES---NONE SPECIFIED')
 1009 FORMAT(' STRUCTURAL NUCLIDES---',25I4)
 1010 FORMAT(' STRUCTURAL NUCLIDES---NONE SPECIFIED')
 1011 FORMAT(' SPECIAL NUCLIDES---',25I4)
 1012 FORMAT(' SPECIAL NUCLIDES---NONE SPECIFIED')
 1013 FORMAT(' FISSION PRODUCT NUCLIDES---',25I4)
 1014 FORMAT(' FISSION PRODUCT NUCLIDES---NONE SPECIFIED')
      END
CSIZE --058 ***CITATION*** CHECKS PROB. LIMITS AGAINST MAX/ CF-IPTM
      SUBROUTINE SIZE(IVX,JVX,KBVX,KVX,MVX,NVX,NSETVX,NRVX)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
C
  100 IF (IVX.GT.210) GO TO 101
      IF (JVX.GT.210) GO TO 101
      IF (KBVX.GT.210) GO TO 101
C     REMOVED LIMIT ON GROUPS
      IF (MVX.GT.200) GO TO 101
      IF (NVX.GT.200) GO TO 101
      IF (NSETVX.GT.50) GO TO 101
      IF (NRVX.LE.200) GO TO 102
  101 NER(15) = 15
      WRITE(IOUT,1000)IVX,JVX,KBVX,KVX,MVX,NVX,NSETVX,NRVX
  102 CONTINUE
      RETURN
 1000 FORMAT('0',10I6)
      END
CSHOX --60.1 ***CITATION*** READ 036 DATA FROM IO10/ CF-IPTM
      SUBROUTINE SHOX(HOX,NFO,NNFO,NIC,NVX,NSETVX)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
C
      DIMENSION HOX(NVX,NSETVX,20),NFO(NSETVX,20),NNFO(NSETVX,20),
     > NIC(1000)
C
      IO10 = IX(77)
      REWIND IO10
  100 CONTINUE
      READ(IO10,END=103)INSEC,NREC,NSET,I1,I2
      IF (INSEC.EQ.1000) GO TO 103
      IF (INSEC.EQ.36) GO TO 102
      IF (NREC.LE.0) GO TO 100
      DO 101 N = 1,NREC
      READ(IO10)
  101 CONTINUE
      GO TO 100
  102 CONTINUE
      READ(IO10)HOX
      READ(IO10)NFO
      READ(IO10)NNFO
      READ(IO10)NIC
  103 CONTINUE
      REWIND IO10
      RETURN
      END
CIMXS  60.3 ***CITATION*** INPUT SECTION 038  / CF-IPTM
      SUBROUTINE IMXS(BBND,KVX)
C
C     DOUBLE PRECISION H1,H2
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
C
      COMMON/SECT38/ KN(100),MN(150),NKB,NMB,NM1,NM2,NM3
C
      DIMENSION BBND(KVX)
      CHARACTER*8 H1,H2
C
      DATA H1,H2/8HGROUP   ,8HZONE    /
C
      IX(151) = 1
      NOG = 0
      NOM = 0
      WRITE(IOUT,1000)
      DO 100 I=1,205
  100 KN(I) = 0
      READ(IOIN,1001) NKB,NMB,NM1,NM2,NM3
      WRITE(IOUT,1002) NKB,NMB,NM1,NM2,NM3
      IF (NKB.LT.1) NOG = 1
      IF (NKB.GT.KMAX) NOG = 1
      IF (NMB.GT.MMAX) NOM = 1
      READ(IOIN,1001) (KN(I),I=1,NKB)
      WRITE(IOUT,1002) (KN(I),I=1,NKB)
      IF (KN(NKB).NE.KMAX) NOG = 1
      M1 = KN(1)
      IF (M1.LT.1.OR.M1.GT.KMAX) NOG = 1
      IF (NKB.LE.1) GO TO 102
      DO 101 M=2,NKB
      M2 = KN(M)
      IF (M2.LT.1.OR.M2.GT.KMAX) NOG = 1
      IF (M2.LE.M1) NOG = 1
      M1 = M2
  101 CONTINUE
  102 CONTINUE
      IF (NMB.LE.0) GO TO 105
      READ(IOIN,1001) (MN(I),I=1,NMB)
      WRITE(IOUT,1002) (MN(I),I=1,NMB)
      IF (MN(NMB).GT.MMAX) NOM = 1
      M1 = MN(1)
      IF (M1.LT.1.OR.M1.GT.MMAX) NOM = 1
      IF (NMB.LE.1) GO TO 104
      DO 103 M=2,NMB
      M2 = MN(M)
      IF (M2.LT.1.OR.M2.GT.MMAX) NOM = 1
      IF (M2.LE.M1) NOM = 1
      M1 = M2
  103 CONTINUE
  104 CONTINUE
  105 CONTINUE
      IF (NOG.EQ.0) GO TO 106
      WRITE(IOUT,1006) H1
      NER(52) = 52
  106 IF (NOM.EQ.0) GO TO 107
      WRITE(IOUT,1006) H2
      NER(53) = 53
  107 CONTINUE
      IF (NOG.GT.0.OR.NOM.GT.0) GO TO 128
      NOG = 0
      NOM = 0
      N17 = NUAC(17)
      IF (N17.EQ.0) GO TO 127
      IF (NMB.LE.0) GO TO 116
      DO 112 M=1,NMB
      IF (M.GT.1) GO TO 108
      M1 = 1
      GO TO 109
  108 M1 = MN(M-1) + 1
  109 M2 = MN(M)
      DO 110 L=M1,M2
      IF (L.EQ.N17) GO TO 111
  110 CONTINUE
      GO TO 112
  111 IF (M1.EQ.N17.AND.M2.EQ.N17) GO TO 113
      GO TO 114
  112 CONTINUE
  113 CONTINUE
      GO TO 115
  114 WRITE(IOUT,1003) N17,M1,M2
      NOM = 1
  115 CONTINUE
  116 CONTINUE
      IF (XMIS(2).GE.0.0) GO TO 127
      IO19 = IX(86)
      REWIND IO19
      IF (INNO(3).EQ.3) GO TO 117
      M = 6*KVX
      READ(IO19) (DUM,I=1,M),(BBND(K),K=1,KVX)
      GO TO 119
  117 CONTINUE
  118 READ(IO19,END=125) I,(BBND(K),K=1,KVX)
      IF (I.NE.7) GO TO 118
  119 CONTINUE
      DO 124 M=1,NKB
      IF (M.GT.1) GO TO 120
      M1 = 1
      GO TO 121
  120 M1 = KN(M-1) + 1
  121 M2 = KN(M)
      IF (M1.EQ.M2) GO TO 124
      B = BBND(M1)
      M1P1 = M1 + 1
      DO 122 L=M1P1,M2
      IF (BBND(L).NE.B) GO TO 123
  122 CONTINUE
      GO TO 124
  123 CONTINUE
      WRITE(IOUT,1004) M1,M2
      NOG = 1
  124 CONTINUE
      GO TO 126
  125 WRITE(IOUT,1005)
  126 REWIND IO19
  127 CONTINUE
      IF (NOG.GT.0.OR.NOM.GT.0) NER(54) = 54
  128 RETURN
 1000 FORMAT('0SECTION 038 - CROSS SECTION COLLAPSE')
 1001 FORMAT(24I3)
 1002 FORMAT(1X,24I4)
 1003 FORMAT('0BLACK ABSORBER ZONE',I4,
     > ' MAY NOT BE COLLAPSED WITH ZONES',I4,' THRU',I4)
 1004 FORMAT(' GROUPS',I4,' THRU',I4,' MAY NOT BE COLLAPSED(HAVE DIFFERE
     >NT INTERNAL BLACK BOUNDARY CONSTANTS)')
 1005 FORMAT('0I/O ERROR ON IO19(IMXS)')
 1006 FORMAT('0',A8,'SPECIFICATIONS ARE NOT IN ASCENDING ORDER OR ARE OU
     >T OF RANGE')
      END
CGEDT --061    ***FUEL MANAGEMENT***   CORE ALLOCATION AND START
      SUBROUTINE GEDT(A,MEMORY,IOS)
C
      COMMON/GMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
      COMMON/CMARY/MEMARY,IMN,MNI,IJLMN,NMLJI,IY(50),AX(50),TITL(36)
      COMMON/COOPD/FLOTR(200),INTGR(100)
      DIMENSION A(MEMORY)
C
      DOUBLE PRECISION FLOTR
C
      NNN = MEMORY
      CALL GRIV(A,NNN,IOS)
  100 RETURN
      END
CGRIV --062    ***FUEL MANAGEMENT***   INPUT CONTROL
C     CALLED FROM/GEDT
      SUBROUTINE GRIV(A,MEMORY,IOS)
C*****FOLLOWING ARE THE DEFINITATIONS OF THE VARIABLE INTEGER
C     SUBSCRIPTS USED TO DIMENSION ADJUSTABLE DIMENSIONED VARIABLES.
C     NFSVX - NUMBER OF FRESH FUEL FEED STREAMS = MST(1) BELOW.
C     NRSVX - NUMBER OF RECYCLE STREAMS = MST(2) BELOW.
C     NDSVX - NUMBER OF DISCHARGE STREAMS = MST(3) BELOW.
C     NISVX - NUMBER OF NUCLIDES INVOLVED IN FUEL MANAGEMENT.
C     NPDVX - NUMBER OF SETS OF DECAY DATA, CARDS 3+ SECTION 091
C     MVX - NUMBER OF ZONES.
C     NVX - MAXIMUM NUMBER OF NUCLIDES PER ZONE.
C     NRLVX -
C     I1VX - NUMBER OF ZONE CLASS NUMBERS SPECIFIED ON CARDS 4+ (091).
C     I2VX - NUMBER OF CYCLES DELAY + 2 (MST(7)+2).
C     I3VX - LARGEST MANAGMENT SPECIFICATION NFM'S SECTION 093.
C     I4VX - NUMBER OF MANAGMENT SPECIFICATIONS SECTION 093.
C     I5VX - TOTAL NUMBER OF SUBZONE CONCENTRATIONS
C     I6VX - NUMBER OF ZONE CLASSES.
C     I7VX - MAXIMUM OF SUBZONES TIMES NUCLIDES.
C     I8VX -
C     I9VX -
C     I10VX -
C     NFMVX = I3VX*I4VX.
C     NONNN - NUMBER OF DIFFERENT NUCLIDES
C     NSETVX - NUMBER OF CROSS SECTION SETS
C*****FOLLOWING ARE THE DEFINITIONS OF THE VARIABLES USED. THEY ARE
C     STORED IN THE ARRAY A. THE VARIABLES WITH NO DEFINATION
C     ARE INPUT VARIABLES DEFINED IN INPUT SECTIONS 091 AND 093.
C     MST(8).
C     NIS(30).
C     NPARNT(NPDVX) - CARDS 3+ SECTION 091.
C     NDAUTR(NPOVX) - SAME.
C     DKAYC(NPDVX) - SAME.
C     NFFFS(NFSVX,12).
C     QMTA(NFSVX,3).
C     DLTMF(NFSVX).
C     DPQF(NFSVX,2).
C     FSCON(NISVX,NFSVX) - CARDS 6+ SECTION 091.
C     NFRFS(NRSVX,8).
C     QMTAR(NRSVX).
C     DLTMR(NRSVX).
C     DPQR(NRSVX,2).
C     RCYFR(NISVX,NRSVX) - CARDS 8+ SECTION 091.
C     NFDFS(NDSVX,8).
C     QMTAD(NDSVX).
C     DLTMD(NDSVX).
C     DPQD(NDSVX,2).
C     FPREC(NISVX,NDSVX) - CARDS 10+ SECTION 091.
C     NFFSS(NFSVX,I1VX).
C     NFM(I3VX,I4VX).
C     HOLA(2,I6VX) - ZONE CLASS NAME.
C     HAL(NONNN) - NUCLIDE NAME.
C     IDDN(NONNN) - ID NUMBERS FOR NUCLIDES
C     XMAS(NONNN) - NUCLIDE MASS.
C     MJJR(NVX,NSETVX) - ORDER NUMBER OF NUCLIDES IN SIGMA SET
C     NJJR(NONNN,NSETVX) - ORDER NUMBER OF NUCLIDES IN IDDN LIST
C     NCOO(4,NONNN)
C         (1,NONNN) - NUCLIDE TYPE SPECIFICATION.
C     NZINF(MVX,7)
C          (MVX,1) - NUMBER OF SUBZONES.
C          (MVX,3) - ORDER NUMBER OF SIGMA SET.
C          (MVX,7) - ZONE CLASS.
C     NJM(6,NSETVX)
C        (1,NSETVX) - NUMBER OF NUCLIDES IN EACH SIGMA SET.
C     ZONVOL(MVX) - ZONE VOLUMES.
C     CODC(NISVX,NDSVX,I2VX) - DISCHARGE STREAMS CONTENTS.
C     CORC(NISVX,NRSVX,2) - RECYCLE STREAMS CONTENTS.
C     CEQ0(NISVX) - UTILITY STORAGE.
C     NSUBNO(MVX) - THE SUBZONE WITH WHICH WE ARE NOW WORKING.
C     LJJR(NISVX) - ORDER NUMBER OF INPUT NUCS. IN IDDN LIST
C     CONC(NVX,MVX) - END OF CYCLE CONCENTRATIONS.
C     SUBCNC(I5VX) -  END  OF CYCLE SUBZONE CONCENTRATIONS.
C     ITMIS(20) - MISC. DATA.
C     AITIMS(20) - MISC. DATA.
C     CON0(NVX,MVX) - START OF CYCLE CONCENTRATIONS.
C     SUBCN0(I7VX) - START OF CYCLE SUBZONE CONCENTRATIONS.
C     STRTF(NISVX,NFSVX) - CONTENTS OF MANAGMENT ZONES AT START OF CYCLE
C                          BEFORE RECYCLE.
C     STRTR(NISVX,NRSVX) - SAME EXCEPT AFTER RECYCLE.
C     FEEDF(NISVX,NFSVX) - NET AMOUNT FED TO REACTOR BEFORE RECYCLE.
C                          = ENDF-RMVF-STRTF.
C     FEEDR(NISVX,NRSVX) - SAME EXCEPT AFTER RECYCLE.
C     ENDF(NISVX,NFSVX) - CONTENTS OF MANAGMENT ZONES AT END OF CYCLE.
C                         BEFORE RECYCLE.
C     ENDR(NISVX,NRSVX) - SAME EXCEPT AFTER RECYCLE.
C     RMVF(NISVX,NFSVX) - REMOVALS FROM REACTOR BEFORE RECYCLE.
C     RMVR(NISVX,NRSVX) - SAME EXCEPT AFTER RECYCLE.
C     TOTSTR(NISVX) - SUM OF STRTF AND STRTR.
C     TOTFED(NISVX) - SUM OF FEEDF AND FEEDR.
C     TOTEND(NISVX) - SUM OF ENDF AND ENDR.
C     TOTRMV(NISVX) - SUM OF RMVF AND RMVR.
C     TOTNFD(NISVX) - TOTAL MASS OF MATERIAL NOT FED TO REACTOR.
C*****FOLLOWING ARE SOME MISC. DEFINITATIONS
C     FLOTR(1-100) - DATA FILE NAMES
C     INTGR(1)     NUMBER OF DATA FILE NAMES STORED
C     INTGR(2)     STORAGE ALLOCATION, REAL*4 WORDS
C     INTGR(11)    AN INDICATOR ON INPUT DATA PROCESSING
C                        0- CALCULATION MODE
C                        1- INPUT DATA PROCESSING MODE
C     INTGR(12)    INDICATOR OF DATA INPUT ERROR CAUSING TERMINATION = 1
C     INTGR(51)    COUNT ON THE NUMBER OF TIMES THE AUXILIARY ROUTINE
C                        HAS BEEN ENTERED
C     INTGR(60)    COUNT ON THE NUMBER OF TIMES THE FLUX ROUTINE HAS
C                        BEEN ENTERED
C     INTGR(61)    DITTO, THE DEPLETION ROUTINE
C     INTGR(62)    DITTO, THE FUEL MANAGEMENT ROUTINE
C     INTGR(71)    CYCLE NUMBER (COUNT ON REFUELINGS)
C     INTGR(72)    DEPLETION STEP IN CYCLE
C     INTGR(73) INDICATOR THAT THE FLUX CALCULATION HAS CHANGED SOME
C                  DATA SUCH AS VOLUMES, DENSITIES, OR CROSS SECTIONS
C                  REQUIRING REFERENCE DATA CHANGES
C     INTGR(74)    INDICATOR ON CYCLE
C                        0- A NEW CYCLE IS BEING CALCULATED
C                        1- THE LAST CALCULATED CYCLE IS BEING REPEATED
C     INTGR(75)    INDICATOR ON DEPLETION STEP
C                        0- A NEW STEP IS BEING CALCULATED
C                        1- THE LAST STEP IS BEING REPEATED
C                        2- THE FINAL STEP OF THE CYCLE IS BEING REDONE
C     INTGR(76)    INDICATOR ON DEPLETION CYCLE TERMINATION
C                        0- CALCULATION CONTINUES
C                        1- END-OF-CYCLE HAS BEEN DETERMINED
C     INTGR(77)    INDICATOR ON DEPLETION CHISTORY TERMINATION
C                        0- CALCULATION CONTINUES
C                        1- END OF HISTORY HAS OCCURED
C     INTGR(91)     INDICATOR ON INPUT
C                         0 - SECTION 091 HAS NOT BEEN INPUT
C                         1 - SECTION 091 HAS  BEEN INPUT
C     INTGR(93)     INDICATOR ON INPUT
C                         0 - SECTION 093 HAS NOT BEEN INPUT
C                         1 - SECTION 093 HAS  BEEN INPUT
C     INTGR(100)    INDICATOR ON INPUT
C                         91 - SECTION 091 READY FOR INPUT
C                         93 - SECTION 093 READY FOR INPUT
C
C      DOUBLE PRECISION FLOTR
C
      COMMON/GMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
      COMMON/CMARY/MEMARY(1),IMN,MNI,IJLMN,NMLJI,IY(50),AX(50),TITL(36)
      COMMON/COOPD/FLOTR(200),INTGR(100)
      COMMON/GMADD/KAY(1),K1,K2,K3,K4,K5,K6,K7,K8,K9,K10,K11,K12,K13,
     > K14,K15,K16,K17,K18,K19,K20,K21,K22,K23,K24,K25,K26,K27,K28,K29,
     > K30,K31,K32,K33,K34,K35,K36,K37,K38,K39,K40,K41,K42,K43,K44,K45,
     > K46,K47,K48,K49,K50,K500,K501,K502,K503,K504,K505,K506,K507,K508,
     >  K509,K51,K52,K53,K54,K540,K541,K542,K543,K544,K545,K546,K547,
     > K548,K549,K550,K55,K56,K57,K58,K59,K60,K61,K62,K63, K64,K65,K66,
     > K67,K68,K69,K70,K71,K72,K73,K74,K75
      COMMON/GMIMS/IB(100),MEMVRY,NFSVX,NRSVX,NDSVX,NISVX,NPDVX,NFMVX,
     > MVX,NVX,NRLVX,I1VX,I2VX,I3VX,I4VX,I5VX,I6VX,I7VX,I8VX,I9VX,I10VX,
     >  NONNN,NSETVX
C
      DIMENSION A(MEMORY)
      DIMENSION TITLE(17)
      DIMENSION IC(9)
      DIMENSION DN(9)
      CHARACTER*8 DN,FLOTR
C
      DATA DN(1)/8HMANGDATA/,DN(2)/8HSCRATCH1/,DN(3)/8HHISTDATA/, DN(4)/
     >  8HCYCLHIST/,DN(5)/8HMASSDATA/,DN(6)/8HSBZNDENS/, DN(7)/
     > 8HZONEDENS/,DN(8)/8HSCRATCH2/,DN(9)/8HFUELDATA/
C*****FIXED LENTH OF 1 ST COMMON/ALSUB/
      NLSUB = 455
C*****ZERO ALL VARIABLES*****
  100 CALL GNTL(A,MEMORY)
      MEMVRY = MEMORY
      IADR = 20
      IF (INTGR(16).EQ.0) GO TO 101
      CALL STFM(A,MEMORY)
      GO TO 115
  101 CONTINUE
      IOIN = 5
      IOUT = 51
      IF ((INTGR(91).EQ.0).AND.(INTGR(93).EQ.0)) GO TO 102
      CALL GION(DN(1),IO1,IOUT,IADR)
      REWIND IO1
      READ(IO1)
      IF (INTGR(93).EQ.1) READ(IO1)
      I1 = 1
      IRC = 0
      LNTH = NLSUB
      CALL GRIT(BLSUB(1),LNTH,IRC,IO1,I1)
      LNTH = IX(4)
      CALL GRIT(KAY(1) ,LNTH,IRC,IO1,I1)
      LNTH = IX(5)
      CALL GRIT(IB(1) ,LNTH,IRC,IO1,I1)
      IF(NCY.GT.0) CALL GRIT(A(K42),IX(6),IRC,IO1,I1)
      REWIND IO1
  102 CONTINUE
      IF (INTGR(100).EQ.91) GO TO 104
      IF (INTGR(100).NE.93) GO TO 103
      IF (INTGR(91).EQ.0) GO TO 103
      GO TO 112
  103 WRITE(IOUT,1000)
      return
  104 CONTINUE
      IF (INTGR(93).EQ.0) GO TO 105
      REWIND IOS
      READ(IO1)
      I1 = 1
      I2 = 2
      CALL GRIT(A(K33),IX(2),I2,IO1,I1)
      CALL GRIT(A(K33),IX(2),I1,IOS,I2)
      GO TO 111
  105 CONTINUE
C*****SET UP I/O UNITS*****
      NN = 9
      JK = INTGR(1)
      IF (JK.GT.0) GO TO 107
      DO 106 I = 1,NN
      FLOTR(I) = DN(I)
  106 CONTINUE
      INTGR(1) = NN
      JK = NN
  107 CONTINUE
      DO 110 J = 1,NN
      DO 108 I = 1,JK
      IF (FLOTR(I).EQ.DN(J)) GO TO 109
  108 CONTINUE
      JK = JK+1
      FLOTR(JK) = DN(J)
      INTGR(1) = JK
      I = JK
  109 CONTINUE
      IC(J) = I+IADR
  110 CONTINUE
      IO1 = IC(1)
      IO2 = IC(2)
      IO3 = IC(3)
      IO4 = IC(4)
      IO5 = IC(5)
      IO6 = IC(6)
      IO7 = IC(7)
      IO8 = IC(8)
      IX(11) = IC(9)
C***********************************************************************
      IX(10) = 20
C***********************************************************************
      WRITE(IOUT,1001)(TITL(I),I=1,18),(TITL(I),I=19,36)
      WRITE(IOUT,1002)
      WRITE(IOUT,1003)( DN(I),IC(I),I=1,NN)
      WRITE(IOUT,1004)
C*****INPUT SECTION 091 AND WRITE ON IO1*****
  111 CONTINUE
      CALL FMIP(A,MEMORY)
      INTGR(91) = 1
      IF (INTGR(93).EQ.0) GO TO 114
      I1 = 1
      I2 = 2
      CALL GRIT(A(K33),IX(2),I1,IOS,I1)
      CALL GRIT(A(K33),IX(2),I2,IO1,I2)
      GO TO 113
  112 CONTINUE
C*****INPUT SECTION 093 AND WRITE ON IO1*****
      CALL SHUF(A,MEMORY)
      INTGR(93) = 1
C*****WRITE COMMON DATA ON IO1*****
  113 CONTINUE
      READ(IO1)
  114 CONTINUE
      READ(IO1)
      I2 = 2
      IRC = 0
      LNTH = IX(3)
      CALL GRIT(BLSUB(1),LNTH,IRC,IO1,I2)
      LNTH = IX(4)
      CALL GRIT(KAY(1) ,LNTH,IRC,IO1,I2)
      LNTH = IX(5)
      CALL GRIT(IB(1) ,LNTH,IRC,IO1,I2)
      IF(NCY.GT.0) CALL GRIT(A(K42),IX(6),IRC,IO1,I2)
      REWIND IO1
      IF ((INTGR(91).EQ.0).OR.(INTGR(93).EQ.0)) GO TO 115
      READ(IO1)
      I1 = 1
      I2 = 2
      CALL GRIT(A(K33),IX(2),I2,IO1,I1)
      CALL CHCK(A(K41),I3VX,I4VX, A(K12),A(K13),A(K14),NISVX,NPDVX)
  115 CONTINUE
      RETURN
 1000 FORMAT('0ERROR STOP 900')
 1001 FORMAT('1FUEL MANAGEMENT INPUT FOR CASE TITLE - ',18A4/40X,18A4)
 1002 FORMAT('0DATA FILES AND CORRESPONDING I/O UNIT NUMBERS FOLLOW')
 1003 FORMAT(1X,10(A8,'-',I2,1X))
 1004 FORMAT('0INPUT DATA PROCESSING FOLLOWS')
 1005 FORMAT(24I3)
 1006 FORMAT('0ERROR STOP 900',I6)
 1007 FORMAT('0ARRAY STORAGE ALLOCATED IS',I7/' THIS PROBLEMS REQUIREMEN
     >TS',I7)
 1008 FORMAT('0ERROR STOP 904')
      END
CGNTL --063    ***FUEL MANAGEMENT***   ZERO ALL VARIABLES
C     CALLED FROM/GRIV
      SUBROUTINE GNTL(A,MEMORY)
C
      COMMON/GMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
      COMMON/GMADD/KAY(1),K1,K2,K3,K4,K5,K6,K7,K8,K9,K10,K11,K12,K13,
     > K14,K15,K16,K17,K18,K19,K20,K21,K22,K23,K24,K25,K26,K27,K28,K29,
     > K30,K31,K32,K33,K34,K35,K36,K37,K38,K39,K40,K41,K42,K43,K44,K45,
     > K46,K47,K48,K49,K50,K500,K501,K502,K503,K504,K505,K506,K507,K508,
     >  K509,K51,K52,K53,K54,K540,K541,K542,K543,K544,K545,K546,K547,
     > K548,K549,K550,K55,K56,K57,K58,K59,K60,K61,K62,K63, K64,K65,K66,
     > K67,K68,K69,K70,K71,K72,K73,K74,K75
      COMMON/GMIMS/IB(100),MEMVRY,NFSVX,NRSVX,NDSVX,NISVX,NPDVX,NFMVX,
     > MVX,NVX,NRLVX,I1VX,I2VX,I3VX,I4VX,I5VX,I6VX,I7VX,I8VX,I9VX,I10VX,
     >  NONNN,NSETVX
C
      DIMENSION A(MEMORY)
C
  100 DO 101 N = 1,MEMORY
      A(N) = 0.0
  101 CONTINUE
      DO 102 N = 1,455
      BLSUB(N) = 0.0
  102 CONTINUE
      DO 103 N = 1,97
      KAY(N) = 0
  103 CONTINUE
      DO 104 N = 1,122
      IB(N) = 0
  104 CONTINUE
      IX( 3) = 455
      IX(4) = 97
      IX( 5) = 122
      RETURN
      END
CGION --064    ***FUEL MANAGEMENT***   GET I/O UNIT NUMBERS
C     CALLED FROM/GRIV
      SUBROUTINE GION(DN,IOB,IOUT,IADR)
C
      COMMON/COOPD/FLOTR(200),INTGR(100)
C      DOUBLE PRECISION FLOTR,DN
      CHARACTER*8 FLOTR,DN
C
  100 N=INTGR(1)
      IF (N.LE.0) GO TO 102
      DO 101 I=1,N
      IF (DN.EQ.FLOTR(I)) GO TO 103
  101 CONTINUE
  102 WRITE(IOUT,1000)DN
      return
  103 IOB=I+IADR
      RETURN
 1000 FORMAT('0INTERFACE FILE NOT IN LIST   ',A8)
      END
CFMIP --065    ***FUEL MANAGEMENT***   INPUT SECTION 091
C     CALLED FROM/DRIV
      SUBROUTINE FMIP(A,MEMORY)
C
      COMMON/GMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
      COMMON/GMADD/KAY(1),K1,K2,K3,K4,K5,K6,K7,K8,K9,K10,K11,K12,K13,
     > K14,K15,K16,K17,K18,K19,K20,K21,K22,K23,K24,K25,K26,K27,K28,K29,
     > K30,K31,K32,K33,K34,K35,K36,K37,K38,K39,K40,K41,K42,K43,K44,K45,
     > K46,K47,K48,K49,K50,K500,K501,K502,K503,K504,K505,K506,K507,K508,
     >  K509,K51,K52,K53,K54,K540,K541,K542,K543,K544,K545,K546,K547,
     > K548,K549,K550,K55,K56,K57,K58,K59,K60,K61,K62,K63, K64,K65,K66,
     > K67,K68,K69,K70,K71,K72,K73,K74,K75
      COMMON/GMIMS/IB(100),MEMVRY,NFSVX,NRSVX,NDSVX,NISVX,NPDVX,NFMVX,
     > MVX,NVX,NRLVX,I1VX,I2VX,I3VX,I4VX,I5VX,I6VX,I7VX,I8VX,I9VX,I10VX,
     >  NONNN,NSETVX
C
      DIMENSION A(MEMORY)
C***********************************************************************
      JOUT = IX(10)
C***********************************************************************
      WRITE(IOUT,1000)
      DO 100 N = 1,38
      NXTR1(N) = 0
  100 CONTINUE
  101 READ(IOIN,1001)(NXTR1(I),I=1,12)
      NL3L = 12
      IF (NXTR1(12).EQ.0) GO TO 102
      READ(IOIN,1001)(NXTR1(I),I=13,24)
      NL3L = 24
      IF (NXTR1(24).EQ.0) GO TO 102
      READ(IOIN,1001)(NXTR1(I),I=25,36)
      NL3L = 36
      IF (NXTR1(36).EQ.0) GO TO 102
      NL3L = 38
      READ(IOIN,1001)(NXTR1(I),I=37,38)
  102 NISVX = 0
      DO 103 N = 9,NL3L
      IF (NXTR1(N).EQ.0) GO TO 104
      NISVX = NISVX+1
  103 CONTINUE
  104 CONTINUE
      WRITE(IOUT,1002)(NXTR1(I),I=1,8)
      NN = 8+NISVX
      WRITE(IOUT,1003)(NXTR1(I),I=9,NN)
      IF (NISVX.GT.0) GO TO 105
      WRITE(IOUT,1004)
C***********************************************************************
      WRITE(JOUT,1004)
C***********************************************************************
      return
  105 NFSVX = NXTR1(1)
      IF (NFSVX.LE.0) NFSVX = 1
      NRSVX = NXTR1(2)
      IF (NRSVX.LE.0) NRSVX = 1
      NDSVX = NXTR1(3)
      IF (NDSVX.LE.0) NDSVX = 1
      I2VX = NXTR1(7)+2
      K1 = 1
      K2 = K1+1
      K3 = K2+1
      K4 = K3+1
      K5 = K4+1
      K6 = K5+1
      K7 = K6+1
      K8 = K7+1
      K9 = K8+1
      K10 = K9 +1
      K11 = K10+1
      K12 = K11+8
      K13 = K12+30
      CALL PUTA(A(K11))
      DO 106 N = 1,100
      NXTR1(N) = 0
      NXTR2(N) = 0
      XTR1(N) = 0.0
  106 CONTINUE
      I2 = 0
  107 I1 = I2+1
      I2 = I2+3
      READ(IOIN,1005)(NXTR1(I),NXTR2(I),XTR1(I),I=I1,I2)
      DO 108 I = I1,I2
      IF ((NXTR1(I).EQ.0).AND.(NXTR2(I).EQ.0).AND.(XTR1(I).EQ.0)) GO TO
     > 109
  108 CONTINUE
      GO TO 107
  109 NPDVX = 0
      DO 110 N = 1,I2
      IF (XTR1(N).EQ.0) GO TO 111
      NPDVX = NPDVX+1
  110 CONTINUE
  111 CONTINUE
      IPDVX = NPDVX
      IF (NPDVX.LE.0) NPDVX = 1
      IF (IPDVX.LE.0) GO TO 119
      NI1 = 1
  112 CONTINUE
      N1 = NXTR1(NI1)
      IND = 0
      DO 113 NII1 = 1,NPDVX
      N12 = NXTR1(NII1)
      N22 = NXTR2(NII1)
      IF (N12.NE.N1) GO TO 113
      IF ((N22.EQ.0).OR.(N22.EQ.N1)) IND = 1
      IF (XTR1(NII1).EQ.1.0) IND = 1
  113 CONTINUE
      IF (IND.GT.0) GO TO 115
      T1 = XTR1(NI1)
      NT1 = 0
      NFST = NI1+1
      IF (NFST.GT.NPDVX) GO TO 115
      DO 114 NI2 = NFST,NPDVX
      N2 = NXTR1(NI2)
      IF (N1.NE.N2) GO TO 114
      T1 = T1+XTR1(NI2)
      NT1 = N1
  114 CONTINUE
      IF (NT1.EQ.0) GO TO 115
      NPDVX = NPDVX+1
      NXTR1(NPDVX) = NT1
      NXTR2(NPDVX) = 0
      XTR1(NPDVX) = T1
  115 CONTINUE
      NI1 = NI1+1
      IF (NI1.LE.NPDVX) GO TO 112
      NI1 = 1
  116 CONTINUE
      N1 = NXTR1(NI1)
      N2 = NXTR2(NI1)
      T1 = XTR1(NI1)
      IF ((N1.EQ.N2).OR.(N2.EQ.0)) GO TO 118
      IF (T1.EQ.1.0) GO TO 118
      DO 117 NII1 = 1,NPDVX
      IF (NI1.EQ.NII1) GO TO 117
      N11 = NXTR1(NII1)
      N22 = NXTR2(NII1)
      IF(N1.EQ.N11) GO TO 118
  117 CONTINUE
      NPDVX = NPDVX+1
      NXTR1(NPDVX) = N1
      NXTR2(NPDVX) = 0
      XTR1(NPDVX) = T1
  118 CONTINUE
      NI1 = NI1+1
      IF (NI1.LE.NPDVX) GO TO 116
  119 CONTINUE
      WRITE(IOUT,1006)(NXTR1(I),NXTR2(I),XTR1(I),I=1,NPDVX)
      IF (NPDVX.LE.100) GO TO 120
      WRITE(IOUT,1007)
      return
  120 CONTINUE
      K14 = K13+NPDVX
      K15 = K14+NPDVX
      K16 = K15+NPDVX
      K17 = K16+12*NFSVX
      K18 = K17+1
      K19 = K18+3*NFSVX
      K20 = K19+NFSVX
      K21 = K20+2*NFSVX
      K22 = K21+NISVX*NFSVX
      K23 = K22+8*NRSVX
      K24 = K23+NRSVX
      K25 = K24+NRSVX
      K26 = K25+2*NRSVX
      K27 = K26+NISVX*NRSVX
      K28 = K27+8*NDSVX
      K29 = K28+NDSVX
      K30 = K29+NDSVX
      K31 = K30+2*NDSVX
      K32 = K31+NISVX*NDSVX
      CALL PLIN( A(K11),A(K12),A(K13),A(K14),A(K15),A(K16), A(K18),
     > A(K19),A(K20),A(K21),A(K22),A(K23),A(K24),A(K25),A(K26), A(K27),
     > A(K28),A(K29),A(K30),A(K31), NFSVX,NRSVX,NDSVX,NISVX,NPDVX, I2VX)
      I1VX = 0
      DO 121 N = 1,NFSVX
      I1VX = MAX0(I1VX,NXTR2(N))
  121 CONTINUE
      IF (I1VX.EQ.0) I1VX = 1
      K33 = K32+NFSVX*I1VX
      CALL JUNK( A(K11),A(K32),NFSVX,I1VX)
      I1 = 1
      I2 = 2
      IX(1) = K33-1
      CALL GRIT(A(K1),IX(1),I1,IO1,I2)
      RETURN
 1000 FORMAT('0'/'0FUELING, MAKEUP,  AND DISCHARGE STREAMS INPUT DATA -
     >SECTION 091')
 1001 FORMAT(12I6)
 1002 FORMAT('0GENERAL DESCRIPTION',8I6)
 1003 FORMAT(' NUCLIDES TO BE TREATED',I8,14I7/(1X,23X,I8,14I7))
 1004 FORMAT('0ERROR STOP 901')
 1005 FORMAT(3(2I6,E12.0))
 1006 FORMAT('0DECAY DATA'/(1X,2I7,1PE13.5,2I7,E13.5,2I7,E13.5,2I7,
     >  E13.5))
 1007 FORMAT('0ERROR STOP 902')
      END
CPLIN --066    ***FUEL MANAGEMENT***   USED BY FMIP
C     CALLED FROM/FMIP
      SUBROUTINE PLIN(MST,NIS,NPARNT,NDAUTR,DKAYC,NFFFS, QMTA,DLTMF,
     > DPQF,FSCON,NFRFS,QMTAR,DLTMR,DPQR, RCYFR,NFDFS,QMTAD,DLTMD,DPQD,
     > FPREC, NFSVX,NRSVX,NDSVX,NISVX,NPDVX, I2VX)
C
      COMMON/GMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
      COMMON/GMADD/KAY(1),K1,K2,K3,K4,K5,K6,K7,K8,K9,K10,K11,K12,K13,
     > K14,K15,K16,K17,K18,K19,K20,K21,K22,K23,K24,K25,K26,K27,K28,K29,
     > K30,K31,K32,K33,K34,K35,K36,K37,K38,K39,K40,K41,K42,K43,K44,K45,
     > K46,K47,K48,K49,K50,K500,K501,K502,K503,K504,K505,K506,K507,K508,
     >  K509,K51,K52,K53,K54,K540,K541,K542,K543,K544,K545,K546,K547,
     > K548,K549,K550,K55,K56,K57,K58,K59,K60,K61,K62,K63, K64,K65,K66,
     > K67,K68,K69,K70,K71,K72,K73,K74,K75
C
      DIMENSION MST(8),NIS(30),NPARNT(NPDVX),NDAUTR(NPDVX), DKAYC(NPDVX)
     >  ,NFFFS(NFSVX,12), QMTA(NFSVX,3),DLTMF(NFSVX),DPQF(NFSVX,2),
     > FSCON(NISVX,NFSVX),NFRFS(NRSVX,8),QMTAR(NRSVX),DLTMR(NRSVX),
     > DPQR(NRSVX,2),RCYFR(NISVX,NRSVX),NFDFS(NDSVX,8), QMTAD(NDSVX),
     > DLTMD(NDSVX),DPQD(NDSVX,2), FPREC(NISVX,NDSVX)
C***********************************************************************
      JOUT = IX(10)
C***********************************************************************
      I8 = I2VX
      DO 100 N = 1,NPDVX
      NPARNT(N) = NXTR1(N)
      NDAUTR(N) = NXTR2(N)
      DKAYC(N) = XTR1(N)
  100 CONTINUE
      DO 101 N = 1,100
      NXTR1(N) = 0
      NXTR2(N) = 0
  101 CONTINUE
      REWIND IO2
      IF (MST(1).EQ.0) GO TO 108
      WRITE(IOUT,1000)
      DO 107 N = 1,NFSVX
      READ(IOIN,1001)(NFFFS(N,I),I=1,12),(NXTR1(I),I=1,12)
      NAD = 12
      N2 = 0
  102 N1 = N2+1
      N2 = N2+NAD
      IF (NAD.EQ.12) GO TO 103
      READ(IOIN,1001)(NXTR1(I),I=N1,N2)
  103 CONTINUE
      IF (N2.LE.100) GO TO 104
      WRITE(IOUT,1003)
      return
  104 CONTINUE
      DO 105 I = N1,N2
      IF (NXTR1(I).EQ.0) GO TO 106
      NXTR2(N) = NXTR2(N)+1
  105 CONTINUE
      NAD = 24
      GO TO 102
  106 CONTINUE
      NXTL = NXTR2(N)
      IF (NXTL.EQ.0) NXTL = 1
      WRITE(IOUT,1002)(NFFFS(N,I),I=1,12),(NXTR1(I),I=1,NXTL)
      NOD = 0
      I2 = 2
      CALL GRIT(NXTR1(1),NXTL,NOD,IO2,I2)
      READ(IOIN,1004)(QMTA(N,I),I=1,3),DLTMF(N),(DPQF(N,I),I=1,2)
      WRITE(IOUT,1005)(QMTA(N,I),I=1,3),DLTMF(N),(DPQF(N,I),I=1,2)
      IF (NFFFS(N,2).EQ.0) GO TO 107
      READ(IOIN,1004)(FSCON(I,N),I=1,NISVX)
      WRITE(IOUT,1005)(FSCON(I,N),I=1,NISVX)
  107 CONTINUE
      REWIND IO2
  108 CONTINUE
      IF (MST(2).EQ.0) GO TO 110
      WRITE(IOUT,1006)
      DO 109 N = 1,NRSVX
      READ(IOIN,1007)(NFRFS(N,I),I=1,8),QMTAR(N),DLTMR(N), DPQR(N,1),
     > DPQR(N,2)
      IF (QMTAR(N).EQ.0.0) QMTAR(N) = 1.0
      WRITE(IOUT,1008)(NFRFS(N,I),I=1,8),QMTAR(N),DLTMR(N), DPQR(N,1),
     > DPQR(N,2)
      READ(IOIN,1009)(RCYFR(I,N),I=1,NISVX)
      WRITE(IOUT,1005)(RCYFR(I,N),I=1,NISVX)
  109 CONTINUE
  110 CONTINUE
      IF (MST(3).EQ.0) GO TO 114
      WRITE(IOUT,1010)
      DO 111 N = 1,NDSVX
      READ(IOIN,1007)(NFDFS(N,I),I=1,8),QMTAD(N),DLTMD(N), DPQD(N,1),
     > DPQD(N,2)
      IF (DPQD(N,2).EQ.0.0) DPQD(N,2) = 1.0
      WRITE(IOUT,1008)(NFDFS(N,I),I=1,8),QMTAD(N),DLTMD(N), DPQD(N,1),
     > DPQD(N,2)
      READ(IOIN,1009)(FPREC(I,N),I=1,NISVX)
      WRITE(IOUT,1005)(FPREC(I,N),I=1,NISVX)
  111 CONTINUE
      DO 113 N = 1,NDSVX
      DO 112 I = 1,NISVX
      IF (FPREC(I,N).LE.1.0) GO TO 112
      WRITE(IOUT,1011)
      return
  112 CONTINUE
  113 CONTINUE
  114 CONTINUE
      RETURN
 1000 FORMAT('0FEED STREAM DATA')
 1001 FORMAT(24I3)
 1002 FORMAT(1X,24I4)
 1003 FORMAT('0ERROR STOP 906')
 1004 FORMAT(6E12.0)
 1005 FORMAT(1X,1P9E13.5)
 1006 FORMAT('0MAKEUP STREAM DATA')
 1007 FORMAT(8I3,4E12.0)
 1008 FORMAT(1X,8I4,5X,1P4E13.5)
 1009 FORMAT(12E6.0)
 1010 FORMAT('0DISCHARGE STREAM DATA')
 1011 FORMAT('0ERROR STOP 903')
      END
CJUNK --068    ***FUEL MANAGEMENT***   STORE NFFSS
C     CALLED FROM/FMIP
      SUBROUTINE JUNK( MST,NFFSS,NFSVX,I1VX)
C
      COMMON/GMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
C
      DIMENSION MST(8),NFFSS(NFSVX,I1VX)
C
      IF (MST(1).EQ.0) GO TO 102
      I1 = 1
      INO = 0
      DO 101 N = 1,NFSVX
      LNTH = NXTR2(N)
      IF (LNTH.EQ.0) LNTH = 1
      CALL GRIT(NXTR1(1),LNTH,INO,IO2,I1)
      DO 100 N1 = 1,LNTH
      NFFSS(N,N1) = NXTR1(N1)
  100 CONTINUE
  101 CONTINUE
  102 CONTINUE
      RETURN
      END
CSHUF --069    ***FUEL MANAGEMENT***   INPUT SECTION 093
C     CALLED FROM/DRIV
      SUBROUTINE SHUF(A,MEMORY)
C
      COMMON/GMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
      COMMON/GMADD/KAY(1),K1,K2,K3,K4,K5,K6,K7,K8,K9,K10,K11,K12,K13,
     > K14,K15,K16,K17,K18,K19,K20,K21,K22,K23,K24,K25,K26,K27,K28,K29,
     > K30,K31,K32,K33,K34,K35,K36,K37,K38,K39,K40,K41,K42,K43,K44,K45,
     > K46,K47,K48,K49,K50,K500,K501,K502,K503,K504,K505,K506,K507,K508,
     >  K509,K51,K52,K53,K54,K540,K541,K542,K543,K544,K545,K546,K547,
     > K548,K549,K550,K55,K56,K57,K58,K59,K60,K61,K62,K63, K64,K65,K66,
     > K67,K68,K69,K70,K71,K72,K73,K74,K75
      COMMON/GMIMS/IB(100),MEMVRY,NFSVX,NRSVX,NDSVX,NISVX,NPDVX,NFMVX,
     > MVX,NVX,NRLVX,I1VX,I2VX,I3VX,I4VX,I5VX,I6VX,I7VX,I8VX,I9VX,I10VX,
     >  NONNN,NSETVX
C
      DIMENSION A(MEMORY)
C
      WRITE(IOUT,1000)
      K34 = K33+1
      K35 = K34+1
      K36 = K35+1
      K37 = K36+24
      K38 = K37+24
      K39 = K38+100
      K40 = K39+1
      K41 = K40+1
      CALL SHIN(A(K36),A(K37),A(K38))
      CALL STSH(A(K41),I3VX,I4VX)
      K42 = K41+NFMVX
      K42 = 2*(K42/2)+3
      LIM52 = K42-1
      I2 = 2
      IX(2) = K42-K33
      CALL GRIT(A(K33),IX(2),I2,IO1,I2)
  100 CONTINUE
      RETURN
 1000 FORMAT('0FUEL MANAGEMENT DATA - SECTION 093')
      END
CMBST --075  ***FUEL MANAGEMENT*** RESTART ROUTINE/CF-STFM
      SUBROUTINE MBST(FRFEED,REFEED,TOFEED,XLODNG,DISCHR, FRFEEX,NRSVX,
     > LJJR,IOR,IDDN,XMAS,NFSVX,NDSVX, NISVX,NVX,NONNN,ITMIS,AITMIS,NCX)
C
      COMMON/GMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
      COMMON/CMARY/MEMARY(1),IMN,MNI,IJLMN,NMLJI,IY(50),AX(50),TITL(36)
C
      DIMENSION FRFEED(NISVX,NFSVX),REFEED(NISVX,NRSVX), TOFEED(NISVX,
     > NRSVX),XLODNG(NISVX,NDSVX), DISCHR(NISVX,NDSVX),FRFEEX(NISVX,
     > NFSVX)
      DIMENSION LJJR(NISVX),IDDN(NONNN)
      DIMENSION XMAS(NONNN),ITMIS(20),AITMIS(20)
C
      IF (NCX.GT.1) GO TO 100
      REWIND IO5
      READ(IOR)(NXTR1(N),N=1,100),(XTR1(N),N=1,100), ((FRFEEX(N,NF),N=1,
     > NISVX),NF=1,NRSVX)
      WRITE(IO5)(NXTR1(N),N=1,100),(XTR1(N),N=1,100)
      X = 0.0
      WRITE(IO5)((FRFEEX(N,NF),N=1,NISVX),NF=1,NFSVX), ((X,N=1,NISVX),
     > NF=1,NRSVX),((X,N=1,NISVX),NF=1,NRSVX)
  100 CONTINUE
      READ(IOR)((XLODNG(N,ND),N=1,NISVX),ND=1,NDSVX), ((DISCHR(N,ND),N=
     > 1,NISVX),ND=1,NDSVX)
      READ(IOR)(ITMIS(N),N=1,20),(AITMIS(N),N=1,20)
      READ(IOR)((FRFEED(N,NF),N=1,NISVX),NF=1,NFSVX), ((REFEED(N,NR),N=
     > 1,NISVX),NR=1,NRSVX), ((TOFEED(N,NR),N=1,NISVX),NR=1,NRSVX)
      WRITE(IO5)((XLODNG(N,ND),N=1,NISVX),ND=1,NDSVX), ((DISCHR(N,ND),N=
     > 1,NISVX),ND=1,NDSVX)
      WRITE(IO5)(ITMIS(N),N=1,20),(AITMIS(N),N=1,20)
      WRITE(IO5)((FRFEED(N,NF),N=1,NISVX),NF=1,NFSVX), ((REFEED(N,NR),N=
     > 1,NISVX),NR=1,NRSVX), ((TOFEED(N,NR),N=1,NISVX),NR=1,NRSVX)
      RETURN
      END
CXSET --078 ***CITATION*** PRINT ZONE MACRO. SIGS/ CF-BIGS
      SUBROUTINE XSET(SIG,F1,KVX,MVX,IDTI)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     > , XNAME(3,200)
C
      DIMENSION SIG(KVX,MVX,10),F1(KVX,KVX,MVX)
      DIMENSION GIS(7)
C
      CALL RQED(IX(104),IND)
      IF (IND.NE.0) GO TO 114
  100 WRITE(IOUT,1000)
      WRITE(IOUT,1001)
C***************************SEARCH OPTIONS******************************
  101 IF (IX(5)+1) 102,103,102
  102 WRITE(IOUT,1002)
      GO TO 104
  103 WRITE(IOUT,1003)
  104 CONTINUE
      DO 113 M = 1,MMAX
      IF (M-1) 105,106,105
  105 WRITE(IOUT,1004)
  106 DO 112 K = 1,KMAX
      DO 107 I = 1,4
      GIS(I) = SIG(K,M,I)
  107 CONTINUE
      GIS(5) = SIG(K,M,6)
      GIS(6) = SIG(K,M,7)
      N67 = 6
C***************************SEARCH OPTIONS******************************
      IF (IX(5)+1) 109,108,109
  108 N67 = 7
      GIS(6) = SIG(K,M,5)
      GIS(7) = SIG(K,M,7)
  109 CONTINUE
      IF (K-1) 111,110,111
  110 WRITE(IOUT,1005)M,(XNAME(II,M),II=1,3),K,(GIS(I),I=1,N67)
      GO TO 112
  111 WRITE(IOUT,1006)K,(GIS(I),I=1,N67)
  112 CONTINUE
  113 CONTINUE
  114 IF (IDTI.GT.0) GO TO 115
      CALL RQED(IX(103),IND)
      IF (IND.NE.0) GO TO 133
  115 WRITE(IOUT,1007)
      LIM = KMAX/7
      IF (LIM) 116,116,117
  116 LLM1 = 1
      LLM2 = KMAX
      GO TO 120
  117 L1 = LIM*7
      IF (L1-KMAX) 119,118,118
  118 LLM1 = LIM
      LLM2 = 7
      GO TO 120
  119 LLM1 = LIM+1
      LLM2 = 7
  120 N2 = 0
      DO 132 I = 1,LLM1
      N1 = N2+1
      N2 = N2+LLM2
      IF (N2-KMAX) 122,121,121
  121 N2 = KMAX
  122 WRITE(IOUT,1008)(J,J=N1,N2)
      DO 131 M = 1,MMAX
      IF (M-1) 123,124,123
  123 WRITE(IOUT,1004)
  124 IF (N2-KMAX) 126,125,125
  125 N2 = KMAX
  126 DO 130 K = 1,KMAX
      DO 127 J = N1,N2
      XTR1(J) = F1(J,K,M)
  127 CONTINUE
      IF (K-1) 129,128,129
  128 WRITE(IOUT,1009)M,K,(XTR1(J),J=N1,N2)
      GO TO 130
  129 WRITE(IOUT,1010)K,(XTR1(J),J=N1,N2)
  130 CONTINUE
  131 CONTINUE
  132 CONTINUE
  133 CONTINUE
      RETURN
 1000 FORMAT('0')
 1001 FORMAT('0 ZONE MACROSCOPIC CROSS SECTIONS')
 1002 FORMAT('0 ZONE     NAME      GRP       D          SIGR         SIG
     >A        NUSIGF         BSQ       POWER/FLUX')
 1003 FORMAT('0 ZONE     NAME      GRP       D          SIGR         SIG
     >A        NUSIGF         BSQ       1/V POISON   POWER/FLUX')
 1004 FORMAT(1X)
 1005 FORMAT(1X,I4,'  ',3A4,I4,1PE14.5,6E13.5)
 1006 FORMAT(1X,I22,1PE14.5,6E13.5)
 1007 FORMAT('0SCATTERING MATRIX')
 1008 FORMAT('0 ZONE GRP  TO GRP',I7,6I14)
 1009 FORMAT(1X,2I4,1PE21.5,6E14.5)
 1010 FORMAT(1X,I8,1PE21.5,6E14.5)
      END
CCYCR --080 ***CITATION*** CYCLE CONTROL/ CF-CALR
      SUBROUTINE CYCR
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
C
      IX(4) = 0
      SPARE(1) = 0.0
      SPARE(2) = 0.0
      RETURN
      END
CGINS --081 ***CITATION*** CALCULATION OF DRIVE FACTOR FOR SEARCH
      SUBROUTINE GINS(B1,B3,B4,B5,KVX,LVX,XLAMDA,MVX)
C
      DOUBLE PRECISION B1, XLAMDA, XAAMDA, TXX1, TXX2, TXX3
      DOUBLE PRECISION
     >       SUMXI,TPTSA,XADB,XPDB,XS1DB,XS2DB, TL,XRDB,CS1S,CS2S,XLL1,
     > D8,XADX,YADX, XLL2,XLL3,XLL4,XLL5,XLL6,XLEK,B2LK,B3LK,B4LK,B5LK,
     > D1,D2,D3,D4,D5, D6,D7,YADB,YPDB,YLEK,YS1S,YS2S,YS1DB,YS2DB,YRDB,
     > SPR50,XLAST
C
      COMMON/ADUBP/SUMXI,TPTSA,XADB,XPDB,XS1DB,XS2DB, TL,XRDB,CS1S,CS2S,
     >  XLL1,D8,XADX,YADX, XLL2,XLL3,XLL4,XLL5,XLL6,XLEK,B2LK,B3LK,B4LK,
     >  B5LK,D1,D2,D3,D4,D5, D6,D7,YADB,YPDB,YLEK,YS1S,YS2S,YS1DB,YS2DB,
     >  YRDB,SPR50,XLAST
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XELK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDB,EPI1,EPI2, BETTA,SAMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     > , XNAME(3,200)
C
      DIMENSION B1(MVX,KVX),B3(MVX,KVX),B4(MVX,KVX),B5(MVX,KVX)
C
      IF (IX(5).EQ.(-5)) GO TO 130
      CS1S=1.0
      CS2S=1.0
      IF (NSRH(20)) 108,108,100
  100 IF (XS1DB) 108,108,101
  101 D1=0
      D2=0
      D3=0
      DO 103 K=1,KMAX
      DO 102 M=1,MMAX
      D1 = D1 + B4(M,K)*B1(M,1)
      D2 = D2 + B5(M,K)*B1(M,1)
      D3 = D3 + B3(M,K)*B1(M,1)
  102 CONTINUE
  103 CONTINUE
      IF (XS2DB) 105,104,105
  104 CS1S=1.0
      GO TO 106
  105 CS1S=XPDB*D2/D3/XS2DB
  106 CS2S=XPDB*D1/D3/XS1DB/CS1S
      IF (NSRH(20)-1) 108,108,107
  107 WRITE(IOUT,1000)CS1S,CS2S
  108 CONTINUE
  109 IF (NIT.GT.0) GO TO 110
      XKEF1 = XPDB/(XADX+XLEK+XLAMDA*XS1DB)
      VRGK1 = ABS(XKEF2/XKEF1-1.0)
      HOEY = 1.0-SPARE(51)/SPARE(57)*0.8
      HOEX = HOEY
      IF(HOEY.GE.1.0) HOEY = 0.9
      GO TO 129
  110 CONTINUE
      IF(XLAMDA.NE.0.0) GO TO 900
      HOEX = 1.0-SPARE(51)/SPARE(57)*0.8
      IF(HOEX.GE.1.0) HOEX = 0.9
  900 CONTINUE
      TL = XADX+XLEK+XLAMDA*XS1DB
      XKEF1 = (XPDB+XLAMDA*XS2DB)/TL
      XAAMDA=(SPR50*XPDB-XADX-XLEK)/(CS1S*(XS1DB*CS2S-SPR50*XS2DB))
      HOEZ = (1.0-HOEX)*SPARE(57)
      TXX1 = SPARE(51)
      TXX2 = HOEZ
      IF (SPARE(51).GT.0.0) GO TO 111
      XLAMDA = DMAX1(XAAMDA,TXX1,TXX2)
      GO TO 112
  111 XLAMDA = DMIN1(XAAMDA,TXX1,TXX2)
  112 CONTINUE
      IF (DABS(XAAMDA).GT.DABS(TXX2)) GO TO 113
      IF (DABS(XAAMDA).LE.DABS(TXX1)) GO TO 115
  113 IF (NIT.LT.12) GO TO 115
      SPARE(51)=1.05*SPARE(51)
      TXX1 = SPARE(51)
      IF (DABS(TXX1).LE.DABS(TXX2)) GO TO 115
      IF (HOEX.GT.0.9) GO TO 114
      HOEX = 0.9*HOEX
      GO TO 115
  114 HOEX = HOEX*HOEX
  115 VRGK1 = ABS(XKEF1/SPARE(50)-1.0)
      SPARE(44) = SPARE(45)
      SPARE(45) = XKEF1-SPARE(50)
      IF (SPARE(46)-1.0) 116,120,119
  116 XLAMDA = SPARE(46)*XLAMDA+(1.0-SPARE(46))*SPARE(43)
      IF (NIT.GT.05) GO TO 117
      SPR5X = SPR50
      IF (ABS(XKEF1*SPR5X-1.0)-0.05) 117,117,118
  117 SPARE(46) = 2.0*SPARE(46)
  118 IF (SPARE(46)-1.0) 129,129,119
  119 SPARE(46) = 1.0
      GO TO 129
  120 IF (VRGK1-EPI2) 129,129,121
  121 IF (SPARE(44)) 122,129,122
  122 IF (ABS(SPARE(45)/SPARE(44))-1.0) 125,123,123
  123 IF (VRGK1-0.0010) 125,125,124
  124 TXX3 = SPARE(43)
      IF (DABS(XLAMDA).GT.DABS(TXX3)) XLAMDA = 0.5*(XLAMDA+TXX3)
  125 IF (XKEF1/SPARE(50)-0.5) 126,127,127
  126 SPARE(46) = SPARE(46)*0.5
  127 IF (DABS(XLAMDA)-1.0E+38) 129,129,128
  128 IX(6) = 1
  129 CONTINUE
      GO TO 134
  130 CONTINUE
      IF (NIT.LE.0) IX(133) = 0
      SP46 = SPARE(46)
      HS = (XLEK + XADX - XPDB)/SPARE(88)
      IF (NIT.LE.0) GO TO 132
      IF (HS.GE.0.0) GO TO 131
      IF (IX(133).GT.0) GO TO 131
      SP46 = 0.1
      IX(133) = 1
  131 CONTINUE
      IF (SP46.EQ.1.0) GO TO 132
      XLAMDA = SP46*HS + (1.0 - SP46)*SPARE(43)
      SP46 = 2.0*SP46
      IF (SP46.GT.1.0) SP46 = 1.0
      GO TO 133
  132 CONTINUE
      XLAMDA = HS
  133 CONTINUE
      SPARE(89) = SPARE(43)/XLAMDA
      VRGK1 = ABS(SPARE(89) - 1.0)
      SPARE(46) = SP46
  134 CONTINUE
      RETURN
 1000 FORMAT('       SEARCH WEIGHTING FACTORS',2F12.5)
      END
CDIRT --083 ***CITATION*** OUTPUT SEARCH ZONE CONCENTRATIONS
C                                            /CF-DISH,UDTE,KDTE
      SUBROUTINE DIRT(CONC,NJJR,MVX,NVX,NSETVX,NXZ)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     > , XNAME(3,200)
C
      DIMENSION CONC(NVX,MVX),NJJR(NVX,NSETVX)
C
      WRITE(IOUT,1000)
      NOB = NSRH(10)
      IF (NOB.EQ.(-1)) NUM = NXZ
      IF (NOB.NE.(-1)) NUM = MMAX
  100 DO 103 MM=1,NUM
      IF (NOB.EQ.(-1)) M = NXTR1(MM)
      IF (NOB.NE.(-1)) M = MM
      NS = NXSET(M)
      NR = NXODR(NS)
      NSX = NSIG2(NR)
      IF (NOB.EQ.(-1)) GO TO 102
      IF ((IX(44).EQ.0).AND.(IX(49).EQ.0)) GO TO 102
      IF (IX(49).GT.0) GO TO 101
      IF ((M.EQ.IX(44)).OR.(M.EQ.IX(45)).OR.(M.EQ.IX(46))
     > .OR.(M.EQ.IX(47)).OR.(M.EQ.IX(48))) GO TO 102
      GO TO 103
  101 IF (IX(49).NE.NCLASS(M)) GO TO 103
  102 CONTINUE
      WRITE(IOUT,1001) M
      WRITE(IOUT,1002) (NJJR(N,NR),CONC(N,M),N=1,NSX)
  103 CONTINUE
      RETURN
 1000 FORMAT('0CONCENTRATIONS IN SEARCH ZONES')
 1001 FORMAT('0ZONE NO.',I5)
 1002 FORMAT(6(I5,1PE15.6))
      END
CITED --085 ***CITATION*** FLUX CALC. ITERATION EDIT /CF-FLUX,KLUX
      SUBROUTINE ITED(XLAMDA,XMU3,BETTX,XT1,XT2,XT3)
C
      DOUBLE PRECISION XLAMDA,XMU3
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XELK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDB,EPI1,EPI2, BETTA,SAMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BAT(211),DAL(211)
C***************************SEARCH OPTIONS******************************
      IF ((IX(5).EQ.0).OR.(IX(5).GE.2)) GO TO 101
      IF (IX(5).EQ.(-5)) GO TO 103
      IF (IX(32).EQ.0) GO TO 100
      V = EXFC1*(1.0-1.0/XT3)
      WRITE(IOUT,1001)NIT,VRG1,BETTX,XT1,XT2,XMU3,V,EXFC1,XKEF1,XLAMDA
      GO TO 105
  100 CONTINUE
      WRITE(IOUT,1000)NIT,VRG1,BETTX,XT1,XT2,XMU3,XKEF1,XLAMDA
      GO TO 105
  101 IF (IX(32).EQ.0) GO TO 102
      V = EXFC1*(1.0-1.0/XT3)
      WRITE(IOUT,1001)NIT,VRG1,BETTX,XT1,XT2,XMU3,V,EXFC1,XKEF1
      GO TO 105
  102 WRITE(IOUT,1000)NIT,VRG1,BETTX,XT1,XT2,XMU3,XKEF1
      GO TO 105
  103 IF (IX(32).EQ.0) GO TO 104
      V = EXFC1*(1.0-1.0/XT3)
      WRITE(IOUT,1002)NIT,VRG1,BETTX,XT1,XT2,XMU3,V,EXFC1,XLAMDA,
     > SPARE(89)
      GO TO 105
  104 WRITE(IOUT,1003)NIT,VRG1,BETTX,XT1,XT2,XMU3,XLAMDA ,SPARE(89)
  105 CONTINUE
      RETURN
 1000 FORMAT(1X,I5,1PE17.5,0P4F10.5,F14.6,1PE14.5)
 1001 FORMAT(1X,I5,1PE17.5,0P4F10.5/ 1H ,5X,1PE17.5,3X,
     > 'EXTRAPOLATION WITH',0PF13.4,F20.6,1PE14.5)
 1002 FORMAT(1X,I5,1PE17.5,0P4F10.5/ 1H ,5X,1PE17.5,3X,
     > 'EXTRAPOLATION WITH',0PF13.4,6X,1PE14.5,0PF14.6)
 1003 FORMAT(1X,I5,1PE17.5,0P4F10.5,1PE14.5,0PF14.6)
      END
CWFCC --086    CONTROL FOR WRITING FM FIXED INTERFACE DATA/ CF-CALR
      SUBROUTINE WFCC(A,MEMORY, IFIO)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     > NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AMESH/BMESH(30),NREGI,NREGJ,NREGKB,XSHI(100),XSHJ(100),
     > XSHKB(100), MSHI(100),MSHJ(100),MSHKB(100),Y(211),YY(211), X(211)
     > ,XX(211),Z(211),ZZ(211), ZONVOL(200),AVZPD(200),PDI(211),PDJ(211)
     > , PDK(211)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     > , XNAME(3,200)
      COMMON/AKADD/KAY(1),K1,K2,K3,K4,K5,K6,K7,K8,K9,K10,K11, K12,K13,
     > K131,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23,K24, K25,K26,K27,
     > K28,K29,K30,K31,K32,K33,K34,K35,K36,K37, K38,K39,K40,K41,K42,K43,
     > K44,K45,K46,K47,K48,K49, K50,K51,K52,K53,K54,K55,K56,K57,K58,K59,
     > K60,K61,K62, K63,K64,K65,K66,K67,K68,K69,K70,K71,K72,K73,K74,K75,
     >  K76,K77,K78,K79,K80,K81,K82,K83,K84,K85,K86,K87, K88,K89,K90,
     > K91,K92,K93,K94,K95,K96,K97,K98, K99,K100,NDATA,KNRGN,KNCOMP,
     > KPVOL,KRVOL,MEMVRY,MEMX
      COMMON/AVDLM/IVDLM(1),IVX,JVX,KBVX,KVX,LVX,MVX,NVX,IVXP1,JVXP1,
     > KBVXP1,NSETVX,NVO,IVO,IVZ,KVZ,NCRP,NSPA,N3DDIM,NBLOCK, JIVX,
     > JIP1VX,JP1IXZ,IOVX,IOVZ
C
      DIMENSION A(MEMORY)
C
      NONNN = 200
      NUMB = 100+4*NONNN+NVX*NSETVX+NONNN*NSETVX+ 4*NONNN+7*MVX+6*NSETVX
      N1 = KNRGN-K14
      IF (N1.GE.NUMB) GO TO 100
      WRITE(IOUT,1000)N1,NUMB
      return
  100 CONTINUE
      NLIM = K14+NUMB
      REWIND IO1
      WRITE(IO1)(A(I),I=K14,NLIM)
      REWIND IO1
      DO 101 I = K14,NLIM
      A(I) = 0.0
  101 CONTINUE
      L1 = K14
      IF ((L1/2)*2.EQ.L1) L1 = L1+1
      L2 = L1+100
      IF ((L2/2)*2.EQ.L2) L2 = L2 + 1
      L3 = L2+2*NONNN
      L4 = L3+NONNN
      L5 = L4+NONNN
      L6 = L5+NVX*NSETVX
      L7 = L6+NONNN*NSETVX
      L8 = L7+4*NONNN
      L9 = L8+7*MVX
      L10 = L9+6*NSETVX
      CALL WFAC(A(K8),A(K9),A(K10),A(L1),A(L2),A(L3), A(L4),A(L5),A(L6),
     > A(L7),A(L8),A(L9),A(KNCOMP),A(KRVOL), NVX,NSETVX,NONNN,MVX,IVO,
     > IFIO,LVX)
      READ(IO1)(A(I),I=K14,NLIM)
      REWIND IO1
      RETURN
 1000 FORMAT('0ERROR STOP 31, HAVE',I7,'    NEED',I7)
      END
CWFAC --087   WRITE FM FIXED INTERFACE DATA/ CF-WFCC
      SUBROUTINE WFAC(HOL,NJJR,MJJR,HOLA,HAL,IDDN, XMAS,MIIR,NIIR,NCOO,
     > NZINF,NIM,NCOMP,RVOL, NVX,NSETVX,NONNN,MVX,IVO,IFIO,LVX)
C
      DOUBLE PRECISION HOLA,HAL
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     > NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AMESH/BMESH(30),NREGI,NREGJ,NREGKB,XSHI(100),XSHJ(100),
     > XSHKB(100), MSHI(100),MSHJ(100),MSHKB(100),Y(211),YY(211), X(211)
     > ,XX(211),Z(211),ZZ(211), ZONVOL(200),AVZPD(200),PDI(211),PDJ(211)
     > , PDK(211)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     > , XNAME(3,200)
C
      DIMENSION HOL(NVX,NSETVX,10),NJJR(NVX,NSETVX), MJJR(200,NSETVX),
     > HOLA(2,25),HAL(NONNN),IDDN(NONNN), XMAS(NONNN),MIIR(NVX,NSETVX),
     > NIIR(NONNN,NSETVX), NCOO(4,NONNN),NZINF(MVX,7),NIM(6,NSETVX),
     > NCOMP(LVX),RVOL(LVX)
C
      DIMENSION T(2)
      DIMENSION T1(3)
C
      REWIND IFIO
      IDDN(1) = NJJR(1,1)
      NC = 1
      DO 102 NS = 1,NSETVX
      NNSET = NJM(NS)
      DO 101 N = 1,NNSET
      NN = NJJR(N,NS)
      DO 100 I = 1,NONNN
      MM = IDDN(I)
      IF (NN.EQ.MM) GO TO 101
      IF (MM.GT.0) GO TO 100
      NC = NC+1
      IDDN(NC) = NN
      GO TO 101
  100 CONTINUE
  101 CONTINUE
  102 CONTINUE
      DO 105 NO = 1,NC
      DO 104 NS = 1,NSETVX
      NNSET = NJM(NS)
      DO 103 N = 1,NNSET
      NR = NJJR(N,NS)
      IF (NR.NE.IDDN(NO)) GO TO 103
      XMAS(NO) = HOL(N,NS,7)
      T(1) = HOL(N,NS,1)
      T(2) = HOL(N,NS,2)
      CALL STVR(T,HAL(NO))
      MIIR(N,NS) = NO
      NIIR(NO,NS) = N
      GO TO 104
  103 CONTINUE
  104 CONTINUE
  105 CONTINUE
      T1(1) = XNAME(1,1)
      T1(2) = XNAME(2,1)
      T1(3) = XNAME(3,1)
      CALL YNAM(T1,HOLA(1,1),HOLA(2,1))
      NC1 = NCLASS(1)
      NNC = 1
      DO 106 M = 1,MVX
      NC2 = NCLASS(M)
      IF (NC1.EQ.NC2) GO TO 106
      NC1 = NC2
      NNC = NNC+1
      T1(1) = XNAME(1,M)
      T1(2) = XNAME(2,M)
      T1(3) = XNAME(3,M)
      CALL YNAM(T1,HOLA(1,NNC),HOLA(2,NNC))
  106 CONTINUE
      I1F = IX(51)
      I1L = IX(52)
      I2F = IX(53)
      I2L = IX(54)
      I3F = IX(57)
      I3L = IX(58)
      I4F = IX(63)
      I4L = IX(64)
      DO 115 NO = 1,NC
      NCOO(1,NO) = 999
      N1 = IDDN(NO)
      IF (IXPUT(94).EQ.0) GO TO 108
      DO 107 J = I1F,I1L
      N2 = IXPUT(J)
      IF (N1.EQ.N2) NCOO(1,NO) = 1
  107 CONTINUE
  108 CONTINUE
      IF (IXPUT(95).EQ.0) GO TO 110
      DO 109 J = I2F,I2L
      N2 = IXPUT(J)
      IF (N1.EQ.N2) NCOO(1,NO) = 2
  109 CONTINUE
  110 CONTINUE
      IF (IXPUT(97).EQ.0) GO TO 112
      DO 111 J = I3F,I3L
      N2 = IXPUT(J)
      IF (N1.EQ.N2) NCOO(1,NO) = 3
  111 CONTINUE
  112 CONTINUE
      IF (IXPUT(100).EQ.0) GO TO 114
      DO 113 J = I4F,I4L
      N2 = IXPUT(J)
      IF (N1.EQ.N2) NCOO(1,NO) = 4
  113 CONTINUE
  114 CONTINUE
  115 CONTINUE
      DO 116 M = 1,MVX
      NZINF(M,1) = NZON(M)
      NSR = NXSET(M)
      NZINF(M,2) = NSR
      NZINF(M,3) = NXODR(NSR)
      NZINF(M,7) = NCLASS(M)
  116 CONTINUE
      DO 117 NS = 1,NSETVX
      NIM(1,NS) = NJM(NS)
  117 CONTINUE
      DO 118 N = 1,100
      NXTR1(N) = 0
  118 CONTINUE
      NXTR1(3) = MVX
      NXTR1(4) = NVX
      NXTR1(5) = NC
      NXTR1(6) = NNC
      NXTR1(9) = NSETVX
      NXTR1(13) = IVO
      DO 119 M = 1,MVX
      IF (NZON(M).GT.1) GO TO 120
  119 CONTINUE
      NXTR1(13) = 1
  120 CONTINUE
      DO 121 M = 1,MVX
      ZONVOL(M) = 0.0
  121 CONTINUE
      DO 122 L = 1,LVX
      M = NCOMP(L)
      ZONVOL(M) = ZONVOL(M)+RVOL(L)
  122 CONTINUE
      WRITE(IFIO)(NXTR1(N),N=1,100)
      WRITE(IFIO)(NXTR1(N),N=1,100)
      WRITE(IFIO)(HOLA(1,N),HOLA(2,N),N=1,NNC)
      WRITE(IFIO)(HAL(N),N=1,NC),(IDDN(N),N=1,NC), (XMAS(N),N=1,NC)
      WRITE(IFIO)((MIIR(N,NS),N=1,NVX),NS=1,NSETVX)
      WRITE(IFIO)((NIIR(N,NS),N=1,NC),NS=1,NSETVX)
      WRITE(IFIO)((NCOO(I,N),I=1,4),N=1,NC)
      WRITE(IFIO)((NZINF(M,I),M=1,MVX),I=1,7)
      WRITE(IFIO)((NIM(I,NS),I=1,6),NS=1,NSETVX)
      WRITE(IFIO)(ZONVOL(M),M=1,MVX)
      REWIND IFIO
      RETURN
      END
CSTVR --088   MAKE REAL*8 FROM REAL*4
      SUBROUTINE STVR(X,Y)
C
      DOUBLE PRECISION Y,W
C
      DIMENSION X(2),Z(2)
C
      EQUIVALENCE (W,Z(1))
C
      Z(1) = X(1)
      Z(2) = X(2)
      Y = W
      RETURN
      END
CYNAM --089   STORE XNAME IN HOLA
      SUBROUTINE YNAM(X,Y,Q)
C
      DOUBLE PRECISION Y,Q,W
C
      DIMENSION X(3),Z(4),W(2)
C
      EQUIVALENCE (W(1),Z(1))
C
      Z(1) = X(1)
      Z(2) = X(2)
      Z(3) = X(3)
      Z(4) = 0.0
      Y = W(1)
      Q = W(2)
      RETURN
      END
CRNSS --091  READ CONC. FROM FUEL MANAGE. INTERFACE I/O
      SUBROUTINE RNSS(CONC,ZONEN,QMI, NVX,MVX,IVO,IO12,IO26,IO27,IO29)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     > NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     > , XNAME(3,200)
C
      DIMENSION CONC(NVX,MVX),ZONEN(IVO)
      DIMENSION QMI(MVX,10)
C
      REWIND IO12
      REWIND IO26
      REWIND IO27
      REWIND IO29
      N13 = IVO
      DO 100 M = 1,MVX
      IF (NZON(M).GT.1) GO TO 101
  100 CONTINUE
      N13 = 1
  101 CONTINUE
      READ(IO27) CONC
      REWIND IO27
      WRITE(IO12)MVX,MVX,MVX,MVX,MVX
      NZN2 = 0
      DO 105 M = 1,MVX
      NACT = NXSET(M)
      NSET = NXODR(NACT)
      JM = NJM(NSET)
      N1 = JM*NZON(M)
      NZN1 = NZN2+1
      NZN2 = NZN2+N1
      IF (N13.LE.1) GO TO 102
      READ(IO26)(ZONEN(N),N=1,N1)
  102 CONTINUE
      WRITE(IO12)NZN1,NZN2
      IF (N13.LE.1) GO TO 103
      WRITE(IO12)(ZONEN(N),N=1,N1)
      GO TO 104
  103 CONTINUE
      WRITE(IO12)(CONC(N,M ),N=1,N1)
  104 CONTINUE
  105 CONTINUE
      REWIND IO26
      REWIND IO12
      READ(IO29)(QMI(M,3),M=1,MVX)
      REWIND IO29
      RETURN
      END
CINFX --093 ***CITATION*** INITIAL FLUX FOR 1,2-D/ CF-EIGN
      SUBROUTINE INFX(P2,NRGN,NCOMP,BBND, IVX,JVX,KVX,LVX)
C
      DOUBLE PRECISION P2
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
C
      DIMENSION P2(JVX,IVX,KVX),NRGN(JVX,IVX)
      DIMENSION NCOMP(LVX)
      DIMENSION BBND(KVX)
C
  100 IF (IX(24).EQ.0) REWIND IOFLX
      IF (IX(24).GT.0) GO TO 101
      IF (IX(39).NE.0) GO TO 101
      IF (IX(22).NE.0) GO TO 101
      IF ((NGC(2).NE.0).AND.(NUAC(2).LT.2)) GO TO 106
      IF (NGC(2).NE.0) GO TO 101
      IF (IX(16).GT.0) GO TO 106
      IF (IX(3).GT.1) GO TO 106
  101 CONTINUE
      XLPL = 1.0E-30
      IF(IX(24).GT.0.AND.PROD.LE.10.0) XLPL = 1.0
      DO 105 I = 1,IMAX
  102 DO 104 J = 1,JMAX
      DO 103 K = 1,KMAX
      T1 = 1.0E+12
      IF (IX(24).GT.0) T1 = P2 (J,I ,1)*XLPL
      P2 (J,I, K) = T1
  103 CONTINUE
  104 CONTINUE
  105 CONTINUE
  106 CONTINUE
      DO 109 K = 1,KMAX
      DO 108 I = 1,IMAX
      DO 107 J = 1,JMAX
      IF (P2(J,I,K).EQ.0.0) GO TO 107
      T2 = P2(J,I,K)
      GO TO 110
  107 CONTINUE
  108 CONTINUE
  109 CONTINUE
      WRITE(IOUT,1000)
      return
  110 CONTINUE
      DO 113 K = 1,KMAX
      DO 112 I = 1,IMAX
      DO 111 J = 1,JMAX
      IF (P2(J,I,K).EQ.0.0) P2 (J,I, K) = T2
  111 CONTINUE
  112 CONTINUE
  113 CONTINUE
      DO 120 I = 1,IMAX
      DO 119 J = 1,JMAX
      L = NRGN(J,I)
      M = NCOMP(L)
      DO 118 K = 1,KMAX
      IF (M-NUAC(17)) 117,114,117
  114 IF (XMIS(2)) 115,116,116
  115 IF (BBND(K)) 116,117,116
  116 P2(J,I,K) = 0.0
  117 CONTINUE
  118 CONTINUE
  119 CONTINUE
  120 CONTINUE
      IF (IX(39).NE.0) GO TO 121
      IF (IX(22).NE.0) GO TO 121
      IF ((NGC(2).GT.0).AND.(NUAC(2).EQ.0)) GO TO 131
  121 CONTINUE
      IGOTO = 2
      IF (IX(24).GT.0) IGOTO = 1
  122 BETTA=XMIS(6)
      VRGK2 = BETTA
  123 IF (IX(31)) 124,124,128
  124 IF (IMAX-1) 125,125,126
  125 BETTA = 1.0
      GO TO 128
  126 BETOI=3.141593/FLOAT(IMXP1)
      ARG1=COS(BETOI)
      BETOI=3.141593/FLOAT(JMXP1)
      ARG2=COS(BETOI)
      RHO=ARG1/(2.0-ARG2)
      T1 = KMAX
      T2 = (T1+11.0)/12.0
      RHO = RHO**T2
      BETTA = 2.0/(1.0+SQRT(1.0-RHO**2))
  127 RHO=ARG2/(2.0-ARG1)
      RHO = RHO**T2
      VRGK2 = 2.0/(1.0+SQRT(1.0-RHO**2))
  128 CONTINUE
  129 CONTINUE
  130 IF (NUAC(8).GE.0) GO TO 132
      BETTA=(6.0*BETTA+1.0)/7.0
      VRGK2=(6.0*VRGK2+1.0)/7.0
  132 CONTINUE
      IF(NGC(6) .NE. -2) GO TO 134
      READ(36)
      READ(36)
      DO 133 K=1,KMAX
      READ(36)((P2(J,I,K),J=1,JMAX),I=1,IMAX)
  133 CONTINUE
  134 CONTINUE
  131 RETURN
 1000 FORMAT('0ERROR STOP NUMBER 11')
      END
CABPR --097 ***CITATION*** AVERAGE FLUX,ABS.,PROD CALCULATION/ CF-FLUX
      SUBROUTINE ABPR(P2,B1,B2,B3,B4,B5,NRGN,IVX,JVX,KVX,LVX, SIG,PVOL,
     > NCOMP,MVX)
C
      DOUBLE PRECISION P2,B1
      DOUBLE PRECISION
     >       SUMXI,TPTSA,XADB,XPDB,XS1DB,XS2DB, TL,XRDB,CS1S,CS2S,XLL1,
     > D8,XADX,YADX, XLL2,XLL3,XLL4,XLL5,XLL6,XLEK,B2LK,B3LK,B4LK,B5LK,
     > D1,D2,D3,D4,D5, D6,D7,YADB,YPDB,YLEK,YS1S,YS2S,YS1DB,YS2DB,YRDB,
     > SPR50,XLAST
C
      COMMON/ADUBP/SUMXI,TPTSA,XADB,XPDB,XS1DB,XS2DB, TL,XRDB,CS1S,CS2S,
     >  XLL1,D8,XADX,YADX, XLL2,XLL3,XLL4,XLL5,XLL6,XLEK,B2LK,B3LK,B4LK,
     >  B5LK,D1,D2,D3,D4,D5, D6,D7,YADB,YPDB,YLEK,YS1S,YS2S,YS1DB,YS2DB,
     >  YRDB,SPR50,XLAST
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XELK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SAMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
C
      DIMENSION P2(JVX,IVX,KVX),B1(MVX,KVX),B2(MVX,KVX),B3(MVX,KVX),
     > B4(MVX,KVX),B5(MVX,KVX),NRGN(JVX,IVX)
      DIMENSION SIG(KVX,MVX,10),PVOL(LVX),NCOMP(LVX)
C
      DO 101 K = 1,KVX
      DO 100 M=1,MVX
      B1(M,K) = 0.0
  100 CONTINUE
  101 CONTINUE
      DO 104 K = 1,KVX
      DO 103 I = 1,IVX
      DO 102 J = 1,JVX
      L = NRGN(J,I)
      M = NCOMP(L)
      B1(M,K) = B1(M,K) + P2(J,I,K)*PVOL(L)
  102 CONTINUE
  103 CONTINUE
  104 CONTINUE
      DO 106 K = 1,KMAX
      DO 105 M=1,MMAX
      B2LK = (SIG(K,M,3) + SIG(K,M,9))*B1(M,K)
      B3LK = SIG(K,M,4)*B1(M,K)
      B4LK = SIG(K,M,5)*B1(M,K)
      B5LK = SIG(K,M,8)*B1(M,K)
      XADB = XADB+B2LK
      XPDB = XPDB+B3LK
      XS1DB = XS1DB+B4LK
      XS2DB = XS2DB+B5LK
      B2(M,K) = B2LK + B2(M,K)
      B3(M,K) = B3LK
      B4(M,K) = B4LK
      B5(M,K) = B5LK
  105 CONTINUE
  106 CONTINUE
      RETURN
      END
CLOOP --098 ***CITATION*** PHIBAR,SOURCE,CONVERGENCE FOR 1,2-D/ CF-FLUX
      SUBROUTINE LOOP( P2,SOUR,NRGN,XII,IVX,JVX,KVX,LVX,XLAMDA, SIG,
     > PVOL,NCOMP,MVX)
C
      DOUBLE PRECISION P2, CKSO, SOUR, T1, XII, XLAMDA
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDB,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
C
      DIMENSION P2 (JVX,IVX, KVX), SOUR (JVX,IVX ), NRGN (JVX,IVX )
      DIMENSION XII(KVX)
      DIMENSION SIG(KVX,MVX,10),PVOL(LVX),NCOMP(LVX)
C
      IF (IX(24).GT.0) GO TO 105
      DO 104 I = 1,IVX
      DO 103 J = 1,JVX
      L = NRGN(J,I)
      M = NCOMP(L)
      CKSO = 0.0
      DO 100 K = 1,KVX
      T1 = P2 (J,I, K)
      CKSO = CKSO + SIG(K,M,4)*T1
  100 CONTINUE
      IF (SPARE(98).EQ.0.0) GO TO 102
      DO 101 K = 1,KVX
      CKSO = CKSO + XLAMDA*SIG(K,M,8)*P2(J,I,K)
  101 CONTINUE
  102 CONTINUE
      SOUR(J,I) = CKSO*PVOL(L)
  103 CONTINUE
  104 CONTINUE
      GO TO 109
  105 CONTINUE
      DO 108 I = 1,IVX
      DO 107 J = 1,JVX
      CKSO = 0.0
      DO 106 K = 1,KVX
      T1 = P2 (J,I, K)
      CKSO = CKSO+XII(K)*T1
  106 CONTINUE
      SOUR(J,I) = CKSO
  107 CONTINUE
  108 CONTINUE
  109 CONTINUE
      RETURN
      END
CUDTE --100 ***CITATION*** SIGMA UPDATE FOR 1,2-D/ CF-FLUX
      SUBROUTINE UDTE(CONC,SS1,SS2,SS3,SS4,SS5,SSC,SIG,HOL,ONEOV, SCAC,
     > NJJR,BND,BBND,ZONEN,NNXTRA,XI,XLAMDA,RATE, MVX,NVX,KVX,NSETVX,
     > NVO)
C
      DOUBLE PRECISION XLAMDA, SP28
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AMESH/BMESH(30),NREGI,NREGJ,NREGKB,XSHI(100),XSHJ(100),
     > XSHKB(100), MSHI(100),MSHJ(100),MSHKB(100),Y(211),YY(211), X(211)
     >  ,XX(211),Z(211),ZZ(211), ZONVOL(200),AVZPD(200),PDI(211),
     > PDJ(211) , PDK(211)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDB,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     > , XNAME(3,200)
C
      DIMENSION CONC(NVX,MVX),SS1(KVX,NVX,NSETVX),SS2(KVX,NVX,NSETVX),
     > SS3(KVX,NVX,NSETVX),SS4(KVX,NVX,NSETVX),SS5(KVX,NVX,NSETVX),
     > SSC(KVX,KVX),SIG(KVX,MVX,10),HOL(NVX,NSETVX,10), ONEOV(KVX,
     > NSETVX),SCAC(KVX,MVX,KVX),NJJR(NVX,NSETVX), BND(6,KVX),BBND(KVX),
     > ZONEN(NVO),NNXTRA(NVX,NSETVX),XI(KVX), RATE(NVX,MVX)
C
      INEG = 0
      SP28 = 1.0 + XLAMDA
      SPARE(28) = SP28
      IF (IX(128).LE.0) SPARE(29) = SPARE(29)*SP28
      IF (IX(128).GT.0) SPARE(29) = SPARE(29) + XLAMDA
      SPARE(58) = 0.0
      XL51 = XLAMDA
      IF (NSRH(11).NE.0) GO TO 100
      REWIND IO3
      WRITE(IO3) ((SIG(K,M,1),K=1,KMAX),M=1,MMAX)
      REWIND IO3
  100 CONTINUE
      IF (IX(128).GT.0) GO TO 106
      DO 105 M=1,MMAX
      NS = NXSET(M)
      NR = NXODR(NS)
      NSX = NSIG2(NR)
      IF ((IX(44).EQ.0).AND.(IX(49).EQ.0)) GO TO 102
      IF (IX(49).GT.0) GO TO 101
      IF ((M.EQ.IX(44)).OR.(M.EQ.IX(45)).OR.(M.EQ.IX(46))
     > .OR.(M.EQ.IX(47)).OR.(M.EQ.IX(48))) GO TO 102
      GO TO 105
  101 IF (IX(49).NE.NCLASS(M)) GO TO 105
  102 DO 104 N = 1,NSX
      DO 103 INI = 12,18
      IF (NJJR(N,NR).NE.NSRH(INI)) GO TO 103
      T1 = CONC(N,M)
      CONC(N,M) = T1*SP28
      IF (CONC(N,M).LT.0.0) INEG = 1
      SPARE(58) = AMAX1(SPARE(58),CONC(N,M))
  103 CONTINUE
  104 CONTINUE
  105 CONTINUE
      GO TO 109
  106 CONTINUE
      IO18 = IX(85)
      REWIND IO18
      READ(IO18) NXZ
      READ(IO18) (NXTR1(I),I=1,NXZ)
      DO 108 I=1,NXZ
      M = NXTR1(I)
      NS = NXSET(M)
      NR = NXODR(NS)
      NSX = NSIG2(NR)
      READ(IO18) (XTR1(N),N=1,NSX)
      DO 107 N=1,NSX
      T1 = CONC(N,M)
      CONC(N,M) = T1 + XLAMDA*XTR1(N)
      IF (CONC(N,M).LT.0.0) INEG = 1
      SPARE(58) = AMAX1(SPARE(58),CONC(N,M))
  107 CONTINUE
  108 CONTINUE
      REWIND IO18
  109 CONTINUE
      IF (IX(199).EQ.0) GO TO 110
      CALL SSZU(CONC,ZONEN,NJJR,RATE,MVX,NVX,NSETVX,NVO)
  110 CONTINUE
      IF (INEG.EQ.0) GO TO 111
      IF (NSRH(21).GT.0) GO TO 111
      WRITE(IOUT,1000)
      WRITE(IOUT,1001) ((CONC(N,M),N=1,NMAX),M=1,MMAX)
      return
  111 CONTINUE
      IF (NSRH(11).EQ.0) IX(40)=1
      INDO = 1
C**** IN BIGS, ARRAY F1 WILL USE THE CORE RESERVED FOR ARRAY SCAC
      CALL BIGS(SCAC,CONC,SS1,SS2,SS3,SS4,SS5,SSC,SIG,HOL,ONEOV,INDO,
     > NJJR,KVX,MVX,NVX,NSETVX,BBND,XI,ZONEN,NNXTRA,NVO)
      IF (NSRH(11).NE.0) GO TO 112
      READ(IO3) ((SIG(K,M,1),K=1,KMAX),M=1,MMAX)
      REWIND IO3
  112 CONTINUE
  113 CONTINUE
      IF (NSRH(11).EQ.0) GO TO 114
      IF (IX(128).LE.0) WRITE(IOUT,1002) SP28
      IF (IX(128).GT.0) WRITE(IOUT,1002) XLAMDA
      XLAMDA = 0.0
  114 CONTINUE
      IX(40) = 0
      RETURN
 1000 FORMAT('1**** SEARCH CONCENTRATIONS NEGATIVE **** STOP OPTION SPEC
     >IFIED ****')
 1001 FORMAT(1X,1P10E12.5)
 1002 FORMAT('                     CROSS SECTIONS UPDATED WITH',1PE13.5)
      END
CDPER --107 ***CITATION*** LINE RELAXATION ON ROWS AND/OR COLUMNS FOR
C                          PERIODIC BOUNDARY CONDITIONS (2-D)/ CF-DNSD
      SUBROUTINE DPER(SCAT,P2,DCONB,DCONR,PTSA,NRGN,E1,BET,DEL, IVX,JVX,
     > KVX,IVXP1,JVXP1,IVZ,KVZ,LVX,IOVX,IOVZ)
      DOUBLE PRECISION ALP(211), Q(211), BET(211), DEL(211), QQ, TT,
     > D, E, F, P2, T, TEMP, TMF, SCAT, RDEL
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BAT(211),DAL(211)
C
      DIMENSION SCAT(JVX,IVX), P2(JVX,IVX,KVX),DCONB(JVX,IVXP1,IOVX),
     > DCONR(JVXP1,IVZ,IOVZ),PTSA(JVX,IVX,IOVX)
      DIMENSION NRGN(JVX,IVX),E1(LVX,KVX)
C
      JVXM1 = JVX - 1
      N = IX(20)
      DO 124 I=1,IVX
      IM1 = I - 1
      IP1 = I + 1
      DO 102 J=1,JVX
      QQ = SCAT(J,I)
      IF (I.LE.1) GO TO 100
      QQ = QQ + P2(J,IM1,K)*DCONB(J,I,N)
  100 IF (I.GE.IVX) GO TO 101
      QQ = QQ + P2(J,IP1,K)*DCONB(J,IP1,N)
  101 Q(J) = QQ
  102 CONTINUE
      D4 = DCONR(2,I,N)
      IF (P2(1,I,K).EQ.0.0) GO TO 103
      L = NRGN(1,I)
      BET(1) = Q(1)/D4
      DEL(1) = D4/(PTSA(1,I,N) + E1(L,K))
      ALP(1) = DCONR(1,I,N)/D4
      GO TO 104
  103 BET(1) = 0.0
      DEL(1) = 0.0
      ALP(1) = 0.0
  104 CONTINUE
      DO 106 J=2,JVX
      IF (P2(J,I,K).EQ.0.0) GO TO 105
      L = NRGN(J,I)
      T = D4*DEL(J-1)
      D4 = DCONR(J+1,I,N)
      BET(J) = (Q(J) + BET(J-1)*T)/D4
      DEL(J) = D4/(PTSA(J,I,N) + E1(L,K) - T)
      ALP(J) = ALP(J-1)*T/D4
      GO TO 106
  105 BET(J) = 0.0
      DEL(J) = 0.0
      ALP(J) = 0.0
  106 CONTINUE
      IF (P2(JVX,I,K).NE.0.0) GO TO 107
      TEMP = 0.0
      TT = 0.0
      GO TO 115
  107 CONTINUE
      F = 1.0
      D = 0.0
      E = 0.0
      DO 108 J=1,JVXM1
      F = F*DEL(J)
      IF (DEL(J).EQ.0.0) GO TO 109
      D = D + BET(J)*F
      E = E + ALP(J)*F
  108 CONTINUE
  109 CONTINUE
      RDEL = 0.0
      IF (DEL(JVXM1).NE.0.0) RDEL = 1.0D0/DEL(JVXM1)
      L = NRGN(JVX,I)
      D1 = DCONR(JVX,I,N)
      D2 = DCONR(JVX+1,I,N)
      D4 = D1 + F*D2
      TEMP = ((Q(JVX ) + D*D2)*RDEL + D4*BET(JVXM1))/ ((PTSA(JVX,I,N) +
     > E1(L,K) - E*D2)*RDEL - D4*(1.0 + ALP(JVXM1)))
      TT = TEMP
      T = P2(JVX,I,K)
      TMF = T + BETTA*(TEMP - T)
      IF (IEP) 110,114,111
  110 P2(JVX,I,K) = TEMP
      GO TO 115
  111 IF (TMF-TEMP) 113,114,112
  112 TMF = DMIN1(TMF,(TEMP+T))
      GO TO 114
  113 TMF = DMAX1(TMF,0.5*TEMP)
  114 CONTINUE
      P2(JVX,I,K) = TMF
  115 DO 123 JJ=2,JVX
      J = JVXP1 - JJ
      T = P2(J,I,K)
      IF (T.NE.0.0) GO TO 116
      TEMP = 0.0
      GO TO 123
  116 CONTINUE
      TEMP = DEL(J)*(TEMP+BET(J) + TT*ALP(J))
      TMF = T + BETTA*(TEMP - T)
      IF (IEP) 117,121,118
  117 P2(J,I,K) = TEMP
      GO TO 123
  118 IF (TMF-TEMP) 120,121,119
  119 TMF = DMIN1(TMF,(TEMP+T))
      GO TO 121
  120 TMF = DMAX1(TMF,0.5*TEMP)
  121 CONTINUE
  122 P2(J,I,K) = TMF
  123 CONTINUE
  124 CONTINUE
      IF (NUAC(20).GT.0) GO TO 148
      DO 147 J=1,JVX
      JM1 = J - 1
      JP1 = J + 1
      DO 128 I=1,IVX
      QQ = SCAT(J,I)
      IF (J.NE.1) GO TO 125
      QQ = QQ + P2(JVX,I,K)*DCONR(J,I,N) + P2(JP1,I,K)*DCONR(JP1,I,N)
      GO TO 127
  125 IF (J.NE.JVX) GO TO 126
      QQ = QQ + P2(JVX-1,I,K)*DCONR(JVX,I,N) + P2(1,I,K)* DCONR(JVX+1,I,
     > N)
      GO TO 127
  126 QQ = QQ + P2(JM1,I,K)*DCONR(J,I,N) + P2(JP1,I,K)*DCONR(JP1,I,N)
  127 Q(I) = QQ
  128 CONTINUE
      D4 = DCONB(J,2,N)
      IF (P2(J,1,K).EQ.0.0) GO TO 129
      L = NRGN(J,1)
      BET(1) = Q(1)/D4
      DEL(1) = D4/(PTSA(J,1,N) + E1(L,K))
      GO TO 130
  129 DEL(1) = 0.0
  130 CONTINUE
      DO 132 I=2,IVX
      IF (P2(J,I,K).EQ.0.0) GO TO 131
      L = NRGN(J,I)
      T = D4*DEL(I-1)
      D4 = DCONB(J,I+1,N)
      BET(I) = (Q(I) + BET(I-1)*T)/D4
      DEL(I) = D4/(PTSA(J,I,N) + E1(L,K) - T)
      GO TO 132
  131 DEL(I) = 0.0
  132 CONTINUE
  133 TEMP = BET(IVX)*DEL(IVX)
      T = P2(J,IVX,K)
      TMF=T+VRGK2*(TEMP-T)
      IF (IEP) 134,138,135
  134 P2(J,IVX,K)=TEMP
      GO TO 139
  135 IF (TMF-TEMP) 137,138,136
  136 TMF = DMIN1(TMF,(TEMP+ T))
      GO TO 138
  137 TMF = DMAX1(TMF,0.5*TEMP)
  138 CONTINUE
      P2(J,IVX,K)=TMF
  139 DO 146 JJ = 2,IVX
      I = IVXP1-JJ
      T = P2(J,I,K)
      TEMP = DEL(I)*(TEMP+BET(I))
      TMF=T+VRGK2*(TEMP-T)
      IF (IEP) 140,144,141
  140 P2(J,I,K)=TEMP
      GO TO 146
  141 IF (TMF-TEMP) 143,144,142
  142 TMF = DMIN1(TMF,(TEMP+ T))
      GO TO 144
  143 TMF = DMAX1(TMF,0.5*TEMP)
  144 CONTINUE
  145 P2 (J,I, K) = TMF
  146 CONTINUE
  147 CONTINUE
  148 CONTINUE
      RETURN
      END
CHWRD --108 ***CITATION*** LINE RELAX ROWS FOR 1,2-D HEX/ CF-FLUX
      SUBROUTINE HWRD( SCAT, P2,DCONB,DCONR,PTSA, IVX,JVX,KVX, IVXP1,
     > JVXP1,IVZ,KVZ,BET,DEL,NRGN,E1,LVX, IOVX,IOVZ)
C
      DOUBLE PRECISION BET(211),DEL(211),T,TEMP,TMF, P2, SCAT
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BAT(211),DAL(211)
C
      DIMENSION SCAT(JVX,IVX), P2(JVX,IVX,KVX),DCONB(JVX,IVXP1,IOVX),
     > DCONR(JVXP1,IVZ,IOVZ),PTSA(JVX,IVX,IOVX)
      DIMENSION NRGN(JVX,IVX),E1(LVX,KVX)
C
      N = IX(20)
  100 JVY=JVX-1
      KKK = N+IOVX
      DO 144 I = 1,IVX
      IP1 = I-1
      IP2 = I+1
      DEL(1) = 0.0
      D1 = DCONB(1,I,N)
      D2 = DCONB(1,IP2,N)
      D4 = DCONR(2,I,N)
  101 IF (I-1) 102,102,108
  102 IF (P2(1,1,K)) 103,104,103
  103 BET(1) = (P2(1,2,K)*D2+ SCAT(1,1))/D4
      DEL(1) = D4/(PTSA(1,1,N)+E1(1,K))
  104 DO 107 J = 2,JVX
      IF (P2(J,1,K)) 106,105,106
  105 DEL(J) = 0.0
      GO TO 107
  106 T=D4*DEL(J-1)
      L = NRGN(J,1)
      D4 = DCONR(J+1,1,N)
      BET(J) = (P2(J,2,K)*DCONB(J,2,N)+ SCAT(J,1)+ P2(J-1,2,K)*DCONR(J,
     > 2,KKK)+BET(J-1)*T)/D4
      DEL(J) = D4/(PTSA(J,1,N)-T+E1(L,K))
  107 CONTINUE
      GO TO 125
  108 IF (I-IVX) 117,109,109
  109 IF (P2(1,IVX,K)) 110,111,110
  110 BET(1) = (P2(1,IP1,K)*D1+P2(2 ,IP1,K)*DCONR(2 ,IVX,KKK)+ SCAT(1,
     > IVX))/D4
      L = NRGN(1,IVX)
      DEL(1) = D4/(PTSA(1,IVX,N)+E1(L,K))
  111 DO 114J=2,JVY
      IF (P2(J,IVX,K)) 113,112,113
  112 DEL(J) = 0.0
      GO TO 114
  113 T=D4*DEL(J-1)
      L = NRGN(J,IVX)
      D4 = DCONR(J+1,IVX,N)
      BET(J) = (P2(J,IP1,K)*DCONB(J,IVX,N)+ P2(J+1,IP1,K)*DCONR(J+1,IVX,
     >  KKK)+SCAT(J,IVX)+BET(J-1)*T)/D4
      DEL(J) = D4/(PTSA(J,IVX,N)-T+E1(L,K))
  114 CONTINUE
      IF (P2(JVX,IVX,K)) 116,115,116
  115 DEL(JVX)=0
      GO TO 125
  116 T=D4*DEL(J-1)
      L = NRGN(JVX,IVX)
      D4=DCONR(JVXP1,IVX,N)
      BET(JVX)=(P2(JVX,IP1,K)*DCONB(JVX,IVX,N)+SCAT(JVX,IVX)+BET(JVX-1)*
     >  T)/D4
      DEL(JVX)=D4/(PTSA(JVX,IVX,N)-T+E1(L,K))
      GO TO 125
  117 IF (P2(1,I,K)) 118,119,118
  118 CONTINUE
      L = NRGN(1,I)
      BET(1) = (P2(1,IP1,K)*D1+P2(1,IP2,K)*D2+ P2(2 ,IP1,K)*DCONR(2 ,I,
     > KKK)+SCAT(1,I))/D4
      DEL(1) = D4/(PTSA(1,I,N)+E1(L,K))
  119 CONTINUE
      DO 122J=2,JVY
      IF (P2(J,I,K)) 121,120,121
  120 DEL(J) = 0.0
      GO TO 122
  121 T=D4*DEL(J-1)
      L = NRGN(J,I)
      D4 = DCONR(J+1,I,N)
      BET(J) = (P2(J,IP1,K)*DCONB(J,I,N)+P2(J,IP2,K)*DCONB(J,IP2,N)+
     > P2(J+1,IP1,K)*DCONR(J+1,I,KKK)+P2(J-1,IP2,K)*DCONR(J,IP2,KKK)+
     > SCAT(J,I)+BET(J-1)*T)/D4
      DEL(J) = D4/(PTSA(J,I,N)-T+E1(L,K))
  122 CONTINUE
      IF (P2(JVX,I,K)) 124,123,124
  123 DEL(JVX)=0.
      GO TO 125
  124 T=D4*DEL(J-1)
      L = NRGN(JVX,I)
      D4=DCONR(JVX+1,I,N)
      BET(JVX)=(P2(JVX,IP1,K)*DCONB(JVX,I,N)+P2(JVX,IP2,K)*DCONB(JVX,
     > IP2,N )+P2(JVX-1,IP2,K)*DCONR(JVX,IP2,KKK)+SCAT(JVX,I)+BET(JVX-1)
     >  *T)/D4
      DEL(JVX)=D4/(PTSA(JVX,I,N)-T+E1(L,K))
  125 CONTINUE
  126 TEMP = BET(JVX)*DEL(JVX)
      T = P2(JVX,I,K)
      TMF = T+BETTA*(TEMP-T)
      IF (IEP) 127,131,128
  127 P2(JVX,I,K)=TEMP
      GO TO 132
  128 IF (TMF-TEMP) 130,131,129
  129 TMF = DMIN1(TMF,(TEMP+ T))
      GO TO 131
  130 TMF = DMAX1(TMF,0.5*TEMP)
  131 CONTINUE
      P2 (JVX,I, K) = TMF
  132 DO 139 JJ = 2,JVX
      J = JVXP1-JJ
      T = P2(J,I,K)
      TEMP = DEL(J)*(TEMP+BET(J))
      TMF = T+BETTA*(TEMP-T)
      IF (IEP) 133,137,134
  133 P2(J,I,K)=TEMP
      GO TO 139
  134 IF (TMF-TEMP) 136,137,135
  135 TMF = DMIN1(TMF,(TEMP+ T))
      GO TO 137
  136 TMF = DMAX1(TMF,0.5*TEMP)
  137 CONTINUE
  138 P2 (J,I, K) = TMF
  139 CONTINUE
      IF (NUAC(8)) 140,144,142
  140 L=IVXP1-I
      DO 141J=1,JVX
      M=JVXP1-J
      P2(M,L,K)=P2(J,I,K)
  141 CONTINUE
      GO TO 144
  142 DO 143J=1,JVX
      P2(I,J,K)=P2(J,I,K)
  143 CONTINUE
  144 CONTINUE
      RETURN
      END
CHXRD --109 ***CITATION*** LINE RELAX COLS FOR 1,2-D HEX/ CF-FLUX
      SUBROUTINE HXRD( SCAT, P2,DCONB,DCONR,PTSA, IVX,JVX,KVX, IVXP1,
     > JVXP1,IVZ,KVZ,BET,DEL,NRGN,E1,LVX, IOVX,IOVZ)
C
      DOUBLE PRECISION BET(211),DEL(211),T,TEMP,TMF, P2, SCAT
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BAT(211),DAL(211)
C
      DIMENSION SCAT(JVX,IVX), P2(JVX,IVX,KVX),DCONB(JVX,IVXP1,IOVX),
     > DCONR(JVXP1,IVZ,IOVZ),PTSA(JVX,IVX,IOVX)
      DIMENSION NRGN(JVX,IVX),E1(LVX,KVX)
C
      N = IX(20)
      KKK = N+IOVX
      IVY=IVX-1
  100 DO 141 J = 1,JVX
      JP1 = J-1
      JP2 = J+1
      DEL(1) = 0.0
      D1 = DCONR(J,1,N)
      D2 = DCONR(JP2,1,N)
      D4 = DCONB(J,2,N)
  101 IF (J-1) 102,102,108
  102 IF (P2(1,1,K)) 103,104,103
  103 BET(1) = (P2(2,1,K)*D2+ SCAT(1,1))/D4
      DEL(1) = D4/(PTSA(1,1,N)+E1(1,K))
  104 DO 107 I = 2,IVX
      IF (P2(1,I,K)) 106,105,106
  105 DEL(I) = 0.0
      GO TO 107
  106 T=D4*DEL(I-1)
      L = NRGN(1,I)
      D4 = DCONB(1,I+1,N)
      BET(I) = (P2(2,I,K)*DCONR(2,I,N)+ SCAT(1,I)+ P2(2,I-1,K)*DCONR(2,
     > I,KKK)+BET(I-1)*T)/D4
      DEL(I) = D4/(PTSA(1,I,N)-T+E1(L,K))
  107 CONTINUE
      GO TO 125
  108 IF (J-JVX) 117,109,109
  109 IF (P2(JVX,1,K)) 110,111,110
  110 BET(1) = (P2(JP1,1,K)*D1+P2(JP1,2,K)*DCONR(JVX,2,KKK)+ SCAT(J,1))/
     >  D4
      L = NRGN(JVX,1)
      DEL(1) = D4/(PTSA(JVX,1,N)+E1(L,K))
  111 DO 114I=2,IVY
      IF (P2(JVX,I,K)) 113,112,113
  112 DEL(I) = 0.0
      GO TO 114
  113 T=D4*DEL(I-1)
      L = NRGN(JVX,I)
      D4 = DCONB(J,I+1,N)
      BET(I) = (P2(JP1,I,K)*DCONR(JVX,I,N)+ P2(JP1,I+1,K)*DCONR(JVX,I+1,
     >  KKK)+SCAT(JVX,I)+BET(I-1)*T)/D4
      DEL(I) = D4/(PTSA(JVX,I,N)-T+E1(L,K))
  114 CONTINUE
      IF (P2(JVX,IVX,K)) 116,115,116
  115 DEL(IVX)=0.
      GO TO 125
  116 T=D4*DEL(I-1)
      L = NRGN(JVX,IVX)
      D4=DCONB(J,IVXP1,N)
      BET(IVX)=(P2(JP1,IVX,K)*DCONR(JVX,IVX,N)+SCAT(JVX,IVX)+BET(IVX-1)*
     >  T)/D4
      DEL(IVX)=D4/(PTSA(JVX,IVX,N)-T+E1(L,K))
      GO TO 125
  117 IF (P2(J,1,K)) 118,119,118
  118 CONTINUE
      L = NRGN(J,1)
      BET(1) = (P2(JP1,1,K)*D1+P2(JP2,1,K)*D2+ P2(JP1,2,K)*DCONR(J ,2,
     > KKK)+SCAT(J,1))/D4
      DEL(1) = D4/(PTSA(J ,1,N)+E1(L,K))
  119 CONTINUE
      DO 122I=2,IVY
      IF (P2(J,I,K)) 121,120,121
  120 DEL(I) = 0.0
      GO TO 122
  121 T=D4*DEL(I-1)
      L = NRGN(J,I)
      D4 = DCONB(J,I+1,N)
      BET(I) = (P2(JP1,I,K)*DCONR(J,I,N)+P2(JP2,I,K)*DCONR(JP2,I,N)+
     > P2(JP1,I+1,K)*DCONR(J,I+1,KKK)+P2(JP2,I-1,K)*DCONR(JP2,I,KKK)+
     > SCAT(J,I)+BET(I-1)*T)/D4
      DEL(I) = D4/(PTSA(J,I,N)-T+E1(L,K))
  122 CONTINUE
      IF (P2(J,IVX,K)) 124,123,124
  123 DEL(IVX)=0.
      GO TO 125
  124 T=D4*DEL(I-1)
      L = NRGN(J,IVX)
      D4=DCONB(J,IVXP1,N)
      BET(IVX)=(P2(JP1,IVX,K)*DCONR(J,IVX,N)+P2(JP2,IVX,K)*DCONR(JP2,
     > IVX,N)+P2(JP2,IVX-1,K)*DCONR(JP2,IVX,KKK)+SCAT(J,IVX)+BET(IVX-1)*
     >  T)/D4
      DEL(IVX)=D4/(PTSA(J,IVX,N)-T+E1(L,K))
  125 TEMP = BET(IVX)*DEL(IVX)
      T = P2(J,IVX,K)
      TMF=T+VRGK2*(TEMP-T)
      IF (IEP) 126,130,127
  126 P2(J,IVX,K)=TEMP
      GO TO 131
  127 IF (TMF-TEMP) 129,130,128
  128 TMF = DMIN1(TMF,(TEMP+ T))
      GO TO 130
  129 TMF = DMAX1(TMF,0.5*TEMP)
  130 CONTINUE
      P2(J,IVX,K)=TMF
  131 DO 138 JJ = 2,IVX
      I=IVXP1-JJ
      T = P2(J,I,K)
      TEMP = DEL(I)*(TEMP+BET(I))
      TMF=T+VRGK2*(TEMP-T)
      IF (IEP) 132,136,133
  132 P2(J,I,K)=TEMP
      GO TO 138
  133 IF (TMF-TEMP) 135,136,134
  134 TMF = DMIN1(TMF,(TEMP+ T))
      GO TO 136
  135 TMF = DMAX1(TMF,0.5*TEMP)
  136 CONTINUE
  137 P2 (J,I, K) = TMF
  138 CONTINUE
      IF (NUAC(8)) 139,141,141
  139 M=JVXP1-J
      DO 140I=1,IVX
      L=IVXP1-I
      P2(M,L,K)=P2(J,I,K)
  140 CONTINUE
  141 CONTINUE
      RETURN
      END
CKBPR --113 ***CITATION*** AVERAGE FLUX,ABS.,PROD CALC 3-D/ CF-KLUX
      SUBROUTINE KBPR(P2E,B1,B2,B3,B4,B5,NRGNE,JVX,IVX,KBVX,KVX, LVX,
     > JIVX,SIG,PVOL,NCOMP,MVX)
C
      DOUBLE PRECISION B1
      DOUBLE PRECISION
     >       SUMXI,TPTSA,XADB,XPDB,XS1DB,XS2DB, TL,XRDB,CS1S,CS2S,XLL1,
     > D8,XADX,YADX, XLL2,XLL3,XLL4,XLL5,XLL6,XLEK,B2LK,B3LK,B4LK,B5LK,
     > D1,D2,D3,D4,D5, D6,D7,YADB,YPDB,YLEK,YS1S,YS2S,YS1DB,YS2DB,YRDB,
     > SPR50,XLAST
C
      COMMON/ADUBP/SUMXI,TPTSA,XADB,XPDB,XS1DB,XS2DB, TL,XRDB,CS1S,CS2S,
     >  XLL1,D8,XADX,YADX, XLL2,XLL3,XLL4,XLL5,XLL6,XLEK,B2LK,B3LK,B4LK,
     >  B5LK,D1,D2,D3,D4,D5, D6,D7,YADB,YPDB,YLEK,YS1S,YS2S,YS1DB,YS2DB,
     >  YRDB,SPR50,XLAST
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XELK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SAMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
C
      DIMENSION P2E(JIVX,KBVX,KVX),B1(MVX,KVX),B2(MVX,KVX),B3(MVX,KVX),
     > B4(MVX,KVX),B5(MVX,KVX),NRGNE(JVX,IVX,KBVX)
      DIMENSION SIG(KVX,MVX,10),PVOL(LVX),NCOMP(LVX)
C
      DO 101 K = 1,KVX
      DO 100 M=1,MVX
      B1(M,K) = 0.0
  100 CONTINUE
  101 CONTINUE
      DO 105 K=1,KVX
      DO 104 KB=1,KBVX
      N1 = 0
      DO 103 I=1,IVX
      DO 102 J=1,JVX
      N1 = N1 + 1
      L = NRGNE(J,I,KB)
      M = NCOMP(L)
      B1(M,K) = B1(M,K) + P2E(N1,KB,K)*PVOL(L)
  102 CONTINUE
  103 CONTINUE
  104 CONTINUE
  105 CONTINUE
      DO 107 K=1,KMAX
      DO 106 M=1,MMAX
      B2LK = (SIG(K,M,3) + SIG(K,M,9))*B1(M,K)
      B3LK = SIG(K,M,4)*B1(M,K)
      B4LK = SIG(K,M,5)*B1(M,K)
      B5LK = SIG(K,M,8)*B1(M,K)
      XADB = XADB+B2LK
      XPDB = XPDB+B3LK
      XS1DB = XS1DB+B4LK
      XS2DB = XS2DB+B5LK
      B2(M,K) = B2(M,K) + B2LK
      B3(M,K) = B3LK
      B4(M,K) = B4LK
      B5(M,K) = B5LK
  106 CONTINUE
  107 CONTINUE
      RETURN
      END
CKOOP --114 ***CITATION*** PHIBAR,SOURCE,CONVERGENCE FOR 3-D/ CF-KLUX
      SUBROUTINE KOOP( P2E,SOURE,NRGNE,XII,IVX,JVX,KBVX,KVX, LVX,JIVX,
     > XLAMDA,SIG,PVOL,NCOMP,MVX)
C
      DOUBLE PRECISION XII,XLAMDA
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDB,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
C
      DIMENSION P2E(JIVX ,KBVX,KVX), SOURE(JVX, IVX, KBVX),NRGNE(JVX,
     > IVX,KBVX)
      DIMENSION XII(KVX)
      DIMENSION SIG(KVX,MVX,10),PVOL(LVX),NCOMP(LVX)
C
      IF (IX(24).GT.0) GO TO 106
      DO 105 KB = 1,KBVX
      DO 104 I = 1,IVX
      NN1= (I-1)*JVX
      DO 103 J = 1,JVX
      N1= NN1 + J
      L = NRGNE(J,I,KB)
      M = NCOMP(L)
      CKSO = 0.0
      DO 100 K = 1,KVX
      T1 = P2E(N1 ,KB,K)
      CKSO = CKSO + SIG(K,M,4)*T1
  100 CONTINUE
      IF (SPARE(98).EQ.0.0) GO TO 102
      DO 101 K=1,KMAX
      CKSO = CKSO + XLAMDA*SIG(K,M,8)*P2E(N1,KB,K)
  101 CONTINUE
  102 CONTINUE
      SOURE(J,I,KB) = CKSO*PVOL(L)
  103 CONTINUE
  104 CONTINUE
  105 CONTINUE
      GO TO 111
  106 CONTINUE
      DO 110 KB = 1,KBVX
      DO 109 I = 1,IVX
      NN1= (I-1)*JVX
      DO 108 J = 1,JVX
      N1= NN1 + J
      CKSO = 0.0
      DO 107 K = 1,KVX
      T1 = P2E(N1 ,KB,K)
      CKSO = CKSO+XII(K)*T1
  107 CONTINUE
      SOURE(J,I,KB) = CKSO
  108 CONTINUE
  109 CONTINUE
  110 CONTINUE
  111 CONTINUE
      RETURN
      END
CKWRD --121***CITATION*** LINE RELAXATION ON ROWS 3-D/ CF-KNSD
      SUBROUTINE KWRD(SCATE,P2E,DCONBE,DCONRE,DCONBK,PTSAE,TSOUR, NRGNE,
     >  E1,LVX, IVX,JVX,KBVX,KVX,IVXP1,JVXP1,KBVXP1, JIVX,JIP1VX,JP1IXZ,
     >  IOVX,IOVZ)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
C
      DIMENSION SCATE(JVX,IVX,KBVX),P2E(JIVX,KBVX,KVX), DCONBE(JIP1VX,
     > KBVX,IOVX),DCONRE(JP1IXZ,KBVX,IOVZ), DCONBK(JIVX,KBVXP1,IOVX),
     > PTSAE(JIVX,KBVX,IOVX)
      DIMENSION E1(LVX,KVX),NRGNE(JVX,IVX,KBVX)
      DIMENSION TSOUR(211)
CCCC ********** SUBSCRIPT DEFINITIONS (KWRD E-070) ********* CCCCC
C    NEW         OLD            NEW         OLD
C     N1         J,I             N5 *     J+1,I
C     N2         J,I-1           N6       JVX,I
C     N3         J,I+1           N14        M,L
C     N4         N/A             N15        I,J
C     N9       JVX,J             N8         I,IVX
C     N10      JVX,IVXP1-I
C     INRB = 1  ORDINARY
C     INRB = 2  PERIODIC(REPEATING)  RELAXATION DONE IN KPER
C     INRB = 3  90 DEGREE ROTATIONAL
C     INRB = 4  180 DEGREE ROTATIONAL
C
      INRB = IX(72) + 1
      ASSIGN 111 TO ISYM
      IF (INRB.EQ.3) ASSIGN 108 TO ISYM
      IF (INRB.EQ.4) ASSIGN 110 TO ISYM
      N = IX(20)
      DO 136 KB=1,KBVX
      ASSIGN 100 TO IBR1
      IF (KB.LE.1) ASSIGN 101 TO IBR1
      ASSIGN 102 TO IBR2
      IF (KB.GE.KBVX) ASSIGN 103 TO IBR2
      KBM1 = KB - 1
      KBP1 = KB + 1
      DO 135 I=1,IVX
      ASSIGN 104 TO IBR3
      IF (I.LE.1) ASSIGN 105 TO IBR3
      ASSIGN 106 TO IBR4
      IF (I.GE.IVX) ASSIGN 107 TO IBR4
      IM1 = I - 1
      IP1 = I + 1
      NN1 = IM1*JVX
      NN2 = NN1 - JVX
      NN3 = NN1 + JVX
      N1 = NN1
      N2 = NN2
      N3 = NN3
      DO 112 J=1,JVX
      N1 = N1 + 1
      N2 = N2 + 1
      N3 = N3 + 1
      CKSS = SCATE(J,I,KB)
      GO TO IBR1, (100,101)
  100 CKSS = CKSS + P2E(N1 ,KBM1,K)*DCONBK(N1 ,KB,N)
  101 GO TO IBR2, (102,103)
  102 CKSS = CKSS + P2E(N1 ,KBP1,K)*DCONBK(N1 ,KBP1,N)
  103 GO TO IBR3, (104,105)
  104 CKSS = CKSS + P2E(N2 ,KB,K)*DCONBE(N1 ,KB,N)
  105 GO TO IBR4, (106,107)
  106 CKSS = CKSS + P2E(N3 ,KB,K)*DCONBE(N3 ,KB,N)
  107 GO TO ISYM, (111,108,110)
  108 CONTINUE
      IF (J.NE.JMAX) GO TO 109
      IF (I.EQ.IMAX) GO TO 109
      N5 = I*JVXP1
      N8 = JIVX - JVX + I
      CKSS = CKSS + P2E(N8,KB,K)*DCONRE(N5,KB,N)
  109 IF (I.NE.IMAX) GO TO 111
      IF (J.EQ.JMAX) GO TO 111
      N3 = JIVX + J
      N9 = J*JVX
      CKSS = CKSS + P2E(N9,KB,K)*DCONBE(N3,KB,N)
      GO TO 111
  110 CONTINUE
      IF (J.NE.JMAX) GO TO 111
      N5 = I*JVXP1
      N10 = (IVXP1-I)*JVX
      CKSS = CKSS + P2E(N10,KB,K)*DCONRE(N5,KB,N)
  111 TSOUR(J) = CKSS
  112 CONTINUE
      NN4 = IM1*JVXP1
      N4 = NN4 + 1
      N5 = N4 + 1
      N1 = NN1 + 1
      D4 = DCONRE(N5 ,KB,N)
      IF (P2E(N1,KB,K).EQ.0.0) GO TO 113
      L = NRGNE(1,I,KB)
      BET(1) = TSOUR(1)/D4
      DEL(1) = D4/(PTSAE(N1 ,KB,N) + E1(L,K))
      GO TO 114
  113 DEL(1) = 0.0
  114 CONTINUE
      DO 116 J=2,JVX
      N1 = N1 + 1
      N5 = N5 + 1
      IF (P2E(N1,KB,K).EQ.0.0) GO TO 115
      L = NRGNE(J,I,KB)
      T = D4*DEL(J-1)
      D4 = DCONRE(N5 ,KB,N)
      BET(J) = ( TSOUR(J) + BET(J-1)*T)/D4
      DEL(J) = D4/(PTSAE(N1 ,KB,N) + E1(L,K) - T)
      GO TO 116
  115 DEL(J) = 0.0
  116 CONTINUE
      N6 = NN3
      TEMP=BET(JVX)*DEL(JVX)
      T=P2E(N6 ,KB,K)
      TMF=T+BETTA*(TEMP-T)
      IF (IEP) 117,121,118
  117 P2E(N6 ,KB,K)=TEMP
      GO TO 122
  118 IF (TMF-TEMP) 120,121,119
  119 TMF=AMIN1(TMF,(TEMP+T))
      GO TO 121
  120 TMF=AMAX1(TMF,0.5*TEMP)
  121 CONTINUE
      P2E(N6 ,KB,K)=TMF
  122 DO 129JJ=2,JVX
      J=JVXP1-JJ
      N1= NN1 + J
      T=P2E(N1 ,KB,K)
      TEMP=DEL(J)*(TEMP+BET(J))
      TMF=T+BETTA*(TEMP-T)
      IF (IEP) 123,127,124
  123 P2E(N1 ,KB,K)=TEMP
      GO TO 129
  124 IF (TMF-TEMP) 126,127,125
  125 TMF=AMIN1(TMF,(TEMP+T))
      GO TO 127
  126 TMF=AMAX1(TMF,0.5*TEMP)
  127 CONTINUE
  128 P2E(N1 ,KB,K)=TMF
  129 CONTINUE
      IF (NUAC(8)) 130,134,132
  130 L=IVXP1-I
      NN7= (L-1)*JVX
      DO 131J=1,JVX
      M=JVXP1-J
      N1= NN1 + J
      N14= NN7 + M
      P2E(N14,KB,K)=P2E(N1 ,KB,K)
  131 CONTINUE
      GO TO 134
  132 DO 133J=1,JVX
      N1= NN1 + J
      N15= (J-1)*JVX + I
      P2E(N15,KB,K)=P2E(N1 ,KB,K)
  133 CONTINUE
  134 CONTINUE
  135 CONTINUE
  136 CONTINUE
      RETURN
      END
CKXRD --122***CTIATION*** LINE RELAXATION ON COLS 3-D/ CF-KNSD
      SUBROUTINE KXRD(SCATE,P2E,DCONBE,DCONRE,DCONBK,PTSAE,TSOUR, NRGNE,
     >  E1,LVX, IVX,JVX,KBVX,KVX,IVXP1,JVXP1,KBVXP1, JIVX,JIP1VX,JP1IXZ,
     >  IOVX,IOVZ)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
C
      DIMENSION SCATE(JVX,IVX,KBVX),P2E(JIVX,KBVX,KVX), DCONBE(JIP1VX,
     > KBVX,IOVX),DCONRE(JP1IXZ,KBVX,IOVZ), DCONBK(JIVX,KBVXP1,IOVX),
     > PTSAE(JIVX,KBVX,IOVX)
      DIMENSION E1(LVX,KVX),NRGNE(JVX,IVX,KBVX)
      DIMENSION TSOUR(211)
CCCCC ********* SUBSCRIPT DEFINITIONS (KXRD E-080) ********* CCCCC
C    NEW         OLD            NEW         OLD
C     N1         J,I             N13        J,2
C     N2       J-1,I             N14      J-1,1
C     N3       J+1,I             N15        J,1
C     N4         J,I+1           N16      J+1,1
C     N5         J,IVX           N17        M,L
C     N6       JVX,I             N18 *      J,I
C     N7       JVX,1             N19 *    J+1,I
C     N8         2,I             N20 *    J+1,1
C     N9         1,I+1           N21 *    JVX,I
C     N10        1,I             N22 *      2,I
C     N11        2,1             N23 *      J,1
C     N12        1,1
C
      N = IX(20)
      N12= 1
      N11= 2
      N7= JVX
      NN1= (IVX-1)*JVX
      DO 141 KB=1,KBVX
      KBM1 = KB - 1
      KBP1 = KB + 1
  100 DO 140J=1,JVX
      DO 103 I=1,IVX
      N1 = (I-1)*JVX + J
      CKSS = SCATE(J,I,KB)
      IF (KB.LE.1) GO TO 101
      CKSS = CKSS + P2E(N1,KBM1,K)*DCONBK(N1,KB,N)
  101 IF (KB.GE.KBVX) GO TO 102
      CKSS = CKSS + P2E(N1,KBP1,K)*DCONBK(N1,KBP1,N)
  102 TSOUR(I) = CKSS
  103 CONTINUE
      JP1=J-1
      JP2=J+1
      N13= JVX + J
      N14= JP1
      N15= J
      N16= JP2
      N5= NN1 + J
      N23= J
      N20= JP2
      DEL(1)=0.0
      D1=DCONRE(N23,KB,N)
      D2=DCONRE(N20 ,KB,N)
      D4=DCONBE(N13,KB,N)
  104 IF (J-1) 105,105,111
  105 IF (P2E(N12,KB,K)) 106,107,106
  106 BET(1)=(P2E(N11,KB,K)*D2+TSOUR(1) )/D4
      L = NRGNE(1,1,KB)
      DEL(1) = D4/(PTSAE(N12,KB,N) + E1(L,K))
  107 DO 110I=2,IVX
      IM1= I - 1
      NN2= IM1*JVX
      NN3= IM1*JVXP1
      N10= NN2 + 1
      N9= NN2 + JVX + 1
      N8= NN2 + 2
      N22= NN3 + 2
      IF (P2E(N10,KB,K)) 109,108,109
  108 DEL(I)=0.0
      GO TO 110
  109 T=D4*DEL(I-1)
      L = NRGNE(1,I,KB)
      D4=DCONBE(N9 ,KB,N)
      BET(I)=(P2E(N8 ,KB,K)*DCONRE(N22,KB,N)+TSOUR(I) +BET(I-1)*T)/D4
      DEL(I) = D4/(PTSAE(N10,KB,N) - T + E1(L,K))
  110 CONTINUE
      GO TO 124
  111 IF (J-JVX) 118,112,112
  112 IF (P2E(N7,KB,K)) 113,114,113
  113 BET(1)=(P2E(N14 ,KB,K)*D1+TSOUR(1) )/D4
      L = NRGNE(JVX,1,KB)
      DEL(1) = D4/(PTSAE(N7,KB,N) + E1(L,K))
  114 DO 117I=2,IVX
      IM1= I - 1
      NN2= IM1*JVX
      NN3= IM1*JVXP1
      N6= NN2 + JVX
      N4= NN2 + JVX + J
      N2= NN2 + JP1
      N21= NN3 + JVX
      IF (P2E(N6,KB,K)) 116,115,116
  115 DEL(I)=0
      GO TO 117
  116 T=D4*DEL(I-1)
      L = NRGNE(JVX,I,KB)
      D4=DCONBE(N4 ,KB,N)
      BET(I)=(P2E(N2 ,KB,K)*DCONRE(N21 ,KB,N)+TSOUR(I) +BET(I-1)*T)/D4
      DEL(I) = D4/(PTSAE(N6,KB,N) - T + E1(L,K))
  117 CONTINUE
      GO TO 124
  118 IF (P2E(N15,KB,K)) 119,120,119
  119 CONTINUE
      L = NRGNE(J,1,KB)
      BET(1)=(P2E(N14 ,KB,K)*D1+P2E(N16 ,KB,K)*D2+TSOUR(1) )/D4
      DEL(1) = D4/(PTSAE(N15,KB,N) + E1(L,K))
  120 DO 123I=2,IVX
      IM1= I - 1
      NN2= IM1*JVX
      NN3= IM1*JVXP1
      N1= NN2 + J
      N4= NN2 + JVX + J
      N2= NN2 + JP1
      N3= NN2 + JP2
      N18= NN3 + J
      N19= NN3 + JP2
      IF (P2E(N1,KB,K)) 122,121,122
  121 DEL(I)=0.0
      GO TO 123
  122 T=D4*DEL(I-1)
      L = NRGNE(J,I,KB)
      D4=DCONBE(N4 ,KB,N)
      BET(I)=(P2E(N2 ,KB,K)*DCONRE(N18,KB,N)+P2E(N3 ,KB,K)*DCONRE( N19,
     > KB,N)+TSOUR(I) +BET(I-1)*T)/D4
      DEL(I) = D4/(PTSAE(N1,KB,N) - T + E1(L,K))
  123 CONTINUE
  124 TEMP=BET(IVX)*DEL(IVX)
      T=P2E(N5 ,KB,K)
      TMF=T+VRGK2*(TEMP-T)
      IF (IEP) 125,129,126
  125 P2E(N5 ,KB,K)=TEMP
      GO TO 130
  126 IF (TMF-TEMP) 128,129,127
  127 TMF=AMIN1(TMF,(TEMP+T))
      GO TO 129
  128 TMF=AMAX1(TMF,0.5*TEMP)
  129 CONTINUE
      P2E(N5 ,KB,K)=TMF
  130 DO 137JJ=2,IVX
      I = IVXP1 - JJ
      N1= (I-1)*JVX + J
      T=P2E(N1 ,KB,K)
      TEMP=DEL(I)*(TEMP+BET(I))
      TMF=T+VRGK2*(TEMP-T)
      IF (IEP) 131,135,132
  131 P2E(N1 ,KB,K)=TEMP
      GO TO 137
  132 IF (TMF-TEMP) 134,135,133
  133 TMF=AMIN1(TMF,(TEMP+T))
      GO TO 135
  134 TMF=AMAX1(TMF,0.5*TEMP)
  135 CONTINUE
  136 P2E(N1 ,KB,K)=TMF
  137 CONTINUE
      IF (NUAC(8)) 138,140,140
  138 M=JVXP1-J
      DO 139I=1,IVX
      L=IVXP1-I
      N17= (L-1)*JVX + M
      N1= (I-1)*JVX + J
      P2E(N17,KB,K)=P2E(N1 ,KB,K)
  139 CONTINUE
  140 CONTINUE
  141 CONTINUE
      RETURN
      END
CKZRD --123***CITATION*** LINE RELAXATION BKWD 3-D/ CF-KNSD
      SUBROUTINE KZRD(SCATE,P2E,DCONBE,DCONRE,DCONBK,PTSAE,TSOUR, NRGNE,
     >  E1,LVX, IVX,JVX,KBVX,KVX,IVXP1,JVXP1,KBVXP1, JIVX,JIP1VX,JP1IXZ,
     >  IOVX,IOVZ)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
C
      DIMENSION SCATE(JVX,IVX,KBVX),P2E(JIVX,KBVX,KVX), DCONBE(JIP1VX,
     > KBVX,IOVX),DCONRE(JP1IXZ,KBVX,IOVZ), DCONBK(JIVX,KBVXP1,IOVX),
     > PTSAE(JIVX,KBVX,IOVX)
      DIMENSION E1(LVX,KVX),NRGNE(JVX,IVX,KBVX)
      DIMENSION TSOUR(211)
CCCCC ********* SUBSCRIPT DEFINITIONS (KZRD E-085) ********* CCCCC
C    NEW         OLD            NEW         OLD
C     N1         J,I             N7         L,I
C     N2       J-1,I             N8        KB,I
C     N3       J+1,I             N9  *      J,I
C     N4         1,I             N10 *    J+1,I
C     N5         2,I             N11 *      2,I
C     N6       JVX,I             N12 *     JVX,I
C                                N13        J,I-1
C                                N14        J,I+1
C
      N = IX(20)
      DO 142 I=1,IVX
      NN1= (I-1)*JVX
      N4= NN1 + 1
      N5= NN1 + 2
      N6= NN1 + JVX
      NN2= (I-1)*JVXP1
      N11= NN2 + 2
      N12= NN2 + JVX
  100 DO 141J=1,JVX
      N1= NN1 + J
      N13 = N1 - JVX
      N14 = N1 + JVX
      DO 103 KB=1,KBVX
      CKSS = SCATE(J,I,KB)
      IF (I.LE.1) GO TO 101
      CKSS = CKSS + P2E(N13,KB,K)*DCONBE(N1,KB,N)
  101 IF (I.GE.IVX) GO TO 102
      CKSS = CKSS + P2E(N14,KB,K)*DCONBE(N14,KB,N)
  102 TSOUR(KB) = CKSS
  103 CONTINUE
      JP1=J-1
      JP2=J+1
      N2= NN1 + JP1
      N3= NN1 + JP2
      N9= NN2 + J
      N10= NN2 + JP2
      DEL(1)=0.0
      D1=DCONRE(N9 ,1,N)
      D2=DCONRE(N10 ,1,N)
      D4=DCONBK(N1 ,2,N)
      IF (J-1) 104,104,110
  104 IF (P2E(N4,1,K)) 105,106,105
  105 BET(1)=(P2E(N5 ,1,K) *D2+TSOUR(1) )/D4
      L = NRGNE(1,I,1)
      DEL(1) = D4/(PTSAE(N4,1,N) + E1(L,K))
  106 DO 109KB=2,KBVX
      IF (P2E(N4,KB,K)) 108,107,108
  107 DEL(KB)=0.0
      GO TO 109
  108 T=D4*DEL(KB-1)
      L = NRGNE(1,I,KB)
      D4=DCONBK(N4 ,KB+1,N)
      BET(KB)=(P2E(N5 ,KB,K)*DCONRE(N11,KB,N)+TSOUR(KB) +BET(KB-1)*T)/D4
      DEL(KB) = D4/(PTSAE(N4,KB,N) - T + E1(L,K))
  109 CONTINUE
      GO TO 123
  110 IF (J-JVX) 117,111,111
  111 IF (P2E(N6,1,K)) 112,113,112
  112 BET(1)=(P2E(N2 ,1,K)*D1+TSOUR(1) )/D4
      L = NRGNE(JVX,I,1)
      DEL(1) = D4/(PTSAE(N6,1,N) + E1(L,K))
  113 DO 116KB=2,KBVX
      IF (P2E(N6,KB,K)) 115,114,115
  114 DEL(KB)=0
      GO TO 116
  115 T=D4*DEL(KB-1)
      L = NRGNE(JVX,I,KB)
      D4=DCONBK(N1 ,KB+1,N)
      BET(KB)=(P2E(N2 ,KB,K)*DCONRE(N12 ,KB,N)+TSOUR(KB) +BET(KB-1)*T)/
     > D4
      DEL(KB) = D4/(PTSAE(N6,KB,N) - T + E1(L,K))
  116 CONTINUE
      GO TO 123
  117 IF (P2E(N1,1,K)) 118,119,118
  118 CONTINUE
      L = NRGNE(J,I,1)
      BET(1)=(P2E(N2 ,1,K)*D1+P2E(N3 ,1,K)*D2+TSOUR(1) )/D4
      DEL(1) = D4/(PTSAE(N1,1,N) + E1(L,K))
  119 DO 122KB=2,KBVX
      IF (P2E(N1,KB,K)) 121,120,121
  120 DEL(KB)=0
      GO TO 122
  121 T=D4*DEL(KB-1)
      L = NRGNE(J,I,KB)
      D4=DCONBK(N1 ,KB+1,N)
      BET(KB)=(P2E(N2 ,KB,K)*DCONRE(N9 ,KB,N)+P2E(N3 ,KB,K)*DCONRE( N10
     > ,KB,N)+TSOUR(KB) +BET(KB-1)*T)/D4
      DEL(KB) = D4/(PTSAE(N1,KB,N) - T + E1(L,K))
  122 CONTINUE
  123 TEMP=BET(KBVX)*DEL(KBVX)
      T=P2E(N1 ,KBVX,K)
      TMF=T+SPARE(39)*(TEMP-T)
      IF (IEP) 124,128,125
  124 P2E(N1 ,KBVX,K)=TEMP
      GO TO 129
  125 IF (TMF-TEMP) 127,128,126
  126 TMF=AMIN1(TMF,(TEMP+T))
      GO TO 128
  127 TMF=AMAX1(TMF,0.5*TEMP)
  128 CONTINUE
      P2E(N1 ,KBVX,K)=TMF
  129 DO 136KK=2,KBVX
      KB=KBVXP1-KK
      T=P2E(N1 ,KB,K)
      TEMP=DEL(KB)*(TEMP+BET(KB))
      TMF=T+SPARE(39)*(TEMP-T)
      IF (IEP) 130,134,131
  130 P2E(N1 ,KB,K)=TEMP
      GO TO 136
  131 IF (TMF-TEMP) 133,134,132
  132 TMF=AMIN1(TMF,(TEMP+T))
      GO TO 134
  133 TMF=AMAX1(TMF,0.5*TEMP)
  134 CONTINUE
  135 P2E(N1 ,KB,K)=TMF
  136 CONTINUE
      IF (NUAC(9)) 137,141,139
  137 L=JVXP1-J
      N7= NN1 + L
      DO 138KB=1,KBVX
      M=KBVXP1-KB
      P2E(N7 ,M,K)=P2E(N1 ,KB,K)
  138 CONTINUE
      GO TO 141
  139 DO 140KB=1,KBVX
      N8= NN1 + KB
      P2E(N8 ,J,K)=P2E(N1 ,KB,K)
  140 CONTINUE
  141 CONTINUE
  142 CONTINUE
      RETURN
      END
CKPER --124 ***CITATION*** LINE RELAXATION ON ROWS FOR PERIODIC
C                          BOUNDARY CONDITIONS (3-D)/ CF-KNSD
      SUBROUTINE KPER(SCATE,P2E,DCONBE,DCONRE,DCONBK,PTSAE,TSOUR, NRGNE,
     >  E1,LVX, IVX,JVX,KBVX,KVX,IVXP1,JVXP1,KBVXP1, JIVX,JIP1VX,JP1IXZ,
     >  IOVX,IOVZ)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
C
      DIMENSION SCATE(JVX,IVX,KBVX),P2E(JIVX,KBVX,KVX), DCONBE(JIP1VX,
     > KBVX,IOVX),DCONRE(JP1IXZ,KBVX,IOVZ), DCONBK(JIVX,KBVXP1,IOVX),
     > PTSAE(JIVX,KBVX,IOVX)
      DIMENSION E1(LVX,KVX),NRGNE(JVX,IVX,KBVX)
      DIMENSION TSOUR(211)
      DIMENSION ALP(211)
CCCC ********** SUBSCRIPT DEFINITIONS (KPER E-071) ********* CCCCC
C    NEW         OLD            NEW         OLD
C     N1         J,I             N5 *     J+1,I
C     N2         J,I-1           N6       JVX,I
C     N3         J,I+1           N7 *     JVX,I
C     N4 *       1,I             N8 *   JVX+1,I
C
C
      N = IX(20)
      JVXM1 = JVX - 1
      DO 127 KB=1,KBVX
      KBM1 = KB - 1
      KBP1 = KB + 1
      DO 126 I=1,IVX
      IM1 = I - 1
      IP1 = I + 1
      NN1 = IM1*JVX
      NN2 = NN1 - JVX
      NN3 = NN1 + JVX
      N1 = NN1
      N2 = NN2
      N3 = NN3
      DO 104 J=1,JVX
      N1 = N1 + 1
      N2 = N2 + 1
      N3 = N3 + 1
      CKSS = SCATE(J,I,KB)
      IF (KB.LE.1) GO TO 100
      CKSS = CKSS + P2E(N1 ,KBM1,K)*DCONBK(N1 ,KB,N)
  100 IF (KB.GE.KBVX) GO TO 101
      CKSS = CKSS + P2E(N1 ,KBP1,K)*DCONBK(N1 ,KBP1,N)
  101 IF (I.LE.1) GO TO 102
      CKSS = CKSS + P2E(N2 ,KB,K)*DCONBE(N1 ,KB,N)
  102 IF (I.GE.IVX) GO TO 103
      CKSS = CKSS + P2E(N3 ,KB,K)*DCONBE(N3 ,KB,N)
  103 TSOUR(J) = CKSS
  104 CONTINUE
      NN4 = IM1*JVXP1
      N4 = NN4 + 1
      N5 = N4 + 1
      N1 = NN1 + 1
      D4 = DCONRE(N5 ,KB,N)
      IF (P2E(N1,KB,K).EQ.0.0) GO TO 105
      L = NRGNE(1,I,KB)
      BET(1) = TSOUR(1)/D4
      DEL(1) = D4/(PTSAE(N1 ,KB,N) + E1(L,K))
      ALP(1) = DCONRE(N4 ,KB,N)/D4
      GO TO 106
  105 BET(1) = 0.0
      DEL(1) = 0.0
      ALP(1) = 0.0
  106 CONTINUE
      DO 108 J=2,JVX
      N1 = N1 + 1
      N5 = N5 + 1
      IF (P2E(N1,KB,K).EQ.0.0) GO TO 107
      L = NRGNE(J,I,KB)
      T = D4*DEL(J-1)
      D4 = DCONRE(N5 ,KB,N)
      BET(J) = ( TSOUR(J) + BET(J-1)*T)/D4
      DEL(J) = D4/(PTSAE(N1 ,KB,N) + E1(L,K) - T)
      ALP(J) = ALP(J-1)*T/D4
      GO TO 108
  107 BET(J) = 0.0
      DEL(J) = 0.0
      ALP(J) = 0.0
  108 CONTINUE
      N6 = NN3
      N7 = NN4 + JVX
      N8 = N7 + 1
      IF (P2E(N6,KB,K).NE.0.0) GO TO 109
      TEMP = 0.0
      TT = 0.0
      GO TO 117
  109 F = 1.0
      D = 0.0
      E = 0.0
      DO 110 J=1,JVXM1
      F = F*DEL(J)
      IF (DEL(J).EQ.0.0) GO TO 111
      D = D + BET(J)*F
      E = E + ALP(J)*F
  110 CONTINUE
  111 CONTINUE
      RDEL = 0.0
      IF (DEL(JVXM1).NE.0.0) RDEL = 1.0/DEL(JVXM1)
      L = NRGNE(JVX,I,KB)
      D1 = DCONRE(N7 ,KB,N)
      D2 = DCONRE(N8 ,KB,N)
      D4 = D1 + F*D2
      TEMP =((TSOUR(JVX) + D*D2)*RDEL + D4*BET(JVXM1))/ ((PTSAE(N6 ,KB,
     > N) + E1(L,K) - E*D2)*RDEL - D4*(1.0 + ALP(JVXM1)))
      TT = TEMP
      T = P2E(N6 ,KB,K)
      TMF=T+BETTA*(TEMP-T)
      IF (IEP) 112,116,113
  112 P2E(N6 ,KB,K) = TEMP
      GO TO 117
  113 IF (TMF-TEMP) 115,116,114
  114 TMF=AMIN1(TMF,(TEMP+T))
      GO TO 116
  115 TMF=AMAX1(TMF,0.5*TEMP)
  116 CONTINUE
      P2E(N6 ,KB,K) = TMF
  117 DO 125JJ=2,JVX
      J=JVXP1-JJ
      N1= NN1 + J
      T=P2E(N1 ,KB,K)
      IF (T.NE.0.0) GO TO 118
      TEMP = 0.0
      GO TO 125
  118 CONTINUE
      TEMP = DEL(J)*(TEMP + BET(J) + TT*ALP(J))
      TMF=T+BETTA*(TEMP-T)
      IF (IEP) 119,123,120
  119 P2E(N1 ,KB,K)=TEMP
      GO TO 125
  120 IF (TMF-TEMP) 122,123,121
  121 TMF=AMIN1(TMF,(TEMP+T))
      GO TO 123
  122 TMF=AMAX1(TMF,0.5*TEMP)
  123 CONTINUE
  124 P2E(N1 ,KB,K)=TMF
  125 CONTINUE
  126 CONTINUE
  127 CONTINUE
      RETURN
      END
CMWRD --125***CITATION*** LINE RELAXATION ON ROWS 3-D HEX/ CF-KNSD
      SUBROUTINE MWRD(SCATE,P2E,DCONBE,DCONRE,DCONBK,PTSAE,TSOUR, NRGNE,
     >  E1,LVX, IVX,JVX,KBVX,KVX,IVXP1,JVXP1,KBVXP1, JIVX,JIP1VX,JP1IXZ,
     >  IOVX,IOVZ)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
C
      DIMENSION SCATE(JVX,IVX,KBVX),P2E(JIVX,KBVX,KVX), DCONBE(JIP1VX,
     > KBVX,IOVX),DCONRE(JP1IXZ,KBVX,IOVZ), DCONBK(JIVX,KBVXP1,IOVX),
     > PTSAE(JIVX,KBVX,IOVX)
      DIMENSION E1(LVX,KVX),NRGNE(JVX,IVX,KBVX)
      DIMENSION TSOUR(211)
CCCCC ********* SUBSCRIPT DEFINITIONS (MWRD E-090) ********* CCCCC
C    NEW         OLD            NEW         OLD
C     N1         J,I             N14        M,L
C     N2         J,I-1           N15        I,J
C     N3         J,I+1           N16      J-1,2
C     N4         J,1             N17        2,I-1
C     N5         J,2             N18      J+1,I-1
C     N6         J,IVX           N19      J-1,I+1
C     N7         1,1             N20 *      2,I
C     N8         1,2             N21 *    J+1,1
C     N9         1,IVX           N22 *      J,2
C     N10        1,I             N23 *      2,IVX
C     N11        1,I-1           N24 *    J+1,IVX
C     N12        1,I+1           N25 *    J+1,I
C     N13      JVX,I             N26 *      J,I+1
C
      N = IX(20)
      N7= 1
      N8= JVX + 1
      NN4= (IVX-1)*JVX
      NN6= (IVX-1)*JVXP1
      N9= NN4 + 1
      N23= NN6 + 2
      KKK = N + IOVX
      DO 144 KB=1,KBVX
      KBM1 = KB - 1
      KBP1 = KB + 1
      DO 143I=1,IVX
  100 IP1=I-1
      NN1= IP1*JVX
      DO 103 J=1,JVX
      N1 = NN1 + J
      CKSS = SCATE(J,I,KB)
      IF (KB.LE.1) GO TO 101
      CKSS = CKSS + P2E(N1,KBM1,K)*DCONBK(N1,KB,N)
  101 IF (KB.GE.KBVX) GO TO 102
      CKSS = CKSS + P2E(N1,KBP1,K)*DCONBK(N1,KBP1,N)
  102 TSOUR(J) = CKSS
  103 CONTINUE
      NN2= NN1 - JVX
      NN3= NN1 + JVX
      NN5= IP1*JVXP1
      NN7= NN5 + JVXP1
      N11= NN2 + 1
      N17= NN2 + 2
      N13= NN1 + JVX
      N20= NN5 + 2
      N10= NN1 + 1
      N12= NN3 + 1
      DEL(1)=0.0
      D1=DCONBE(N10,KB,N)
      D2=DCONBE(N12 ,KB,N)
      D4=DCONRE(N20,KB,N)
  104 IF (I-1) 105,105,111
  105 IF (P2E(N7,KB,K)) 106,107,106
  106 BET(1)=(P2E(N8 ,KB,K)*D2+TSOUR(1) )/D4
      L = NRGNE(1,1,KB)
      DEL(1) = D4/(PTSAE(N7,KB,N) + E1(L,K))
  107 CONTINUE
      N4= 1
      N21= 2
      N5= JVX + 1
      N16= JVX
      N22= JVXP1 + 1
      DO 110 J=2,JVX
      N4= N4 + 1
      N21= N21 + 1
      N5= N5 + 1
      N16= N16 + 1
      N22= N22 + 1
      IF (P2E(N4,KB,K)) 109,108,109
  108 DEL(J)=0.0
      GO TO 110
  109 T=D4*DEL(J-1)
      L = NRGNE(J,1,KB)
      D4=DCONRE(N21 ,KB,N)
      BET(J)=(P2E(N5 ,KB,K)*DCONBE(N5 ,KB,N)+TSOUR(J) +P2E(N16 ,KB,K)*
     > DCONRE(N22,KB,KKK)+BET(J-1)*T)/D4
      DEL(J) = D4/(PTSAE(N4,KB,N) - T + E1(L,K))
  110 CONTINUE
      GO TO 124
  111 IF (I-IVX) 118,112,112
  112 IF (P2E(N9,KB,K)) 113,114,113
  113 BET(1)=(P2E(N11 ,KB,K)*D1+TSOUR(1) +P2E(N17 ,KB,K)*DCONRE(N23 ,KB,
     >  KKK))/D4
      L = NRGNE(1,IVX,KB)
      DEL(1) = D4/(PTSAE(N9,KB,N) + E1(L,K))
  114 CONTINUE
      N6= NN4 + 1
      N24= NN6 + 2
      N2= NN2 + 1
      N18= NN2 + 2
      DO 117 J=2,JVX
      N6= N6 + 1
      N24= N24 + 1
      N2= N2 + 1
      N18= N18 + 1
      IF (P2E(N6,KB,K)) 116,115,116
  115 DEL(J)=0.0
      GO TO 117
  116 T=D4*DEL(J-1)
      L = NRGNE(J,IVX,KB)
      D4=DCONRE(N24 ,KB,N)
      BET(J)=(P2E(N2 ,KB,K)*DCONBE(N6 ,KB,N)+TSOUR(J) +P2E(N18 ,KB,K)*
     > DCONRE(N24 ,KB,KKK)+BET(J-1)*T)/D4
      DEL(J) = D4/(PTSAE(N6,KB,N) - T + E1(L,K))
  117 CONTINUE
      GO TO 124
  118 IF (P2E(N10,KB,K)) 119,120,119
  119 CONTINUE
      L = NRGNE(1,I,KB)
      BET(1)=(P2E(N11 ,KB,K)*D1+TSOUR(1) +P2E(N17 ,KB,K)*DCONRE( N20,KB,
     > KKK)+P2E(N12,KB,K)*D2)/D4
      DEL(1) = D4/(PTSAE(N10,KB,N) + E1(L,K))
  120 CONTINUE
      N1= NN1 + 1
      N25= NN5 + 2
      N2= NN2 + 1
      N3= NN3 + 1
      N18= NN2 + 2
      N19= NN3
      N26= NN7 + 1
      DO 123 J=2,JVX
      N1= N1 + 1
      N25= N25 + 1
      N2= N2 + 1
      N3= N3 + 1
      N18= N18 + 1
      N19= N19 + 1
      N26= N26 + 1
      IF (P2E(N1,KB,K)) 122,121,122
  121 DEL(J)=0.0
      GO TO 123
  122 T=D4*DEL(J-1)
      L = NRGNE(J,I,KB)
      D4=DCONRE(N25 ,KB,N)
      BET(J)=(P2E(N2 ,KB,K)*DCONBE(N1 ,KB,N)+P2E(N3 ,KB,K)*DCONBE( N3 ,
     > KB,N)+P2E(N18 ,KB,K)*DCONRE(N25 ,KB,KKK)+P2E(N19 ,KB,K)*
     > DCONRE(N26 ,KB,KKK)+TSOUR(J) +BET(J-1)*T)/D4
      DEL(J) = D4/(PTSAE(N1,KB,N) - T + E1(L,K))
  123 CONTINUE
  124 CONTINUE
  125 TEMP=BET(JVX)*DEL(JVX)
      T=P2E(N13 ,KB,K)
      TMF=T+BETTA*(TEMP-T)
      IF (IEP) 126,130,127
  126 P2E(N13 ,KB,K)=TEMP
      GO TO 131
  127 IF (TMF-TEMP) 129,130,128
  128 TMF=AMIN1(TMF,(TEMP+T))
      GO TO 130
  129 TMF=AMAX1(TMF,0.5*TEMP)
  130 CONTINUE
      P2E(N13 ,KB,K)=TMF
  131 DO 138JJ=2,JVX
      J=JVXP1-JJ
      N1= NN1 + J
      T=P2E(N1 ,KB,K)
      TEMP=DEL(J)*(TEMP+BET(J))
      TMF=T+BETTA*(TEMP-T)
      IF (IEP) 132,136,133
  132 P2E(N1 ,KB,K)=TEMP
      GO TO 138
  133 IF (TMF-TEMP) 135,136,134
  134 TMF=AMIN1(TMF,(TEMP+T))
      GO TO 136
  135 TMF=AMAX1(TMF,0.5*TEMP)
  136 CONTINUE
  137 P2E(N1 ,KB,K)=TMF
  138 CONTINUE
      IF (NUAC(8)) 139,143,141
  139 L=IVXP1-I
      DO 140J=1,JVX
      M=JVXP1-J
      N1= NN1 + J
      N14= (L-1)*JVX + M
      P2E(N14,KB,K)=P2E(N1 ,KB,K)
  140 CONTINUE
      GO TO 143
  141 DO 142J=1,JVX
      N1= NN1 + J
      N15= (J-1)*JVX + I
      P2E(N15,KB,K)=P2E(N1 ,KB,K)
  142 CONTINUE
  143 CONTINUE
  144 CONTINUE
      RETURN
      END
CNMBL --126 ***CITATION*** CALC. NEUTRON BALANCE/ CF-EIGN
      SUBROUTINE NMBL(B1,B4,P2,RVOL,NCOMP,SIG,P2E,XL, IVX,JVX,KBVX,KVX,
     > LVX,MVX,JIVX,B2,B5)
C
      DOUBLE PRECISION P2, B1
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AMESH/BMESH(30),NREGI,NREGJ,NREGKB,XSHI(100),XSHJ(100),
     > XSHKB(100), MSHI(100),MSHJ(100),MSHKB(100),Y(211),YY(211), X(211)
     >  ,XX(211),Z(211),ZZ(211), ZONVOL(200),AVZPD(200),PDI(211),
     > PDJ(211) , PDK(211)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     > , XNAME(3,200)
C
      DIMENSION XL(6,KVX), B1(MVX,KVX),B4(MVX,KVX),P2(JVX,IVX,KVX),
     > RVOL(LVX), NCOMP(LVX),SIG(KVX,MVX,10),P2E(JIVX,KBVX,KVX)
      DIMENSION B2(MVX,KVX),B5(MVX,KVX)
C
  100 CORPW = SPARE(100)
      RECPRK = XLAMDA
      SPARE(27) = XLAMDA
      IF (IX(5).NE.(-5)) GO TO 101
      SPARE(18) = 1.0
      IF (XLAMDA.GE.0.0) GO TO 102
      XABS = (XABS + XLEK)/XLAMDA
      PROD = PROD/XLAMDA
      WRITE(IOUT,1000) SPARE(88),PROD,XABS
      return
  101 CONTINUE
C***************************SEARCH OPTIONS******************************
      IF ((IX(5).EQ.1).OR.(IX(5).LT.0)) RECPRK = 1.0/XKEF1
      SPARE(18) = RECPRK
  102 CONTINUE
      T1 = 0.0
      DO 104 M = 1,MMAX
      ZONVOL(M) = 0.0
      DO 103 K = 1,KMAX
      T1=T1+B1(M,K)*SIG(K,M,7)
  103 CONTINUE
  104 CONTINUE
      DO 105 L=1,LMAX
      M = NCOMP(L)
      ZONVOL(M) = ZONVOL(M)+RVOL(L)
  105 CONTINUE
      IF (IX(5).NE.(-5)) GO TO 106
      XKEF3 = 1.0
      IF (XLAMDA.NE.0.0) XKEF3 = 1.0/XLAMDA
      GO TO 108
  106 CONTINUE
  107 XKEF3 = CORPW*1.0E+6*XMIS(5)/(XMIS(4)*T1)
  108 CONTINUE
      NGC11 = NGC(11)
      DO 125 K = 1,KMAX
      DO 116M=1,MMAX
      B1(M,K)=B1(M,K)*XKEF3
      B5(M,K) = B2(M,K)*XKEF3
      IF (ZONVOL(M)) 109,110,109
  109 B4(M,K) = B1(M,K)/ZONVOL(M)
      GO TO 111
  110 B4(M,K) = B1(M,K)
  111 IF (IX(5).NE.-2) GO TO 115
      IF (NGC11) 112,113,114
  112 IF (M.NE.-NGC11) GO TO 115
  113 SIG(K,M,6) = SIG(K,M,6)*XLAMDA
      GO TO 115
  114 IF (NCLASS(M).EQ.NGC11) GO TO 113
  115 CONTINUE
  116 CONTINUE
      DO 117 N = 1,6
      XL(N,K) = XL(N,K)*XKEF3
  117 CONTINUE
      IF (NUAC(5).LE.10) GO TO 121
      DO 120 KB = 1,KBMAX
      N1 = 0
      DO 119 I = 1,IMAX
      DO 118 J = 1,JMAX
      N1 = N1 + 1
      P2E(N1 ,KB,K) = P2E(N1 ,KB,K)*XKEF3
  118 CONTINUE
  119 CONTINUE
  120 CONTINUE
      GO TO 124
  121 DO 123 I = 1,IMAX
      DO 122 J = 1,JMAX
      P2 (J,I, K) = P2 (J,I, K)*XKEF3
  122 CONTINUE
  123 CONTINUE
  124 CONTINUE
  125 CONTINUE
      XABS = XABS*XKEF3
      PROD = PROD*XKEF3
      XLEK = XLEK*XKEF3
      T2 = T1*XKEF3/XMIS(5)
      TT11 = XLEK+XABS
      SPARE(56) = TT11
      WRITE(IOUT,1001)XLEK,TT11,PROD,T2
  126 CONTINUE
      XLAMDA = RECPRK
      RETURN
 1000 FORMAT('0THERE IS NO SOLUTION TO THIS FIXED SOURCE PROBLEM,  SOURC
     >E',1PE13.5,' PRODUCTIONS',1PE13.5,' LOSSES',1PE13.5)
 1001 FORMAT('0    LEAKAGE',1PE13.5,2H  ,'TOTAL LOSSES',E13.5,'  TOTAL P
     >RODUCTIONS',E13.5,'  REACTOR POWER(WATTS)',E13.5)
      END
CDODA --127 ***CITATION*** WRITE B*CHI*SUM(NU*SIGF*V*PHI/K)  CF/EIGN
      SUBROUTINE DODA(P1,P1E,P2,P2E,NRGN,NRGNE,XI,XKEF1, JVX,IVX,KBVX,
     > KVX,LVX,JIVX,SIG,PVOL,NCOMP,MVX,SOUR,SOURE)
C
      DOUBLE PRECISION P2, SOUR
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
C
      DIMENSION P1(JVX,IVX) ,XI(KVX),NRGN(JVX,IVX)
      DIMENSION P2(JVX,IVX,KVX)
      DIMENSION P1E(JIVX,KBVX) ,NRGNE(JVX,IVX,KBVX)
      DIMENSION P2E(JIVX,KBVX,KVX)
      DIMENSION SIG(KVX,MVX,10),PVOL(LVX),NCOMP(LVX)
      DIMENSION SOUR(JVX,IVX),SOURE(JVX,IVX,KBVX)
C
      IOFS = IX(84)
      REWIND IOFS
      B = 1.0
      IF (GLIM(5).NE.0.0) B = GLIM(5)
      B = B/XKEF1
      IF (NUAC(5).GT.10) GO TO 108
      DO 102 I=1,IVX
      DO 101 J=1,JVX
      L = NRGN(J,I)
      M = NCOMP(L)
      X = 0.0
      DO 100 K=1,KVX
      X = X + SIG(K,M,4)*P2(J,I,K)
  100 CONTINUE
      SOUR(J,I) = X*PVOL(L)
  101 CONTINUE
  102 CONTINUE
      DO 105 K=1,KVX
      X = B*XI(K)
      DO 104 I=1,IVX
      DO 103 J=1,JVX
      P1(J,I) = SOUR(J,I)*X
  103 CONTINUE
  104 CONTINUE
      WRITE(IOFS) ((P1(J,I),J=1,JVX),I=1,IVX)
  105 CONTINUE
      DO 107 I=1,IVX
      DO 106 J=1,JVX
      P1(J,I) = 0.0
      SOUR(J,I) = 0.0
  106 CONTINUE
  107 CONTINUE
      GO TO 120
  108 CONTINUE
      DO 112 KB=1,KBVX
      DO 111 I=1,IVX
      DO 110 J=1,JVX
      L = NRGNE(J,I,KB)
      M = NCOMP(L)
      N1 = (I-1)*JVX + J
      X = 0.0
      DO 109 K=1,KVX
      X = X + SIG(K,M,4)*P2E(N1,KB,K)
  109 CONTINUE
      SOURE(J,I,KB) = X*PVOL(L)
  110 CONTINUE
  111 CONTINUE
  112 CONTINUE
      JIP = JVX*IVX
      DO 116 K=1,KVX
      X = B*XI(K)
      DO 115 KB=1,KBVX
      N1 = 0
      DO 114 I=1,IVX
      DO 113 J=1,JVX
      N1 = N1 + 1
      P1E(N1,KB) = SOURE(J,I,KB)*X
  113 CONTINUE
  114 CONTINUE
  115 CONTINUE
      WRITE(IOFS) ((P1E(N1,KB),N1=1,JIP),KB=1,KBVX)
  116 CONTINUE
      DO 119 KB=1,KBVX
      N1 = 0
      DO 118 I=1,IVX
      DO 117 J=1,JVX
      N1 = N1 + 1
      P1E(N1,KB) = 0.0
      SOURE(J,I,KB) = 0.0
  117 CONTINUE
  118 CONTINUE
  119 CONTINUE
  120 CONTINUE
      REWIND IOFS
      WRITE(IOUT,1000)
      RETURN
 1000 FORMAT('0 BETA*CHI*SUM(NU*SIGF*V*PHI/K) HAS BEEN WRITTEN ON LOGICA
     >L 17')
      END
CPDWT --139 ***CITATION*** PRINT REL. POW. DENS. TRAVERSES/ CF-OUTC
      SUBROUTINE PDWT(P2,UTIL,NRGN, PVOL,IPRIN, IVX,JVX,KVX,LVX, SIG,
     > NCOMP,MVX)
C
      DOUBLE PRECISION P2
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AMESH/BMESH(30),NREGI,NREGJ,NREGKB,XSHI(100),XSHJ(100),
     > XSHKB(100), MSHI(100),MSHJ(100),MSHKB(100),Y(211),YY(211), X(211)
     >  ,XX(211),Z(211),ZZ(211), ZONVOL(200),AVZPD(200),PDI(211),
     > PDJ(211) , PDK(211)
C
      DIMENSION P2(JVX,IVX,KVX),UTIL(JVX,IVX ), NRGN(JVX, IVX)
      DIMENSION PVOL(LVX)
      DIMENSION SIG(KVX,MVX,10),NCOMP(LVX)
C
      T2 = PDI(211)
      IAX = IMAX
      IF (IMAX.GT.200) IAX = 200
      DO 100 N = 1,IAX
      XTR1(N) = PDI(N)
  100 CONTINUE
  101 DO 104 I = 1,IMAX
      DO 103 J = 1,JMAX
      L = NRGN(J,I)
      M = NCOMP(L)
      UTIL(J,I )=0.0
      DO 102 K = 1,KMAX
      UTIL(J,I ) = UTIL(J,I )+P2(J,I,K)*SIG(K,M,7)
  102 CONTINUE
  103 CONTINUE
  104 CONTINUE
      IF (IPRIN.GT.0) GO TO 115
      CALL RQED(IX(113),IND)
      IF (IND.NE.0) GO TO 115
  105 T1 = 0.0
      DO 108 I = 1,IMAX
      DO 107 J = 1,JMAX
      IF (UTIL(J,I)-T1) 107,106,106
  106 II = I
      JJ = J
      T1 = UTIL(J,I )
  107 CONTINUE
  108 CONTINUE
      XT1 = 0.0
      XV1 = 0.0
      YT1 = 0.0
      YV1 = 0.0
      DO 110 J = 1,JMAX
      L = NRGN(J,II)
      IF (UTIL(J,II)) 109,110,109
  109 XT1 = XT1+UTIL(J,II )*PVOL(L)
      XV1 = XV1+PVOL(L)
  110 CONTINUE
      DO 112 I = 1,IMAX
      L = NRGN(JJ,I)
      IF (UTIL(JJ,I)) 111,112,111
  111 YT1 = YT1+UTIL(JJ,I )*PVOL(L)
      YV1 = YV1+PVOL(L)
  112 CONTINUE
      XB1 = XT1/XV1
      YB1 = YT1/YV1
      DO 113 J = 1,JMAX
      PDJ(J) = UTIL(J,II )/XB1
  113 CONTINUE
      DO 114 I = 1,IMAX
      PDI(I) = UTIL(JJ,I )/YB1
  114 CONTINUE
      WRITE(IOUT,1000)II,JJ,UTIL(JJ,II)
      WRITE(IOUT,1001)II,XB1,(PDJ(J),J=1,JMAX)
      WRITE(IOUT,1002)JJ,YB1,(PDI(I),I=1,IMAX)
  115 CONTINUE
      PDI(211) = T2
      DO 116 N = 1,IAX
      PDI(N) = XTR1(N)
  116 CONTINUE
      RETURN
 1000 FORMAT('0'/'0THE MAXIMUM POWER DENSITY(WATTS/CC) AT ROW',I4,
     > '  AND COLUMN',I4,'  IS ',1PE14.6)
 1001 FORMAT('0THE AVERAGE POWER DENSITY ALONG ROW',I4,'  IS',1PE14.6,
     > '  AND THE RELATIVE POWER DENSITIES(FRACTION OF AVERAGE) ARE'/
     > (1X,9E14.6))
 1002 FORMAT('0THE AVERAGE POWER DENSITY DOWN COLUMN',I4,'  IS',1PE14.6,
     > '  AND THE RELATIVE POWER DENSITIES ARE'/(1X,9E14.6))
      END
CKDWT --140 ***CITATION*** PRINT REL. POW. DENS. TRAVERSES/ CF-OUTC
      SUBROUTINE KDWT(P2E,UTILE,NRGNE, PVOL,IPRIN, IVX,JVX,KBVX,KVX,
     > LVX,JIVX,SIG,NCOMP,MVX)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AMESH/BMESH(30),NREGI,NREGJ,NREGKB,XSHI(100),XSHJ(100),
     > XSHKB(100), MSHI(100),MSHJ(100),MSHKB(100),Y(211),YY(211), X(211)
     >  ,XX(211),Z(211),ZZ(211), ZONVOL(200),AVZPD(200),PDI(211),
     > PDJ(211) , PDK(211)
C
      DIMENSION P2E(JIVX ,KBVX,KVX),UTILE(JVX,IVX,KBVX ), NRGNE(JVX,IVX,
     > KBVX)
      DIMENSION PVOL(LVX)
      DIMENSION SIG(KVX,MVX,10),NCOMP(LVX)
C
      T2 = PDI(211)
      IAX = IMAX
      IF (IMAX.GT.200) IAX = 200
      DO 100 N = 1,IAX
      XTR1(N) = PDI(N)
  100 CONTINUE
      DO 105 KB = 1,KBMAX
  101 DO 104 I = 1,IMAX
      NN1= (I-1)*JVX
      DO 103 J = 1,JMAX
      N1= NN1 + J
      L = NRGNE(J,I,KB)
      M = NCOMP(L)
      UTILE(J,I,KB ) = 0.0
      DO 102 K = 1,KMAX
      UTILE(J,I,KB ) = UTILE(J,I,KB )+P2E(N1 ,KB,K)*SIG(K,M,7)
  102 CONTINUE
  103 CONTINUE
  104 CONTINUE
  105 CONTINUE
      IF (IPRIN.GT.0) GO TO 120
      CALL RQED(IX(113),IND)
      IF (IND.NE.0) GO TO 120
  106 T1 = 0.0
      DO 110 KB = 1,KBMAX
      DO 109 I = 1,IMAX
      DO 108 J = 1,JMAX
      IF (UTILE(J,I,KB)-T1) 108,107,107
  107 II = I
      KKB = KB
      JJ = J
      T1 = UTILE(J,I,KB )
  108 CONTINUE
  109 CONTINUE
  110 CONTINUE
      XT1 = 0.0
      XV1 = 0.0
      YT1 = 0.0
      YV1 = 0.0
      ZT1 = 0.0
      ZV1 = 0.0
      DO 112 J = 1,JMAX
      L = NRGNE(J,II,KKB)
      IF (UTILE(J,II,KKB)) 111,112,111
  111 XT1 = XT1+UTILE(J,II,KKB )*PVOL(L)
      XV1 = XV1+PVOL(L)
  112 CONTINUE
      DO 114 I = 1,IMAX
      L = NRGNE(JJ,I,KKB)
      IF (UTILE(JJ,I,KKB)) 113,114,113
  113 YT1 = YT1+UTILE(JJ,I,KKB )*PVOL(L)
      YV1 = YV1+PVOL(L)
  114 CONTINUE
      DO 116 KB = 1,KBMAX
      L = NRGNE(JJ,II,KB)
      IF (UTILE(JJ,II,KB)) 115,116,115
  115 ZT1 = ZT1+UTILE(JJ,II,KB )*PVOL(L)
      ZV1 = ZV1+PVOL(L)
  116 CONTINUE
      XB1 = XT1/XV1
      YB1 = YT1/YV1
      ZB1 = ZT1/ZV1
      DO 117 J = 1,JMAX
      PDJ(J) = UTILE(J,II,KKB )/XB1
  117 CONTINUE
      DO 118 I = 1,IMAX
      PDI(I) = UTILE(JJ,I,KKB )/YB1
  118 CONTINUE
      DO 119 KB = 1,KBMAX
      PDK (KB) = UTILE(JJ,II,KB )/ZB1
  119 CONTINUE
      WRITE(IOUT,1000)II,JJ,KKB,UTILE(JJ,II,KKB)
      WRITE(IOUT,1001)II,XB1,(PDJ(J),J=1,JMAX)
      WRITE(IOUT,1002)JJ,YB1,(PDI(I),I=1,IMAX)
      WRITE(IOUT,1003)KKB,ZB1,(PDK (KB),KB=1,KBMAX)
  120 CONTINUE
      PDI(211) = T2
      DO 121 N = 1,IAX
      PDI(N) = XTR1(N)
  121 CONTINUE
      RETURN
 1000 FORMAT('0'/'0THE MAXIMUM POWER DENSITY(WATTS/CC) AT ROW',I4,
     > '  AND COLUMN',I4,'  AND LINE',I4,'  IS ',1PE14.6)
 1001 FORMAT('0THE AVERAGE POWER DENSITY ALONG ROW',I4,'  IS',1PE14.6,
     > '  AND THE RELATIVE POWER DENSITIES(FRACTION OF AVERAGE) ARE'/
     > (1X,9E14.6))
 1002 FORMAT('0THE AVERAGE POWER DENSITY DOWN COLUMN',I4,'  IS',
     > 1PE14.6,'  AND THE RELATIVE POWER DENSITIES ARE'/(1X,9E14.6))
 1003 FORMAT('0THE AVERAGE POWER DENSITY ALONG LINE',I4,'  IS',
     > 1PE14.6,'  AND THE RELATIVE POWER DENSITIES ARE'/(1X,9E14.6))
      END
CHEAT --141 ***CITATION*** CUMULATIVE HEAT/CF-OUTC
      SUBROUTINE HEAT(UTILE,SOURE, IVX,JVX,KBVX)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AMESH/BMESH(30),NREGI,NREGJ,NREGKB,XSHI(100),XSHJ(100),
     > XSHKB(100), MSHI(100),MSHJ(100),MSHKB(100),Y(211),YY(211), X(211)
     >  ,XX(211),Z(211),ZZ(211), ZONVOL(200),AVZPD(200),PDI(211),
     > PDJ(211) , PDK(211)
C
      DIMENSION SOURE(JVX,IVX,KBVX),UTILE(JVX,IVX,KBVX)
C
  100 DO 103 KB = 1,KBMAX
      DO 102 I = 1,IMAX
      DO 101 J = 1,JMAX
      SOURE(J,I,KB) = 0.0
  101 CONTINUE
  102 CONTINUE
  103 CONTINUE
      NGO = NGC(21)
      IF (NGO.EQ.0) NGO = 1
      GO TO (104,112,120,128,136,144),NGO
  104 CONTINUE
      DO 111 J = 1,JMAX
      IF (J.GT.1) GO TO 105
      DEL1 = XX(2)*0.5
      DEL2 = 0.0
      GO TO 106
  105 DEL2 = DEL1
      DEL1 = (XX(J+1)-XX(J))*0.5
  106 DO 110 KB = 1,KBMAX
      DO 109 I = 1,IMAX
      IF (J.GT.1) GO TO 107
      SOURE(J,I,KB) = UTILE(J,I,KB)*DEL1
      GO TO 108
  107 SOURE(J,I,KB) = SOURE(J-1,I,KB)+UTILE(J-1,I,KB)*DEL2+ UTILE(J,I,
     > KB)*DEL1
  108 CONTINUE
  109 CONTINUE
  110 CONTINUE
  111 CONTINUE
      GO TO 152
  112 CONTINUE
      DO 119 JJ = 1,JMAX
      J = JMAX+1-JJ
      IF (J.LT.JMAX) GO TO 113
      DEL1 = (XX(JMAX+1)-XX(JMAX))*0.5
      DEL2 = 0.0
      GO TO 114
  113 DEL2 = DEL1
      DEL1 = (XX(J+1)-XX(J))*0.5
  114 DO 118 KB = 1,KBMAX
      DO 117 I = 1,IMAX
      IF (J.LT.JMAX) GO TO 115
      SOURE(J,I,KB) = UTILE(J,I,KB)*DEL1
      GO TO 116
  115 SOURE(J,I,KB)=SOURE(J+1,I,KB)+UTILE(J,I,KB)*DEL1+ UTILE(J+1,I,KB)*
     >  DEL2
  116 CONTINUE
  117 CONTINUE
  118 CONTINUE
  119 CONTINUE
      GO TO 152
  120 CONTINUE
      DO 127 I = 1,IMAX
      IF (I.GT.1) GO TO 121
      DEL1 = YY(2)*0.5
      DEL2 = 0.0
      GO TO 122
  121 DEL2 = DEL1
      DEL1 = (YY(I+1)-YY(I))*0.5
  122 DO 126 KB = 1,KBMAX
      DO 125 J = 1,JMAX
      IF (I.GT.1) GO TO 123
      SOURE(J,I,KB) = UTILE(J,I,KB)*DEL1
      GO TO 124
  123 SOURE(J,I,KB)=SOURE(J,I-1,KB)+UTILE(J,I,KB)*DEL1+ UTILE(J,I-1,KB)*
     >  DEL2
  124 CONTINUE
  125 CONTINUE
  126 CONTINUE
  127 CONTINUE
      GO TO 152
  128 CONTINUE
      DO 135 II = 1,IMAX
      I = IMAX+1-II
      IF (I.LT.IMAX) GO TO 129
      DEL1 = (YY(IMAX+1)-YY(IMAX))*0.5
      DEL2 = 0.0
      GO TO 130
  129 DEL2 = DEL1
      DEL1 = (YY(I+1)-YY(I))*0.5
  130 DO 134 KB = 1,KBMAX
      DO 133 J = 1,JMAX
      IF (I.LT.IMAX) GO TO 131
      SOURE(J,I,KB) = UTILE(J,I,KB)*DEL1
      GO TO 132
  131 SOURE(J,I,KB)=SOURE(J,I+1,KB)+UTILE(J,I,KB)*DEL1+ UTILE(J,I+1,KB)*
     >  DEL2
  132 CONTINUE
  133 CONTINUE
  134 CONTINUE
  135 CONTINUE
      GO TO 152
  136 CONTINUE
      DO 143 KB = 1,KBMAX
      IF (KB.GT.1) GO TO 137
      DEL1 = ZZ(2)*0.5
      DEL2 = 0.0
      GO TO 138
  137 DEL2 = DEL1
      DEL1 = (ZZ(KB+1)-ZZ(KB))*0.5
  138 DO 142 I = 1,IMAX
      DO 141 J = 1,JMAX
      IF (KB.GT.1) GO TO 139
      SOURE(J,I,KB) = UTILE(J,I,KB)*DEL1
      GO TO 140
  139 SOURE(J,I,KB)=SOURE(J,I,KB-1)+UTILE(J,I,KB)*DEL1+ UTILE(J,I,KB-1)*
     >  DEL2
  140 CONTINUE
  141 CONTINUE
  142 CONTINUE
  143 CONTINUE
      GO TO 152
  144 CONTINUE
      DO 151 KKB = 1,KBMAX
      KB = KBMAX+1-KKB
      IF (KB.LT.KBMAX) GO TO 145
      DEL1 = (ZZ(KBMAX+1)-ZZ(KBMAX))*0.5
      DEL2 = 0.0
      GO TO 146
  145 DEL2 = DEL1
      DEL1 = (ZZ(KB+1)-ZZ(KB))*0.5
  146 DO 150 I = 1,IMAX
      DO 149 J = 1,JMAX
      IF (KB.LT.KBMAX) GO TO 147
      SOURE(J,I,KB) = UTILE(J,I,KB)*DEL1
      GO TO 148
  147 SOURE(J,I,KB)=SOURE(J,I,KB+1)+UTILE(J,I,KB)*DEL1+ UTILE(J,I,KB+1)*
     >  DEL2
  148 CONTINUE
  149 CONTINUE
  150 CONTINUE
  151 CONTINUE
  152 CONTINUE
      RETURN
      END
CPTAB --142 ***CITATION*** POINT NEUTRON ABSOR. FOR 1,2-D/ CF-OUTC
      SUBROUTINE PTAB(P2 ,UTIL ,NRGN ,NCOMP,PVOL, SS1,SS2,SS4,CONC,MJJR,
     > SOURE,IVX,JVX,KBVX,KVX,LVX,MVX,NVX,NSETVX,NND,NNXTRA,SS5)
C
      DOUBLE PRECISION P2
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     > , XNAME(3,200)
C
      DIMENSION P2 (JVX,IVX, KVX),UTIL (JVX,IVX ), NRGN (JVX,IVX ),
     > NCOMP(LVX),PVOL(LVX), SS1(KVX,NVX,NSETVX),SS2(KVX,NVX,NSETVX),
     > SS4(KVX,NVX,NSETVX), CONC(NVX,MVX),MJJR(200,NSETVX),SOURE(JVX,
     > IVX,KBVX)
      DIMENSION NNXTRA(NVX,NSETVX),SS5(KVX,NVX,NSETVX)
C
      IF (NND.EQ.0) GO TO 107
      DO 101 I = 1,IMAX
      DO 100 J = 1,JMAX
      UTIL(J,I) = 0.0
  100 CONTINUE
  101 CONTINUE
      DO 106 NUD = 1,200
      NFLAG = 0
      DO 105 NSET = 1,NSETVX
      N = MJJR(NUD,NSET)
      IF (NNXTRA(N,NSET).NE.5) GO TO 105
      NFLAG = 1
      DO 104 I = 1,IMAX
      DO 103 J = 1,JMAX
      L = NRGN (J,I)
      M = NCOMP(L)
      NACT = NXSET(M)
      NSEET = NXODR(NACT)
      IF (NSET.NE.NSEET) GO TO 103
      T1 = CONC(N,M)
      IF (T1.EQ.0.0) GO TO 103
      DO 102 K = 1,KMAX
      UTIL (J,I ) = UTIL (J,I )+SS5(K,N,NSET)*P2 (J,I,K)
  102 CONTINUE
      UTIL (J,I ) = UTIL (J,I )*T1
  103 CONTINUE
  104 CONTINUE
  105 CONTINUE
      IF (NFLAG.EQ.0) GO TO 106
      IND = 10
      IX(165) = NUD
      CALL POUT(P2 ,UTIL ,IND,SOURE,IVX,JVX,KBVX,KVX)
  106 CONTINUE
      GO TO 111
  107 NUD = IX(117)
      DO 110 I = 1,IMAX
      DO 109 J = 1,JMAX
      UTIL (J,I ) = 0.0
      L = NRGN (J,I )
      M = NCOMP(L)
      NACT = NXSET(M)
      NSET = NXODR(NACT)
      JM = NJM(NSET)
      NUC = MJJR(NUD,NSET)
      IF ((NUC.LE.0).OR.(NUC.GT.JM)) GO TO 109
      IF (CONC(NUC,M).EQ.0.0) GO TO 109
      T1 = CONC(NUC,M)
      DO 108 K = 1,KMAX
      UTIL (J,I ) = UTIL (J,I )+SS1(K,NUC,NSET)* P2 (J,I, K)*T1
  108 CONTINUE
  109 CONTINUE
  110 CONTINUE
      IND = 3
      CALL POUT(P2,UTIL,IND,SOURE,IVX,JVX,KBVX,KVX)
  111 CONTINUE
      RETURN
      END
CKTAB --143 ***CITATION*** POINT NEUTRON ABSOR. FOR 3-D/ CF-OUTC
      SUBROUTINE KTAB(P2E,UTILE,NRGNE,NCOMP,PVOL, SS1,SS2,SS4,CONC,MJJR,
     > SOURE,IVX,JVX,KBVX,KVX,LVX,MVX,NVX,NSETVX,JIVX,NND,NNXTRA,SS5)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     > , XNAME(3,200)
C
      DIMENSION P2E(JIVX ,KBVX,KVX),UTILE(JVX,IVX,KBVX), NRGNE(JVX, IVX,
     >  KBVX),NCOMP(LVX),PVOL(LVX), SS1(KVX,NVX,NSETVX),SS2(KVX,NVX,
     > NSETVX),SS4(KVX,NVX,NSETVX), CONC(NVX,MVX),MJJR(200,NSETVX),
     > SOURE(JVX,IVX,KBVX)
      DIMENSION NNXTRA(NVX,NSETVX),SS5(KVX,NVX,NSETVX)
C
      IF (NND.EQ.0) GO TO 109
      DO 102 KB = 1,KBMAX
      DO 101 I = 1,IMAX
      DO 100 J = 1,JMAX
      UTILE(J,I,KB) = 0.0
  100 CONTINUE
  101 CONTINUE
  102 CONTINUE
      DO 108 NUD = 1,200
      NFLAG = 0
      DO 107 NSET = 1,NSETVX
      N = MJJR(NUD,NSET)
      IF (NNXTRA(N,NSET).NE.5) GO TO 107
      NFLAG = 1
      DO 106 KB = 1,KBMAX
      DO 105 I = 1,IMAX
      NN1 = (I-1)*JVX
      DO 104 J = 1,JMAX
      N1 = NN1+J
      L = NRGNE(J,I,KB)
      M = NCOMP(L)
      NACT = NXSET(M)
      NSEET = NXODR(NACT)
      IF (NSET.NE.NSEET) GO TO 104
      T1 = CONC(N,M)
      IF (T1.EQ.0.0) GO TO 104
      DO 103 K = 1,KMAX
      UTILE(J,I,KB) = UTILE(J,I,KB)+SS5(K,N,NSET)*P2E(N1,KB,K)
  103 CONTINUE
      UTILE(J,I,KB) = UTILE(J,I,KB)*T1
  104 CONTINUE
  105 CONTINUE
  106 CONTINUE
  107 CONTINUE
      IF (NFLAG.EQ.0) GO TO 108
      IND = 10
      IX(165) = NUD
      CALL KOUT(P2E,UTILE,IND,SOURE,IVX,JVX,KBVX,KVX,JIVX)
  108 CONTINUE
      GO TO 114
  109 NUD = IX(117)
      DO 113 KB = 1,KBMAX
      DO 112 I = 1,IMAX
      NN1= (I-1)*JVX
      DO 111 J = 1,JMAX
      N1= NN1 + J
      UTILE(J,I,KB) = 0.0
      L = NRGNE(J,I,KB)
      M = NCOMP(L)
      NACT = NXSET(M)
      NSET = NXODR(NACT)
      JM = NJM(NSET)
      NUC = MJJR(NUD,NSET)
      IF ((NUC.LE.0).OR.(NUC.GT.JM)) GO TO 111
      IF (CONC(NUC,M).EQ.0.0) GO TO 111
      T1 = CONC(NUC,M)
      DO 110 K = 1,KMAX
      UTILE(J,I,KB) = UTILE(J,I,KB)+SS1(K,NUC,NSET)* P2E(N1 ,KB,K)*T1
  110 CONTINUE
  111 CONTINUE
  112 CONTINUE
  113 CONTINUE
      IND = 3
      CALL KOUT(P2E,UTILE,IND,SOURE,IVX,JVX,KBVX,KVX,JIVX)
  114 CONTINUE
      RETURN
      END
CNUDN --144 ***CITATION*** POINT NEUTRON DENSITY FOR 1,2-D/ CF-OUTC
      SUBROUTINE NUDN(ONEOV,NCOMP, P2 ,NRGN ,UTIL ,SOURE, IVX,JVX,KBVX,
     > KVX,LVX,MVX,NSETVX)
C
      DOUBLE PRECISION P2
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     > , XNAME(3,200)
C
      DIMENSION ONEOV(KVX,NSETVX),NCOMP(LVX),SOURE(JVX,IVX,KBVX), P2
     > (JVX,IVX, KVX),NRGN (JVX,IVX ),UTIL (JVX,IVX )
C
      DO 102 I = 1,IVX
      DO 101 J = 1,JVX
      L = NRGN (J,I )
      M = NCOMP(L)
      NS = NXSET(M)
      NR = NXODR(NS)
      UTIL (J,I ) = 0.0
      DO 100 K = 1,KVX
      UTIL (J,I ) = UTIL (J,I )+P2(J,I, K)*ONEOV(K,NR)
  100 CONTINUE
  101 CONTINUE
  102 CONTINUE
      IND = 2
      CALL POUT(P2,UTIL,IND,SOURE,IVX,JVX,KBVX,KVX)
      RETURN
      END
CKUDN --145 ***CITATION*** POINT NEUTRON DENSITY FOR 3-D/ CF-OUTC
      SUBROUTINE KUDN(ONEOV,NCOMP, P2E,NRGNE,UTILE,SOURE, IVX,JVX,KBVX,
     > KVX,LVX,MVX,NSETVX,JIVX)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     > , XNAME(3,200)
C
      DIMENSION ONEOV(KVX,NSETVX),NCOMP(LVX),SOURE(JVX,IVX,KBVX),
     > P2E(JIVX ,KBVX,KVX),NRGNE(JVX,IVX,KBVX),UTILE(JVX,IVX,KBVX)
C
      DO 103 KB = 1,KBVX
      DO 102 I = 1,IVX
      NN1= (I-1)*JVX
      DO 101 J = 1,JVX
      N1= NN1 + J
      L = NRGNE(J,I,KB)
      M = NCOMP(L)
      NS = NXSET(M)
      NR = NXODR(NS)
      UTILE(J,I,KB) = 0.0
      DO 100 K = 1,KVX
      UTILE(J,I,KB) = UTILE(J,I,KB)+P2E(N1 ,KB,K)*ONEOV(K,NR)
  100 CONTINUE
  101 CONTINUE
  102 CONTINUE
  103 CONTINUE
      IND = 2
      CALL KOUT(P2E,UTILE,IND,SOURE,IVX,JVX,KBVX,KVX,JIVX)
      RETURN
      END
CEDIN --148 ***CITATION*** PRINT CONCENTRATIONS/ CF-CNRA
      SUBROUTINE EDIN(CONC,ZONEN,NJJR, MVX,NVX,NSETVX,NVO)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     > , XNAME(3,200)
      COMMON/QUEIMA/NBSTEP,NCONJU,NXCON(50),BSTEP(50),FMASS(200),
     > QACUM(200),NXSEC(200),NBUCKB,NOPBUC,BUCBUR(50)
C
      DIMENSION CONC(NVX,MVX),ZONEN(NVO),NJJR(NVX,NSETVX)
C
      IF(IXPUT(2).EQ. -1) GO TO 107
  100 WRITE(IOUT,1000) SPARE(74)
      NSZ = 0
      IO12 = IX(79)
      READ(IO12)
      DO 106 M = 1,MMAX
      READ(IO12)
      NS = NXSET(M)
      NST = NXODR(NS)
      NMX = NSIG2(NST)
      NSUBZ = NZON(M)
      N1 = NMX*NSUBZ
      READ(IO12)(ZONEN(N),N=1,N1)
      WRITE(IOUT,1001)M,(XNAME(I,M),I=1,3)
      DO 101 N = 1,NMX
      NXTR1(N) = NJJR(N,NST)
  101 CONTINUE
      WRITE(IOUT,1002)(NXTR1(N),CONC(N,M),N=1,NMX)
      IF (NSUBZ.EQ.1) GO TO 105
      NSZ = 0
  102 DO 104 NNS = 1,NSUBZ
      WRITE(IOUT,1003)NNS
      DO 103 N = 1,NMX
      NSZ = NSZ+1
      XTR1(N) = ZONEN(NSZ)
  103 CONTINUE
      WRITE(IOUT,1002)(NXTR1(N),XTR1(N),N=1,NMX)
  104 CONTINUE
  105 CONTINUE
  106 CONTINUE
      REWIND IO12
      IF(IXPUT(2).NE. 2) RETURN
  107 CONTINUE
      REWIND 38
      WRITE(38,1006) (FMASS(M),M=1,MMAX)
      WRITE(38,1006) (QACUM(M),M=1,MMAX)
      IZERO=0
      DO 108 M=1,MMAX
      NS=NXSET(M)
      NST=NXODR(NS)
      NMX=NSIG2(NST)
      WRITE(38,1004) M
      WRITE(38,1005) (NJJR(N,NST),CONC(N,M),N=1,NMX)
      NMX1=NMX/6
      NMX2=NMX-NMX1*6
      IF(NMX2 .EQ. 0) WRITE(38,1004) IZERO
  108 CONTINUE
      WRITE(IOUT,1007)
      RETURN
 1000 FORMAT('0'/'0NUCLIDE DENSITIES BY ZONE AND SUB-ZONE(NUCLIDE NUMBER
     > - DENSITY) AT DEPLETION TIME',1PE14.6,'DAYS'//)
 1001 FORMAT(' ZONE NUMBER',I3,'--',3A4)
 1002 FORMAT(1X,I6,1PE13.5,I6,E13.5,I6,E13.5,I6,E13.5,I6,E13.5,I6,E13.5)
 1003 FORMAT('     SUB-ZONE NUMBER',I3)
 1004 FORMAT(I3)
 1005 FORMAT(6(I3,1PE9.3))
 1006 FORMAT(1P6E12.5)
 1007 FORMAT(' AS MASSAS INICIAIS DO COMBUSTIVEL, AS QUEIMAS ACUMULADAS
     >E AS CONCENTRACOES FORAM GRAVADAS NO ARQUIVO 38')
      END
CTABL --149 ***CITATION*** PRINT NUCLIDE LOSS TABLE/ CF-CNRA
      SUBROUTINE TABL(RATE,MJJR,MVX,NVX,NSETVX,IO1X16)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     > , XNAME(3,200)
C
      DIMENSION RATE(NVX,MVX,10),MJJR(200,NSETVX)
C
      WRITE(IOUT,1003)(TITL1(I),I=1,18)
      WRITE(IOUT,1004)(TITL2(I),I=1,18)
      IF (IX(99).EQ.0) GO TO 100
      WRITE(IOUT,1000)IX(3),SPARE(12)
      GO TO 102
  100 CONTINUE
      IF (IO1X16.NE.16) GO TO 101
      WRITE(IOUT,1001)IX(3),SPARE(12)
      GO TO 102
  101 CONTINUE
      IF (NGC(1).EQ.0) WRITE(IOUT,1005)
      IF (NGC(1).EQ.0) GO TO 102
      IF ((NGC(1).GT.0).AND.(IX(2).EQ.0)) WRITE(IOUT,1006)IX(3),
     > SPARE(12)
      IF ((NGC(1).GT.0).AND.(IX(2).GT.0)) WRITE(IOUT,1007)IX(2),IX(3),
     > SPARE(75),SPARE(74)
  102 CONTINUE
      WRITE(IOUT,1008)
      NNN = IX(34)
      I1F = IX(51)
      I1L = IX(52)
      I2F = IX(53)
      I2L = IX(54)
      I3F = IX(55)
      I3L = IX(56)
      I4F = IX(57)
      I4L = IX(58)
      I5F = IX(59)
      I5L = IX(60)
      I6F = IX(61)
      I6L = IX(62)
      I1 = IXPUT(94)
      I2 = IXPUT(95)
      I3 = IXPUT(96)
      I4 = IXPUT(97)
      I5 = IXPUT(98)
      I6 = IXPUT(99)
C     XTR1(1) = FISSILE
C     XTR1(2) = FERTILE
C     XTR1(3) = INTERMEDIATE
C     XTR1(4) = OTHER
C     XTR1(5) = STRUCTURAL
C     XTR1(6) = SPECIAL
C     XTR1(7) = UNSPECIFIED
C     XTR1(8) = SUMS
C     XTR1(9) = CONV.RATIO
C     XTR1(10) = POWER(MW)
C     XTR1(11) = FISSILE(KG)
C     XTR1(12) = CAPTURES IN FERTILE
C     XTR2(I) = SUMS OF XTR1(I)
      T1 = 0.0
      DO 103 I = 1,12
      XTR2(I) = 0.0
  103 CONTINUE
      DO 118 NN = 1,NNN
      DO 104 I = 1,12
      XTR1(I) = 0.0
  104 CONTINUE
      M1 = N1N2R(1,NN)
      M2 = N1N2R(2,NN)
      NACT = NXSET(M1)
      NSET = NXODR(NACT)
      T2 = 0.0
      JM = NJM(NSET)
      DO 114 M = M1,M2
      DO 105 N = 1,JM
      XTR1(10) = XTR1(10)+RATE(N,M,6)
      T2 = T2+RATE(N,M,1)
  105 CONTINUE
      GO TO 107
  106 CALL DLOP(INO,IF,IL,IDX,M,NSET,MJJR,RATE,IND, NVX,MVX,NSETVX)
      GO TO (108,109,110,111,112,113),IGO
  107 INO = I1
      IF = I1F
      IL = I1L
      IDX = 1
      IND = 1
      IGO = 1
      GO TO 106
  108 INO = I2
      IF = I2F
      IL = I2L
      IDX = 2
      IND = -1
      IGO = 2
      GO TO 106
  109 INO = I3
      IF = I3F
      IL = I3L
      IDX = 3
      IND = 1
      IGO = 3
      GO TO 106
  110 INO = I4
      IF = I4F
      IL = I4L
      IDX = 4
      IND = 0
      IGO = 4
      GO TO 106
  111 INO = I5
      IF = I5F
      IL = I5L
      IDX = 5
      IGO = 5
      GO TO 106
  112 INO = I6
      IF = I6F
      IL = I6L
      IDX = 6
      IGO = 6
      GO TO 106
  113 CONTINUE
  114 CONTINUE
      T3 = 0.0
      DO 115 I = 1,6
      T3 = T3+XTR1(I)
  115 CONTINUE
      XTR1(7) = T2-T3
      XTR1(8) = T2
      IF (XTR1(1).EQ.0.0) GO TO 116
      XTR1(9) = (XTR1(12)-XTR1(3))/XTR1(1)
  116 DO 117 I = 1,12
      XTR2(I) = XTR2(I)+XTR1(I)
  117 CONTINUE
      T1 = T1+T2
      WRITE(IOUT,1009)(XNAME(I,M1),I=1,3), (XTR1(I),I=1,11)
  118 CONTINUE
      T4 = 1.0-T1
      WRITE(IOUT,1010)T4
      XTR2(9) = 0.0
      XTR2(8) = 1.0
      IF (XTR2(1).EQ.0.0) GO TO 119
      XTR2(9) = (XTR2(12)-XTR2(3))/XTR2(1)
  119 CONTINUE
      WRITE(IOUT,1002)
      WRITE(IOUT,1011)(XTR2(I),I=1,11)
      IF (IX(98).EQ.0) GO TO 120
      IF (IO1X16.EQ.0) GO TO 120
      SPARE(19) = XTR2(10)*SPARE(9)/3600.0
      SPARE(26) = SPARE(26)+SPARE(19)
      IX(98) = 0
      WRITE(IOUT,1012)SPARE(19),SPARE(26)
  120 WRITE(IOUT,1013)
      RETURN
 1000 FORMAT('     FINAL SUMMARY OF NEUTRON LOSSES, ETC. FOR CYCLE',
     > I3,'  TOTAL DEPLETION TIME',F8.2,' DAYS')
 1001 FORMAT('0     SUMMARY OF NEUTRON LOSSES, ETC. BEFORE DEPLETING STE
     >P 1 OF CYCLE',I3,'  TOTAL DEPLETION TIME',F8.2,' DAYS')
 1002 FORMAT(15X,'-------  -------   -------    -------  -------  ------
     >-   -------   -------   -------   -----------  -----------')
 1003 FORMAT('1',25X,18A4)
 1004 FORMAT(26X,18A4)
 1005 FORMAT('0',45X,'SUMMARY TABLE OF NEUTRON LOSSES, ETC.')
 1006 FORMAT('0     SUMMARY OF NEUTRON LOSSES, ETC. FOR INITILIZATION CA
     >LCULATION OF CYCLE',I3,'  TOTAL DEPLETION TIME',F8.2,' DAYS')
 1007 FORMAT('0     SUMMARY OF NEUTRON LOSSES, ETC. FOR STEP',I3,
     > ' CYCLE',I3,' AT CYCLE DEPLETION TIME',F8.2,
     > ' DAYS.  FISSILE KG IS AT',F8.2,' DAYS')
 1008 FORMAT(1X/'  ZONE CLASS   FISSILE  FERTILE INTERMEDIATE  OTHER STR
     >UCTURAL SPECIAL UNSPECIFIED   SUMS  CONV. RATIO  POWER(MW)   FISSI
     >LE(KG)')
 1009 FORMAT(1X,3A4,2F9.5,F10.5,F11.5,2F9.5,3F10.5,1PE14.5,E13.5)
 1010 FORMAT(32X,'OTHER LOSSES BASED ON START-OF-STEP TOTAL LOSSES',
     > F9.5)
 1011 FORMAT('   OVERALL',F12.5,F9.5,F10.5,F11.5,2F9.5,3F10.5,1PE14.5,
     > E13.5)
 1012 FORMAT('0  TIME STEP THERMAL ENERGY, MW-HRS  ',1PE14.5,
     > '   AND TOTAL IS  ',E14.5)
 1013 FORMAT('0')
      END
CDLOP --150 ***CITATION*** USED BY TABL/ CF-TABL
C     IND .GT. 0, ALSO CALC XTR1(11)
C     IND .LT. 0, ALSO CALC XTR1(12)
      SUBROUTINE DLOP(INO,IF,IL,IDX,M,NSET,MJJR, RATE,IND,NVX,MVX,
     > NSETVX)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
C
      DIMENSION MJJR(200,NSETVX),RATE(NVX,MVX,10)
C
  100 IF (INO.EQ.0) GO TO 103
      DO 102 I = IF,IL
      II = IXPUT(I)
      N = MJJR(II,NSET)
      IF (N.LE.0) GO TO 102
      XTR1(IDX) = XTR1(IDX)+RATE(N,M,1)
      IF (IND.LE.0) GO TO 101
      XTR1(11) = XTR1(11)+RATE(N,M,4)
  101 CONTINUE
      IF (IND.GE.0) GO TO 102
      XTR1(12) = XTR1(12)+RATE(N,M,2)
  102 CONTINUE
  103 RETURN
      END
CPIOS --154 ***CITATION*** SET UP FLUXES FOR I/O IN PERTURBATION/CF-PERT
      SUBROUTINE PIOS(P1E,P2E,P2,SCAC,SSC,SIG,NRGNE,NCOMP,PVOL,UTIL,
     > UTILE,SOURE,XII,BIGD,JVX,IVX,KBVX,KVX,MVX,LVX,JIVX,MVZ)
C
      DOUBLE PRECISION P2,XII
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AMESH/BMESH(30),NREGI,NREGJ,NREGKB,XSHI(100),XSHJ(100),
     > XSHKB(100), MSHI(100),MSHJ(100),MSHKB(100),Y(211),YY(211), X(211)
     >  ,XX(211),Z(211),ZZ(211), ZONVOL(200),AVZPD(200),PDI(211),
     > PDJ(211) , PDK(211)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     > , XNAME(3,200)
C
      DIMENSION P1E(JIVX,KBVX),P2E(JIVX,KBVX,KVX),P2(JVX,IVX,KVX),
     > SCAC(KVX,MVZ,KVX),SSC(KVX,KVX),SIG(KVX,MVX,10), NRGNE(JVX,IVX,
     > KBVX),NCOMP(LVX),PVOL(LVX),UTIL(JVX,IVX), UTILE(JIVX,KBVX),
     > SOURE(JVX,IVX,KBVX),XII(KVX)
C
      IO26 = IX(93)
      IO18 = IX(85)
      IO19 = IX(86)
      IO22 = IX(89)
C
      REWIND IOFLX
      REWIND IO26
C     INPUT FORWARD FLUX FROM NEUTRONICS
      DO 103 K=1,KMAX
      IF (NUAC(5).LE.10) GO TO 100
      READ(IOFLX) ((P2E(N1,KB,K),N1=1,JIVX),KB=1,KBMAX)
      WRITE(IO26) ((P2E(N1,KB,K),N1=1,JIVX),KB=1,KBMAX)
      GO TO 103
  100 READ(IOFLX) ((P2(J,I,K),J=1,JMAX),I=1,IMAX)
      N1 = 0
      DO 102 I=1,IMAX
      DO 101 J=1,JMAX
      N1 = N1 + 1
      P1E(N1,1) = P2(J,I,K)
  101 CONTINUE
  102 CONTINUE
      WRITE(IO26) (P1E(N1,1),N1=1,JIVX)
  103 CONTINUE
      REWIND IO26
C     FORWARD FLUX BY GROUP FOR ALL POINTS ON LOGICAL 26
      IF (NGC(13).LE.0) GO TO 107
C     OPTION TO OBTAIN ADJOINT FLUX FROM A PREVIOUS RUN
      IO28 = IX(95)
      REWIND IO28
C     SKIP OVER FORWARD FLUX ON LOGICAL 28
      DO 104 K=1,KMAX
      READ(IO28)
  104 CONTINUE
      READ(IO28)
C     INPUT ADJOINT FLUX FROM A PREVIOUS RUN
      DO 106 K=1,KMAX
      IF (NUAC(5).LE.10) GO TO 105
      READ(IO28) ((P2E(N1,KB,K),N1=1,JIVX),KB=1,KBMAX)
      GO TO 106
  105 READ(IO28) ((P2(J,I,K),J=1,JMAX),I=1,IMAX)
  106 CONTINUE
      REWIND IO28
      GO TO 110
  107 CONTINUE
      READ(IOFLX)
C     INPUT ADJOINT FLUX FROM NEUTRONICS
      DO 109 K=1,KMAX
      IF (NUAC(5).LE.10) GO TO 108
      READ(IOFLX) ((P2E(N1,KB,K),N1=1,JIVX),KB=1,KBMAX)
      GO TO 109
  108 READ(IOFLX) ((P2(J,I,K),J=1,JMAX),I=1,IMAX)
  109 CONTINUE
  110 CONTINUE
      REWIND IOFLX
C     EDIT ADJOINT FLUX IF REQUESTED
      IF (IXPUT(32).EQ.0) GO TO 112
      IND = 4
      IF (NUAC(5).GT.10) GO TO 111
      CALL POUT(P2,UTIL,IND,SOURE,IVX,JVX,KBVX,KVX)
      GO TO 112
  111 CALL KOUT(P2E,UTILE,IND,SOURE,IVX,JVX,KBVX,KVX,JIVX)
  112 CONTINUE
      IF (NUAC(5).GT.10) GO TO 116
      DO 115 K=1,KMAX
      N1 = 0
      DO 114 I=1,IMAX
      DO 113 J=1,JMAX
      N1 = N1 + 1
      T1 = P2(J,I,K)
      P2E(N1,1,K) = T1
  113 CONTINUE
  114 CONTINUE
  115 CONTINUE
  116 CONTINUE
C
      REWIND IO22
      WRITE(IO22) P2E
      REWIND IO22
C     ADJOINT FLUX ON LOGICAL 22
      REWIND IO18
      DO 119 KB=1,KBMAX
      N1 = 0
      DO 118 I=1,IMAX
      DO 117 J=1,JMAX
      N1 = N1 + 1
      WRITE(IO18) (P2E(N1,KB,K),K=1,KMAX)
  117 CONTINUE
  118 CONTINUE
  119 CONTINUE
      REWIND IO18
C     ADJOINT FLUX BY POINT FOR ALL GROUPS ON LOGICAL 18
      DO 120 K=1,KMAX
      READ(IO26) ((P2E(N1,KB,K),N1=1,JIVX),KB=1,KBVX)
  120 CONTINUE
      REWIND IO26
C     FORWARD FLUX IN CORE NOW
C     CALCULATE BIG DADDY
C     COMPUTE PHI(KK)*PHIADJ(K) AND STORE ON LOGICAL 19 BY POINT
      BIGD = 0.0
      REWIND IO19
      DO 125 KB=1,KBMAX
      N1 = 0
      DO 124 I=1,IMAX
      DO 123 J=1,JMAX
      N1 = N1 + 1
      L = NRGNE(J,I,KB)
      M = NCOMP(L)
      PV = PVOL(L)
      READ(IO18) (XTR1(K),K=1,KMAX)
      DO 122 K=1,KMAX
      PA = XTR1(K)
      T1 = 0.0
      DO 121 KK=1,KMAX
      PF = P2E(N1,KB,KK)
      T1 = T1 + SIG(KK,M,4)*PV*PF
      SSC(KK,K) = PF*PA
      SCAC(K,M,KK) = SCAC(K,M,KK) + PV*SSC(KK,K)
  121 CONTINUE
      BIGD = BIGD + XII(K)*PA*T1
  122 CONTINUE
      WRITE(IO19) SSC
  123 CONTINUE
  124 CONTINUE
  125 CONTINUE
      REWIND IO19
      REWIND IO18
C
      READ(IO22) P2E
      REWIND IO22
C     ADJOINT FLUX NOW IN CORE
      RETURN
      END
CKOKN --157 ***CITATION*** DELTA-K/(K*DELTA-N) CALCULATION
      SUBROUTINE KOKN(MJJR,SIG,SS1,SS2,SS3,SS4,BAL,SSC,SCAC,CONC,HOL,
     > KVX,MVX,LVX,NVX,NSETVX,QMI,MVZ)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     > , XNAME(3,200)
C
      DIMENSION MJJR(200,NSETVX),SIG(KVX,MVX,10),SS1(KVX,NVX,NSETVX),
     > SS2(KVX,NVX,NSETVX),SS3(KVX,NVX,NSETVX),SS4(KVX,NVX,NSETVX),
     > BAL(KVX,MVX, 8),SSC(KVX,KVX ),SCAC(KVX,MVZ,KVX), CONC(NVX,MVX) ,
     > HOL(NVX,NSETVX,10)
      DIMENSION QMI(MVX,10)
C
      IO10 = IX(77)
      WRITE(IOUT,1002)
      WRITE(IOUT,1003)
      GT1 = 0.0
      GT2 = 0.0
      GT3 = 0.0
      GT4 = 0.0
      GT5 = 0.0
      GT6 = 0.0
      GT7 = 0.0
      GT8 = 0.0
  100 CONTINUE
      READ(IO10,END=102)INSEC,NSPEC
      IF (INSEC.EQ.40) GO TO 103
      IF (NSPEC.EQ.0) GO TO 100
      DO 101 II = 1,NSPEC
      READ(IO10)
  101 CONTINUE
      GO TO 100
  102 GO TO 116
  103 CONTINUE
      IF (NSPEC.EQ.0) GO TO 116
      REWIND IO4
      LASET = 0
      DO 115 NSP = 1,NSPEC
      READ(IO10)M1,M2,NXTR1(1),XTR1(1),NXTR1(2),XTR1(2), NXTR1(3),
     > XTR1(3),NXTR1(4),XTR1(4),NXTR1(5),XTR1(5)
      WRITE(IOUT,1004)NSP,M1,M2,NXTR1(1),XTR1(1),NXTR1(2),XTR1(2),
     > NXTR1(3),XTR1(3),NXTR1(4),XTR1(4),NXTR1(5),XTR1(5)
      IF (M2.EQ.0) M2 = M1
      DO 104 M = M1,M2
      QMI(M,1) = 0.0
  104 CONTINUE
      DO 114 N1 = 1,NSETVX
      N2 = NSIG2(N1)
      DO 113 N3 = 1,N2
      READ(IO4)((SSC(KK,K),KK=1,KMAX),K=1,KMAX)
      DO 112 NNN = 1,5
      IF (NXTR1(NNN).EQ.0) GO TO 112
      N4 = NXTR1(NNN)
      N5 = MJJR(N4,N1)
      IF (N5.NE.N3) GO TO 112
      Z1=0.0
      Z2=0.0
      Z3=0.0
      Z4=0.0
      Z5=0.0
      Z6=0.0
      Z7 = 0.0
      Z8 = 0.0
      IZ9 = 0
      INDOT = 0
      DO 111 M = M1,M2
      NACT = NXSET(M)
      NSET = NXODR(NACT)
      IF (NSET.NE.N1) GO TO 111
      NNC = NSIG2(NSET)
      NN = NXTR1(NNN)
      IF ((NN.LE.0).OR.(NN.GT.200)) GO TO 105
      N = MJJR(NN,NSET)
      IF (N.NE.0) GO TO 106
  105 WRITE(IOUT,1005)NN,NACT
      GO TO 111
  106 CONTINUE
      IZ9 = 1
      S1 = 0.0
      S2 = 0.0
      S3 = 0.0
      S4 = 0.0
      S5 = 0.0
      S6 = 0.0
      S7 = 0.0
      S8 = 0.0
      DO 108 K = 1,KMAX
      T1 = 3.0*SIG(K,M,1)**2*SS3(K,N,NSET)
      T3 = BAL(K,M,2)*SS1(K,N,NSET)
      S3 = S3+T3
      T4 = BAL(K,M,3)*SS2(K,N,NSET)*SS4(K,N,NSET)
      S4 = S4+T4
      T5 = -BAL(K,M,4)*T1
      S5 = S5+T5
      T6 = -BAL(K,M,2)*T1*SIG(K,M,6)
      S6 = S6+T6
      S1 = S1+T3+T4+T5+T6
      T1 = 0.0
      T2 = 0.0
      DO 107 KK = 1,KMAX
      IF (K.EQ.KK) GO TO 107
      T1 = T1+SSC(KK,K )
      T3 = SCAC(K,M,KK)*SSC(K,KK )
      T2 = T2+T3
      S1 = S1+T3
  107 CONTINUE
      T3 = BAL(K,M,2)*T1
      S1 = S1+T3
      S7 = S7+T3
      S8 = S8+T2
  108 CONTINUE
      S2 = S1
      PCENT = CONC(N,M)*XTR1(NNN)
      S1 = S1*PCENT
      QMI(M,1) = QMI(M,1)+S1
      S2 = S2*CONC(N,M)
      S3 = S3*PCENT
      S4 = S4*PCENT
      S5 = S5*PCENT
      S6 = S6*PCENT
      S7 = S7*PCENT
      S8 = S8*PCENT
C     GT,Z,S-1 OVERALL
C           -2 (N*DELTA-K)/(K*DELTA-N)
C           -3 FORSIGA
C           -4 FORNU*SIGF
C           -5 FORSIGTR(IND)
C           -6 FORD*B**2
C           -7 FORSIGOUTSCAT
C           -8 FORSIGINSCAT
      Z1 = Z1+S1
      Z2 = Z2+S2
      Z3 = Z3+S3
      Z4 = Z4+S4
      Z5 = Z5+S5
      Z6 = Z6+S6
      Z7 = Z7+S7
      Z8 = Z8+S8
      IF (INDOT.EQ.0) GO TO 109
      WRITE(IOUT,1006)M,S3,S4,S5,S6,S7,S8,S1,S2
      GO TO 110
  109 WRITE(IOUT,1007)NXTR1(NNN),(HOL(N,NSET,I),I=1,6),M,S3,S4, S5,S6,
     > S7,S8,S1,S2
      INDOT = 1
  110 CONTINUE
  111 CONTINUE
      GT1 = GT1+Z1
      GT2 = GT2+Z2
      GT3 = GT3+Z3
      GT4 = GT4+Z4
      GT5 = GT5+Z5
      GT6 = GT6+Z6
      GT7 = GT7+Z7
      GT8 = GT8+Z8
      IF (IZ9.EQ.0) GO TO 112
      WRITE(IOUT,1008) Z3,Z4,Z5,Z6,Z7,Z8,Z1,Z2
  112 CONTINUE
  113 CONTINUE
  114 CONTINUE
      WRITE(IOUT,1000)M1,M2
      WRITE(IOUT,1001)(QMI(M,1),M=M1,M2)
      REWIND IO4
  115 CONTINUE
      WRITE(IOUT,1009) GT3,GT4,GT5,GT6,GT7,GT8,GT1,GT2
  116 CONTINUE
      REWIND IO4
      REWIND IO10
      RETURN
 1000 FORMAT('0'/'0CHANGE IN K SUMMED OVER ABOVE NUCLIDES FOR ZONES',I4,
     > '  THRU',I4)
 1001 FORMAT(1X,1P10E12.4)
 1002 FORMAT('0'/'0THE COLUMNS BELOW FROM LEFT TO RIGHT ARE 1. THE NUCLI
     >DE NUMBER'/42X,'2. THE NUCLIDE NAME'/42X,'3. THE ZONE NUMBER'/42X,
     >'4. CHANGE IN K FROM NEUTRON ABSORPTION'/42X,'5. FROM NEUTRON PROD
     >UCTION')
 1003 FORMAT(42X,'6. FROM NEUTRON TRANSPORT'/42X,'7. FROM BUCKLING(D*B**
     >2)'/42X,'8. FROM OUTSCATTER'/42X,'9. FROM INSCATTER'/42X,'10. OVER
     >ALL'/42X,'11. (N*DELTA-K)/(K*DELTA-N)')
 1004 FORMAT('0',20X,'CONCENTRATION CHANGES CARD-',I2,I10,I4,3X,
     >5(I4,F6.3))
 1005 FORMAT('0NUCLIDE',I4,'  IS NOT IN CROSS SECTION SET',I3)
 1006 FORMAT(1X,28X,I3,1P8E12.4)
 1007 FORMAT('0',I3,1X,6A4,I3,1P8E12.4)
 1008 FORMAT(10X,'SUMS OVER ABOVE ZONES ',1P8E12.4)
 1009 FORMAT('0TOTALS OVER ALL NUCS.AND ZONES ',1P8E12.4)
      END
CBEFF --158 ***CITATION*** BETA-EFF. CALC./ CF-PERT
      SUBROUTINE BEFF(BIGD,NRGNE,NCOMP,SS2,SS4, P1E,P2E,PVOL,CONC,HOL,
     > QMI,NJJR,MJJR, RATAT,XIK,XIKP,BIK, IVX,JVX,KBVX,KVX,LVX,MVX,NVX,
     > NSETVX,JIVX,SSC,HOX)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     > , XNAME(3,200)
C
      DIMENSION NRGNE(JVX,IVX,KBVX),NCOMP(LVX), SS2(KVX,NVX,NSETVX),
     > SS4(KVX,NVX,NSETVX),P1E(JIVX ,KBVX) , P2E(JIVX ,KBVX,KVX),
     > PVOL(LVX),CONC(NVX,MVX), HOL(NVX,NSETVX,10),QMI(MVX,10),NJJR(NVX,
     >  NSETVX),MJJR(200,NSETVX)
      DIMENSION RATAT(200,11),XIK(KVX),XIKP(KVX),BIK(20,KVX) , SSC(KVX,
     > KVX),BIEFF(10),HOX(NVX,NSETVX,20)
C
      IO19 = IX(86)
      REWIND IO19
      REWIND IO1
      WRITE(IO1) HOX
      WRITE(IO1)RATAT
      REWIND IO1
      REWIND IO4
  100 READ(IO4,END=129) N
      IF (N.NE.-1) GO TO 100
      READ(IO4) HOX
      REWIND IO4
  101 IO10 = IX(77)
  102 READ(IO10,END=129)INSEC,NREC
      IF (INSEC.EQ.40) GO TO 104
      IF (NREC.EQ.0) GO TO 102
      DO 103 N = 1,NREC
      READ(IO10)
  103 CONTINUE
      GO TO 102
  104 IF (NREC.EQ.0) GO TO 106
      DO 105 N = 1,NREC
      READ(IO10)
  105 CONTINUE
  106 READ(IO10)INSEC,NREC,KAAX
      IF (KAAX.EQ.KMAX) GO TO 107
      WRITE(IOUT,1000)
      REWIND IO10
      GO TO 130
  107 CONTINUE
      IX(18) = NREC
      IF (NREC.EQ.0) GO TO 129
      DO 109 I = 1,11
      DO 108 N = 1,200
      RATAT(N,I) = 0.0
  108 CONTINUE
  109 CONTINUE
      ESTK = BIGD/SPARE(18)
      DO 110 II=1,NREC
      READ(IO10) (BIK(II,K),K=1,KMAX)
  110 CONTINUE
      DO 117 KB=1,KBMAX
      N1 = 0
      DO 116 I=1,IMAX
      DO 115 J=1,JMAX
      N1 = N1 + 1
      L = NRGNE(J,I,KB)
      M = NCOMP(L)
      NACT = NXSET(M)
      NSET = NXODR(NACT)
      NSX = NSIG2(NSET)
      READ(IO19) SSC
      DO 114 N=1,NSX
      IF (HOX(N,NSET,1)+HOX(N,NSET,NREC)+SS2(KMAX,N,NSET).EQ.0.0) GO TO
     > 114
      NN = NJJR(N,NSET)
      X = CONC(N,M)*PVOL(L)/ESTK
      DO 113 K=1,KMAX
      SUM2 = 0.0
      DO 111 KK=1,KMAX
      SUM2 = SUM2 + SS2(KK,N,NSET)*SSC(KK,K)
  111 CONTINUE
      DO 112 II=1,NREC
      RATAT(NN,II) = RATAT(NN,II) + SUM2*BIK(II,K)*HOX(N,NSET,II )*X
  112 CONTINUE
  113 CONTINUE
  114 CONTINUE
  115 CONTINUE
  116 CONTINUE
  117 CONTINUE
      REWIND IO10
      REWIND IO19
      BEFFF = 0.0
      DO 119 I = 1,NREC
      BIEFF(I) = 0.0
      DO 118 N = 1,200
      BIEFF(I) = BIEFF(I)+RATAT(N,I)
      RATAT(N,11) = RATAT(N,11)+RATAT(N,I)
  118 CONTINUE
      BEFFF = BEFFF+BIEFF(I)
  119 CONTINUE
      WRITE(IOUT,1001) BEFFF
	WRITE(IOUT,1006)
  	WRITE(IOUT,1007)(BIEFF(I),I=1,NREC)
      WRITE(IOUT,1002)
  120 NC = 0
      DO 123 N = 1,200
      DO 121 NS = 1,NSETVX
      IF (MJJR(N,NS).EQ.0) GO TO 121
      GO TO 122
  121 CONTINUE
      GO TO 123
  122 NC = NC+1
      XTR1(NC) = RATAT(N,11)
      NXTR1(NC) = N
  123 CONTINUE
      IF (NC.EQ.0) GO TO 120
      WRITE(IOUT,1003)(NXTR1(N3),XTR1(N3),N3=1,NC)
  124 CONTINUE
      IF (BEFFF.EQ.0.0) GO TO 130
      T1 = 1.0/BEFFF
      T2 = 0.0
      DO 126 K = 1,KMAX
      XIK(K) = 0.0
      DO 125 I = 1,NREC
      XIK(K) = XIK(K)+BIEFF(I)*BIK(I,K)
  125 CONTINUE
      XIK(K) = XIK(K)*T1
      T2 = T2+XIK(K)
  126 CONTINUE
      IF (T2.EQ.0.0) GO TO 130
      T3 = 1.0/T2
      DO 128 K = 1,KMAX
      XIKP(K) = XIK(K)*T3
      DO 127 I = 1,NREC
      BIK(I,K) = BIEFF(I)*XIKP(K)
  127 CONTINUE
  128 CONTINUE
      WRITE(IOUT,1004)(XIK(K),K=1,KMAX)
      GO TO 130
  129 WRITE(IOUT,1005)
  130 CONTINUE
      READ(IO1) HOX
      READ(IO1)RATAT
      REWIND IO1
      RETURN
 1000 FORMAT('0**********ERROR STOP 26')
 1001 FORMAT('0DELAYED NEUTRON FRACTION IS',1PE13.5)
 1002 FORMAT('0CONTRIBUTION TO DELAYED NEUTRON FRACTION FROM EACH NUCLID
     >E')
 1003 FORMAT(1X,I3,1PE13.5,I3,E13.5,I3,E13.5,I3,E13.5,I3,E13.5,I3,E13.5)
 1004 FORMAT('0EFFECTIVE ENERGY DISTRIBUTION FUNCTION'/(1X,1P9E13.5))
 1005 FORMAT('0****ERROR STOP NUMBER 23')
 1006 FORMAT('0DELAYED NEUTRON FRACTION BY FAMILY IS')
 1007 FORMAT(10(1X,1PE12.5))
      END
CVMAP --159 ***CITATION*** 1/V IMPT. MAP/ CF-PERT
      SUBROUTINE VMAP(P1E,P2E,ONEOV,SOURE,NRGNE, NCOMP,BIGD, IVX,JVX,
     > KBVX,KVX,LVX,NSETVX,JIVX,SSC)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     > , XNAME(3,200)
C
      DIMENSION P1E(JIVX ,KBVX) ,P2E(JIVX ,KBVX,KVX), ONEOV(KVX, NSETVX)
     > ,SOURE(JVX,IVX,KBVX), NRGNE(JVX,IVX,KBVX),NCOMP(LVX)
      DIMENSION SSC(KVX,KVX)
C
      IO19 = IX(86)
      REWIND IO19
  100 T1 = -1.0/BIGD
      DO 104 KB = 1,KBMAX
      DO 103 I = 1,IMAX
      NN1= (I-1)*JVX
      DO 102 J = 1,JMAX
      N1= NN1 + J
      L = NRGNE(J,I,KB)
      M = NCOMP(L)
      NS = NXSET(M)
      NSET = NXODR(NS)
      READ(IO19) SSC
      T2 = 0.0
      DO 101 K = 1,KMAX
      T2 = T2 + SSC(K,K)*ONEOV(K,NSET)
  101 CONTINUE
      SOURE(J,I,KB) = T1*T2
  102 CONTINUE
  103 CONTINUE
  104 CONTINUE
      REWIND IO19
      RETURN
      END
CNMAP --160 ***CITATION*** IMPT. MAP OF NUCLIDE/ CF-PERT
      SUBROUTINE NMAP(SCAC,BAL,NRGNE,NCOMP, SIG,SOURE,MJJR,SS1,SS2,SS3,
     > SS4, IVX,JVX,KBVX,KVX,LVX,MVX,NVX,NSETVX,MVZ,SSC,BIGD,NN)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     > , XNAME(3,200)
C
      DIMENSION SCAC(KVX,MVZ,KVX),BAL(KVX,MVX, 8), NRGNE(JVX,IVX,KBVX),
     > NCOMP(LVX),SIG(KVX,MVX,10),SOURE(JVX,IVX,KBVX),MJJR(200,NSETVX),
     > SS1(KVX,NVX,NSETVX),SS2(KVX,NVX,NSETVX), SS3(KVX,NVX,NSETVX),
     > SS4(KVX,NVX,NSETVX)
      DIMENSION SSC(KVX,KVX)
C
      L = NRGNE(J,I,KB)
      M = NCOMP(L)
      S1 = 0.0
      S2 = 0.0
      S3 = 0.0
      S4 = 0.0
      S5 = 0.0
      S6 = 0.0
      NACT = NXSET(M)
      NSET = NXODR(NACT)
      N = MJJR(NN,NSET)
      IF (N.LE.0) GO TO 102
      T9 = 3.0*SIG(K,M,1)**2*SS3(K,N,NSET)
      S1 = +BAL(K,1,2)*SS1(K,N,NSET)
      S2 = +BAL(K,1,3)*SS2(K,N,NSET)*SS4(K,N,NSET)
      S3 = -BAL(K,1,4)*T9
      S4 = -BAL(K,1,2)*T9*SIG(K,M,6)
      T1 = 0.0
      T2 = 0.0
      DO 100 KK = 1,KMAX
      T1 = T1+SCAC(KK,NSET+2,K)
      T2 = T2 + SSC(KK,K)*SCAC(K,NSET+2,KK)
  100 CONTINUE
      T2 = T2/BIGD
      S5 = +BAL(K,1,2)*T1
      S6 = +T2
C     S1 = SIGA
C     S2 = NUSIGF
C     S3 = D
C     S4 = DB**2
C     S5 = SIGR
C     S6 = INSCAT
  101 CONTINUE
  102 CONTINUE
      SOURE(J,I,KB) = S1+S2+S3+S4+S5+S6
      RETURN
      END
CRFLX --161 ***CITATION*** PERTURBATION UTILITY ROUTINE/ CF-PERT
      SUBROUTINE RFLX(P2E,SOURE,NRGNE,PVOL,PSUM, JVX,IVX,KBVX,KVX,JIVX,
     > LVX)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
C
      DIMENSION P2E(JIVX,KBVX,KVX),SOURE(JVX,IVX,KBVX)
      DIMENSION PVOL(LVX),NRGNE(JVX,IVX,KBVX)
C
      IO22 = IX(89)
      DO 100 K = 1,KMAX
      READ(IO22) ((P2E(N1,KB,K),N1=1, JIVX),KB=1,KBMAX)
  100 CONTINUE
      DO 104 KB = 1,KBMAX
      N1 = 0
      DO 103 I = 1,IMAX
      DO 102 J = 1,JMAX
      L = NRGNE(J,I,KB)
      T1 = PVOL(L)
      N1 = N1+1
      SOURE(J,I,KB) = 0.0
      DO 101 K = 1,KMAX
      SOURE(J,I,KB) = SOURE(J,I,KB)+P2E(N1,KB,K)
      PSUM = PSUM+P2E(N1,KB,K)*T1
  101 CONTINUE
  102 CONTINUE
  103 CONTINUE
  104 CONTINUE
      RETURN
      END
CMEDT --162    ***FUEL MANAGEMENT***   CORE ALLOCATION AND START
C     CALLED FROM/CALR
      SUBROUTINE MEDT(A,MEMORY)
C
      COMMON/FMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
      COMMON/CMARY/MEMARY,IMN,MNI,IJLMN,NMLJI,IY(50),AX(50),TITL(36)
      COMMON/COOPD/FLOTR(200),INTGR(100)
      DIMENSION A(MEMORY)
C
      DOUBLE PRECISION FLOTR
C
      NNN = MEMORY
C     IOS IS DUMMY-NOT USED YET IN DRIV.
      IOS = 0
      CALL DRIV(A,NNN,IOS)
  100 RETURN
      END
CXION --164    ***FUEL MANAGEMENT***   GET I/O UNIT NUMBERS
C     CALLED FROM/DRIV
      SUBROUTINE XION(DN,IOB,IOUT,IADR)
C
      COMMON/COOPD/FLOTR(200),INTGR(100)
C      DOUBLE PRECISION FLOTR,DN
      CHARACTER*8 FLOTR,DN
C
  100 N=INTGR(1)
      IF (N.LE.0) GO TO 102
      DO 101I=1,N
      IF (DN.EQ.FLOTR(I)) GO TO 103
  101 CONTINUE
  102 WRITE(IOUT,1000)DN
      return
  103 IOB=I+IADR
      RETURN
 1000 FORMAT('0INTERFACE FILE NOT IN LIST   ',A8)
      END
CINTL --165    ***FUEL MANAGEMENT***   ZERO ALL VARIABLES
C     CALLED FROM/DRIV
      SUBROUTINE INTL(A,MEMORY)
C
      COMMON/FMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
      COMMON/FMADD/KAY(1),K1,K2,K3,K4,K5,K6,K7,K8,K9,K10,K11,K12,K13,
     > K14,K15,K16,K17,K18,K19,K20,K21,K22,K23,K24,K25,K26,K27,K28,K29,
     > K30,K31,K32,K33,K34,K35,K36,K37,K38,K39,K40,K41,K42,K43,K44,K45,
     > K46,K47,K48,K49,K50,K500,K501,K502,K503,K504,K505,K506,K507,K508,
     >  K509,K51,K52,K53,K54,K540,K541,K542,K543,K544,K545,K546,K547,
     > K548,K549,K550,K55,K56,K57,K58,K59,K60,K61,K62,K63, K64,K65,K66,
     > K67,K68,K69,K70,K71,K72,K73,K74,K75
      COMMON/FMIMS/IB(100),MEMVRY,NFSVX,NRSVX,NDSVX,NISVX,NPDVX,NFMVX,
     > MVX,NVX,NRLVX,I1VX,I2VX,I3VX,I4VX,I5VX,I6VX,I7VX,I8VX,I9VX,I10VX,
     >  NONNN,NSETVX
C
      DIMENSION A(MEMORY)
C
  100 DO 101 N = 1,MEMORY
      A(N) = 0.0
  101 CONTINUE
      DO 102 N = 1,455
      BLSUB(N) = 0.0
  102 CONTINUE
      DO 103 N = 1,97
      KAY(N) = 0
  103 CONTINUE
      DO 104 N = 1,122
      IB(N) = 0
  104 CONTINUE
      IX( 3) = 455
      IX(4) = 97
      IX( 5) = 122
      RETURN
      END
CRADE --167    ***FUEL MANAGEMENT***   READ FIXED INTERFACE DATA
C     CALLED FROM/IFCE
      SUBROUTINE RADE(HOLA,HAL,IDDN,XMAS,MJJR,NJJR,NCOO,NZINF,NJM,
     > ZONVOL,K501,K502,K503,K504,K505,K506,K507,K508,K509, I6VX,NONNN,
     > NVX,NSETVX,MVX,MAC)
C
      DOUBLE PRECISION HOLA,HAL
C
      COMMON/FMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
C
      DIMENSION HOLA(2,I6VX),HAL(NONNN),IDDN(NONNN),XMAS(NONNN),
     > MJJR(NVX,NSETVX),NJJR(NONNN,NSETVX),NCOO(4,NONNN),NZINF(MVX,7),
     > NJM(6,NSETVX),ZONVOL(MVX)
      DIMENSION MAC(24)
C
      MAC13 = MAC(1)
  100 READ(IO3)(HOLA(1,I),HOLA(2,I),I=1,I6VX)
      READ(IO3)(HAL(N),N=1,NONNN),(IDDN(N),N=1,NONNN), (XMAS(N),N=1,
     > NONNN)
      READ(IO3)((MJJR(N,NS),N=1,NVX),NS=1,NSETVX)
      READ(IO3)((NJJR(N,NS),N=1,NONNN),NS=1,NSETVX)
      READ(IO3)((NCOO(I,N),I=1,4),N=1,NONNN)
      READ(IO3)((NZINF(M,I),M=1,MVX),I=1,7)
      READ(IO3)((NJM(I,NS),I=1,6),NS=1,NSETVX)
      READ(IO3)(ZONVOL(M),M=1,MVX)
      REWIND IO3
      IF (MAC13.LT.1) GO TO 102
      WRITE(IOUT,1000)MVX,NONNN,NSETVX
      WRITE(IOUT,1001)(I,HOLA(1,I),HOLA(2,I),I=1,I6VX)
      WRITE(IOUT,1002)(IDDN(N),HAL(N),XMAS(N),N=1,NONNN)
      WRITE(IOUT,1003)
      DO 101 NS = 1,NSETVX
      WRITE(IOUT,1004)NS
      WRITE(IOUT,1005)(MJJR(N,NS),N=1,NVX)
      WRITE(IOUT,1005)(NJJR(N,NS),N=1,NONNN)
  101 CONTINUE
      WRITE(IOUT,1006)(NCOO(1,N),N=1,NONNN)
      WRITE(IOUT,1007)(NZINF(M,1),M=1,MVX)
      WRITE(IOUT,1008)(NZINF(M,3),M=1,MVX)
      WRITE(IOUT,1009)(NZINF(M,7),M=1,MVX)
      WRITE(IOUT,1010)(NJM(1,NS),NS=1,NSETVX)
      WRITE(IOUT,1011)(ZONVOL(M),M=1,MVX)
  102 CONTINUE
      RETURN
 1000 FORMAT('0FIXED INTERFACE DATA FOLLOWS'/'0',I5,' ZONES',I6,
     > ' DIFFERENT NUCLIDES',I6,' CROSS SECTION SETS')
 1001 FORMAT('0ZONE CLASS NUMBER AND NAME'/(1X,I3,2A8,I5,2A8,I5,2A8,
     > I5,2A8,I5,2A8,I5,2A8))
 1002 FORMAT('0NUCLIDE NUMBER, NAME, AND MASS'/(1X,I6,1X,A8,F7.2,I8,
     > 1X,A8,F7.2,I8,1X,A8,F7.2,I8,1X,A8,F7.2,I8,1X,A8,F7.2))
 1003 FORMAT('0MJJR AND NJJR ARRAYS FOR EACH CROSS SECTION SET')
 1004 FORMAT('0CROSS SECTION SET',I3)
 1005 FORMAT(1X,30I4)
 1006 FORMAT('0NUCLIDE CLASS'/(1X,30I4))
 1007 FORMAT('0SUBZONES PER ZONE'/(1X,30I4))
 1008 FORMAT('0SIGMA SET EACH ZONE'/(1X,30I4))
 1009 FORMAT('0ZONE CLASSES'/(1X,30I4))
 1010 FORMAT('0NUCLIDES PER  SET'/(1X,30I4))
 1011 FORMAT('0ZONE VOLUMES'/(1X,1P9E13.5))
      END
CIFVX --168    ***FUEL MANAGEMENT***   CALCULATE I5VX
C     CALLED FROM/IFCE
      SUBROUTINE IFVX(NZINF,NJM,MVX,NSETVX,I5VX)
C
      COMMON/FMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
C
      DIMENSION NZINF(MVX,7),NJM(6,NSETVX)
C
  100 I5VX = 0
      DO 101 M = 1,MVX
      NZU = NZINF(M,1)
      IF (NZU.LE.1) GO TO 101
      NS = NZINF(M,3)
      NN = NJM(1,NS)
      I5VX = I5VX+NZU*NN
  101 CONTINUE
      IF (I5VX.EQ.0) I5VX = 1
      RETURN
      END
CODER --169    ***FUEL MANAGEMENT***   CALCULATE LJJR
C     CALLED FROM/IFCE
      SUBROUTINE ODER(NIS,LJJR,IDDN,NISVX,NONNN)
C
      COMMON/FMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
C
      DIMENSION LJJR(NISVX),IDDN(NONNN),NIS(30)
C***********************************************************************
      JOUT = IX(10)
C***********************************************************************
      IND = 0
      DO 101 I1 = 1,NISVX
      N1 = NIS(I1)
      DO 100 I2 = 1,NONNN
      N2 = IDDN(I2)
      IF (N1.NE.N2) GO TO 100
      LJJR(I1) = I2
      GO TO 101
  100 CONTINUE
      WRITE(IOUT,1000)N1
      IND = 1
  101 CONTINUE
      IF (IND.EQ.1) return
      RETURN
 1000 FORMAT('0ERROR STOP 905 - NUCLIDE NUMBER',I7)
      END
CLRTR --179    ***FUEL MANAGEMENT***   LOAD REACTOR
C     CALLED FROM/MANG
      SUBROUTINE LRTR(NFM,ZONVOL,NZINF,NSUBNO,SUBCN0,NJM,NJJR,CON0,
     > CONC,SUBCNC,LJJR,CORC,NSPEC,NRPOT, I3VX,I4VX,I5VX,I7VX,MVX,
     > NSETVX,NONNN,NVX,NISVX,NRSVX,MZFL,MAC)
C
      COMMON/FMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
C
      DIMENSION NFM(I3VX,I4VX),ZONVOL(MVX),NZINF(MVX,7),NSUBNO(MVX),
     > SUBCN0(I7VX),SUBCNC(I5VX),NJM(6,NSETVX),NJJR(NONNN,NSETVX),
     > CON0(NVX,MVX),CONC(NVX,MVX),LJJR(NISVX),CORC(NISVX,NRSVX,5)
      DIMENSION MZFL(MVX)
      DIMENSION MAC(24)
C
      MAC13 = MAC(1)
C***********************************************************************
      JOUT = IX(10)
C***********************************************************************
      DO 100 M = 1,MVX
      MZFL(M) = 0
  100 CONTINUE
C*****GET TOTAL VOLUME OF ZONES TO BE LOADED
      CALL GETV(NFM,ZONVOL,NZINF,NSUBNO,I3VX,I4VX,MVX,NSPEC,VOLT)
      IF (MAC13.LT.1) GO TO 101
      WRITE(IOUT,1000)
      WRITE(IOUT,1001)NRPOT,VOLT
  101 CONTINUE
C*****GROSS LOADING (ZONECLASS)
      DO 110 NGRS = 13,I3VX
      NRMV = NFM(NGRS,NSPEC)
      IF (NRMV.EQ.0) GO TO 111
      IF (MAC13.LT.1) GO TO 102
      WRITE(IOUT,1002)
  102 CONTINUE
      DO 109 M = 1,MVX
      IF (NRMV.NE.NZINF(M,7)) GO TO 109
      MZFL(M) = NSUBNO(M)
      IF (MZFL(M).EQ.0) MZFL(M) = 1
      IF (IX(13).LE.1) GO TO 103
      IF (NZINF(M,1).EQ.1) GO TO 103
      CALL RIO2(M,SUBCN0,I7VX,MVX,IO8)
  103 CONTINUE
      NCI = 0
      NSET = NZINF(M,3)
      L = M
      IF (NSUBNO(M).GT.0) CALL SADD(M,NZINF,NJM,NSUBNO,MVX,NCI,NC,
     > NSETVX,L)
      L = 1
      IF (NSUBNO(M).GT.0) CALL SADD(M,NZINF,NJM,NSUBNO,MVX,NCI,NL,
     > NSETVX,L)
C*****SET CONCENTRATIONS TO INITIAL VALUES
      DO 105 NUCT = 1,NVX
      NUC = NJJR(NUCT,NSET)
      IF (NUC.EQ.0) GO TO 105
      NCU = NUC+NC
      NLU = NUC+NL
      IF (NSUBNO(M).NE.0) GO TO 104
      CONC(NUC,M) = CON0(NUC,M)
      GO TO 105
  104 CONTINUE
      SUBCNC(NCU) = SUBCN0(NLU)
  105 CONTINUE
      DO 108 NUCT = 1,NISVX
      N1 = LJJR(NUCT)
      NUC = NJJR(N1,NSET)
      IF (NUC.EQ.0) GO TO 108
      NCU = NUC+NC
      CUSE = (CORC(NUCT,NRPOT,5)+CORC(NUCT,NRPOT,4))/VOLT
      IF (NSUBNO(M).NE.0) GO TO 106
      CONC(NUC,M) = CUSE
      GO TO 107
  106 CONTINUE
      SUBCNC(NCU) = CUSE
  107 CONTINUE
  108 CONTINUE
      IF (MAC13.LT.1) GO TO 109
      WRITE(IOUT,1003)NRMV,M,NSUBNO(M)
  109 CONTINUE
  110 CONTINUE
  111 CONTINUE
C*****LOAD ZONES
      NSTRT = NGRS+1
      NNO = 0
      DO 112 NN = NSTRT,I3VX
      NZ1 = NFM(NN,NSPEC)
      NZ2 = NFM(NN+1,NSPEC)
      IF (NZ1.EQ.0) NGRS = NGRS+1
      IF (NZ1.EQ.0) GO TO 113
      NGRS = NGRS+1
      NNO = NNO+1
      NXTR1(NNO) = NZ1
  112 CONTINUE
  113 CONTINUE
      IF (NNO.NE.0) GO TO 114
      IF (NZ2.EQ.0) GO TO 122
      GO TO 111
  114 CONTINUE
      IF (MAC13.LT.1) GO TO 115
      WRITE(IOUT,1004)(NXTR1(NNNN),NNNN = 1,NNO)
  115 CONTINUE
      M = NXTR1(1)
      IF (IX(13).LE.1) GO TO 116
      IF (NZINF(M,1).EQ.1) GO TO 116
      CALL RIO2(M,SUBCN0,I7VX,MVX,IO8)
  116 CONTINUE
      NCI = 0
      NSET = NZINF(M,3)
      L = M
      IF (NSUBNO(M).GT.0) CALL SADD(M,NZINF,NJM,NSUBNO,MVX,NCI,NC,
     > NSETVX,L)
      L = 1
      IF (NSUBNO(M).GT.0) CALL SADD(M,NZINF,NJM,NSUBNO,MVX,NCI,NL,
     > NSETVX,L)
      IF (MAC13.LT.1) GO TO 117
      WRITE(IOUT,1005)M,NSUBNO(M)
  117 CONTINUE
      MZFL(M) = NSUBNO(M)
      IF (MZFL(M).EQ.0) MZFL(M) = 1
C*****SET CONCENTRATIONS TO INITIAL VALUES
      DO 119 NUCT = 1,NVX
      NUC = NJJR(NUCT,NSET)
      IF (NUC.EQ.0) GO TO 119
      NCU = NUC+NC
      NLU = NUC+NL
      IF (NSUBNO(M).NE.0) GO TO 118
      CONC(NUC,M) = CON0(NUC,M)
      GO TO 119
  118 CONTINUE
      SUBCNC(NCU) = SUBCN0(NLU)
  119 CONTINUE
      DO 121 NUCT = 1,NISVX
      N1 = LJJR(NUCT)
      NUC = NJJR(N1,NSET)
      IF (NUC.EQ.0) GO TO 121
      NCU = NUC+NC
      CUSE = (CORC(NUCT,NRPOT,5)+CORC(NUCT,NRPOT,4))/VOLT
      IF (NSUBNO(M).NE.0) GO TO 120
      CONC(NUC,M) = CUSE
      GO TO 121
  120 CONTINUE
      SUBCNC(NCU) = CUSE
  121 CONTINUE
      IF (NZ2.NE.0) GO TO 111
  122 CONTINUE
      RETURN
 1000 FORMAT('0')
 1001 FORMAT('0LOADING REACTOR FROM MAKEUP  STREAM',I3,
     > '   TOTAL VOLUME OF ZONES INVOLVED',1PE13.5)
 1002 FORMAT('0GROSS SPECIFICATIONS-CLASS ZONE SUB-ZONE')
 1003 FORMAT(' LOADING',I17,I6,I7)
 1004 FORMAT('0ZONES SPECIFICATION - ZONES INVOLVED',20I4/(1X,30I4))
 1005 FORMAT('0        LOADING ZONE',I4,'    SUB-ZONE',I4)
      END
CGETV --180    ***FUEL MANAGEMENT***   CALC.TOT.VOL.OF ZNS.TO BE LOADED
C     CALLED FROM/LRTR
      SUBROUTINE GETV(NFM,ZONVOL,NZINF,NSUBNO,I3VX,I4VX,MVX,NSPEC,VOLT)
C
      COMMON/FMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
C
      DIMENSION NFM(I3VX,I4VX),ZONVOL(MVX),NZINF(MVX,7), NSUBNO(MVX)
C
      VOLT = 0.0
      DO 101 NGRS = 13,I3VX
      NRMV = NFM(NGRS,NSPEC)
      IF (NRMV.EQ.0) GO TO 102
      DO 100 M = 1,MVX
      IF (NRMV.NE.NZINF(M,7)) GO TO 100
      VUSE = ZONVOL(M)
      IF (NSUBNO(M).GT.0) VUSE = VUSE/FLOAT(NZINF(M,1))
      VOLT = VOLT+VUSE
  100 CONTINUE
  101 CONTINUE
  102 CONTINUE
      NSTRT = NGRS+1
      NNO = 0
      DO 103 NN = NSTRT,I3VX
      NZ1 = NFM(NN,NSPEC)
      NZ2 = NFM(NN+1,NSPEC)
      IF (NZ1.EQ.0) NGRS = NGRS+1
      IF (NZ1.EQ.0) GO TO 104
      NGRS = NGRS+1
      NNO = NNO+1
      NXTR1(NNO) = NZ1
  103 CONTINUE
  104 CONTINUE
      IF (NNO.NE.0) GO TO 105
      IF (NZ2.EQ.0) GO TO 106
      GO TO 102
  105 CONTINUE
      M = NXTR1(1)
      VUSE = ZONVOL(M)
      IF (NSUBNO(M).GT.0) VUSE = VUSE/FLOAT(NZINF(M,1))
      VOLT = VOLT+VUSE
      IF (NZ2.NE.0) GO TO 102
  106 CONTINUE
      RETURN
      END
CRIO2 --181    ***FUEL MANAGEMENT***   READ SUB.ZN.CONC.FROM IO2
C     CALLED FROM/LRCY,LRTR
      SUBROUTINE RIO2(M,SUBCN0,I7VX,MVX,IOZ)
C
      COMMON/FMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
C
      DIMENSION SUBCN0(I7VX)
C
      IOU = IOZ
      READ(IOU)
      DO 100 MXX = 1,MVX
      READ(IOU)MM,NNT
      IF (MM.LT.0) GO TO 101
      IF (MM.NE.M) READ(IOU)
      IF (MM.NE.M) GO TO 100
      READ(IOU)(SUBCN0(NXX),NXX=1,NNT)
      GO TO 102
  100 CONTINUE
  101 CONTINUE
      WRITE(IOUT,1000)M,MM,NNT
      return
  102 CONTINUE
      REWIND IOU
      RETURN
 1000 FORMAT('0SEE STATEMENT 9347 - SUBROUTINE RIO2',3I5)
      END
CI120 --183    ***FUEL MANAGEMENT***   USED BY DCAY
C     CALLED FROM/DCAY
      SUBROUTINE I120(NIS,NPRL,NDRL,N1VX,I10,I20,NPR,NDR)
C
      COMMON/FMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
C
      DIMENSION NIS(30)
C
      I10 = 0
      I20 = 0
      DO 101 I = 1,N1VX
      I1 = NIS(I)
      IF (I10.GT.0) GO TO 100
      IF (I1.NE.NPRL) GO TO 100
      I10 = 1
      NPR = I
  100 CONTINUE
      IF (I20.GT.0) GO TO 101
      IF (I1.NE.NDRL) GO TO 101
      I20 = 1
      NDR = I
  101 CONTINUE
      RETURN
      END
CCORT --185    ***FUEL MANAGEMENT***   EDIT CONCENTRATIONS
C     CALLED FROM/MANG
      SUBROUTINE CORT(NZINF,IDDN,MJJR,SUBCNC,NJM,DUMY, MVX,NVX,NONNN,
     > NSETVX,I5VX)
C
      COMMON/FMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
C
      DIMENSION NZINF(MVX,7),IDDN(NONNN),MJJR(NVX,NSETVX),SUBCNC(I5VX),
     > DUMY(NVX,MVX),NJM(6,NSETVX)
C***********************************************************************
      JOUT = IX(10)
C***********************************************************************
      NC2 = 0
      DO 101 M = 1,MVX
      IF (IX(13).LE.1) GO TO 100
      NSET = NZINF(M,3)
      NUC = NJM(1,NSET)
      NSB = NZINF(M,1)
      IF (NSB.LE.1) GO TO 100
      WRITE(IOUT,1000)M,NSB
      NC1 = NC2+1
      NC2 = NC2+NSB*NUC
      WRITE(IOUT,1001)(SUBCNC(N),N=NC1,NC2)
      GO TO 101
  100 CONTINUE
      WRITE(IOUT,1002)M
      WRITE(IOUT,1001)(DUMY(N,M),N=1,NVX)
  101 CONTINUE
      RETURN
 1000 FORMAT('0ZONE',I4,' HAS',I3,' SUBZONES')
 1001 FORMAT(1X,1P9E13.5)
 1002 FORMAT('0ZONE',I4,' NO SUBZONES')
      END
CCLAS --037 ***CITATION*** READS INPUT SECTION 018/ CF-IPTM
      SUBROUTINE CLAS
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
C
  100 DO 101 I = 94,300
      IXPUT(I) = 0
  101 CONTINUE
      X1 = SPARE(1)
      X2 = SPARE(2)
      X3 = SPARE(3)
      X4 = SPARE(4)
      X5 = SPARE(5)
      X6 = SPARE(6)
      DO 102 I = 1,106
      NXTR1(I) = 0
      NXTR2(I) = 0
  102 CONTINUE
      ISUB = 94
      N2 = 0
  103 N1 = N2+1
      N2 = N2+24
      READ(IOIN,1000)(NXTR1(I),I=N1,N2)
  104 DO 105 I = N1,N2
      IF (NXTR1(I).EQ.0) GO TO 106
      IXPUT(ISUB) = IXPUT(ISUB)+1
  105 CONTINUE
      GO TO 103
  106 CONTINUE
      ISUB = ISUB+1
      IF (ISUB.EQ.101) GO TO 107
      IF (I.EQ.N2) GO TO 103
      N1 = I+1
      GO TO 104
  107 J = 100
      DO 108 I = 1,206
      N = NXTR1(I)
      IF (N.EQ.0) GO TO 108
      J = J+1
      IXPUT(J) = NXTR1(I)
  108 CONTINUE
      SPARE(1) = X1
      SPARE(2) = X2
      SPARE(3) = X3
      SPARE(4) = X4
      SPARE(5) = X5
      SPARE(6) = X6
      RETURN
 1000 FORMAT(24I3)
      END
CCRSH -82.1 ***CITATION*** CONTROLS DIMENSION SEARCH / CF-EIGN
      SUBROUTINE CRSH(RVOL,PVOL,LVX)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDB,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     >  , XNAME(3,200)
      COMMON/ASRCH/ BSRCH(30),XK1,XK2,XK3,XN1,XN2,XN3, DELK1,DELK2,
     > DELK3,BATTY,DRV,TBF,GWC,EK2,RCCM,DNDK(5), NSC(5),NSCN,NXZ,NXN,
     > NXM,NXS,INIL,INIU,INID
      COMMON/AMESH/BMESH(30),NREGI,NREGJ,NREGKB,XSHI(100),XSHJ(100),
     > XSHKB(100), MSHI(100),MSHJ(100),MSHKB(100),Y(211),YY(211), X(211)
     >  ,XX(211),Z(211),ZZ(211), ZONVOL(200),AVZPD(200),PDI(211),
     > PDJ(211) , PDK(211)
C
      DIMENSION RVOL(LVX),PVOL(LVX)
C
      IO18 = IX(85)
      REWIND IO18
      READ(IO18) NXJ,NXI,NXKB,INDX,INGX,IDUM,IDUM,XMX
      IND = 0
      INEG = 0
      RCCM = 1.0
      NOB = NSRH(10)
      NOUT = NSRH(24)
      IF (IX(73).EQ.2) GO TO 104
      XK1 = XK2
      XK2 = XK3
      XK3 = XKEF1
      XN1 = XN2
      XN2 = XN3
      GO TO (100,101,102),INGX
  100 XN3 = XSHJ(INDX)
      GO TO 103
  101 XN3 = XSHI(INDX)
      GO TO 103
  102 XN3 = XSHKB(INDX)
  103 CONTINUE
  104 CONTINUE
      IF (IX(73).LE.1) SPARE(65) = 0.0
      IF (IX(73).LE.2) GO TO 106
      S60 = DRV
      DIF = XK3 - XK2
      IF ((ABS(S60).GT.1.0E-4).AND.(ABS(DIF).GT.1.0E-4)) GO TO 105
      GO TO 106
  105 SPARE(65) = DIF/S60
  106 CONTINUE
      DELK3 = DELK2
      DELK2 = DELK1
      DELK1 = ABS(XKEF1/XSRH1(1) - 1.0)
      SPARE(58) = 0.0
      IF (IX(73)-2) 107,116,117
  107 CONTINUE
C***********************************************************************
C     FIRST TIME IN - K FOR BASE CASE HAS BEEN CALCULATED
C***********************************************************************
      IF (DELK1.GE.EPI2) GO TO 108
      IX(75) = 1
      WRITE(IOUT,1000)
      GO TO 145
  108 CONTINUE
C     LOOK FOR ESTIMATE OF NDK/DN - IF NONE AVAILABLE USE BUILT-IN
C      PROCEDURE
C****
      IF (NSCN.LE.0) GO TO 110
      DO 109 N=1,NSCN
      IF (NSC(N).NE.NSRH(1)) GO TO 109
      QQ = DNDK(N)
      GO TO 111
  109 CONTINUE
  110 QQ = XSRH1(3)
  111 IF (QQ.EQ.0.0) GO TO 112
      IX(130) = 1
      GO TO 113
  112 IX(130) = 0
  113 CONTINUE
C****
      BATTY = BETTA
      IX(70) = 0
      IX(74) = 1
      IX(126) = 0
      SPARE(60) = 0.2
      SPARE(61) = 1.0
      SPARE(62) = 0.0
C     DETERMINE INITIAL SEARCH DRIVING FACTOR
      T1 = XN3
      IF (IX(130).GT.0) GO TO 114
      IF (XKEF1.GT.XSRH1(1)) SPARE(60) = (-SPARE(60))
      GO TO 115
  114 CONTINUE
      SPARE(60) = (XSRH1(1) - XKEF1)/QQ
  115 CONTINUE
      SPARE(62) = SPARE(60)*T1/XMX
      GWC = SPARE(62)
      IF (NOUT.LT.0) WRITE(IOUT,1001) INGX,INDX,SPARE(60),SPARE(62),
     > XKEF1,XSRH1(1),QQ,T1,XMX
      GO TO 131
  116 CONTINUE
C***********************************************************************
C     SECOND TIME IN - K WITH UPDATED DIMENSIONS HAS BEEN CALCULATED
C      WITH ONE ITERATION IN FLUX OR KLUX
C***********************************************************************
      IF (IX(74).EQ.0) GO TO 127
      GO TO 125
  117 CONTINUE
C***********************************************************************
C     THIRD ETC. TIME IN -
C***********************************************************************
      IF (DELK1.GE.EPI2) GO TO 122
C     EXCELSIOR - WE ARE DONE
      IX(75) = 1
      IND = 1
      BETTA = BATTY
      WRITE(IOUT,1002)
      IF (NOUT.LT.0) WRITE(IOUT,1003) SPARE(60),SPARE(61),SPARE(62)
C     SAVE ESTIMATE OF NDK/DN FOR POSSIBLE LATER USE
      QF = (XK3 - XK2)/SPARE(60)
      IF (SPARE(65).EQ.0.0) SPARE(65) = QF
C****
      IF (NSCN.GT.0) GO TO 118
      NSCN = 1
      NSC(NSCN) = NSRH(1)
      DNDK(NSCN) = SPARE(65)
      GO TO 121
  118 DO 119 N=1,NSCN
      IF (NSC(N).EQ.NSRH(1)) GO TO 120
  119 CONTINUE
      NSCN = NSCN + 1
      IF (NSCN.GT.5) NSCN = 5
      NSC(NSCN) = NSRH(1)
      DNDK(NSCN) = SPARE(65)
      GO TO 121
  120 CONTINUE
      DNDK(N) = SPARE(65)
  121 CONTINUE
C****
      WRITE(IOUT,1004) SPARE(65),QF
      GO TO 138
  122 CONTINUE
      IX(126) = 0
      IF (DELK1.GE.DELK3) IX(126) = 1
      IF (IX(73).GT.4.AND.IX(126).EQ.1) IX(74) = 0
      T1 = ABS(XKEF1 - EK2)/EK2
      IF (T1.GT.1.0E-5) GO TO 124
      SPARE(60) = 2.0*SPARE(60)
      IF (ABS(SPARE(60)).LE.1.0E-6.AND.SPARE(60).LT.0.0) GO TO 123
      SPARE(60) = 1.0E-5
      GO TO 129
  123 CONTINUE
      SPARE(60) = (-1.0E-5)
      GO TO 129
  124 CONTINUE
      IF (IX(74).EQ.0) GO TO 127
      IF (IX(73).GT.3) GO TO 130
  125 CONTINUE
C     TWO POINT APPROXIMATION
      B = DRV /((1.0+DRV)/XKEF1 - 1.0/EK2)
      IF (ABS(B).GT.1.0E+4) GO TO 126
      C = (B/EK2 - 1.0)/(1.0 + DRV)
      SPARE(60) = C*XSRH1(1)/(B - XSRH1(1)) - 1.0
      IF (SPARE(60).GT.0.0.AND.XKEF1.LT.XSRH1(1).AND.EK2.LT.XSRH1(1))
     > GO TO 127
      IF (SPARE(60).GT.0.0.AND.XKEF1.GT.XSRH1(1).AND.EK2.GT.XSRH1(1))
     > GO TO 127
      IF (SPARE(60).LE.(-1.0)) GO TO 126
      IF (NOUT.LT.0) WRITE(IOUT,1005)
      GO TO 128
  126 CONTINUE
C     IX(74) = 0
  127 CONTINUE
C     LINEAR APPROXIMATION
      IF (NOUT.LT.0) WRITE(IOUT,1006)
      SPARE(60) = DRV*(XSRH1(1)-XKEF1)/((1.0+DRV)*(XKEF1-EK2))
  128 CONTINUE
      IF (NOUT.LT.0) WRITE(IOUT,1007) IX(73),IX(74),SPARE(60),DRV,XKEF1,
     >  EK2,B,C
  129 CONTINUE
      GO TO 131
  130 CONTINUE
C     THREE POINT APPROXIMATION
      IF (NOUT.LT.0) WRITE(IOUT,1008) XN3,XN2,XN1,XK3,XK2,XK1
      C1 = (XN1 - XN3)/(XN1 - XN2)
      C2 = XK1/XK2
      C3 = XK1/XK3
      C4 = C3 - 1.0 - C1*(C2 - 1.0)
      IF (ABS(C4).LT.1.0E-4) GO TO 126
      C = (C1*(XN1 - C2*XN2) - XN1 + C3*XN3)/C4
      C1 = (XN2 - C)/(XN1 - C)
      C5 = 1.0 - C2*C1
      IF (ABS(C5).LT.1.0E-4) GO TO 126
      B = (XK1*(1.0 - C1))/C5
      A = (XN1 - C)*(B - XK1)/XK1
      XND = C + A*XSRH1(1)/(B - XSRH1(1))
      SPARE(60) = XND/XN3 - 1.0
      IF (NOUT.LT.0) WRITE(IOUT,1009)
      IF (NOUT.LT.0) WRITE(IOUT,1010) IX(73),IX(74),SPARE(60),A,B,C,C4,
     > C5,XND
  131 CONTINUE
      IF (IX(73).GT.1) SPARE(62) = TBF*(SPARE(60)*(1.0 + 1.0/DRV))
      SPARE(61) = SPARE(61)*(1.0 + SPARE(60))
      IF (NOUT.LT.0) WRITE(IOUT,1011) SPARE(60),SPARE(61),SPARE(62)
C     UPDATE SEARCH DIMENSIONS
      IF (NXJ.LE.0) GO TO 133
      READ(IO18) (XTR1(J),J=1,NXJ)
      DO 132 J=1,NXJ
      IF (XTR1(J).EQ.0.0) GO TO 132
      T1 = XSHJ(J)
      T7 = T1 + SPARE(62)*XTR1(J)
      XSHJ(J) = T7
      IF (T7.LE.0.0) INEG = 1
  132 CONTINUE
  133 IF (NXI.LE.0) GO TO 135
      READ(IO18) (XTR1(I),I=1,NXI)
      DO 134 I=1,NXI
      IF (XTR1(I).EQ.0.0) GO TO 134
      T1 = XSHI(I)
      T7 = T1 + SPARE(62)*XTR1(I)
      XSHI(I) = T7
      IF (T7.LE.0.0) INEG = 1
  134 CONTINUE
  135 IF (NXKB.LE.0) GO TO 137
      READ(IO18) (XTR1(KB),KB=1,NXKB)
      DO 136 KB=1,NXKB
      IF (XTR1(KB).EQ.0.0) GO TO 136
      T1 = XSHKB(KB)
      T7 = T1 + SPARE(62)*XTR1(KB)
      XSHKB(KB) = T7
      IF (T7.LE.0.0) INEG = 1
  136 CONTINUE
  137 CONTINUE
  138 CONTINUE
      CALL MASH(RVOL,PVOL,LVX,IND,NOUT,INEG)
      IF (IND.GT.0) GO TO 142
      IF (INEG.LE.0) GO TO 139
      WRITE(IOUT,1013)
      return
  139 CONTINUE
  140 CONTINUE
      IF (IX(73).EQ.2) GO TO 141
      EK2 = XKEF1
      DRV = SPARE(60)
      TBF = SPARE(62)
      GO TO 142
  141 CONTINUE
      TBF = GWC + GWC*(SPARE(60)*(1.0 + 1.0/DRV))
      DRV = (SPARE(60) + 1.0)*(DRV + 1.0) - 1.0
  142 CONTINUE
      IF (NOUT.LT.0) WRITE(IOUT,1012) IX(73),EK2,DRV,TBF
      J2 = ICLOCK(0)
      JJ = (J2 - IX(127))/6000
      IF (IX(75).EQ.1) GO TO 145
C     NOT CONVERGED BUT SET FLAG TO WRITE FLUXES IF ITERATION COUNT
C      OR TIME LIMIT HAS BEEN EXCEEDED
      IF (IX(73).GE.NSRH(3)) IX(70) = 1
      IF (JJ.GE.ITMX(21)) IX(70) = (-1)
      IF (IX(70)) 143,145,144
  143 WRITE(IOUT,1014)
      GO TO 145
  144 WRITE(IOUT,1015)
  145 CONTINUE
      IF (NOUT.LT.0) WRITE(IOUT,1016) IX(70),IX(73),IX(74),IX(75),
     > IX(126),IX(130)
C     WHEN USING ESTIMATE OF NDK/DN - I.E. IX(130) = 1 ,
C     COUNTER MUST BE INCREMENTED - DONE IN DASH OR KASH
      REWIND IO18
      RETURN
 1000 FORMAT('0NO SEARCH REQUIRED - MULTIPLICATION FACTOR SATISFIED')
 1001 FORMAT(' DB 1',2I5,1P7E13.5)
 1002 FORMAT('0INNER REACTIVITY LOOP SEARCH CONVERGED')
 1003 FORMAT(' DB 4',1P3E15.6)
 1004 FORMAT('0ESTIMATE OF N(DK/DN) SAVED',1PE15.6,'  FINAL',1PE15.6)
 1005 FORMAT(' USING TWO POINT NON-LINEAR APPROXIMATION')
 1006 FORMAT(' USING LINEAR APPROXIMATION')
 1007 FORMAT(' DB 6',2I5,1P6E15.6)
 1008 FORMAT(' C(N)=',1PE15.6,' C(N-1)=',1PE15.6,' C(N-2)=',1PE15.6/
     > ' K(N)=',1PE15.6,' K(N-1)=',1PE15.6,' K(N-2)=',1PE15.6)
 1009 FORMAT(' USING THREE POINT NON-LINEAR APPROXIMATION')
 1010 FORMAT(' DB 8',2I5,1P7E15.6)
 1011 FORMAT(' DB 9',' DIMENSIONS UPDATED WITH',1P3E15.6)
 1012 FORMAT(' DB10',I5,1P3E15.6)
 1013 FORMAT('0SEARCH DIMENSION LESS THAN OR EQUAL TO ZERO - STOP')
 1014 FORMAT('0INNER REACTIVITY LOOP SEARCH TIME LIMIT EXCEEDED')
 1015 FORMAT('0 INNER REACTIVITY LOOP SEARCH ITERATION LIMIT EXCEEDED')
 1016 FORMAT(' DB13',' IX(70)=',I5,' IX(73)=',I5,' IX(74)=',I5,
     > ' IX(75)=',I5,' IX(126)=',I5,' IX(130)=',I5)
      END
CMASH -82.2 ***CITATION*** REGION VOLUMES AND MESH SPACING /CF - CRSH
C                          FOR DIMENSION SEARCH
      SUBROUTINE MASH(RVOL,PVOL,LVX,IND,NOUT,INEG)
C
      DOUBLE PRECISION
     >        XDEL,ADR,YDELSQ,XNIPTS,XNJPTS,XNKPTS,TEMP,ZXYR,YDIST,
     > XDIST,ZDIST,YDEL,ZDEL,AXYR,XDIST1,XDIST2,YDIST1,YDIST2,XNTOPS,U1,
     >  U2,H,H1,H2
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AMESH/BMESH(30),NREGI,NREGJ,NREGKB,XSHI(100),XSHJ(100),
     > XSHKB(100), MSHI(100),MSHJ(100),MSHKB(100),Y(211),YY(211), X(211)
     >  ,XX(211),Z(211),ZZ(211), ZONVOL(200),AVZPD(200),PDI(211),
     > PDJ(211) , PDK(211)
C
      DIMENSION RVOL(LVX),PVOL(LVX)
      DIMENSION NX(6),TX(6)
C
C     SET NXY TO SAME NUMBER AS THE DIMENSION OF XX AND YY
      NXY = 211
      NDIM = IX(25)
      NGEM = IX(26)
      IF (IND.GT.0) GO TO 165
      MGEM = 0
      H1 = 6*MSHI(1)*MSHJ(1)
      H2 = XSHI(1)*XSHJ(1)
      H = DSQRT(H2/H1)
      IF ((NGEM.EQ.8).OR.(NGEM.EQ.12)) MGEM = 8
  100 NRGNO = 0
      MESHGE = 0
      DO 118 KBR = 1,NREGKB
      NKBPTS = MSHKB(KBR)
      ZDIST = XSHKB(KBR)
      YDIST2 = 0.D+0
      DO 117 IR = 1,NREGI
      NIPTS = MSHI(IR)
      U1 = NIPTS
      YDIST = XSHI(IR)
      YDIST1 = YDIST2
      YDIST2 = YDIST2+XSHI(IR)
      XDIST2 = 0.D+0
      DO 116 JR = 1,NREGJ
      XDIST1 = XDIST2
      XDIST2 = XDIST2+XSHJ(JR)
      NJPTS = MSHJ(JR)
      U2 = NJPTS
      XDIST = XSHJ(JR)
      NTOPTS = NKBPTS*NIPTS*NJPTS
      XNTOPS = FLOAT(NTOPTS)
      NRGNO = NRGNO+1
      GO TO (101,102,103,104,105,106,107,108,109,110,111,112,113,114),
     > NGEM
  101 AXYR = XDIST
      GO TO 115
  102 AXYR = 3.141593*(XDIST2**2-XDIST1**2)
      GO TO 115
  103 AXYR = 4.0*3.141593/3.0*(XDIST2**3-XDIST1**3)
      GO TO 115
  104 AXYR = 1.0
      GO TO 115
  105 GO TO 115
  106 AXYR = YDIST*XDIST
      GO TO 115
  107 AXYR = 3.141593*(XDIST2**2-XDIST1**2)*YDIST
      GO TO 115
  108 AXYR = XDIST*(YDIST2**2-YDIST1**2)/2.0
      GO TO 115
  109 AXYR = 0.3608439* ((XDIST/U2)**2+(YDIST/U1)**2+ 0.4*XDIST*YDIST/
     > (U2*U1))*XNTOPS
      GO TO 115
  110 CONTINUE
      AXYR = 0.8660254040*XDIST*YDIST
C     SQRT(3)/2 = 0.8660254040
      GO TO 115
  111 AXYR = ZDIST*YDIST*XDIST
      GO TO 115
  112 AXYR = 0.5*ZDIST*XDIST*(YDIST2**2-YDIST1**2)
      GO TO 115
  113 AXYR = 0.3608439*ZDIST*((XDIST/U2)**2+(YDIST/U1)**2+ 0.4*XDIST*
     > YDIST/(U2*U1))*XNTOPS
      GO TO 115
  114 CONTINUE
      AXYR = 0.8660254040*XDIST*YDIST*ZDIST
C     SQRT(3)/2 = 0.8660254040
  115 RVOL(NRGNO) = AXYR
      PVOL(NRGNO) = AXYR/XNTOPS
      IF ((NGEM.NE.9).OR.(NGEM.NE.13)) GO TO 116
      IF (NRGNO.EQ.1) GO TO 116
      IF (PVOL(1).NE.PVOL(NRGNO)) MESHGE = 1
  116 CONTINUE
  117 CONTINUE
  118 CONTINUE
      KB = 0
      ZZ(1) = 0.0
      ZXYR=0.D+0
      ADR = 0.0
      DO 126 KBR = 1,NREGKB
      NKBPTS = MSHKB(KBR)
      XNKPTS = FLOAT (NKBPTS)
      ZDEL = XSHKB(KBR)/XNKPTS
      DO 125 KNR = 1,NKBPTS
      KB = KB+1
      ZXYR=ZXYR+ZDEL
      IF (KB-1) 119,119,120
  119 AXYR=0.5D+0*ZDEL
      GO TO 123
  120 IF (KNR-1) 121,121,122
  121 AXYR = AXYR + 0.5*(ZDEL+ADR)
      GO TO 123
  122 AXYR=AXYR+ZDEL
  123 ZZ(KB+1)=ZXYR
      Z(KB)=AXYR
      IF (KNR-NKBPTS) 125,124,124
  124 ADR = ZDEL
  125 CONTINUE
  126 CONTINUE
      NREGIJ = NREGI
      IF (MGEM-8) 128,127,128
  127 NREGIJ = NREGJ
  128 I = 0
      YY(1) = 0.0
      ZXYR=0.D+0
      ADR = 0.0
      DO 140 IR = 1,NREGIJ
      IF (MGEM-8) 129,130,129
  129 NIPTS = MSHI(IR)
      XNIPTS = FLOAT(NIPTS)
      XDEL = XSHI(IR)/XNIPTS
      GO TO 131
  130 NIPTS = MSHJ(IR)
      XNIPTS = FLOAT(NIPTS)
      XDEL = XSHJ(IR)/XNIPTS
  131 DO 139 INR = 1,NIPTS
      I=I+1
      IF ((NGEM.NE.10).AND.(NGEM.NE.14)) GO TO 132
      Y(I) = YY(I)+H
      YY(I+1) = YY(I)+3.0*H
      PDI(I) = YY(I+1)-H
      GO TO 139
  132 CONTINUE
      ZXYR=ZXYR+XDEL
      IF (I-1) 133,133,134
  133 AXYR=0.5D+0*XDEL
      GO TO 137
  134 IF (INR-1) 135,135,136
  135 AXYR=AXYR+0.5*(XDEL+ADR)
      GO TO 137
  136 AXYR=AXYR+XDEL
  137 Y(I)=AXYR
      YY(I+1)=ZXYR
      IF (INR-NIPTS) 139,138,138
  138 ADR = XDEL
  139 CONTINUE
  140 CONTINUE
      ZTEMP = 1.0/3.0
      J = 0
      XX(1) = 0.0
      ZXYR=0.D+0
      ZDEL1 = ZZ(2)-ZZ(1)
      YDEL1 = YY(2)-YY(1)
      IF (NGEM-5) 141,141,142
  141 T1 = 1.0
      GO TO 145
  142 IF (NGEM-11) 143,144,144
  143 T1 = YDEL1
      GO TO 145
  144 T1 = YDEL1*ZDEL1
  145 CONTINUE
      YDELSQ = YY(2)**2-YY(1)**2
      NREGIJ = NREGJ
      IF (MGEM-8) 147,146,147
  146 NREGIJ = NREGI
  147 DO 157 JR = 1,NREGIJ
      IF (MGEM.EQ.8) GO TO 148
      NJPTS = MSHJ(JR)
      TEMP = PVOL(JR)/T1
      XNJPTS = FLOAT(NJPTS)
      XDEL = XSHJ(JR)/XNJPTS
      GO TO 149
  148 NJPTS = MSHI(JR)
      JS = (JR-1)*NREGJ+1
      TEMP = PVOL(JS)/T1
      XNJPTS = FLOAT(NJPTS)
      XDEL = XSHI(JR)/XNJPTS
  149 DO 156 JNR = 1,NJPTS
      J = J+1
      GO TO (150,151,154,156,156,150,151,152,150,153,150,152,150,153),
     > NGEM
  150 ZXYR=ZXYR+XDEL
      GO TO 155
  151 ZXYR= DSQRT(TEMP/3.141593+ZXYR**2)
      GO TO 155
  152 ZXYR= DSQRT(2.0*TEMP+ZXYR **2)
      GO TO 155
  153 CONTINUE
      X(J) = XX(J)+H
      XX(J+1) = X(J)+H
      GO TO 156
  154 ZXYR= (3.0*TEMP/(4.0*3.141593)+ZXYR**3)**ZTEMP
  155 CONTINUE
      XX(J+1)=ZXYR
  156 CONTINUE
  157 CONTINUE
      IF ((NGEM.EQ.10).OR.(NGEM.EQ.14)) GO TO 164
      JXLM = JMAX
      IF (MGEM.EQ.8) JXLM = IMAX
      DO 161 J = 1,JXLM
      GO TO (158,159,160,161,161,158,159,159,158,161,158,159,158,161),
     > NGEM
  158 X(J) = (XX(J+1)+XX(J))*0.5
      GO TO 161
  159 X(J) = SQRT((XX(J+1)**2+XX(J)**2)*0.5)
      GO TO 161
  160 X(J) = ((XX(J+1)**3+XX(J)**3)*0.5)**ZTEMP
  161 CONTINUE
      IF (MGEM-8) 164,162,164
  162 DO 163 N = 1,NXY
      TEMP1 = XX(N)
      TEMP2 = YY(N)
      XX(N) = TEMP2
      YY(N) = TEMP1
      TEMP1 = X(N)
      TEMP2 = Y(N)
      X(N) = TEMP2
      Y(N) = TEMP1
  163 CONTINUE
  164 CONTINUE
      IF (NOUT.NE.0) GO TO 165
      IF (INEG.GT.0) GO TO 165
      GO TO 184
  165 CONTINUE
      GO TO (166,168,169,169,169,170,173,174,175,176,177,181,182,183),
     > NGEM
  166 WRITE(IOUT,1005)XX(JMAX+1)
  167 WRITE(IOUT,1006)
      WRITE(IOUT,1007)(MSHJ(J),XSHJ(J),J=1,NREGJ)
      WRITE(IOUT,1008)JMAX
      WRITE(IOUT,1009)
      WRITE(IOUT,1010)(J,XX(J),J=2,JMXP1)
      WRITE(IOUT,1011)
      WRITE(IOUT,1010)(J,X(J),J=1,JMAX)
      GO TO 184
  168 WRITE(IOUT,1012)XX(JMAX+1)
      GO TO 167
  169 WRITE(IOUT,1013)XX(JMAX+1)
      GO TO 167
  170 WRITE(IOUT,1014)XX(JMAX+1),YY(IMAX+1)
  171 WRITE(IOUT,1006)
      WRITE(IOUT,1007)(MSHJ(J),XSHJ(J),J=1,NREGJ)
      WRITE(IOUT,1015)
      WRITE(IOUT,1007)(MSHI(I),XSHI(I),I=1,NREGI)
      WRITE(IOUT,1016)JMAX,IMAX
      WRITE(IOUT,1009)
      WRITE(IOUT,1010)(J,XX(J),J=2,JMXP1)
      WRITE(IOUT,1017)
      WRITE(IOUT,1010)(I,YY(I),I=2,IMXP1)
      WRITE(IOUT,1011)
      WRITE(IOUT,1010)(J,X(J),J=1,JMAX)
      IF (NGEM.NE.10) GO TO 172
      WRITE(IOUT,1000)
      WRITE(IOUT,1001)(I,Y(I),PDI(I),I=1,IMAX)
      GO TO 184
  172 CONTINUE
      WRITE(IOUT,1017)
      WRITE(IOUT,1010)(I,Y(I),I=1,IMAX)
      GO TO 184
  173 WRITE(IOUT,1018)XX(JMAX+1),YY(IMAX+1)
      GO TO 171
  174 WRITE(IOUT,1019)XX(JMAX+1),YY(IMAX+1)
      GO TO 171
  175 WRITE(IOUT,1020)XX(JMAX+1),YY(IMAX+1)
      GO TO 171
  176 CONTINUE
      WRITE(IOUT,1002)XX(JMAX+1),YY(IMAX+1)
      GO TO 171
  177 WRITE(IOUT,1021)XX(JMAX+1),YY(IMAX+1),ZZ(KBMAX+1)
  178 WRITE(IOUT,1006)
      WRITE(IOUT,1007)(MSHJ(J),XSHJ(J),J=1,NREGJ)
      WRITE(IOUT,1015)
      WRITE(IOUT,1007)(MSHI(I),XSHI(I),I=1,NREGI)
      WRITE(IOUT,1022)
      WRITE(IOUT,1007)(MSHKB(I),XSHKB(I),I=1,NREGKB)
      WRITE(IOUT,1023)JMAX,IMAX,KBMAX
      WRITE(IOUT,1009)
      WRITE(IOUT,1010)(J,XX(J),J=2,JMXP1)
      WRITE(IOUT,1017)
      WRITE(IOUT,1010)(I,YY(I),I=2,IMXP1)
      WRITE(IOUT,1024)
      WRITE(IOUT,1010)(KB,ZZ(KB),KB=2,KBMXP1)
      WRITE(IOUT,1011)
      WRITE(IOUT,1010)(J,X(J),J=1,JMAX)
      IF (NGEM.NE.14) GO TO 179
      WRITE(IOUT,1000)
      WRITE(IOUT,1001)(I,Y(I),PDI(I),I=1,IMAX)
      GO TO 180
  179 CONTINUE
      WRITE(IOUT,1017)
      WRITE(IOUT,1010)(I,Y(I),I=1,IMAX)
  180 CONTINUE
      WRITE(IOUT,1024)
      WRITE(IOUT,1010)(KB, Z(KB ),KB=1,KBMAX)
      GO TO 184
  181 WRITE(IOUT,1025)XX(JMAX+1),YY(IMAX+1),ZZ(KBMAX+1)
      GO TO 178
  182 WRITE(IOUT,1026)XX(JMAX+1),YY(IMAX+1),ZZ(KBMAX+1)
      GO TO 178
  183 CONTINUE
      WRITE(IOUT,1003)XX(JMAX+1),YY(IMAX+1),ZZ(KBMAX+1)
      GO TO 178
  184 CONTINUE
      IF (IND.GT.0) GO TO 194
      DO 185 J = 1,JMAX
      IF (XX(J)-XX(J+1)) 185,188,188
  185 CONTINUE
      DO 186 I = 1,IMAX
      IF (YY(I)-YY(I+1)) 186,188,188
  186 CONTINUE
      DO 187 KB = 1,KBMAX
      IF (ZZ(KB)-ZZ(KB+1)) 187,187,188
  187 CONTINUE
      GO TO 189
  188 return 1357
  189 IF (MESHGE.EQ.0) GO TO 190
      WRITE(IOUT,1027)
  190 CONTINUE
      IF ((NGEM.NE.10).AND.(NGEM.NE.14)) GO TO 194
      DO 193 I = 1,NREGI
      T1 = 2*MSHI(I)
      T2 = XSHI(I)
      DO 192 J = 1,NREGJ
      T3 = MSHJ(J)
      T4 = XSHJ(J)
      T5 = (T1*T4)/(T2*T3)
      T6 = ABS(T5-1.0)
      IF (T6.LE.0.00001) GO TO 191
      WRITE(IOUT,1004)I,J,T1,T4,T3,T2,T5
  191 CONTINUE
  192 CONTINUE
  193 CONTINUE
  194 CONTINUE
      RETURN
 1000 FORMAT('0    I   ODD J  EVEN J')
 1001 FORMAT(1X,I5,2F8.3,I5,2F8.3,I5,2F8.3,I5,2F8.3,I5,2F8.3,I5,2F8.3)
 1002 FORMAT('0 TWO DIMENSIONAL TRIANGULAR GEOMETRY (X,Y)  WIDTH',
     > 1PE14.6,'  HEIGHT',E14.6//)
 1003 FORMAT('0 THREE DIMENSIONAL TRIANGULAR GEOMETRY (X,Y,Z)  WIDTH',
     > 1PE14.6,'  HEIGHT',E14.6,'  DEPTH',E14.6//)
 1004 FORMAT('0******WARNING--TRIANGLES NOT EQULATERAL FOR HORIZONTAL-VE
     >RTICAL REGION',2I3/' 2*I, WIDTH, J, HEIGHT, AND (2*I*WIDTH)/(J*HEI
     >GHT) ARE',1P5E13.5)
 1005 FORMAT('0ONE DIMENSIONAL SLAB GEOMETRY (X)  WIDTH',1PE14.6//)
 1006 FORMAT('0  REGION SPECIFICATIONS'/ 4X,'PTS  REGION WIDTH')
 1007 FORMAT(1X,I6,1PE14.6,I6,E14.6,I6,E14.6,I6,E14.6,I6,E14.6,I6,
     > E14.6)
 1008 FORMAT('0 X-DIR. POINTS',I4)
 1009 FORMAT('0 DISTANCES TO MESH INTERVAL INTERFACES'/
     > '0    J   DIST.')
 1010 FORMAT(1X,I5,F8.3,I5,F8.3,I5,F8.3,I5,F8.3,I5,F8.3,I5,F8.3,I5,F8.3,
     > I5,F8.3,I5,F8.3)
 1011 FORMAT('0 DISTANCES TO FLUX POINTS'/ '0    J   DIST.')
 1012 FORMAT('0 ONE DIMENSIONAL CYLINDRICAL GEOMETRY (R)  WIDTH',
     > 1PE14.6//)
 1013 FORMAT('0  ONE DIMENSIONAL SPHERICAL GEOMETRY (R)  WIDTH',
     > 1PE14.6//)
 1014 FORMAT('0 TWO DIMENSIONAL SLAB GEOMETRY (X,Y)  WIDTH',1PE14.6,
     > '  HEIGHT',E14.6//)
 1015 FORMAT('0   PTS  REGION HEIGHT')
 1016 FORMAT('0  X-DIR. POINTS',I4,9X,'Y-DIR. POINTS',I4)
 1017 FORMAT('0    I   DIST.')
 1018 FORMAT('0 TWO DIMENSIONAL CYLINDRICAL GEOMETRY (R,Z)  WIDTH',
     > 1PE14.6,'  HEIGHT',E14.6//)
 1019 FORMAT('0 TWO DIMENSIONAL CIRCULAR GEOMETRY (R,THETA)  WIDTH',
     > 1PE14.6,'  HEIGHT',E14.6//)
 1020 FORMAT('0 TWO DIMENSIONAL HEXAGIONAL GEOMETRY (X,Y)  WIDTH',
     > 1PE14.6,'  HEIGHT',E14.6//)
 1021 FORMAT('0 THREE DIMENSIONAL SLAB GEOMETRY (X,Y,Z)  WIDTH',
     > 1PE14.6,'  HEIGHT',E14.6,'  DEPTH',E14.6//)
 1022 FORMAT('0   PTS  REGION DEPTH')
 1023 FORMAT('0 X-DIR. POINTS',I4,9X,'Y-DIR. POINTS',I4,9X,'Z-DIR. POINT
     >S',I4)
 1024 FORMAT('0    KB   DIST')
 1025 FORMAT('0 THREE DIMENSIONAL CYLINDRICAL GEOMETRY (R,THETA,Z)  ',
     > 'WIDTH',1PE14.6,'  HEIGHT',E14.6,'  DEPTH',E14.6//)
 1026 FORMAT('0 THREE DIMENSIONAL HEXAGIONAL GEOMETRY (X,Y,Z)  WIDTH',
     > 1PE14.6,'  HEIGHT',E14.6,'  DEPTH',E14.6//)
 1027 FORMAT('0******WARNING--REGION VOLUMES NOT EQUAL IN HEX GEOM.')
      END
CHOWE --092 ***CITATION*** GET TYPE OF EIGNVALUE CALC./ CF-CALR
C     INPUT - IND1.EQ.0 = INITIAL COND.   IND1.GT.0 = DURING CYCLE
C     OUTPUT - IND2.EQ.0 = NO INITIAL COND.   IND2.GT.0 = YES
C     OUTPUT - IHW = TYPE EIGN.   ITX = NO. ITER.   ITM = TIME
      SUBROUTINE HOWE(NCY,IND1,IND2,IHW,ITX,ITM)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
C
      DO 100 I = 44,49
      IX(I) = 0
  100 CONTINUE
      IX(23) = 0
      IX(128) = 0
      IF (NGC(11).LT.0) GO TO 101
      IX(49) = NGC(11)
      GO TO 102
  101 IX(44) = IABS(NGC(11))
  102 IF (IND1.GT.0) GO TO 107
      DO 103 I = 1,24
      IX(I+100) = IEDG(I)
  103 CONTINUE
      IF (IX(3).EQ.NGC(12)) IX(23) = 1
      EPI1 = EPI(1)
      IF (NGC(1).EQ.0) GO TO 110
      IF (NDPL(1).EQ.0) GO TO 110
      IF (NCY.GT.1) GO TO 105
      IF (NDPL(7).NE.0) GO TO 104
      IND2 = 0
      GO TO 136
  104 IND2 = 1
      IHW = NDPL(7)
      ITX = ITMX(1)
      ITM = ITMX(19)
      IF (NDPL(7).GT.0) GO TO 111
      GO TO 136
  105 IF (NDPL(8).NE.0) GO TO 106
      IND2 = 0
      GO TO 136
  106 IND2 = 1
      IHW = NDPL(8)
      ITX = ITMX(1)
      ITM = ITMX(19)
      IF (NDPL(8).GT.0) GO TO 111
      GO TO 136
  107 DO 108 I = 1,24
      IX(I+100) = IXPUT(I)
  108 CONTINUE
      EPI1 = EPI(4)
      IF (NCY.GT.1) GO TO 109
      IHW = NDPL(9)
      ITX = ITMX(2)
      ITM = ITMX(20)
      IF (NDPL(9).GT.0) GO TO 111
      GO TO 136
  109 IHW = NDPL(10)
      ITX = ITMX(2)
      ITM = ITMX(20)
      IF (NDPL(10).GT.0) GO TO 111
      GO TO 136
  110 IND2 = 1
      IHW = NGC(10)
      ITX = ITMX(1)
      ITM = ITMX(19)
      IF (NGC(10).LE.0) GO TO 136
  111 GO TO 118
  112 NOW = 1
      GO TO 117
  113 NOW = 2
      GO TO 117
  114 NOW = 3
      GO TO 117
  115 NOW = 4
      GO TO 117
  116 NOW = 5
  117 WRITE(IOUT,1000) NOW
      return
  118 IO10 = IX(77)
  119 READ(IO10,END=112) N1,N2,N3
      IF (N1.EQ.28) GO TO 121
      IF (N2.EQ.0) GO TO 119
      DO 120 I = 1,N2
      READ(IO10)
  120 CONTINUE
      GO TO 119
  121 IF (N3.EQ.0) GO TO 113
      DO 124 N=1,N3
      READ(IO10) (NSRH(I),I=1,24),X,(XSRH1(I),I=2,6)
      IF (NSRH(1).EQ.IHW) GO TO 125
      IF (NSRH(2).EQ.3) GO TO 123
      IF (NSRH(10).NE.(-1)) GO TO 124
      READ(IO10) NXZ
      READ(IO10)
      DO 122 M=1,NXZ
      READ(IO10)
  122 CONTINUE
      GO TO 124
  123 CONTINUE
      READ(IO10) NXJ,NXI,NXKB
      IF (NXJ.GT.0) READ(IO10)
      IF (NXI.GT.0) READ(IO10)
      IF (NXKB.GT.0) READ(IO10)
  124 CONTINUE
      GO TO 114
  125 IHW = NSRH(2)
      IF (X) 126,115,127
  126 XSRH1(1) = ABS(X)*XKEF1
      GO TO 128
  127 XSRH1(1) = X
  128 IF (XSRH1(1).LT.0.1.OR.XSRH1(1).GT.3.0) GO TO 116
      SPARE(50) = XSRH1(1)
      IF (NSRH(2).EQ.3) GO TO 130
      IF (NSRH(2).EQ.1.AND.NSRH(10).EQ.(-1)) IX(128) = 1
      IF (NSRH(10).NE.(-1)) GO TO 134
      IO18 = IX(85)
      REWIND IO18
      READ(IO10) (NXTR1(I),I=1,5),(XTR1(I),I=1,5)
      WRITE(IO18) (NXTR1(I),I=1,5),(XTR1(I),I=1,5)
      NXZ = NXTR1(1)
      READ(IO10) (NXTR1(I),I=1,NXZ)
      WRITE(IO18) (NXTR1(I),I=1,NXZ)
      DO 129 M=1,NXZ
      READ(IO10) (XTR1(NN),NN=1,NMAX)
      WRITE(IO18) (XTR1(NN),NN=1,NMAX)
  129 CONTINUE
      REWIND IO18
      GO TO 134
  130 CONTINUE
      IO18 = IX(85)
      REWIND IO18
      READ(IO10) (NXTR1(I),I=1,7),(XTR1(I),I=1,5)
      WRITE(IO18) (NXTR1(I),I=1,7),(XTR1(I),I=1,5)
      NXJ = NXTR1(1)
      NXI = NXTR1(2)
      NXKB = NXTR1(3)
      IF (NXJ.LE.0) GO TO 131
      READ(IO10) (XTR1(I),I=1,NXJ)
      WRITE(IO18) (XTR1(I),I=1,NXJ)
  131 IF (NXI.LE.0) GO TO 132
      READ(IO10) (XTR1(I),I=1,NXI)
      WRITE(IO18) (XTR1(I),I=1,NXI)
  132 IF (NXKB.LE.0) GO TO 133
      READ(IO10) (XTR1(I),I=1,NXKB)
      WRITE(IO18) (XTR1(I),I=1,NXKB)
  133 CONTINUE
      REWIND IO18
  134 CONTINUE
      REWIND IO10
      DO 135 I = 1,6
      IX(I+43) = NSRH(I+3)
  135 CONTINUE
  136 CONTINUE
C     NUAC(23) = MAX0(NUAC(23),1)
      T1 = IMAX*JMAX
      T2 = T1**0.25*1.5
      IA = T2
      I = IA+IX(29)/2
      IX(35) = NUAC(22)
      IF (NUAC(22).EQ.0) IX(35) = I
      IF ((IHW.LT.0).OR.(IHW.EQ.1)) NUAC(3) = 0
      RETURN
 1000 FORMAT('0ERROR STOP 21-',I3)
      END
CTAPX --050 ***CITATION*** SETS UP NUCLIDE CLASSIFICATION/ CF-IPTM
      SUBROUTINE TAPX(NJJR,NVX,NSETVX)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     > , XNAME(3,200)
C
      DIMENSION NJJR(200,NSETVX)
C
      DO 100 I = 1,100
      NXTR1(I) = 0
      NXTR2(I) = 0
  100 CONTINUE
      I1 = 0
      I2 = 0
      I3 = 0
      I4 = 0
      I5 = 0
      I6 = 0
      I7 = 0
      IADD1 = 0
      IADD2 = 4
      IADD3 = 8
      IADD4 = 10
      IADD5 = 16
      IADD6 = 29
      IADD7 = 34
      NS = 0
      DO 109 M = 1,MMAX
      NACT = NXSET(M)
      NSET = NXODR(NACT)
      IF (NSET.EQ.NS) GO TO 109
      NS = NSET
      JM = NJM(NSET)
      DO 108 NN = 1,JM
      N = NJJR(NN,NSET)
      IF ((N.EQ.8).OR.(N.EQ.10).OR.(N.EQ.14).OR.(N.EQ.16)) GO TO 101
      IF ((N.EQ.6).OR.(N.EQ.9).OR.(N.EQ.12).OR.(N.EQ.15)) GO TO 102
      IF ((N.EQ.7).OR.(N.EQ.13)) GO TO 103
      IF (N.EQ.11) GO TO 104
      IF ((N.GE.17).AND.(N.LE.21)) GO TO 104
      IF ((N.EQ.26).OR.(N.EQ.27)) GO TO 105
      IF ((N.GE.31).AND.(N.LE.35)) GO TO 105
      IF ((N.GE.37).AND.(N.LE.39)) GO TO 105
      IF ((N.GE.45).AND.(N.LE.47)) GO TO 105
      IF ((N.GE.1).AND.(N.LE.3)) GO TO 106
      IF ((N.EQ.5).OR.(N.EQ.23)) GO TO 106
      IF ((N.GE.48).AND.(N.LE.77)) GO TO 107
      GO TO 108
  101 CALL NSRT(N,I1,IADD1)
      GO TO 108
  102 CALL NSRT(N,I2,IADD2)
      GO TO 108
  103 CALL NSRT(N,I3,IADD3)
      GO TO 108
  104 CALL NSRT(N,I4,IADD4)
      GO TO 108
  105 CALL NSRT(N,I5,IADD5)
      GO TO 108
  106 CALL NSRT(N,I6,IADD6)
      GO TO 108
  107 CALL NSRT(N,I7,IADD7)
  108 CONTINUE
  109 CONTINUE
      J = 100
      DO 110 I = 1,200
      N = NXTR1(I)
      IF (N.EQ.0) GO TO 110
      J = J+1
      IXPUT(J) = NXTR1(I)
  110 CONTINUE
      IXPUT(94) = I1
      IXPUT(95) = I2
      IXPUT(96) = I3
      IXPUT(97) = I4
      IXPUT(98) = I5
      IXPUT(99) = I6
      IXPUT(100) = I7
      RETURN
      END
CDISH --082 ***CITATION*** CONTROLS INDIRECT SEARCH / CF-FLUX,KLUX
      SUBROUTINE DISH(SS1,SS2,CONC,NJJR,SS4, KVX,MVX,NVX,NSETVX)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDB,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     > , XNAME(3,200)
      COMMON/ASRCH/ BSRCH(30),XK1,XK2,XK3,XN1,XN2,XN3, DELK1,DELK2,
     > DELK3,BATTY,DRV,TBF,GWC,EK2,RCCM,DNDK(5), NSC(5),NSCN,NXZ,NXN,
     > NXM,NXS,INIL,INIU,INID
C
      DIMENSION SS1(KVX,NVX,NSETVX),SS2(KVX,NVX,NSETVX),CONC(NVX,MVX),
     > NJJR(NVX,NSETVX)
      DIMENSION SS4(KVX,NVX,NSETVX)
C
      INEG = 0
      RCCM = 1.0
      Q = XSRH1(2)
      NOB = NSRH(10)
      NOUT = NSRH(24)
      IO18 = IX(85)
      IF (NOB.EQ.(-1)) REWIND IO18
      IF (NOB.EQ.(-1)) READ(IO18) NXZ,NXN,NXM,NXS,IDUM,RCCM
      IF (NOB.EQ.(-1)) READ(IO18) (NXTR1(I),I=1,NXZ)
      IF (IX(73).EQ.2) GO TO 100
      XK1 = XK2
      XK2 = XK3
      XK3 = XKEF1
      XN1 = XN2
      XN2 = XN3
      IF (IX(73).GT.1) XN3 = CONC(NXN,NXM)
  100 CONTINUE
      IF(IX(73).LE.1)  SPARE(65) = 0.0
      IF (IX(73).LE.2) GO TO 102
      S60 = DRV
      DIF = XK3 - XK2
      IF ((ABS(S60).GT.1.0E-4).AND.(ABS(DIF).GT.1.0E-4)) GO TO 101
      GO TO 102
  101 SPARE(65) = DIF/S60
  102 CONTINUE
      DELK3 = DELK2
      DELK2 = DELK1
      DELK1 = ABS(XKEF1/XSRH1(1) - 1.0)
      SPARE(58) = 0.0
      IF (IX(73)-2) 103,137,138
  103 CONTINUE
C***********************************************************************
C     FIRST TIME IN - K FOR BASE CASE HAS BEEN CALCULATED
C***********************************************************************
      IF (DELK1.GE.EPI2) GO TO 104
      IX(75) = 1
      WRITE(IOUT,1000)
      GO TO 159
  104 CONTINUE
C     LOOK FOR ESTIMATE OF NDK/DN - IF NONE AVAILABLE USE BUILT-IN
C      PROCEDURE
C****
      IF (NSCN.LE.0) GO TO 106
      DO 105 N=1,NSCN
      IF (NSC(N).NE.NSRH(1)) GO TO 105
      QQ = DNDK(N)
      GO TO 107
  105 CONTINUE
  106 QQ = XSRH1(3)
  107 IF (QQ.EQ.0.0) GO TO 108
      IX(130) = 1
      GO TO 109
  108 IX(130) = 0
  109 CONTINUE
C****
      BATTY = BETTA
      IX(70) = 0
      IX(74) = 1
      IX(126) = 0
      SPARE(60) = 0.2
      SPARE(61) = 1.0
      SPARE(62) = 0.0
      T1 = 0.0
      ASSIGN 133 TO KAFLSM
      IF (NOB.EQ.(-1)) GO TO 132
      ASSIGN 122 TO JHCOAC
      ASSIGN 121 TO NWDIG
      INIL = 12
      INIU = 16
      INID = 18
      IF (NSRH(19).GT.0) INID = 16
      IF (NSRH(19).EQ.0) INIU = 18
  110 DO 128 M = 1,MMAX
      NS = NXSET(M)
      NR = NXODR(NS)
      NSX = NSIG2(NR)
      IF ((IX(44).EQ.0).AND.(IX(49).EQ.0)) GO TO 112
      IF (IX(49).GT.0) GO TO 111
      IF ((M.EQ.IX(44)).OR.(M.EQ.IX(45)).OR.(M.EQ.IX(46))
     > .OR.(M.EQ.IX(47)).OR.(M.EQ.IX(48))) GO TO 112
      GO TO 128
  111 IF (IX(49).NE.NCLASS(M)) GO TO 128
  112 CONTINUE
      T5 = 0.0
      T6 = 0.0
      GO TO NWDIG, (121,113,116)
  113 CONTINUE
C     OPTION 1 - FIRST DIRECT AND FIRST INDIRECT
      DO 115 N=1,NSX
      IF (NJJR(N,NR).NE.NSRH(INIL)) GO TO 114
      T5 = CONC(N,M)
      GO TO 115
  114 CONTINUE
      IF (NJJR(N,NR).NE.NSRH(INID+1)) GO TO 115
      T6 = CONC(N,M)
  115 CONTINUE
      GO TO 120
  116 CONTINUE
C     OPTION 2 - SUM OF DIRECT AND SUM OF INDIRECT
      DO 119 N=1,NSX
      DO 118 INI=INIL,INIU
      IF (NJJR(N,NR).NE.NSRH(INI)) GO TO 118
      IF (INI.GT.INID) GO TO 117
      T5 = T5 + CONC(N,M)
      GO TO 118
  117 CONTINUE
      T6 = T6 + CONC(N,M)
  118 CONTINUE
  119 CONTINUE
  120 CONTINUE
      Z = 0.0
      IF (T6.NE.0.0) Z = (-SPARE(60))*T5/T6
  121 CONTINUE
      DO 127 N=1,NSX
      DO 126 INI=INIL,INIU
      IF (NJJR(N,NR).NE.NSRH(INI)) GO TO 126
      GO TO JHCOAC, (122,123)
  122 CONTINUE
C     FIND LARGEST CONCENTRATION OF SEARCH NUCLIDE(DIRECT) IN SYSTEM
      IF (CONC(N,M).LE.T1) GO TO 126
      T1 = CONC(N,M)
      NXN = N
      NXM = M
      NXS = NR
      GO TO 126
  123 CONTINUE
C     UPDATE SEARCH NUCLIDE CONCENTRATIONS
      T1 = CONC(N,M)
      IF (INI.GT.INID) GO TO 124
      T7 = (1.0 + SPARE(60))*T1
      GO TO 125
  124 CONTINUE
      T7 = (1.0 + Z*Q)*T1
  125 CONTINUE
      CONC(N,M) = T7
      SPARE(58) = AMAX1(SPARE(58),T7)
      IF (T7.LT.0.0) INEG = 1
  126 CONTINUE
  127 CONTINUE
  128 CONTINUE
      GO TO 132
  129 CONTINUE
C     UPDATE SEARCH NUCLIDE CONCENTRATIONS AS PER RELATIVE CONCENTRATION
C      CHANGE INPUT
      DO 131 MM=1,NXZ
      M = NXTR1(MM)
      NS = NXSET(M)
      NR = NXODR(NS)
      NSX = NSIG2(NR)
      READ(IO18) (XTR1(N),N=1,NSX)
      DO 130 N=1,NSX
      IF (XTR1(N).EQ.0.0) GO TO 130
      T1 = CONC(N,M)
      T7 = T1 + SPARE(62)*XTR1(N)
      CONC(N,M) = T7
      SPARE(58) = AMAX1(SPARE(58),T7)
      IF (T7.LT.0.0) INEG = 1
  130 CONTINUE
  131 CONTINUE
  132 CONTINUE
      GO TO KAFLSM, (133,153)
  133 CONTINUE
C     DETERMINE INITIAL SEARCH DRIVING FACTOR
      XN3 = CONC(NXN,NXM)
      IF (NOB.EQ.(-1)) T1 = XN3
      IF (IX(130).GT.0) GO TO 135
      T3 = 0.0
      DO 134 K=1,KMAX
      IF (SS1(K,NXN,NXS).GT.T3) T3 = SS1(K,NXN,NXS)
  134 CONTINUE
      T30 = SS2(KMAX,NXN,NXS)*SS4(KMAX,NXN,NXS)-SS1(KMAX,NXN,NXS)
      T4 = 0.0001
      IF (T3.NE.0.0.AND.T1.NE.0.0) T4 = T1*T3
      IF ((1.2*T4-0.0001).LT.0.0) SPARE(60) = 0.0001/T4 - 1.0
      IF (T30.GT.0.0) SPARE(60) = (-SPARE(60))
      IF (XKEF1.LE.XSRH1(1)) SPARE(60) = (-SPARE(60))
      GO TO 136
  135 CONTINUE
      SPARE(60) = (XSRH1(1) - XKEF1)/QQ
  136 CONTINUE
      SPARE(62) = SPARE(60)*T1/RCCM
      GWC = SPARE(62)
      IF (NOUT.LT.0) WRITE(IOUT,1001) NXN,NXM,NXS,NJJR(NXN,NXS),T1,T3,
     > T30,T4,SPARE(60)
      GO TO 152
  137 CONTINUE
C***********************************************************************
C     SECOND TIME IN - K WITH UPDATED CONCENTRATIONS HAS BEEN
C      CALCULATED WITH ONE ITERATION IN FLUX OR KLUX
C***********************************************************************
      IF (IX(74).EQ.0) GO TO 148
      GO TO 146
  138 CONTINUE
C***********************************************************************
C     THIRD ETC. TIME IN -
C***********************************************************************
      IF (DELK1.GE.EPI2) GO TO 143
C     EXCELSIOR - WE ARE DONE
      IX(75) = 1
      BETTA = BATTY
      WRITE(IOUT,1002)
      IF (NOUT.LT.0) WRITE(IOUT,1003) SPARE(60),SPARE(61),SPARE(62)
C     SAVE ESTIMATE OF NDK/DN FOR POSSIBLE LATER USE
      QF = (XK3 - XK2)/SPARE(60)
      IF(SPARE(65).EQ.0.0) SPARE(65) = QF
C****
      IF (NSCN.GT.0) GO TO 139
      NSCN = 1
      NSC(NSCN) = NSRH(1)
      DNDK(NSCN) = SPARE(65)
      GO TO 142
  139 DO 140 N=1,NSCN
      IF (NSC(N).EQ.NSRH(1)) GO TO 141
  140 CONTINUE
      NSCN = NSCN + 1
      IF (NSCN.GT.5) NSCN = 5
      NSC(NSCN) = NSRH(1)
      DNDK(NSCN) = SPARE(65)
      GO TO 142
  141 CONTINUE
      DNDK(N) = SPARE(65)
  142 CONTINUE
C****
      WRITE(IOUT,1004) SPARE(65),QF
      GO TO 155
  143 CONTINUE
      IX(126) = 0
      IF (DELK1.GE.DELK3) IX(126) = 1
      IF (IX(73).GT.4.AND.IX(126).EQ.1) IX(74) = 0
      T1 = ABS(XKEF1 - EK2)/EK2
      IF (T1.GT.1.0E-5) GO TO 145
      SPARE(60) = 2.0*SPARE(60)
      IF (ABS(SPARE(60)).LE.1.0E-6.AND.SPARE(60).LT.0.0) GO TO 144
      SPARE(60) = 1.0E-5
      GO TO 150
  144 CONTINUE
      SPARE(60) = (-1.0E-5)
      GO TO 150
  145 CONTINUE
      IF (IX(74).EQ.0) GO TO 148
      IF (IX(73).GT.3) GO TO 151
  146 CONTINUE
C     TWO POINT APPROXIMATION
      B = DRV /((1.0+DRV)/XKEF1 - 1.0/EK2)
      IF (ABS(B).GT.1.0E+4) GO TO 147
      C = (B/EK2 - 1.0)/(1.0 + DRV)
      SPARE(60) = C*XSRH1(1)/(B - XSRH1(1)) - 1.0
      IF (SPARE(60).GT.0.0.AND.XKEF1.LT.XSRH1(1).AND.EK2.LT.XSRH1(1))
     > GO TO 148
      IF (SPARE(60).GT.0.0.AND.XKEF1.GT.XSRH1(1).AND.EK2.GT.XSRH1(1))
     > GO TO 148
      IF (SPARE(60).LE.(-1.0)) GO TO 147
      IF (NOUT.LT.0) WRITE(IOUT,1005)
      GO TO 149
  147 CONTINUE
C     IX(74) = 0
  148 CONTINUE
C     LINEAR APPROXIMATION
      IF (NOUT.LT.0) WRITE(IOUT,1006)
      SPARE(60) = DRV*(XSRH1(1)-XKEF1)/((1.0+DRV)*(XKEF1-EK2))
  149 CONTINUE
      IF (NOUT.LT.0) WRITE(IOUT,1007) IX(73),IX(74),SPARE(60),DRV,XKEF1,
     > EK2,B,C
  150 CONTINUE
      GO TO 152
  151 CONTINUE
C     THREE POINT APPROXIMATION
      IF (NOUT.LT.0) WRITE(IOUT,1008) XN3,XN2,XN1,XK3,XK2,XK1
      C1 = (XN1 - XN3)/(XN1 - XN2)
      C2 = XK1/XK2
      C3 = XK1/XK3
      C4 = C3 - 1.0 - C1*(C2 - 1.0)
      IF (ABS(C4).LT.1.0E-4) GO TO 147
      C = (C1*(XN1 - C2*XN2) - XN1 + C3*XN3)/C4
      C1 = (XN2 - C)/(XN1 - C)
      C5 = 1.0 - C2*C1
      IF (ABS(C5).LT.1.0E-4) GO TO 147
      B = (XK1*(1.0 - C1))/C5
      A = (XN1 - C)*(B - XK1)/XK1
      XND = C + A*XSRH1(1)/(B - XSRH1(1))
      SPARE(60) = XND/XN3 - 1.0
      IF (NOUT.LT.0) WRITE(IOUT,1009)
      IF (NOUT.LT.0) WRITE(IOUT,1010) IX(73),IX(74),SPARE(60),A,B,C,C4,
     > C5,XND
  152 CONTINUE
      IF (IX(73).GT.1) SPARE(62) = TBF*(SPARE(60)*(1.0 + 1.0/DRV))
      SPARE(61) = SPARE(61)*(1.0 + SPARE(60))
      IF (NOUT.LT.0) WRITE(IOUT,1011) SPARE(60),SPARE(61),SPARE(62)
      ASSIGN 153 TO KAFLSM
      IF (NOB.EQ.(-1)) GO TO 129
      ASSIGN 123 TO JHCOAC
      IF (NSRH(19).EQ.0) ASSIGN 121 TO NWDIG
      IF (NSRH(19).EQ.1) ASSIGN 113 TO NWDIG
      IF (NSRH(19).EQ.2) ASSIGN 116 TO NWDIG
      INIL = 12
      INIU = 18
      GO TO 110
  153 CONTINUE
      IF (IX(73).EQ.2) GO TO 154
      EK2 = XKEF1
      DRV = SPARE(60)
      TBF = SPARE(62)
      GO TO 155
  154 CONTINUE
      TBF = GWC + GWC*(SPARE(60)*(1.0 + 1.0/DRV))
      DRV = (SPARE(60) + 1.0)*(DRV + 1.0) - 1.0
  155 CONTINUE
      IF (NOUT.LT.0) WRITE(IOUT,1012) IX(73),EK2,DRV,TBF
      IF (INEG.EQ.0) GO TO 156
      IF (NSRH(21).GT.0) GO TO 156
      WRITE(IOUT,1013)
      CALL DIRT(CONC,NJJR,MVX,NVX,NSETVX,NXZ)
      return
  156 CONTINUE
      IF (NOUT.NE.0) CALL DIRT(CONC,NJJR,MVX,NVX,NSETVX,NXZ)
      J2 = ICLOCK(0)
      JJ = (J2 - IX(127))/6000
      IF (IX(75).EQ.1) GO TO 159
C     NOT CONVERGED BUT SET FLAG TO WRITE FLUXES IF ITERATION COUNT
C      OR TIME LIMIT HAS BEEN EXCEEDED
      IF (IX(73).GE.NSRH(3)) IX(70) = 1
      IF (JJ.GE.ITMX(21)) IX(70) = (-1)
      IF (IX(70)) 157,159,158
  157 WRITE(IOUT,1014)
      GO TO 159
  158 WRITE(IOUT,1015)
  159 CONTINUE
      IF (NOUT.LT.0) WRITE(IOUT,1016) IX(70),IX(73),IX(74),IX(75),
     > IX(126),IX(130)
      IF (NOB.EQ.(-1)) REWIND IO18
C     WHEN USING ESTIMATE OF NDK/DN - I.E. IX(130) = 1 ,
C     COUNTER MUST BE INCREMENTED - DONE IN DASH OR KASH
      RETURN
 1000 FORMAT('0NO SEARCH REQUIRED - MULTIPLICATION FACTOR SATISFIED')
 1001 FORMAT(' DB 1',4I5,1P5E15.6)
 1002 FORMAT('0INNER REACTIVITY LOOP SEARCH CONVERGED')
 1003 FORMAT(' DB 4',1P3E15.6)
 1004 FORMAT('0ESTIMATE OF N(DK/DN) SAVED',1PE15.6,'  FINAL',1PE15.6)
 1005 FORMAT(' USING TWO POINT NON-LINEAR APPROXIMATION')
 1006 FORMAT(' USING LINEAR APPROXIMATION')
 1007 FORMAT(' DB 6',2I5,1P6E15.6)
 1008 FORMAT(' C(N)=',1PE15.6,' C(N-1)=',1PE15.6,' C(N-2)=',1PE15.6 /
     > ' K(N)=',1PE15.6,' K(N-1)=',1PE15.6,' K(N-2)=',1PE15.6)
 1009 FORMAT(' USING THREE POINT NON-LINEAR APPROXIMATION')
 1010 FORMAT(' DB 8',2I5,1P7E15.6)
 1011 FORMAT(' DB 9',' CONCENTRATIONS UPDATED WITH',1P3E15.6)
 1012 FORMAT(' DB10',I5,1P3E15.6)
 1013 FORMAT('0**** SEARCH CONCENTRATION NEGATIVE **** STOP OPTION SPECI
     >FIED ****')
 1014 FORMAT('0INNER REACTIVITY LOOP SEARCH TIME LIMIT EXCEEDED')
 1015 FORMAT('0 INNER REACTIVITY LOOP SEARCH ITERATION LIMIT EXCEEDED')
 1016 FORMAT(' DB13',' IX(70)=',I5,' IX(73)=',I5,' IX(74)=',I5,
     > ' IX(75)=',I5,' IX(126)=',I5,' IX(130)=',I5)
      END
CDNSD --096***CITATION*** FLUX CALCULATION CONTROL FOR 2-D/ CF-FLUX
      SUBROUTINE DNSD(P1,P2,SOUR,NRGN,SCAC,SCAT,XII,DCONB,DCONR, PTSA,
     > BET,DEL,E1,IVX,JVX,KVX,LVX,IVXP1,JVXP1,IVZ,KVZ,IOVX,IOVZ, SPAR,
     > BIEMS,NCRP,NSPA,SIG,PVOL,NCOMP,MVX, AIO,IX3738,XLAMDA,XI,XL,B2,
     > IOADJ,IOFS,KGP1)
C
      DOUBLE PRECISION BET(211),DEL(211), P2, SCAT, SOUR, XII, CKSS,
     > XLAMDA, T2
      DOUBLE PRECISION
     >       SUMXI,TPTSA,XADB,XPDB,XS1DB,XS2DB, TL,XRDB,CS1S,CS2S,XLL1,
     > D8,XADX,YADX, XLL2,XLL3,XLL4,XLL5,XLL6,XLEK,B2LK,B3LK,B4LK,B5LK,
     > D1,D2,D3,D4,D5, D6,D7,YADB,YPDB,YLEK,YS1S,YS2S,YS1DB,YS2DB,YRDB,
     > SPR50,XLAST
C
      COMMON/ADUBP/SUMXI,TPTSA,XADB,XPDB,XS1DB,XS2DB, TL,XRDB,CS1S,CS2S,
     >  XLL1,D8,XADX,YADX, XLL2,XLL3,XLL4,XLL5,XLL6,XLEK,B2LK,B3LK,B4LK,
     >  B5LK,D1,D2,D3,D4,D5, D6,D7,YADB,YPDB,YLEK,YS1S,YS2S,YS1DB,YS2DB,
     >  YRDB,SPR50,XLAST
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XELK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDB,EPI1,EPI2, BETTA,SAMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BAT(211),DAL(211)
C
      DIMENSION P1(JVX,IVX) ,P2(JVX,IVX,KVX),NRGN(JVX,IVX), SCAC(KVX,
     > MVX,KVX),SCAT(JVX,IVX),XII(KVX),DCONB(JVX,IVXP1, IOVX),
     > DCONR(JVXP1,IVZ,IOVZ),PTSA(JVX,IVX,IOVX), SOUR(JVX,IVX)
      DIMENSION E1(LVX,KVX)
      DIMENSION SPAR(NCRP,NSPA),BIEMS(KVX)
      DIMENSION SIG(KVX,MVX,10),PVOL(LVX),NCOMP(LVX)
      DIMENSION AIO(IX3738),XI(KVX),XL(6,KVX),B2(MVX,KVX)
C
C     INRB = 1  ORDINARY
C     INRB = 2  PERIODIC(REPEATING)
C     INRB = 3  90 DEGREE ROTATIONAL
C     INRB = 4  180 DEGREE ROTATIONAL
C
      INRB = IX(72) + 1
      IO19 = IX(86)
      IF (IX(135).EQ.1) REWIND IO19
      RMX = 1.0
      RMN = 1.0
      IX37 = IX(37)
  100 DO 151 KT1 = 1,KMAX
      IF (IX37.EQ.0) GO TO 103
      READ(IOADJ) AIO
      IF (IX(71).GT.0) GO TO 101
      K = KT1
      GO TO 102
  101 K = KGP1 - KT1
  102 CONTINUE
      IX(20) = 1
      GO TO 106
  103 CONTINUE
      IF (IX(24).GT.0) GO TO 104
      K = KT1
      GO TO 105
  104 K = KGP1-KT1
  105 CONTINUE
      IX(20) = K
  106 CONTINUE
      IF (IX(5).EQ.(-5)) GO TO 113
      IF (IX(24).EQ.0) GO TO 107
      IF(IX(17).GE.1) GO TO 109
  107 CONTINUE
      DO 108 L = 1,LMAX
      M = NCOMP(L)
      E1(L,K) = XLAMDA*SIG(K,M,5)*PVOL(L)
      IF (IX(24).EQ.0) GO TO 108
      IF ((IX(17).EQ.-2).AND.(IX(71).GT.0)) E1(L,K) =SIG(K,M,5)*PVOL(L)
  108 CONTINUE
  109 CONTINUE
      IF (IX(24).GT.0) GO TO 112
C***************************SEARCH OPTIONS******************************
      IF ((IX(5).EQ.0).OR.(IX(5).GE.2)) GO TO 111
  110 XII(K) = XI(K)/SPARE(50)
      GO TO 112
  111 XII(K) = XI(K)*XLAMDA
  112 CONTINUE
      GO TO 114
  113 CONTINUE
      IF (IX(132).GT.0) READ(IOFS) SPAR
      BIEMS(K) = XLAMDA*XI(K)
  114 CONTINUE
      IF (IX(24).GT.0) GO TO 121
      KSCT1 = K-IX28
      IF (KSCT1.LE.0) KSCT1 = 1
      KSCT2 = MAX0((K-1),1)
      IF (K.GE.KXMN8) KSCT2 = KVX
C IRECV IS THE GROUP NO. WHICH CAN UPSCATTER TO GROUP 1. IT IS NOT BEING
C USED AND IS SET TO 0 IN BEGN.
      IF (K.LT.IRECV) KSCT2 = IRECV
  115 DO 118 I=1,IVX
      DO 117 J = 1,JVX
      P1(J,I) = P2(J,I,K)
      L = NRGN(J,I)
      M = NCOMP(L)
      CKSS = 0.0
      DO 116 KK = KSCT1,KSCT2
      CKSS = CKSS + SCAC(KK,M,K)*P2(J,I,KK)
  116 CONTINUE
      SCAT(J,I) = CKSS*PVOL(L) + SOUR(J,I)*XII(K)
  117 CONTINUE
  118 CONTINUE
      IF (IX(5).NE.(-5)) GO TO 126
      BM = BIEMS(K)
      NP = 0
      DO 120 I=1,IVX
      DO 119 J=1,JVX
      NP = NP + 1
      SCAT(J,I) = SCAT(J,I) + BM*SPAR(NP,1)
  119 CONTINUE
  120 CONTINUE
      GO TO 126
  121 CONTINUE
      KSCT1 = K
      IF (K.GE.KXMN8) KSCT1 = KXMN8
      KSCT2 = K+IX28
      IF (KSCT2.GT.KVX) KSCT2 = KVX
      IF (K.LT.IRECV) KSCT1 = 1
      DO 124 I = 1,IVX
      DO 123 J = 1,JVX
      L = NRGN (J,I )
      M = NCOMP(L)
      P1(J,I) = P2(J,I,K)
      CKSS = SOUR(J,I)*SIG(K,M,4)
      DO 122 KK = KSCT1,KSCT2
      CKSS = CKSS+SCAC(K,M,KK)*P2 (J,I, KK)
  122 CONTINUE
      SCAT(J,I) = CKSS*PVOL(L)
  123 CONTINUE
  124 CONTINUE
  125 CONTINUE
  126 CONTINUE
      IF (IX(135).EQ.1) WRITE(IO19) P1
  127 NOINNR = NUAC(23)
      NUAC20 = NUAC(20)
  128 DO 133 INNR = 1,NOINNR
      IF (NUAC(5).EQ.10) GO TO 132
      IF (NUAC20.EQ.2) GO TO 129
      IF (IX(72).EQ.1) GO TO 131
      IF (NUAC(5).EQ.9) GO TO 130
  129 CALL FWRD( SCAT, P2,DCONB,DCONR,PTSA, IVX,JVX,KVX, IVXP1,JVXP1,
     > IVZ,KVZ,BET,DEL,NRGN,E1,LVX, IOVX,IOVZ)
      IF (NUAC20.GT.0) GO TO 133
      CALL FXRD( SCAT, P2,DCONB,DCONR,PTSA, IVX,JVX,KVX, IVXP1,JVXP1,
     > IVZ,KVZ,BET,DEL,NRGN,E1,LVX, IOVX,IOVZ)
      GO TO 133
  130 CALL HWRD( SCAT, P2,DCONB,DCONR,PTSA, IVX,JVX,KVX, IVXP1,JVXP1,
     > IVZ,KVZ,BET,DEL,NRGN,E1,LVX, IOVX,IOVZ)
      IF (NUAC20.GT.0) GO TO 133
      CALL HXRD( SCAT, P2,DCONB,DCONR,PTSA, IVX,JVX,KVX, IVXP1,JVXP1,
     > IVZ,KVZ,BET,DEL,NRGN,E1,LVX, IOVX,IOVZ)
      GO TO 133
  131 CALL DPER(SCAT,P2,DCONB,DCONR,PTSA,NRGN,E1,BET,DEL, IVX,JVX,KVX,
     > IVXP1,JVXP1,IVZ,KVZ,LVX,IOVX,IOVZ)
      GO TO 133
  132 CONTINUE
      CALL FTRI( SCAT, P2,DCONB,DCONR,PTSA, IVX,JVX,KVX, IVXP1,JVXP1,
     > IVZ,KVZ,BET,DEL,NRGN,E1,LVX, IOVX,IOVZ)
  133 CONTINUE
  134 CONTINUE
      IF ((NUAC(3).GT.0).OR.(IX(24).GT.0)) GO TO 147
      XLL1 = 0.0
      XLL2 = 0.0
      XLL3 = 0.0
      XLL4 = 0.0
      N = IX(20)
      DO 135 M=1,MMAX
      B2(M,K) = 0.0
  135 CONTINUE
      DO 138 J = 1,JMAX
      XLL2 = XLL2+P2(J,1,K)*DCONB(J,1,N)
      T1 = DCONB(J,IMXP1,N)
      IF (NUAC(5).NE.10) GO TO 136
      IF (J.EQ.1) GO TO 138
      T1 = DCONB(J-1,IMXP1,N)
  136 CONTINUE
      IF (T1-4096.0E-13) 137,138,137
  137 XLL4 = XLL4+P2(J,IMAX,K)*T1
  138 CONTINUE
      DO 140 I = 1,IMAX
      XLL1 = XLL1+P2(1,I,K)*DCONR(1,I,N)
      T1 = DCONR(JMXP1,I,N)
      IF (T1-4096.0E-13) 139,140,139
  139 XLL3 = XLL3+P2(JMAX,I,K)*T1
  140 CONTINUE
      GO TO (141,142,143,144),INRB
  141 XLEK = XLEK + XLL1 + XLL2 + XLL3 + XLL4
      GO TO 145
  142 XLEK = XLEK + XLL2 + XLL4
      XLL1 = XLL1 - XLL3
      XLL3 = (-XLL1)
      GO TO 145
  143 XLEK = XLEK + XLL1 + XLL2
      XLL4 = (-XLL3)
      GO TO 145
  144 XLEK = XLEK + XLL1 + XLL2 + XLL4
      XLL3 = 0.0
  145 CONTINUE
      XL(1,K) = XLL1
      XL(2,K) = XLL2
      XL(3,K) = XLL3
      XL(4,K) = XLL4
      IF (NUAC(17).LE.0) GO TO 146
      CALL FINS(P2,B2,NRGN,DCONB,DCONR,SCAC,XL,IVX,JVX,KVX, LVX,IVXP1,
     > JVXP1,IVZ,IOVX,IOVZ,PVOL,NCOMP,MVX)
  146 CONTINUE
  147 CONTINUE
      DO 150 I=1,IMAX
      DO 149 J=1,JMAX
      TT1 = P1(J,I)
      T2 = P2(J,I,K)
      IF (TT1.EQ.0.0) GO TO 148
      RATO = T2/TT1
      RMX = AMAX1(RMX,RATO)
      RMN = AMIN1(RMN,RATO)
  148 CONTINUE
  149 CONTINUE
  150 CONTINUE
  151 CONTINUE
      IF (IX(135).EQ.1) REWIND IO19
      RETURN
      END
CWFLX --110 ***CITATION*** LINE RELAXATION AND SOURCE FOR 1-D  CF-FLUX
      SUBROUTINE WFLX(P1,P2,SOUR,SCAT,SCAC,DCONR,PTSA,NRGN,E1, BET,DEL,
     > XII,IVX,JVX,KVX,LVX,IVXP1,JVXP1,IVZ,KVZ,IOVX,IOVZ, SPAR,BIEMS,
     > NCRP,NSPA,SIG,PVOL,NCOMP,MVX, AIO,IX3738,XLAMDA,XI,XL,B2,IOADJ,
     > IOFS,KGP1)
C
      DOUBLE PRECISION BET(211),DEL(211),T,TEMP,TMF,P2,CKSS,SOUR,XII,
     > SCAT,XLAMDA,T2
      DOUBLE PRECISION
     >       SUMXI,TPTSA,XADB,XPDB,XS1DB,XS2DB, TL,XRDB,CS1S,CS2S,XLL1,
     > D8,XADX,YADX, XLL2,XLL3,XLL4,XLL5,XLL6,XLEK,B2LK,B3LK,B4LK,B5LK,
     > D1,D2,D3,D4,D5, D6,D7,YADB,YPDB,YLEK,YS1S,YS2S,YS1DB,YS2DB,YRDB,
     > SPR50,XLAST
C
      COMMON/ADUBP/SUMXI,TPTSA,XADB,XPDB,XS1DB,XS2DB, TL,XRDB,CS1S,CS2S,
     >  XLL1,D8,XADX,YADX, XLL2,XLL3,XLL4,XLL5,XLL6,XLEK,B2LK,B3LK,B4LK,
     >  B5LK,D1,D2,D3,D4,D5, D6,D7,YADB,YPDB,YLEK,YS1S,YS2S,YS1DB,YS2DB,
     >  YRDB,SPR50,XLAST
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XELK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDB,EPI1,EPI2, BETTA,SAMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BAT(211),DAL(211)
C
      DIMENSION P1 (JVX,IVX) ,P2 (JVX,IVX, KVX), SOUR (JVX,IVX ),
     > SCAT(JVX,IVX),SCAC(KVX,MVX,KVX),DCONR(JVXP1,IVZ,IOVZ),PTSA(JVX,
     > IVX,IOVX),NRGN(JVX,IVX),E1(LVX,KVX),XII(KVX)
      DIMENSION SPAR(NCRP,NSPA),BIEMS(KVX)
      DIMENSION SIG(KVX,MVX,10),PVOL(LVX),NCOMP(LVX)
      DIMENSION AIO(IX3738),XI(KVX),XL(6,KVX),B2(MVX,KVX)
C
      IO19 = IX(86)
      IF (IX(135).EQ.1) REWIND IO19
      RMX = 1.0
      RMN = 1.0
      IX37 = IX(37)
      DO 142 KT1 = 1,KMAX
      IF (IX37.EQ.0) GO TO 102
      READ(IOADJ) AIO
      IF (IX(71).GT.0) GO TO 100
      K = KT1
      GO TO 101
  100 K = KGP1 - KT1
  101 CONTINUE
      IX(20) = 1
      GO TO 105
  102 CONTINUE
      IF (IX(24).GT.0) GO TO 103
      K = KT1
      GO TO 104
  103 K = KGP1-KT1
  104 CONTINUE
      IX(20) = K
  105 CONTINUE
      IF (IX(5).EQ.(-5)) GO TO 112
      IF (IX(24).EQ.0) GO TO 106
      IF (IX(17).GE.1) GO TO 108
  106 CONTINUE
      DO 107 L = 1,LMAX
      M = NCOMP(L)
      E1(L,K) = XLAMDA*SIG(K,M,5)*PVOL(L)
      IF (IX(24).EQ.0) GO TO 107
      IF ((IX(17).EQ.-2).AND.(IX(71).GT.0)) E1(L,K) =SIG(K,M,5)*PVOL(L)
  107 CONTINUE
  108 CONTINUE
      IF (IX(24).GT.0) GO TO 111
C***************************SEARCH OPTIONS******************************
      IF ((IX(5).EQ.0).OR.(IX(5).GE.2)) GO TO 110
  109 XII(K) = XI(K)/SPARE(50)
      GO TO 111
  110 XII(K) = XI(K)*XLAMDA
  111 CONTINUE
      GO TO 113
  112 CONTINUE
      IF (IX(132).GT.0) READ(IOFS) SPAR
      BIEMS(K) = XLAMDA*XI(K)
  113 CONTINUE
      IF (IX(24).GT.0) GO TO 118
      KSCT1 = K-IX28
      IF (KSCT1.LE.0) KSCT1 = 1
      KSCT2 = MAX0((K-1),1)
      IF (K.GE.KXMN8) KSCT2 = KVX
C IRECV IS THE GROUP NO. WHICH CAN UPSCATTER TO GROUP 1. IT IS NOT BEING
C USED AND IS SET TO 0 IN BEGN.
      IF (K.LT.IRECV) KSCT2 = IRECV
  114 DO 116 J = 1,JVX
      P1(J,1) = P2(J,1,K)
      CKSS = SOUR(J,1)*XII(K)
      L = NRGN(J,1)
      M = NCOMP(L)
      DO 115 KK = KSCT1,KSCT2
      CKSS = CKSS + SCAC(KK,M,K)*P2(J,1,KK)*PVOL(L)
  115 CONTINUE
      SCAT(J,1) = CKSS
  116 CONTINUE
      IF (IX(5).NE.(-5)) GO TO 122
      BM = BIEMS(K)
      DO 117 J=1,JVX
      SCAT(J,1) = SCAT(J,1) + BM*SPAR(J,1)
  117 CONTINUE
      GO TO 122
  118 CONTINUE
      KSCT1 = K
      IF (K.GE.KXMN8) KSCT1 = KXMN8
      KSCT2 = K+IX28
      IF (KSCT2.GT.KVX) KSCT2 = KVX
      IF (K.LT.IRECV) KSCT1 = 1
      DO 120 J = 1,JVX
      L = NRGN (J,1)
      M = NCOMP(L)
      P1(J,1) = P2(J,1,K)
      CKSS = SOUR(J,1)*SIG(K,M,4)
      DO 119 KK = KSCT1,KSCT2
      CKSS = CKSS + SCAC(K,M,KK)*P2(J,1,KK)
  119 CONTINUE
      SCAT(J,1) = CKSS*PVOL(L)
  120 CONTINUE
  121 CONTINUE
  122 CONTINUE
      IF (IX(135).EQ.1) WRITE(IO19) P1
      N = IX(20)
      DEL(1) = 0.0
      D4 = DCONR(2,1,N)
  123 IF (P2(1,1,K)) 124,128,124
  124 BET(1) = SCAT(1,1) /D4
      M = NCOMP(1)
      IF (NUAC(19).GE.0) GO TO 126
      IF (JVX.NE.1) GO TO 125
      P2(1,1,K)=SCAT(1,1)/(PTSA(1,1,N) + E1(1,K))
      GO TO 134
  125 CONTINUE
      DEL(1) = D4/(PTSA(1,1,N)+E1(1,K))
      GO TO 128
  126 CKSS=E1(1,K)
      CKSS = CKSS + DCONR(1,1,N) + DCONR(2,1,N) + (SIG(K,M,2) + SIG(K,M,
     > 3) + SIG(K,M,9))*PVOL(1)
      IF (JVX.NE.1) GO TO 127
      P2(1,1,K)=SCAT(1,1)/CKSS
      GO TO 134
  127 CONTINUE
      DEL(1)=D4/CKSS
  128 DO 132 J = 2,JVX
      IF (P2(J,1,K)) 130,129,130
  129 DEL(J) = 0.0
      GO TO 132
  130 T=D4*DEL(J-1)
      L = NRGN(J,1)
      M = NCOMP(L)
      D4 = DCONR(J+1,1,N)
      BET(J) =( SCAT(J,1)+BET(J-1)*T)/D4
      IF (NUAC(19).GE.0) GO TO 131
      DEL(J) = D4/(PTSA(J,1,N)-T+E1(L,K))
      GO TO 132
  131 CKSS=E1(L,K)
      CKSS = CKSS + DCONR(J,1,N) + DCONR(J+1,1,N) + (SIG(K,M,2) + SIG(K,
     > M,3) + SIG(K,M,9))*PVOL(L) - T
      DEL(J)=D4/CKSS
  132 CONTINUE
      TEMP = BET(JVX)*DEL(JVX)
      P2(JVX,1,K)=TEMP
      DO 133 JJ = 2,JVX
      J = JVXP1-JJ
      TEMP = DEL(J)*(TEMP+BET(J))
      P2(J,1,K)=TEMP
  133 CONTINUE
  134 CONTINUE
      IF ((NUAC(3).GT.0).OR.(IX(24).GT.0)) GO TO 139
      XLL1 = 0.0
      XLL3 = 0.0
      DO 135 M=1,MMAX
      B2(M,K) = 0.0
  135 CONTINUE
      XLL1 = XLL1+P2(1,1,K)*DCONR(1,1,N)
      T1 = DCONR(JMXP1,1,N)
      IF (T1-4096.0E-13) 136,137,136
  136 XLL3 = XLL3+P2(JMAX,1,K)*T1
  137 CONTINUE
      XLEK = XLEK + XLL1 + XLL3
      XL(1,K) = XLL1
      XL(3,K) = XLL3
      IF (NUAC(17).LE.0) GO TO 138
      CALL FINS(P2,B2,NRGN,DCONB,DCONR,SCAC,XL,IVX,JVX,KVX, LVX,IVXP1,
     > JVXP1,IVZ,IOVX,IOVZ,PVOL,NCOMP,MVX)
  138 CONTINUE
  139 CONTINUE
      DO 141 J=1,JMAX
      TT1 = P1(J,1)
      T2 = P2(J,1,K)
      IF (TT1.EQ.0.0) GO TO 140
      RATO = T2/TT1
      RMX = AMAX1(RMX,RATO)
      RMN = AMIN1(RMN,RATO)
  140 CONTINUE
  141 CONTINUE
  142 CONTINUE
      IF (IX(135).EQ.1) REWIND IO19
      RETURN
      END
CIPRT --046 ***CITATION*** READS INPUT SECTION 040/ CF-IPTM
      SUBROUTINE IPRT(CONC,ZONEN,MJJR,NJJR,HOL, MVX,NVX,NSETVX,NVO,NUO)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     > , XNAME(3,200)
C
      DIMENSION CONC(NVX,MVX),ZONEN(NUO),MJJR(200,NSETVX), NJJR(NVX,
     > NSETVX),HOL(NVX,NSETVX,10)
C
  100 READ(IOIN,1001)(IXPUT(I),I=25,36),XPUT(101),XPUT(102),XPUT(103)
      WRITE(IOUT,1002)(IXPUT(I),I=25,36),XPUT(101),XPUT(102),XPUT(103)
C     THIS CARD REPLACES CARDS IPRT 220 THRU IPRT 360
      INSEC = 40
      IX76 = 0
      IO10 = IX(77)
      REWIND IO10
      REWIND IO3
  105 READ(IO10,END=106)
      GO TO 105
  106 BACKSPACE IO10
      IF (IXPUT(25).EQ.0) GO TO 108
  107 READ(IOIN,1003)I1,I2,J1,T1,J2,T2,J3,T3,J4,T4,J5,T5
      IF (I1.EQ.0) GO TO 108
      IX76 = IX76+1
      WRITE(IO3) I1,I2,J1,T1,J2,T2,J3,T3,J4,T4,J5,T5
      WRITE(IOUT,1004)I1,I2,J1,T1,J2,T2,J3,T3,J4,T4,J5,T5
      GO TO 107
  108 CONTINUE
      REWIND IO3
      WRITE(IO10) INSEC,IX76,IX76,IX76,IX76
      IF (IX76.EQ.0) GO TO 110
      DO 109 I = 1,IX76
      READ(IO3) I1,I2,J1,T1,J2,T2,J3,T3,J4,T4,J5,T5
      WRITE(IO10)I1,I2,J1,T1,J2,T2,J3,T3,J4,T4,J5,T5
  109 CONTINUE
  110 CONTINUE
      REWIND IO3
      IX76 = 0
      IF (IXPUT(29).EQ.0) GO TO 114
  111 CONTINUE
      IF (KMAX.GT.6) GO TO 112
      READ(IOIN,1005)(XTR1(K),K=1,KMAX)
      IF (XTR1(1).EQ.0.0) GO TO 114
      GO TO 113
  112 CONTINUE
      READ(IOIN,1005)(XTR1(K),K=1,6)
      IF (XTR1(1).EQ.0) GO TO 114
      READ(IOIN,1005)(XTR1(K),K=7,KMAX)
  113 CONTINUE
      IX76 = IX76+1
      WRITE(IO3)( XTR1(K),K=1,KMAX)
      WRITE(IOUT,1006)( XTR1(K),K=1,KMAX)
      GO TO 111
  114 CONTINUE
      IF (IX76.GT.IX(18)) NER(20) = 20
      REWIND IO3
      IXX76 = IX(18)
      IF (IX76.EQ.0) IXX76 = 0
      WRITE(IO10) INSEC,IXX76,KMAX,KMAX,KMAX
      IF (IX76.EQ.0) GO TO 118
      DO 115 I = 1,IX76
      READ(IO3)( XTR1(K),K=1,KMAX)
      WRITE(IO10)( XTR1(K),K=1,KMAX)
  115 CONTINUE
      IF (IX76.GE.IX(18)) GO TO 117
      I76 = IX(18)-IX76
      DO 116 I = 1,I76
      WRITE(IO10)(XTR1(K),K=1,KMAX)
  116 CONTINUE
  117 CONTINUE
  118 CONTINUE
      REWIND IO3
      IX76 = 2
      IF ((IXPUT(30).EQ.0).AND.(IXPUT(36).EQ.0)) GO TO 125
      REWIND IO1
      WRITE(IO1)((CONC(N,M),N=1,NMAX),M=1,MMAX)
      REWIND IO1
      IDTOR = 1
      NOPR = 0
  119 NN = 0
      NOPR = NOPR+1
      N2 = 0
  120 N1 = N2+1
      N2 = N1+23
      READ(IOIN,1007)(NXTR1(I),I=N1,N2)
      DO 121 I = N1,N2
      IF (NXTR1(N1).LT.0) GO TO 124
      IF (NXTR1(I).EQ.0) GO TO 122
      NN = NN+1
  121 CONTINUE
      GO TO 120
  122 WRITE(IO10)INSEC,IX76,NN,NMAX,MMAX
      IF (NN.EQ.0) GO TO 123
      WRITE(IO10)(NXTR1(I),I=1,NN)
  123 IF (NN.EQ.0) NN = 1
      WRITE(IOUT,1000)NOPR
      WRITE(IOUT,1008)(NXTR1(I),I=1,NN)
      CALL DENS(CONC,ZONEN,MJJR,NJJR,IDTOR, MVX,NVX,NSETVX,NVO,NUO)
      WRITE(IO10)((CONC(N,M),N=1,NMAX),M=1,MMAX)
      READ(IO1)((CONC(N,M),N=1,NMAX),M=1,MMAX)
      REWIND IO1
      GO TO 119
  124 CONTINUE
      READ(IO1)((CONC(N,M),N=1,NMAX),M=1,MMAX)
      REWIND IO1
  125 IX76 = 0
      WRITE(IO10)INSEC,IX76,NN,NMAX,MMAX
      REWIND IO3
      REWIND IO10
      RETURN
 1000 FORMAT('0PERTURBATION SPECIFICATION',I3)
 1001 FORMAT(12I3,3E12.0)
 1002 FORMAT('0PERTURBATION INPUT - SECTION 040'/1X,12I4,1P3E13.5)
 1003 FORMAT(2I6,5(I3,E9.0))
 1004 FORMAT(1X,2I4,5(I4,F7.3))
 1005 FORMAT(6E12.0)
 1006 FORMAT(1X,1P6E13.5)
 1007 FORMAT(24I3)
 1008 FORMAT(1X,42I3)
      END
CDNFC --152 ***CITATION*** PRINT DELAYED NEUTRON RATES     /CF-RERT
      SUBROUTINE DNFC(NJJR,RATE,HOL,RATAT,MVX,NVX,NSETVX,HOY)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     > , XNAME(3,200)
C
      DIMENSION NJJR(NVX,NSETVX),RATE(NVX,MVX,10),HOL(NVX,NSETVX,10) ,
     > RATAT(200,10),SUM(10),TEMP(10),HOY(NVX,NSETVX,20)
C
      REWIND IO1
      WRITE(IO1) HOY
      REWIND IO1
      REWIND IO4
      NL = IX(18)
  100 READ(IO4,END=117) N
      IF (N.GE.0) GO TO 100
      READ(IO4) HOY
      REWIND IO4
      DO 101 N=1,200
      NXTR1(N) = 0
      XTR1(N) = 0.0
      DO 101 K=1,NL
      RATAT(N,K) = 0.0
  101 CONTINUE
      DO 102 K=1,NL
      SUM(K) = 0.0
      TEMP(K) = 0.0
  102 CONTINUE
      NNN = 0
      DO 108 M=1,MMAX
      NACT = NXSET(M)
      NSET = NXODR(NACT)
      JM = NJM(NSET)
      DO 107 NN=1,JM
      N = NJJR(NN,NSET)
      XTR1(N) = XTR1(N) + RATE(NN,M,3)
      T1 = RATE(NN,M,1) - RATE(NN,M,2)
      DO 103 K=1,NL
      RATAT(N,K) = RATAT(N,K) + HOY(NN,NSET,K)*T1
  103 CONTINUE
      IF (NXTR1(1).NE.0) GO TO 104
      NXTR1(1) = N
      NNN = 1
      GO TO 106
  104 DO 105 I=1,NNN
      IF (NXTR1(I).EQ.N) GO TO 106
  105 CONTINUE
      NNN = NNN + 1
      NXTR1(NNN) = N
  106 CONTINUE
  107 CONTINUE
  108 CONTINUE
      WRITE(IOUT,1002) (K,K=1,NL)
      T1 = 0.0
      DO 115 NN=1,NNN
      N = NXTR1(NN)
      DO 111 K=1,NL
      IF (XTR1(N).EQ.0.0) GO TO 109
      TEMP(K) = RATAT(N,K)/XTR1(N)
      GO TO 110
  109 TEMP(K) = 0.0
  110 CONTINUE
      SUM(K) = SUM(K) + RATAT(N,K)
  111 CONTINUE
      T1 = T1 + XTR1(N)
      DO 113 NS=1,NSETMX
      JM = NJM(NS)
      DO 112 NUC=1,JM
      IF (N.EQ.NJJR(NUC,NS)) GO TO 114
  112 CONTINUE
  113 CONTINUE
      GO TO 115
  114 CONTINUE
      IF (HOY(NUC,NS,1).EQ.0.0) GO TO 115
      WRITE(IOUT,1000) (HOL(NUC,NS,I),I=1,6),N,(TEMP(K),K=1,NL)
  115 CONTINUE
      T2 = 0.0
      DO 116 K=1,NL
      SUM(K) = SUM(K)/T1
      T2 = T2 + SUM(K)
  116 CONTINUE
      WRITE(IOUT,1003) (SUM(K),K=1,NL)
      SPARE(87) = T2
      READ(IO1) HOY
      REWIND IO1
      WRITE(IOUT,1004) SPARE(87)
      GO TO 118
  117 WRITE(IOUT,1001)
  118 CONTINUE
      RETURN
 1000 FORMAT(1X,6A4,I6,10F10.7)
 1001 FORMAT('0****ERROR STOP NUMBER 23')
 1002 FORMAT('0'/'0',20X,'DELAYED NEUTRON FRACTION BY NUCLIDE FOR EACH D
     >ELAYED GROUP'/'0',30X,'/',20('*'),'DELAYED NEUTRON GROUP',51('*'),
     >'/'/21X,'NUCLIDE',3X,10(I3,7X))
 1003 FORMAT(1X,30X,100('-')/' GROSS DELAYED NEUTRON FRACTION',10F10.7)
 1004 FORMAT('0'/'0DELAYED FRACTION OF SOURCE NEUTRONS',F15.10)
      END
CWNSS-C-090  WRITE START OF CYCLE CONC. ON IO24
      SUBROUTINE WNSS(CONC,ZONEN,QMI, MVX,NVX,IVO,IO12,IO24,IND)
C     IND=0 - START OF CYCLE CONC.
C     IND=1 - END   OF CYCLE CONC.
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     >  , XNAME(3,200)
      COMMON/AMISS/ITMIS(20),AITMIS(20)
C
      DIMENSION CONC(NVX,MVX),ZONEN(IVO)
      DIMENSION QMI(MVX,10)
C
      N13 = IVO
      DO 100 M = 1,MVX
      IF (NZON(M).GT.1) GO TO 101
  100 CONTINUE
      N13 = 1
  101 CONTINUE
      WRITE(IO24)((CONC(N,M),N=1,NVX),M=1,MVX)
      IF (N13.LE.1) GO TO 103
      READ(IO12)
      DO 102 M = 1,MVX
      READ(IO12)
      NSZN = NZON(M)
      NACT = NXSET(M)
      NSET = NXODR(NACT)
      JM = NJM(NSET)
      NDNZ = JM*NSZN
      READ(IO12)(ZONEN(N),N=1,NDNZ)
      WRITE(IO24)(ZONEN(N),N=1,NDNZ)
  102 CONTINUE
  103 CONTINUE
      IF (IND.EQ.0) GO TO 105
      WRITE(IO24)(ITMIS(I),I=1,20),(AITMIS(I),I=1,20)
      DO 104 M = 1,MVX
      QMI(M,1) = 0.0
      QMI(M,2) = 0.0
  104 CONTINUE
      WRITE(IO24)(QMI(M,1),M=1,MVX)
      WRITE(IO24)(QMI(M,2),M=1,MVX)
  105 CONTINUE
      RETURN
      END
CSNSN --019***CITATION*** UPDATE ROUTINE/CF-RONE
CSNSN SIGF IS FISSION X-S
C  SIGA IS ABS X-S
C  SIGT IS TRANSPORT X-S
C  GNV  IS NV
C  NG   IS NUMBER OF ENERGY GROUPS
C  NGG  IS POSITION OF IN-GROUP IN SN TABLES
C  LENGTH IS LENGTH OF SN TABLES
C  PN   HAS CITATION TRANSFER MATRICES
C  NPN  IS NUMBER OF EXPANSION COEFFICIENTS FOR NUCLIDE
C  XS   IS SN X-S ARRAY---(LENGTH * NG WORDS MUST BE AVAILABLE
C  IPUN =0 SAYS PUNCH SN CROSS SECTIONS
C       =N8 PUT SN CROSS SECTIONS ON TAPE NUMBER IPUN (N8)
C  H    HAS 6 WORDS OF HOLLERITH INFORMATION ON NUCLIDE
C  SIGR IS REMOVAL CROSS SECTION
      SUBROUTINE SNSN(SIGA,SIGF,GNV,SIGT,NG,NGG,LENGTH,PN,NPN,XS,IPUN,H,
     >  SIGR,ND, IO2,IO3,IO7,IO8,IO30)
C
      COMMON/SLSUB/ DUM(1),IOIN,IOUT,IOSIG,ICITA,TX18,IPTP,ICI,IOS,IEDT,
     >  NFREC(20),TX(18),TITLE(18),NT(6),GE(10),DL(10),NRON(20),JPUN,
     > IHT, IGG,NSELP(24),I1,I2,I3,I4,KX,NX,MX,LX
C
      DIMENSION SIGA(1),SIGF(1),GNV(1),SIGT(1),PN(ND,ND,1),XS(LENGTH,1),
     >  H(6),SIGR(1)
C
      DATA N,NZ/0,0/
C
      NDS=LENGTH-NGG
      M=NPN
      IF (NPN.EQ.0) M=1
      DO 105 I=1,M
      I1=I-1
      N=N+1
      IF (IPUN.GT.0) GO TO 100
      WRITE(IO7,1000)N,I1,H
      WRITE(IOUT,1000)N,I1,H
      GO TO 101
  100 WRITE(IPUN)NG,LENGTH,NZ,N,H,(NZ,J=1,6)
      WRITE(IOUT,1001)N,NG,LENGTH,I1,H
  101 DO 104 J=1,NG
      IF (I.GT.1) GO TO 102
      XS(1,J)=SIGA(J)
      XS(2,J)=GNV(J)*SIGF(J)
      XS(3,J)=SIGR(J)+PN(J,J,1)
      GO TO 103
  102 XS(1,J)=0.0
      XS(2,J)=0.0
      XS(3,J)=0.0
  103 CALL ORDE (XS(1,J),PN(1,1,I),J,NGG,NDS,LENGTH,NG,ND)
  104 CONTINUE
      IF (IPUN.LE.0) CALL PUNS (XS,LENGTH*NG,IO7)
      IF (IPUN.GT.0) WRITE(IPUN)((XS(J,K),J=1,LENGTH),K=1,NG)
  105 CONTINUE
      RETURN
 1000 FORMAT('0$$$$SET NUMBER',I5,4X,'P',I1,' CROSS SECTION DATA',
     * 6A4)
 1001 FORMAT('0***ANISN SET',I5,5X,'NG=',I5,5X,'ITL=',I5,5X,'P',I1,
     > ' X-SECTS--',6A4)
      END
CDCAY --043 ***CITATION*** READS INPUT SECTION 034/ CF-IPTM
      SUBROUTINE DCAY(HOL,NJJR,MJJR, NVX,NSETVX)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     > , XNAME(3,200)
C
      DIMENSION HOL(NVX,NSETVX,10),NJJR(NVX,NSETVX),MJJR(200,NSETVX)
      DIMENSION NX(6),TX(6)
C
  100 WRITE(IOUT,1001)
  101 READ(IOIN,1002)NS1,NS2
      IF (NS2) 102,102,103
  102 NS2 = NS1
  103 IF (NS1) 112,112,104
  104 WRITE(IOUT,1003)NS1,NS2
  105 WRITE(IOUT,1004)
  106 READ(IOIN,1005)(NX(I),TX(I),I=1,6)
      WRITE(IOUT,1006)(NX(I),TX(I),I=1,6)
      DO 111 I = 1,6
      NS = NX(I)
  107 IF (NS) 101,101,108
  108 DO 110 M = NS1,NS2
      MM = NXODR(M)
      MS = MJJR(NS,MM)
      IF (MS.GT.0) GO TO 109
      NER(5) = 5
      WRITE(IOUT,1000)NS ,M
  109 CONTINUE
      HOL(MS,MM,10) = TX(I)
  110 CONTINUE
  111 CONTINUE
      GO TO 106
  112 RETURN
 1000 FORMAT('0NUCLIDE',I4,'  IS NOT IN CROSS SECTION SET',I3)
 1001 FORMAT('0DECAY CONSTANTS INPUT FROM CARDS')
 1002 FORMAT(24I3)
 1003 FORMAT('0  SIGMA-SETS',I3,'-',I3)
 1004 FORMAT('0    NUC DECAY CNST.')
 1005 FORMAT(6(I3,E9.5))
 1006 FORMAT(1X,6(I6,1PE13.5))
 1007 FORMAT('0',4I5,1PE13.5)
      END
CDCAX --182    ***FUEL MANAGEMENT***   DECAY ROUTINE
C     CALLED FROM/MANY
      SUBROUTINE DCAX(QD,QU,U,ND,NS,NPARNT,NDAUTR,DKAYC,NIS, N1VX,N2VX,
     > N3VX,NPDVX,NVX,NRLVX)
C     QD(N1VX,N2VX,N3VX) = STUFF TO BE DECAYED
C     QU(N1VX) = UTILITY STORAGE
C     U = DECAY TIME IN DAYS
C     ND AND NS ARE SUBSCRIPTS OF QD
      COMMON/FMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
C
      DIMENSION QD(N1VX,N2VX,N3VX),QU(N1VX),NPARNT(NPDVX), NDAUTR(NPDVX)
     >  ,DKAYC(NPDVX),NIS(30)
C
      T = U*86400.0
      DO 100 N1=1,NPDVX
      NPRL = NPARNT(N1)
      NDRL = NDAUTR(N1)
      IF (NDRL.EQ.0) GO TO 100
      CALL I120(NIS,NPRL,NDRL,N1VX,I10,I20,NPR,NDR)
      IF ((I10.EQ.0).OR.(I20.EQ.0)) GO TO 114
      IF (DKAYC(N1).NE.1.0) GO TO 100
      QD(NDR,ND,NS) = QD(NDR,ND,NS)+QD(NPR,ND,NS)
      QD(NPR,ND,NS) = 0.0
  100 CONTINUE
  101 DO 102 N = 1,N1VX
      QU(N) = QD(N,ND,NS)
  102 CONTINUE
      DO 103 N1 = 1,NPDVX
      IF (NDAUTR(N1).EQ.NPARNT(N1)) NDAUTR(N1) = 0
  103 CONTINUE
      DO 106 N1 = 1,NPDVX
      NPRL = NPARNT(N1)
      NDRL = NDAUTR(N1)
      IF (NDRL.GT.0) GO TO 106
      DO 104 I = 1,N1VX
      I1 = NIS(I)
      IF (I1.NE.NPRL) GO TO 104
      N = I
      GO TO 105
  104 CONTINUE
  105 CONTINUE
      T1 = EXP(-DKAYC(N1)*T)
      QU(N) = QU(N)*T1
  106 CONTINUE
      DO 112 N1 = 1,NPDVX
      NPRL = NPARNT(N1)
      NDRL = NDAUTR(N1)
      IF (NDRL.EQ.0) GO TO 112
      IF (DKAYC(N1).EQ.1.0) GO TO 112
      CALL I120(NIS,NPRL,NDRL,N1VX,I10,I20,NPR,NDR)
      XLNM = DKAYC(N1)
      XLTM = 0.0
      DO 107 N2 = 1,NPDVX
      N2PRL = NPARNT(N2)
      N2DRL = NDAUTR(N2)
      IF (N2PRL.NE.NDRL) GO TO 107
      XLTM = DKAYC(N2)
      IF (N2DRL.EQ.0) GO TO 108
  107 CONTINUE
  108 CONTINUE
      XLTN = XLNM
      DO 109 N2 = 1,NPDVX
      N2PRL = NPARNT(N2)
      N2DRL = NDAUTR(N2)
      IF (N2PRL.NE.NPRL) GO TO 109
      XLTN = DKAYC(N2)
      IF (N2DRL.EQ.0) GO TO 110
  109 CONTINUE
  110 CONTINUE
      A = 0.0
      T1 = XLTN-XLTM
      IF (T1.EQ.0.0) GO TO 111
      T2 = T1*T
      T3 = XLTM*T
      T4 = (1.0-EXP(-T2))/T1
      A = QD(NPR,ND,NS)*XLNM*EXP(-T3)*T4
  111 CONTINUE
      QU(NDR) = QU(NDR)+A
  112 CONTINUE
      DO 113 N = 1,N1VX
      QD(N,ND,NS) = QU(N)
  113 CONTINUE
      GO TO 115
  114 CONTINUE
      WRITE(IOUT,1000)NPRL,NDRL
      return
  115 CONTINUE
      RETURN
 1000 FORMAT('0ERROR STOP 910 - ONE OF THESE 2 NUCLIDES',2I7)
      END
CSADD --184    ***FUEL MANAGEMENT***   GET SUBZN.CONC.ARRAY PLACE
C     CALLED FROM/MANY
      SUBROUTINE SADD(M,NZINF,NJM,NSUBNO,MVX,NCI,NC,NSETVX,L)
C*****IF NCI=0 FIND SUBZONE ENTRY,   IF NCI=1 FIND FIRST ENTRY
C*****NC IS THE ENTRY TO BE RETURNED
C*****IF L = 1 SUBZONE CONC. ARE STORED FOR ONLY ONE ZONE
      COMMON/FMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
C
      DIMENSION NZINF(MVX,7),NJM(6,NSETVX),NSUBNO(MVX)
C
      NC = 0
      NSTM = NZINF(M,3)
      IF (L.LE.1) GO TO 101
      MLST = M-1
      IF (MLST.EQ.0) GO TO 101
      DO 100 MM = 1,MLST
      NSTMM = NZINF(MM,3)
      NSZ = NZINF(MM,1)
      IF (NSZ.LE.1) GO TO 100
      NN = NJM(1,NSTMM)
      NC = NC+NSZ*NN
  100 CONTINUE
  101 CONTINUE
      IF (NCI.EQ.1) GO TO 102
      NN = NJM(1,NSTM)
      NAT = NSUBNO(M)
      IF (NAT.EQ.1) GO TO 102
      NC = NC+NN*(NAT-1)
  102 CONTINUE
      RETURN
      END
CFLUX --095 ***CITATION*** EIGENVALUE-FLUX FOR 1,2-D/ CF-EIGN
      SUBROUTINE FLUX(NRGN,E1, B1,B2,B3,B4,B5,SCAC, CONC, P1,P2,DCONB,
     > DCONR,SOUR,SCAT,PTSA,NCOMP, F1,SS1,SS2,SS3,SS4, SS5,SSC,SIG,HOL,
     > ONEOV,PVOL,NJJR, BBND,BND,XI,XL,XII, IVX,JVX, KVX, LVX,MVX,NVX,
     > IVXP1,JVXP1,IVZ,KVZ,NSETVX, IOVX,IOVZ,A,MEMORY, AIO,IX3738,SPAR,
     > BIEMS,NCRP,NSPA,ZONEN,NNXTRA,NVO)
C
      DOUBLE PRECISION BET(211),DEL(211),P2,SCAT,SOUR,B1,PNM,PNM0,PNM1,
     > PNM2,XII,XLAMDA,XAAMDA,TXX1,ZPDB,XMU3
      DOUBLE PRECISION
     >       SUMXI,TPTSA,XADB,XPDB,XS1DB,XS2DB, TL,XRDB,CS1S,CS2S,XLL1,
     > D8,XADX,YADX, XLL2,XLL3,XLL4,XLL5,XLL6,XLEK,B2LK,B3LK,B4LK,B5LK,
     > D1,D2,D3,D4,D5, D6,D7,YADB,YPDB,YLEK,YS1S,YS2S,YS1DB,YS2DB,YRDB,
     > SPR50,XLAST
C
      COMMON/ADUBP/SUMXI,TPTSA,XADB,XPDB,XS1DB,XS2DB, TL,XRDB,CS1S,CS2S,
     >  XLL1,D8,XADX,YADX, XLL2,XLL3,XLL4,XLL5,XLL6,XLEK,B2LK,B3LK,B4LK,
     >  B5LK,D1,D2,D3,D4,D5, D6,D7,YADB,YPDB,YLEK,YS1S,YS2S,YS1DB,YS2DB,
     >  YRDB,SPR50,XLAST
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XELK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDB,EPI1,EPI2, BETTA,SAMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BAT(211),DAL(211)
      COMMON/AKADD/KAY(1),K1,K2,K3,K4,K5,K6,K7,K8,K9,K10,K11, K12,K13,
     > K131,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23,K24, K25,K26,K27,
     > K28,K29,K30,K31,K32,K33,K34,K35,K36,K37, K38,K39,K40,K41,K42,K43,
     >  K44,K45,K46,K47,K48,K49, K50,K51,K52,K53,K54,K55,K56,K57,K58,
     > K59, K60,K61,K62, K63,K64,K65,K66,K67,K68,K69,K70,K71,K72,K73,
     > K74,K75, K76,K77,K78,K79,K80,K81,K82,K83,K84,K85,K86,K87, K88,
     > K89,K90, K91,K92,K93,K94,K95,K96,K97,K98, K99,K100,NDATA,KNRGN,
     > KNCOMP, KPVOL,KRVOL,MEMVRY, MEMX
C
      DIMENSION E1(LVX,KVX), B1(MVX,KVX), B2(MVX, KVX) ,B3(MVX,KVX),
     > SCAC(KVX,MVX,KVX), CONC(NVX,MVX),B4(MVX,KVX), B5(MVX, KVX),
     > P1(JVX,IVX) ,P2(JVX,IVX,KVX), DCONB(JVX,IVXP1, IOVX),
     > DCONR(JVXP1,IVZ,IOVZ),NRGN(JVX,IVX), SOUR(JVX,IVX), SCAT(JVX,IVX)
     > , PTSA(JVX,IVX,IOVX),NCOMP(LVX)
      DIMENSION F1(KVX ,MVX),SS1(KVX,NVX,NSETVX), SS2(KVX,NVX,NSETVX) ,
     > SS3(KVX,NVX,NSETVX),SS4(KVX,NVX,NSETVX), SS5(KVX,NVX,NSETVX),
     > SSC(KVX,KVX,NVX),HOL(NVX,NSETVX,10), ONEOV(KVX,NSETVX),PVOL(LVX),
     >  NJJR(NVX,NSETVX),SIG(KVX,MVX,10)
      DIMENSION BBND(KVX),BND(6,KVX),XI(KVX),XL(6,KVX),XII(KVX)
      DIMENSION AIO(IX3738)
      DIMENSION A(MEMORY)
      DIMENSION SPAR(NCRP,NSPA),BIEMS(KVX)
      DIMENSION ZONEN(NVO),NNXTRA(NVX,NSETVX)
C
  100 ISTART = ICLOCK(0)
      XLAMDA = XLAMDB
      IX(129) = 0
      SPARE(29) = 1.0
      IF (IX(128).GT.0) SPARE(29) = 0.0
      SPR50 = 1.0/SPARE(50)
      SUMXI = 0.0
      DO 101 K = 1,KMAX
      SUMXI = SUMXI+XI(K)
  101 CONTINUE
      IX37 = IX(37)
      IX38 = IX(38)
      IO19 = IX(86)
      IO15 = IX(82)
      IOADJ = IO15
      IF (IX(71).GT.0) IOADJ = IO2
      IF (IX37.GT.0) REWIND IOADJ
      CALL BEGN(XL,P2,E1,XLAMDA,IVX,JVX,KVX,LVX)
      XPDB = 1.0
      YPDB = 1.0
      BETTX = BETTA
      IF (IX(198).NE.0) GO TO 102
      IF ((NGC(2).NE.0).AND.(NUAC(2).EQ.0)) GO TO 103
  102 CONTINUE
      BETTX = 1.0
      IEP = -1
  103 CONTINUE
      L211 = 211
      DO 104 N = 1,L211
      BET(N) = 0.0
      DEL(N) = 0.0
  104 CONTINUE
      IF (IX(5).NE.(-5)) GO TO 106
      DO 105 K=1,KMAX
      XII(K) = XI(K)
      XI(K) = BIEMS(K)
  105 CONTINUE
      IF (IX(132).LE.0) GO TO 106
      IOFS = IX(84)
      REWIND IOFS
  106 CONTINUE
      IRR = IX(10)
      JRR = IX(11)
      KRR = IX(13)
      IXM1=IVX-1
      JXM1=JVX-1
      NUPDTE = 0
      IEND = 0
      KGP1 = KMAX+1
      NOINNR = NUAC(23)
      NUAC20 = NUAC(20)
      PNM0 = 0.0
      PNM1 = 0.0
      CALL LOOP( P2,SOUR,NRGN,XII,IVX,JVX,KVX,LVX,XLAMDA, SIG,PVOL,
     > NCOMP,MVX)
  107 CONTINUE
      PNM2 = PNM1
      PNM1 = PNM0
      YADX = XADX
      ZPDB = YPDB
      YPDB = XPDB
      YLEK = XLEK
      YS1S = CS1S
      YS2S = CS2S
      YS1DB = XS1DB
      YS2DB = XS2DB
      XMU3 = 0.0
      XADB = 0.0
      XPDB = 0.0
      XLEK = 0.0
      XRDB = 0.0
      XS1DB = 0.0
      XS2DB = 0.0
      IF (NUAC(5).EQ.10) GO TO 108
      IF (IVX.NE.1) GO TO 108
      IF (IX(72).GT.0) GO TO 108
      CALL WFLX(P1,P2,SOUR,SCAT,SCAC,DCONR,PTSA,NRGN,E1, BET,DEL,XII,
     > IVX,JVX,KVX,LVX,IVXP1,JVXP1,IVZ,KVZ,IOVX,IOVZ, SPAR,BIEMS,NCRP,
     > NSPA,SIG,PVOL,NCOMP,MVX, AIO,IX3738,XLAMDA,XI,XL,B2,IOADJ,IOFS,
     > KGP1)
      GO TO 109
  108 CONTINUE
      CALL DNSD(P1,P2,SOUR,NRGN,SCAC,SCAT,XII,DCONB,DCONR, PTSA,BET,DEL,
     > E1,IVX,JVX,KVX,LVX,IVXP1,JVXP1,IVZ,KVZ,IOVX,IOVZ, SPAR,BIEMS,
     > NCRP,NSPA,SIG,PVOL,NCOMP,MVX, AIO,IX3738,XLAMDA,XI,XL,B2,IOADJ,
     > IOFS,KGP1)
  109 CONTINUE
      IF ((NUAC(3).GT.0).OR.(IX(24).GT.0)) GO TO 113
      CALL ABPR(P2,B1,B2,B3,B4,B5,NRGN,IVX,JVX,KVX,LVX, SIG,PVOL,NCOMP,
     > MVX)
      XELK = XLEK
      XKEF2 = XKEF1
      SPARE(43) = XLAMDA
      XPDB = XPDB*SUMXI
      IF (YPDB.NE.ZPDB) XMU3 = (XPDB-YPDB)/(YPDB-ZPDB)
      XADX = XADB+XRDB
C***************************SEARCH OPTIONS*****************************
      IF ((IX(5).EQ.0).OR.(IX(5).GE.2)) GO TO 110
      CALL GINS(B1,B3,B4,B5,KVX,LVX,XLAMDA,MVX)
      IF (IX(5).EQ.(-5)) GO TO 112
      GO TO 111
  110 CONTINUE
      XLAMDA = (XLEK+XADX)/XPDB
      XKEF1 = 1.0/XLAMDA
      VRGK1 = ABS(XKEF2/XKEF1-1.0)
  111 CONTINUE
      XABS = XADX+XLAMDA*XS1DB
      PROD = XPDB+XLAMDA*XS2DB
      SPARE(48) = XS1DB
      SPARE(49) = XS2DB
      GO TO 113
  112 CONTINUE
      PROD = XPDB
      XABS = XADX
      IF (IX(132).GT.0) REWIND IOFS
  113 CONTINUE
      IF (IX37.GT.0) REWIND IOADJ
      IF (BETTA-1.0) 114,116,114
  114 IF (IEP) 115,116,116
  115 IEP=1
  116 CONTINUE
      IX(134) = 0
      IF ((NUAC(3).GT.0).OR.(IX(24).GT.0)) GO TO 120
      XABT = ABS(XABS)
      IF ((XABT.LT.1.0E+38).AND.(XABT.GT.1.0E-10)) GO TO 120
      UP = 1.0E-30
      IF (XABT.LT.1.0E-10) UP = 1.0E+30
      IF (NI3.LE.3) GO TO 120
      IF (VRGP2.EQ.0.0) GO TO 120
      IF ((VRGP1/VRGP2).GE.1.0) GO TO 120
      DO 119 K = 1,KMAX
      DO 118 I = 1,IMAX
      DO 117 J = 1,JMAX
      P2(J,I,K) = P2(J,I,K)*UP
  117 CONTINUE
  118 CONTINUE
  119 CONTINUE
      PNM1 = PNM1*UP
      PNM2 = PNM2*UP
      IX(134) = 1
      IF (IX(5).NE.(-5)) GO TO 120
      XLAMDA = XLAMDA*UP
  120 CONTINUE
      P2RR = P2(JRR,IRR, KRR)
      IF ((P2RR.GT.0.0).AND.(P2RR.LT.1.0E+38)) GO TO 121
      WRITE(IOUT,1003)JRR,IRR, KRR,P2RR
      IF((P2RR.LE.0.0).AND.(NUAC(18).GT.0)) GO TO 121
      return
  121 CONTINUE
      NUPDTE = NUPDTE+1
      IF (NSRH(11).EQ.0) NUPDTE = -1
      CALL LOOP( P2,SOUR,NRGN,XII,IVX,JVX,KVX,LVX,XLAMDA, SIG,PVOL,
     > NCOMP,MVX)
      IF (RMN.GE.0.0) GO TO 122
      IF(NUAC(18).GT.0) GO TO 122
      WRITE(IOUT,1003)
      return
  122 CONTINUE
      PNM0 = P2(JRR,IRR,KRR)
      P2DOM = 2.0*PNM1-PNM2-PNM0
      IF (P2DOM.NE.0.0) PNM = (PNM0-PNM1)/P2DOM
      SPARE(35) = PNM
      IF (IX(5).GE.2.AND.IX(73).EQ.2) GO TO 135
      CALL EXTR
      IX(129) = 0
      XT1 = SPARE(31)
      XT2 = SPARE(32)
      XT3 = SPARE(33)
      XT4 = SPARE(34)
      IF (IX(32)) 135,135,123
  123 CONTINUE
      IEP = -1
      REWIND IO19
      DO 128 KT1=1,KMAX
      IF (IX(24).GT.0) GO TO 124
      K = KT1
      GO TO 125
  124 K = KGP1 - KT1
  125 CONTINUE
      READ(IO19) P1
      DO 127 I = 1,IMAX
      DO 126 J = 1,JMAX
      T1 = P1(J,I)
      IF (IX(134).EQ.1) T1 = T1*UP
      P2(J,I,K) = P2(J,I,K)+(P2(J,I,K)- T1)*EXFC1
  126 CONTINUE
  127 CONTINUE
  128 CONTINUE
      REWIND IO19
      IF ((NUAC(3).GT.0).OR.(IX(24).GT.0)) GO TO 134
      D1 = XPDB+(XPDB-YPDB)*EXFC1
      D2 = XADX+(XADX-YADX)*EXFC1
      D3 = XLEK+(XLEK-YLEK)*EXFC1
C***************************SEARCH OPTIONS*****************************
      IF ((IX(5).EQ.0).OR.(IX(5).GE.2)) GO TO 131
      IF (IX(5).EQ.(-5)) GO TO 132
      D6 = XS1DB+(XS1DB-YS1DB)*EXFC1
      D7 = XS2DB+(XS2DB-YS2DB)*EXFC1
      D8 = XLAMDA
      TL = D2+D3+D8*D6
      XKEF1 = (D1+D8*D7)/TL
      XAAMDA = (SPR50*D1-D2-D3)/( D6 -SPR50*D7)
      TXX1 = SPARE(51)
      IF (SPARE(51).GT.0.0) GO TO 129
      XLAMDA = DMAX1(XAAMDA,TXX1)
      GO TO 130
  129 CONTINUE
      XLAMDA = DMIN1(XAAMDA,TXX1)
  130 CONTINUE
      GO TO 134
  131 CONTINUE
      XLAMDA = (D3+D2)/D1
      XKEF1 = 1.0/XLAMDA
      GO TO 134
  132 CONTINUE
      D8 = (D3 + D2 - D1)/SPARE(88)
      IF (D8.GE.0.0) GO TO 133
      IF (D8.LT.XLAMDA) GO TO 134
  133 XLAMDA = D8
  134 CONTINUE
      CALL LOOP( P2,SOUR,NRGN,XII,IVX,JVX,KVX,LVX,XLAMDA, SIG,PVOL,
     > NCOMP,MVX)
  135 CONTINUE
      IF (NUAC(3)) 137,137,136
  136 CONTINUE
      CALL RDUE(SCAC, RESLM,RESSA, P2 ,NRGN , SOUR ,DCONR ,DCONB ,XI,
     > IVX,JVX,KVX,LVX,IVXP1,JVXP1,IVZ,KVZ, IOVX,IOVZ,A,MEMORY,AIO,
     > IX3738,XLAMDA, SIG,PVOL,NCOMP,MVX)
  137 CONTINUE
      INOW = ICLOCK(0)
      XWACH = (FLOAT(INOW)-FLOAT(ISTART))/6000.0
      SPARE(66) = XWACH
      T1 = ABS(2.0*VRG1)
      T2 = ABS(VRGABS)
      IF (T1-T2) 139,139,138
  138 VRGABS = T1
  139 CONTINUE
      CALL RQED(IX(101),IND)
      IF (IND.NE.0) GO TO 140
      CALL ITED(XLAMDA,XMU3,BETTX,XT1,XT2,XT3)
  140 CONTINUE
      IF (IX(5).GE.2.AND.IX(73).EQ.2) GO TO 169
  141 IWACH = (INOW-ISTART)/6000
      IS1 = 0
      IF (IX(6)) 143,143,142
  142 NR = 16
      GO TO 161
  143 CONTINUE
      IF (IEND.GT.0) GO TO 151
      IF (IX(5).NE.1) GO TO 145
      UPSIG = 0
      IF (NUPDTE.LT.NSRH(11)) GO TO 145
      IF (NIIT.GT.0) GO TO 145
      NGOTO = 1
      NUPDTE = 0
  144 CONTINUE
      CALL UDTE(CONC,SS1,SS2,SS3,SS4,SS5,SSC,SIG,HOL,ONEOV, SCAC,NJJR,
     > BND,BBND,ZONEN,NNXTRA,XI,XLAMDA,A(K19), MVX,NVX,KVX,NSETVX,NVO)
      CALL CNST(NRGN, SCAC,DCONB, DCONR,F1,SIG, PTSA,NCOMP,PVOL,BBND,
     > BND, IVX,JVX,KVX,LVX,MVX,IVXP1,JVXP1,IVZ, KVZ, IOVX,IOVZ,A,
     > MEMORY,AIO,IX3738)
      IX(129) = 1
      UPSIG = 1
      GO TO (145,150),NGOTO
  145 CONTINUE
      BETTX = BETTA
      IF (IEP.LT.0) BETTX = 1.0
      IF (NI3.LT.3) GO TO 146
      IF (VRGP1.GE.EPI1) GO TO 146
      IF (VRGK1.GE.EPI2) GO TO 146
      GO TO 148
  146 IF (IWACH.GE.ITIME) GO TO 147
      IF (NIT.GE.ITMAX) GO TO 147
      GO TO 107
  147 IS1 = 1
  148 CONTINUE
  149 CONTINUE
C**************************SEARCH OPTION********************************
      IF (IX(5).NE.1) GO TO 152
      IF (UPSIG.EQ.1) GO TO 150
      NGOTO = 2
      GO TO 144
  150 IF (NSRH(11).EQ.0) GO TO 151
      IEND = 1
      GO TO 107
  151 CONTINUE
  152 CONTINUE
      IF (IX(24).EQ.0) SPARE(56) = XLEK+XABS
      CALL RQED(IX(101),IND)
      IF (IND.EQ.0) GO TO 153
      CALL ITED(XLAMDA,XMU3,BETTX,XT1,XT2,XT3)
  153 CONTINUE
C***************************SEARCH OPTIONS******************************
      IF ((IX(5).EQ.0).OR.(IX(5).GE.2)) GO TO 154
      IF (IX(5).EQ.(-5)) GO TO 156
      GO TO 157
  154 CONTINUE
      IF (IX(24).EQ.0) GO TO 155
      WRITE(IOUT,1004) XWACH
      GO TO 157
  155 CONTINUE
      WRITE(IOUT,1005) XWACH
      GO TO 157
  156 WRITE(IOUT,1000) XWACH
  157 CONTINUE
      IF (IX(5).NE.1) GO TO 158
C*****CALL EDSR(CONC,NJJR,MVX,NVX,NSETVX)
  158 CONTINUE
      IF (IS1) 163,163,159
  159 CONTINUE
      IF (NGC(15).EQ.0) GO TO 162
      IF (NGC(15).EQ.2) GO TO 160
      IF (VRGP2.EQ.0.0) GO TO 162
      IF ((VRGP1/VRGP2).GE.1.0) GO TO 160
      GO TO 162
  160 NR = 13
  161 WRITE(IOUT,1006)NR
      return
  162 CONTINUE
      WRITE(IOUT,1001)
  163 CONTINUE
      IF (NUAC(3).EQ.0) GO TO 164
      WRITE(IOUT,1002)
      return
  164 IF (NGC(18)) 166,165,165
  165 CONTINUE
      IF (IX(5).EQ.(-5)) GO TO 166
      CALL RDUE(SCAC, RESLM,RESSA, P2 ,NRGN , SOUR ,DCONR ,DCONB ,XI,
     > IVX,JVX,KVX,LVX,IVXP1,JVXP1,IVZ,KVZ, IOVX,IOVZ,A,MEMORY,AIO,
     > IX3738,XLAMDA, SIG,PVOL,NCOMP,MVX)
      WRITE(IOUT,1008)RESSA,RESLM
  166 CONTINUE
      XLAMDB = XLAMDA
      IF (IX(5).NE.(-5)) GO TO 168
      DO 167 K=1,KMAX
      BIEMS(K) = XI(K)
      XI(K) = XII(K)
  167 CONTINUE
  168 CONTINUE
  169 CONTINUE
      RETURN
 1000 FORMAT('0END OF FIXED SOURCE CALCULATION - ITERATION TIME',0PF7.3,
     > ' MINUTES')
 1001 FORMAT('0'/'0**********WARNING - FLUX CALCULATION NOT CONVERGED **
     >********'//////)
 1002 FORMAT('0FLUX CALCULATION WAS DONE WITH THE RESIDUES - CALLING EXI
     >T NOW')
 1003 FORMAT('0ERROR STOP NUMBER 12',3I4,1PE13.5)
 1004 FORMAT('0END OF ADJOINT CALCULATION - ITERATION TIME',0PF7.3,
     > ' MINUTES')
 1005 FORMAT('0END OF EIGENVALUE CALCULATION - ITERATION TIME',0PF7.3,
     > ' MINUTES')
 1006 FORMAT('0ERROR STOP',I3)
 1007 FORMAT('0',73X,'NEUTRON BALANCE KEFFECTIVE',0PF14.7)
 1008 FORMAT('0CONVERGENCE INDICATION BY MINIMIZING THE SUM OF THE SQUAR
     >ES OF THE RESIDUES - RELATIVE ABSORPTION',F11.7,'   K',F11.7)
      END
CKLUX --111 ***CITATION*** EIGENVALUE-FLUX FOR 3-D/ CF-EIGN
      SUBROUTINE KLUX(NRGNE,E1, B1,B2,B3,B4,B5, SCAC,CONC, P1E,P2E,
     > DCONBE,DCONRE,DCONBK,SOURE,SCATE,PTSAE,NCOMP, F1,SS1,SS2,SS3,SS4,
     > SS5,SSC,SIG,HOL,ONEOV,PVOL,NJJR, BBND,BND,XI, XL,XII, IVX,JVX,
     > KBVX,KVX,LVX,MVX,NVX,IVXP1,JVXP1,KBVXP1,IVZ,KVZ, NSETVX, JIVX,
     > JIP1VX,JP1IXZ,IOVX,IOVZ,A,MEMORY,AIO,IX3738, SPAR, BIEMS,NCRP,
     > NSPA,ZONEN,NNXTRA,NVO)
C
      DOUBLE PRECISION XLAMDA,XAAMDA,XII,TXX1,B1,ZPDB,XMU3
      DOUBLE PRECISION
     >       SUMXI,TPTSA,XADB,XPDB,XS1DB,XS2DB, TL,XRDB,CS1S,CS2S,XLL1,
     > D8,XADX,YADX, XLL2,XLL3,XLL4,XLL5,XLL6,XLEK,B2LK,B3LK,B4LK,B5LK,
     > D1,D2,D3,D4,D5, D6,D7,YADB,YPDB,YLEK,YS1S,YS2S,YS1DB,YS2DB,YRDB,
     > SPR50,XLAST
C
      COMMON/ADUBP/SUMXI,TPTSA,XADB,XPDB,XS1DB,XS2DB, TL,XRDB,CS1S,CS2S,
     >  XLL1,D8,XADX,YADX, XLL2,XLL3,XLL4,XLL5,XLL6,XLEK,B2LK,B3LK,B4LK,
     >  B5LK,D1,D2,D3,D4,D5, D6,D7,YADB,YPDB,YLEK,YS1S,YS2S,YS1DB,YS2DB,
     >  YRDB,SPR50,XLAST
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XELK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDB,EPI1,EPI2, BETTA,SAMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
      COMMON/AKADD/KAY(1),K1,K2,K3,K4,K5,K6,K7,K8,K9,K10,K11, K12,K13,
     > K131,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23,K24, K25,K26,K27,
     > K28,K29,K30,K31,K32,K33,K34,K35,K36,K37, K38,K39,K40,K41,K42,K43,
     >  K44,K45,K46,K47,K48,K49, K50,K51,K52,K53,K54,K55,K56,K57,K58,
     > K59, K60,K61,K62, K63,K64,K65,K66,K67,K68,K69,K70,K71,K72,K73,
     > K74,K75, K76,K77,K78,K79,K80,K81,K82,K83,K84,K85,K86,K87, K88,
     > K89,K90, K91,K92,K93,K94,K95,K96,K97,K98, K99,K100,NDATA,KNRGN,
     > KNCOMP, KPVOL,KRVOL,MEMVRY, MEMX
C
      DIMENSION NRGNE(JVX,IVX,KBVX),E1(LVX,KVX), B1(MVX,KVX),B2(MVX,KVX)
     > ,B3(MVX,KVX),SCAC(KVX,MVX,KVX),CONC(NVX, MVX),P1E(JIVX ,KBVX) ,
     > P2E(JIVX ,KBVX,KVX), DCONBE(JIP1VX , KBVX,IOVX),DCONRE(JP1IXZ ,
     > KBVX,IOVZ),DCONBK(JIVX , KBVXP1,IOVX), SOURE(JVX,IVX,KBVX),
     > SCATE(JVX,IVX,KBVX),PTSAE(JIVX ,KBVX,IOVX), B4(MVX,KVX),B5(MVX,
     > KVX),NCOMP(LVX)
      DIMENSION F1(KVX ,MVX),SS1(KVX,NVX,NSETVX), SS2(KVX,NVX,NSETVX) ,
     > SS3(KVX,NVX,NSETVX),SS4(KVX,NVX,NSETVX), SS5(KVX,NVX,NSETVX),
     > SSC(KVX,KVX,NVX),HOL(NVX,NSETVX,10), ONEOV(KVX,NSETVX),PVOL(LVX),
     >  NJJR(NVX,NSETVX),SIG(KVX,MVX,10)
      DIMENSION BBND(KVX),BND(6,KVX),XI(KVX),XL(6,KVX),XII(KVX)
      DIMENSION A(MEMORY)
      DIMENSION AIO(IX3738)
      DIMENSION SPAR(NCRP,NSPA),BIEMS(KVX)
      DIMENSION ZONEN(NVO),NNXTRA(NVX,NSETVX)
C
  100 ISTART = ICLOCK(0)
      XLAMDA = XLAMDB
      IX(129) = 0
      SPARE(29) = 1.0
      IF (IX(128).GT.0) SPARE(29) = 0.0
      SPR50 = 1.0/SPARE(50)
      SUMXI = 0.0
      DO 101 K = 1,KMAX
      SUMXI = SUMXI+XI(K)
  101 CONTINUE
      IX37 = IX(37)
      IX38 = IX(38)
      IO19 = IX(86)
      IO15 = IX(82)
      IOADJ = IO15
      IF (IX(71).GT.0) IOADJ = IO2
      IF (IX37.GT.0) REWIND IOADJ
      CALL KEGN(XL,P2E,E1,XLAMDA,IVX,JVX,KBVX,KVX,LVX,JIVX)
      XPDB = 1.0
      YPDB = 1.0
      BETTX = BETTA
      IF (IX(198).NE.0) GO TO 102
      IF ((NGC(2).NE.0).AND.(NUAC(2).EQ.0)) GO TO 103
  102 CONTINUE
      BETTX = 1.0
      IEP = -1
  103 CONTINUE
      IF (IX(5).NE.(-5)) GO TO 105
      DO 104 K=1,KMAX
      XII(K) = XI(K)
      XI(K) = BIEMS(K)
  104 CONTINUE
      IF (IX(132).LE.0) GO TO 105
      IOFS = IX(84)
      REWIND IOFS
  105 CONTINUE
      IRR = IX(10)
      JRR = IX(11)
      KBRR = IX(12)
      KRR = IX(13)
      NRR= (IRR-1)*JVX + JRR
      NUPDTE = 0
      IEND = 0
      KGP1 = KMAX+1
      PNM0 = 0.0
      PNM1 = 0.0
      CALL KOOP( P2E,SOURE,NRGNE,XII,IVX,JVX,KBVX,KVX, LVX,JIVX,XLAMDA,
     > SIG,PVOL,NCOMP,MVX)
  106 CONTINUE
      PNM2 = PNM1
      PNM1 = PNM0
      YADX = XADX
      ZPDB = YPDB
      YPDB = XPDB
      YLEK = XLEK
      YS1S = CS1S
      YS2S = CS2S
      YS1DB = XS1DB
      YS2DB = XS2DB
      XMU3 = 0.0
      XADB = 0.0
      XPDB = 0.0
      XLEK = 0.0
      XRDB = 0.0
      XS1DB = 0.0
      XS2DB = 0.0
      CALL KNSD(SCATE,P2E,DCONBE,DCONRE,DCONBK,PTSAE,SOURE,NRGNE, XII,
     > SCAC,P1E,E1,IVX,JVX,KBVX,KVX,IVXP1,JVXP1,KBVXP1,LVX, JIVX,JIP1VX,
     > JP1IXZ,IOVX,IOVZ,SPAR,BIEMS,NCRP,NSPA, SIG,PVOL,NCOMP,MVX,AIO,
     > IX3738,XLAMDA,XI,XL,B2,IOADJ,IOFS,KGP1)
      IF ((NUAC(3).GT.0).OR.(IX(24).GT.0)) GO TO 110
      CALL KBPR(P2E,B1,B2,B3,B4,B5,NRGNE,JVX,IVX,KBVX,KVX, LVX,JIVX,SIG,
     > PVOL,NCOMP,MVX)
      XELK = XLEK
      XKEF2 = XKEF1
      SPARE(43) = XLAMDA
      XPDB = XPDB*SUMXI
      IF (YPDB.NE.ZPDB) XMU3 = (XPDB-YPDB)/(YPDB-ZPDB)
      XADX = XADB + XRDB
C***************************SEARCH OPTIONS*****************************
      IF ((IX(5).EQ.0).OR.(IX(5).GE.2)) GO TO 107
      CALL GINS(B1,B3,B4,B5,KVX,LVX,XLAMDA,MVX)
      IF (IX(5).EQ.(-5)) GO TO 109
      GO TO 108
  107 CONTINUE
      XLAMDA = (XLEK+XADX)/XPDB
      XKEF1 = 1.0/XLAMDA
      VRGK1 = ABS(XKEF2/XKEF1-1.0)
  108 CONTINUE
      XABS = XADX + XLAMDA*XS1DB
      PROD = XPDB + XLAMDA*XS2DB
      SPARE(48) = XS1DB
      SPARE(49) = XS2DB
      GO TO 110
  109 CONTINUE
      PROD = XPDB
      XABS = XADX
      IF (IX(132).GT.0) REWIND IOFS
  110 CONTINUE
      IF (IX37.GT.0) REWIND IOADJ
      IF (BETTA-1.0) 111,113,111
  111 IF (IEP) 112,113,113
  112 IEP=1
  113 CONTINUE
  114 CONTINUE
      IX(134) = 0
      IF ((NUAC(3).GT.0).OR.(IX(24).GT.0)) GO TO 119
      XABT = ABS(XABS)
      IF ((XABT.LT.1.0E+38).AND.(XABT.GT.1.0E-10)) GO TO 119
      UP = 1.0E-30
      IF (XABT.LT.1.0E-10) UP = 1.0E+30
      IF (NI3.LE.3) GO TO 119
      IF (VRGP2.EQ.0.0) GO TO 119
      IF ((VRGP1/VRGP2).GE.1.0) GO TO 119
      DO 118 K = 1,KMAX
      DO 117 KB = 1,KBMAX
      N1 = 0
      DO 116 I = 1,IMAX
      DO 115 J = 1,JMAX
      N1 = N1+1
      P2E(N1,KB,K) = P2E(N1,KB,K)*UP
  115 CONTINUE
  116 CONTINUE
  117 CONTINUE
  118 CONTINUE
      PNM1 = PNM1*UP
      PNM2 = PNM2*UP
      IX(134) = 1
      IF (IX(5).NE.(-5)) GO TO 119
      XLAMDA = XLAMDA*UP
  119 CONTINUE
      P2RR = P2E(NRR ,KBRR,KRR)
      IF ((P2RR.GT.0.0).AND.(P2RR.LT.1.0E+38)) GO TO 120
      WRITE(IOUT,1002)JRR,IRR,KBRR,KRR,P2RR
      IF((P2RR.LE.0.0).AND.(NUAC(18).GT.0)) GO TO 120
      return
  120 CONTINUE
      NUPDTE = NUPDTE+1
      IF (NSRH(11).EQ.0) NUPDTE = -1
  121 CONTINUE
      CALL KOOP( P2E,SOURE,NRGNE,XII,IVX,JVX,KBVX,KVX, LVX,JIVX,XLAMDA,
     > SIG,PVOL,NCOMP,MVX)
      IF (RMN.GE.0.0) GO TO 122
      WRITE(IOUT,1002)
      IF(NUAC(18).GT.0) GO TO 122
      return
  122 CONTINUE
      PNM0 = P2E(NRR ,KBRR,KRR)
      P2DOM = 2.0*PNM1-PNM2-PNM0
      IF (P2DOM.NE.0.0) PNM = (PNM0-PNM1)/P2DOM
      SPARE(35) = PNM
      IF (IX(5).GE.2.AND.IX(73).EQ.2) GO TO 136
      CALL EXTR
      IX(129) = 0
      XT1 = SPARE(31)
      XT2 = SPARE(32)
      XT3 = SPARE(33)
      XT4 = SPARE(34)
      IF (IX(32)) 136,136,123
  123 CONTINUE
      REWIND IO19
      IEP = -1
      DO 129 KT1=1,KMAX
      IF (IX(24).GT.0) GO TO 124
      K = KT1
      GO TO 125
  124 K=KGP1 - KT1
  125 CONTINUE
      READ(IO19) P1E
      DO 128 KB = 1,KBMAX
      N1= 0
      DO 127 I = 1,IMAX
      DO 126 J = 1,JMAX
      N1= N1 + 1
      T1 = P1E(N1,KB)
      IF (IX(134).EQ.1) T1 = T1*UP
      P2E(N1 ,KB,K) = P2E(N1 ,KB,K)+(P2E(N1 ,KB,K)- T1)*EXFC1
  126 CONTINUE
  127 CONTINUE
  128 CONTINUE
  129 CONTINUE
      REWIND IO19
      IF ((NUAC(3).GT.0).OR.(IX(24).GT.0)) GO TO 135
      D1 = XPDB+(XPDB-YPDB)*EXFC1
      D2 = XADX + (XADX-YADX)*EXFC1
      D3 = XLEK+(XLEK-YLEK)*EXFC1
C***************************SEARCH OPTIONS*****************************
      IF ((IX(5).EQ.0).OR.(IX(5).GE.2)) GO TO 132
      IF (IX(5).EQ.(-5)) GO TO 133
      D6 = XS1DB+(XS1DB-YS1DB)*EXFC1
      D7 = XS2DB+(XS2DB-YS2DB)*EXFC1
      D8 = XLAMDA
      TL = D2+D3+D8*D6
      XKEF1 = (D1+D8*D7)/TL
      XAAMDA = (SPR50*D1-D2-D3)/(D6-SPR50*D7)
      TXX1 = SPARE(51)
      IF (SPARE(51).GT.0.0) GO TO 130
      XLAMDA = DMAX1(XAAMDA,TXX1)
      GO TO 131
  130 XLAMDA = DMIN1(XAAMDA,TXX1)
  131 CONTINUE
      GO TO 135
  132 CONTINUE
      XLAMDA = (D3+D2)/D1
      XKEF1 = 1.0/XLAMDA
      GO TO 135
  133 CONTINUE
      D8 = (D3 + D2 - D1)/SPARE(88)
      IF (D8.GE.0.0) GO TO 134
      IF (D8.LT.XLAMDA) GO TO 135
  134 XLAMDA = D8
  135 CONTINUE
      CALL KOOP( P2E,SOURE,NRGNE,XII,IVX,JVX,KBVX,KVX, LVX,JIVX,XLAMDA,
     > SIG,PVOL,NCOMP,MVX)
  136 CONTINUE
      IF (NUAC(3)) 138,138,137
  137 CONTINUE
      CALL KDUE(SCAC, RESLM,RESSA, P2E,NRGNE, SOURE,DCONRE,DCONBE,
     > DCONBK,XI, IVX,JVX,KBVX,KVX,LVX,IVXP1,JVXP1, KBVXP1,IVZ,KVZ,
     > JIVX,JIP1VX,JP1IXZ,IOVX,IOVZ,A,MEMORY,AIO,IX3738, XLAMDA,SIG,
     > PVOL,NCOMP,MVX)
  138 CONTINUE
      INOW = ICLOCK(0)
      XWACH = (FLOAT(INOW)-FLOAT(ISTART))/6000.0
      SPARE(66) = XWACH
      T1 = ABS(2.0*VRG1)
      T2 = ABS(VRGABS)
      IF (T1-T2) 140,140,139
  139 VRGABS = T1
  140 CONTINUE
      CALL RQED(IX(101),IND)
      IF (IND.NE.0) GO TO 141
      CALL ITED(XLAMDA,XMU3,BETTX,XT1,XT2,XT3)
  141 CONTINUE
      IF (IX(5).GE.2.AND.IX(73).EQ.2) GO TO 169
  142 IWACH = (INOW-ISTART)/6000
      IS1 = 0
      IF (IX(6)) 144,144,143
  143 NR = 16
      GO TO 161
  144 CONTINUE
      IF (IEND.GT.0) GO TO 152
      IF (IX(5).NE.1) GO TO 146
      UPSIG = 0
      IF (NUPDTE.LT.NSRH(11)) GO TO 146
      IF (NIIT.GT.0) GO TO 146
      NGOTO = 1
      NUPDTE = 0
  145 CONTINUE
      CALL UDTE(CONC,SS1,SS2,SS3,SS4,SS5,SSC,SIG,HOL,ONEOV, SCAC,NJJR,
     > BND,BBND,ZONEN,NNXTRA,XI,XLAMDA,A(K19), MVX,NVX,KVX,NSETVX,NVO)
      CALL KNST(NRGNE, SCAC,DCONBE, DCONRE, DCONBK,F1,SIG,PTSAE,NCOMP,
     > PVOL,BBND,BND,IVX,JVX,KBVX,KVX,LVX, MVX,IVXP1,JVXP1,KBVXP1,IVZ,
     > KVZ, JIVX,JIP1VX,JP1IXZ,IOVX,IOVZ,A, MEMORY,AIO,IX3738)
      IX(129) = 1
      UPSIG = 1
      GO TO (146,151),NGOTO
  146 CONTINUE
      BETTX = BETTA
      IF (IEP.LT.0) BETTX = 1.0
      IF (NI3.LT.3) GO TO 147
      IF (VRGP1.GE.EPI1) GO TO 147
      IF (VRGK1.GE.EPI2) GO TO 147
      GO TO 149
  147 IF (IWACH.GE.ITIME) GO TO 148
      IF (NIT.GE.ITMAX) GO TO 148
      GO TO 106
  148 IS1 = 1
  149 CONTINUE
  150 CONTINUE
C**************************SEARCH OPTION********************************
      IF (IX(5).NE.1) GO TO 153
      IF (UPSIG.EQ.1) GO TO 151
      NGOTO = 2
      GO TO 145
  151 IF (NSRH(11).EQ.0) GO TO 152
      IEND = 1
      GO TO 106
  152 CONTINUE
  153 CONTINUE
      IF (IX(24).EQ.0) SPARE(56) = XLEK+XABS
      CALL RQED(IX(101),IND)
      IF (IND.EQ.0) GO TO 154
      CALL ITED(XLAMDA,XMU3,BETTX,XT1,XT2,XT3)
  154 CONTINUE
C***************************SEARCH OPTIONS******************************
      IF ((IX(5).EQ.0).OR.(IX(5).GE.2)) GO TO 155
      IF (IX(5).EQ.(-5)) GO TO 157
      GO TO 158
  155 CONTINUE
      IF (IX(24).EQ.0) GO TO 156
      WRITE(IOUT,1005)XWACH
      GO TO 158
  156 CONTINUE
      WRITE(IOUT,1006)XWACH
      GO TO 158
  157 WRITE(IOUT,1000) XWACH
  158 CONTINUE
C     IF (IX(5).NE.1) GO TO 163
C*****CALL EDSR(CONC,NJJR,MVX,NVX,NSETVX)
C 163 CONTINUE
      IF (IS1) 163,163,159
  159 CONTINUE
      IF (NGC(15).EQ.0) GO TO 162
      IF (NGC(15).EQ.2) GO TO 160
      IF (VRGP2.EQ.0.0) GO TO 162
      IF ((VRGP1/VRGP2).GE.1.0) GO TO 160
      GO TO 162
  160 NR = 13
  161 WRITE(IOUT,1007) NR
      return
  162 CONTINUE
      WRITE(IOUT,1010)
  163 CONTINUE
      IF (NUAC(3).EQ.0) GO TO 164
      WRITE(IOUT,1001)
      return
  164 IF (NGC(18)) 166,165,165
  165 CONTINUE
      IF (IX(5).EQ.(-5)) GO TO 166
      CALL KDUE(SCAC, RESLM,RESSA, P2E,NRGNE, SOURE,DCONRE,DCONBE,
     > DCONBK,XI, IVX,JVX,KBVX,KVX,LVX,IVXP1,JVXP1, KBVXP1,IVZ,KVZ,
     > JIVX,JIP1VX,JP1IXZ,IOVX,IOVZ,A,MEMORY,AIO,IX3738, XLAMDA,SIG,
     > PVOL,NCOMP,MVX)
      WRITE(IOUT,1009)RESSA,RESLM
  166 CONTINUE
      XLAMDB = XLAMDA
      IF (IX(5).NE.(-5)) GO TO 168
      DO 167 K=1,KMAX
      BIEMS(K) = XI(K)
      XI(K) = XII(K)
  167 CONTINUE
  168 CONTINUE
  169 CONTINUE
      RETURN
 1000 FORMAT('0END OF FIXED SOURCE CALCULATION - ITERATION TIME',0PF7.3,
     > ' MINUTES')
 1001 FORMAT('0FLUX CALCULATION WAS DONE WITH THE RESIDUES - NOW CALL EX
     >IT')
 1002 FORMAT('0ERROR STOP NUMBER 12',4I4,1PE13.5)
 1003 FORMAT(1X,I5,1PE17.5,0P4F10.5,F14.6,1PE14.5)
 1004 FORMAT(1X,I5,1PE17.5,0P4F10.5/1X,5X,1PE17.5,3X,
     > 'EXTRAPOLATION WITH',0PF13.4,F20.6,1PE14.5)
 1005 FORMAT('0END OF ADJOINT CALCULATION - ITERATION TIME',0PF7.3,
     > ' MINUTES')
 1006 FORMAT('0END OF EIGENVALUE CALCULATION - ITERATION TIME',0PF7.3,
     > ' MINUTES')
 1007 FORMAT('0ERROR STOP',I3)
 1008 FORMAT('0',73X,'NEUTRON BALANCE KEFFECTIVE',0PF14.7)
 1009 FORMAT('0CONVERGENCE INDICATION BY MINIMIZING THE SUM OF THE SQUAR
     >ES OF THE RESIDUES - RELATIVE ABSORPTION',F11.7,'   K',F11.7)
 1010 FORMAT('0'/'0**********WARNING - FLUX CALCULATION NOT CONVERGED **
     >********'//////)
      END
CRODI --42.1 ***CITATION*** SECTION 030 INPUT ROUTINE     /CF-IPTM
      SUBROUTINE RODI(NRGNE,NCOMP,JVX,IVX,KBVX,LVX,MJJR,NSETVX)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     >  , XNAME(3,200)
C
      DIMENSION ICRP(24),ICRPS(24)
      DIMENSION NRGNE(JVX,IVX,KBVX),NCOMP(LVX)
      DIMENSION MJJR(200,NSETVX)
      DIMENSION IDPSR(100),IDRLR(100)
      DIMENSION ITEMP(100)
C
      EQUIVALENCE (IDPSR(1),XTR1(1)),(IDRLR(1),XTR2(1))
C
      WRITE(IOUT,1002)
      IO10 = IX(77)
      REWIND IO10
  100 READ(IO10,END=101)
      GO TO 100
  101 BACKSPACE IO10
      REWIND IO3
      NERR = 0
      NIDR = 0
      NROC = 0
      DO 102 I=1,100
      IDPSR(I) = 0
      IDRLR(I) = 0
  102 CONTINUE
      NGEOM = NUAC(5)
C     CARD 30-2
      READ(IOIN,1000) (ICRP(I),I=1,24)
      WRITE(IOUT,1003) (ICRP(I),I=1,24)
      IF (ICRP(1).EQ.0) GO TO 104
      IF (ICRP(2).EQ.0) GO TO 104
      NN = 0
      DO 103 I=3,12
      IF (ICRP(I).EQ.0) GO TO 103
      NN = NN + 1
      IF (ICRP(I).LT.1.OR.ICRP(I).GT.200) NERR = 6
  103 CONTINUE
      IF (NN.GT.0.AND.NERR.EQ.0) GO TO 104
      WRITE(IOUT,1007)
  104 CONTINUE
      IF (ICRP(1).NE.0) GO TO 109
C     CARD(S) 30-3
  105 READ(IOIN,1000) IDCR1,IDCR2,IDJL,IDJR,IDIT,IDIB,IDPF,IDPB
      IF (IDCR1.EQ.0) GO TO 109
      WRITE(IOUT,1003) IDCR1,IDCR2,IDJL,IDJR,IDIT,IDIB,IDPF,IDPB
      NIDR = NIDR + 1
      CALL MYSH(IDJL,IDJR,IDIT,IDIB,IDPF,IDPB,JMAX,IMAX,KBMAX, NGEOM,
     > IND,IOUT)
      IF (IND.GT.0) NERR = 1
      LR = NRGNE(IDJL,IDIT,IDPF)
      DO 108 KB=IDPF,IDPB
      DO 107 I=IDIT,IDIB
      DO 106 J=IDJL,IDJR
      IF (NRGNE(J,I,KB).EQ.LR) GO TO 106
      NERR = 3
      WRITE(IOUT,1004) IDCR1
  106 CONTINUE
  107 CONTINUE
  108 CONTINUE
      IDPSR(NIDR) = IDCR1
      IDRLR(NIDR) = LR
      GO TO 105
  109 CONTINUE
  110 CONTINUE
      NSPEC = 0
      I2 = 0
  111 I1 = I2 + 1
      I2 = I1 + 23
C     CARD(S) 30-4
      READ(IOIN,1000) (NXTR1(I),I=I1,I2)
      IF (NXTR1(1).EQ.0) GO TO 123
      IF (NXTR1(I2).EQ.0.AND.NXTR1(I2-1).EQ.0) GO TO 112
      GO TO 111
  112 CONTINUE
      I3 = 3
      I4 = I2 - 1
      DO 113 I=I3,I4
      IF (NXTR1(I).NE.0) GO TO 113
      NSPEC = NSPEC + 1
      IF (NXTR1(I+1).NE.0) GO TO 113
      IT = I - 1
      GO TO 114
  113 CONTINUE
      NERR = 2
  114 CONTINUE
      WRITE(IOUT,1001) (NXTR1(I),I=1,IT)
      IF (ICRP(1).NE.0) GO TO 118
      DO 117 I=3,IT
      LR = NXTR1(I)
      IF (LR.EQ.0) GO TO 117
      DO 115 II=1,NIDR
      IF (IDPSR(II).NE.LR) GO TO 115
      LRR = IDRLR(II)
      GO TO 116
  115 CONTINUE
      NERR = 4
      WRITE(IOUT,1005) LR
      GO TO 117
  116 NXTR1(I) = LRR
  117 CONTINUE
      IF (ICRP(24).GT.0) WRITE(IOUT,1001) (NXTR1(I),I=1,IT)
  118 CONTINUE
      IF (ICRP(24).GT.0) WRITE(IOUT,1001) NSPEC,IT
      IF (ICRP(1).EQ.0) GO TO 122
      DO 119 I=2,IT
      IF (NXTR1(I).LE.MMAX) GO TO 119
      NERR = 9
      WRITE(IOUT,1010) NXTR1(I),MMAX
  119 CONTINUE
      IF (ICRP(2).EQ.0) GO TO 122
      DO 121 I=2,IT
      M = NXTR1(I)
      IF (M.EQ.0) GO TO 121
      NS = NXSET(M)
      NR = NXODR(NS)
      DO 120 N=3,12
      NN = ICRP(N)
      IF (NN.EQ.0) GO TO 120
      IF (MJJR(NN,NR).GT.0) GO TO 120
      WRITE(IOUT,1009) NN,M
  120 CONTINUE
  121 CONTINUE
  122 CONTINUE
      NROC = NROC + 1
      ITEMP(NROC) = NXTR1(1)
      WRITE(IO3) NXTR1(1),IT,NSPEC,(NXTR1(I),I=1,IT)
      GO TO 110
  123 CONTINUE
      REWIND IO3
C     CARD 30-5
      READ(IOIN,1000) (ICRPS(I),I=1,24)
      WRITE(IOUT,1001) (ICRPS(I),I=1,24)
      IF (NDPL(2).LE.24) GO TO 124
      NERR = 7
  124 IF (NDPL(1).LE.1) GO TO 126
      IF (NDPL(3).LE.24) GO TO 125
      NERR = 7
  125 IF (NDPL(1).LE.2) GO TO 126
      IF (NDPL(4).LE.24) GO TO 126
      NERR = 7
  126 CONTINUE
      IF (NERR.EQ.7) WRITE(IOUT,1008)
      DO 129 I=1,24
      IC = ICRPS(I)
      IF (IC.EQ.0) GO TO 129
      DO 127 II=1,NROC
      IF (ITEMP(II).EQ.IC) GO TO 128
  127 CONTINUE
      NERR = 5
      WRITE(IOUT,1006) IC
  128 CONTINUE
  129 CONTINUE
      IS = 0
      ID = 30
      IC = NROC + 2
      WRITE(IO10) ID,IC,NROC,IS,IS
      WRITE(IO10) (ICRP(I),I=1,24)
      WRITE(IO10) (ICRPS(I),I=1,24)
      DO 130 II=1,NROC
      READ(IO3) ID,IT,IS,(NXTR1(I),I=1,IT)
      WRITE(IO10) ID,IT,IS,(NXTR1(I),I=1,IT)
  130 CONTINUE
      REWIND IO10
      REWIND IO3
      IF (NERR.GT.0) NER(53) = 53
      RETURN
 1000 FORMAT(24I3)
 1001 FORMAT('0',24I3)
 1002 FORMAT('0'/'0CONTROL ROD POSITION - INPUT SECTION 030')
 1003 FORMAT(1X,24I3)
 1004 FORMAT('0ALL POINTS IN SPEC',I5,' ARE NOT IN THE SAME REGION')
 1005 FORMAT('0A REGION ID IS MISSING FOR',I5)
 1006 FORMAT('0THERE IS NO DATA FOR PROGRAM SPEC',I5)
 1007 FORMAT('0ERROR IN NUCLIDE NUMBERS')
 1008 FORMAT('0DEPLETION TIME STEPS PER CYCLE MAY NOT EXCEED 24 FOR THIS
     > OPTION')
 1009 FORMAT(' ***WARNING*** NUCLIDE NUMBER',I5,' NOT IN ZONE',I5)
 1010 FORMAT('0ZONE',I5,' IS GREATER THAN',I5)
      END
CRSTR --059-***CITATION***-READS-RESTART-TAPE/CF-IPTM
      SUBROUTINE RSTR(NTITE,A,MEMORY)
C     NTITE SET TO 0 IFRESTARTSTATICSONLY.
C                  1IFRESTARTATENDOFSOMECYCLE
C                    ORCONTINUEACYCLE.GT.1.
C                 -1IFRESTARTDEPLETIONONLYPROBLEM
C                    ORCONTINUEFIRSTCYCLE.
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AMESH/BMESH(30),NREGI,NREGJ,NREGKB,XSHI(100),XSHJ(100),
     > XSHKB(100), MSHI(100),MSHJ(100),MSHKB(100),Y(211),YY(211), X(211)
     >  ,XX(211),Z(211),ZZ(211), ZONVOL(200),AVZPD(200),PDI(211),
     > PDJ(211) , PDK(211)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     >  , XNAME(3,200)
      COMMON/AVDLM/IVDLM(1),IVX,JVX,KBVX,KVX,LVX,MVX,NVX,IVXP1,JVXP1,
     > KBVXP1,NSETVX,NVO,IVO,IVZ,KVZ,NCRP,NSPA,N3DDIM,NBLOCK,NUO, JIVX,
     > JIP1VX,JP1IXZ,IOVX,IOVZ
      COMMON/AKADD/KAY(1),K1,K2,K3,K4,K5,K6,K7,K8,K9,K10,K11, K12,K13,
     > K131,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23,K24, K25,K26,K27,
     > K28,K29,K30,K31,K32,K33,K34,K35,K36,K37, K38,K39,K40,K41,K42,K43,
     >  K44,K45,K46,K47,K48,K49, K50,K51,K52,K53,K54,K55,K56,K57,K58,
     > K59, K60,K61,K62, K63,K64,K65,K66,K67,K68,K69,K70,K71,K72,K73,
     > K74,K75, K76,K77,K78,K79,K80,K81,K82,K83,K84,K85,K86,K87, K88,
     > K89,K90, K91,K92,K93,K94,K95,K96,K97,K98, K99,K100,NDATA,KNRGN,
     > KNCOMP, KPVOL,KRVOL,MEMVRY, MEMX
      COMMON/ASRCH/ BSRCH(30),XK1,XK2,XK3,XN1,XN2,XN3, DELK1,DELK2,
     > DELK3,BATTY,DRV,TBF,GWC,EK2,RCCM,DNDK(5), NSC(5),NSCN,NXZ,NXN,
     > NXM,NXS,INIL,INIU,INID
C
      DIMENSION A(MEMORY)
C
  100 REWIND IO1
      WRITE(IO1)(TITL1(I),I=1,18),(TITL2(I),I=1,18),(NGC(I),I=1,24),
     > (IEDG(I),I=1,24),(ITMX(I),I=1,24),(GLIM(I),I=1,6), IX(5),
     > SPARE(50)
      REWIND IO1
      REWIND IO2
      ISHRW = 0
      IO10 = IX(77)
      IO12 = IX(79)
      REWIND IO12
      IO13 = IX(80)
      IOR = IO13
      REWIND IOR
      NGC2 = NGC(2)
      MEMTRY = 0
      READ(IOR)II
      IF (II.EQ.999) GO TO 102
  101 WRITE(IOUT,1000)II,NGC2,MEMTRY,MEMORY
      return
  102 CONTINUE
      READ(IOR)N1,N2,N3,N4,N5,N6,N7,N8,N9,N10,N13,N14,MEMTRY
      READ(IOR)(TITL1(I),I=1,18),(TITL2(I),I=1,18)
      WRITE(IOUT,1001)(TITL1(I),I=1,18)
      WRITE(IOUT,1002)(TITL2(I),I=1,18)
      IF (MEMTRY.NE.MEMORY) GO TO 101
      READ(IOR)(BLSUB(I1),I1=1,N1)
      READ(IOR)(BMESH(I1),I1=1,N2)
      READ(IOR)(BFLUX(I1),I1=1,N3)
      READ(IOR)(BBURN(I1),I1=1,N4)
      READ(IOR)(IVDLM(I1),I1=1,N5)
      READ(IOR)(KAY(I1),I1=1,N7)
      READ(IOR)(BSRCH(I1),I1=1,N13)
      READ(IOR)(A(I1),I1=K8 ,N8)
      READ(IOR)(A(I1),I1=K50 ,N9)
      READ(IOR)(A(I1),I1=KNRGN ,N10)
      READ(IOR)(A(I1),I1=KNCOMP,MEMORY)
      READ(IOR)(A(I1),I1=K45,N14)
      REWIND IO10
      IREAD = IOR
      IRITE = IO10
      CALL TRAN(A(K17),MVX,NVX,IREAD,IRITE, A(K30),A(K31),A(K32),A(K33),
     >  NSETVX)
      REWIND IO10
      IO19 = IX(86)
      REWIND IO19
      NL = K42-1
      WRITE(IO19)(A(I),I=K30,NL)
      REWIND IO19
      IO26 = IX(93)
      REWIND IO26
      READ(IOR)II
      IF (II.NE.0) GO TO 101
      READ(IOR)N12,NKM,(IX(I),I=1,200),(SPARE(I),I=1,200), (A(I),I=K14,
     > N12)
      WRITE(IO2)(A(I),I=K17,N12)
      READ(IOR)N11,N22,(BFLUX(I1),I1=1,N22),SPARE(39), (A(I),I=K24,N11)
      WRITE(IO26) N11,(A(I),I=K24,N11)
      REWIND IO2
      REWIND IO26
      IF (NGC(1).GT.0) GO TO 103
      REWIND IOR
      NTITE = 0
      IX19 = 1
      GO TO 104
  103 CONTINUE
      IX19 = NGC2
      NTITE = 1
      READ(IOR)II
      BACKSPACE IOR
      IF ((NGC2.GT.0).OR.(II.EQ.-11111)) IX(2) = 0
      IF ((NGC2.GT.0).OR.(II.GT.0).OR.(II.EQ.-11111)) GO TO 106
      IF ((NGC2.GT.0).AND.(II.LT.0)) GO TO 101
      NTITE = -1
      IX19 = II
      IF (NDPL(11).GT.0) CALL RODO(A(KNCOMP),LVX)
      READ(IOR)II
      READ(IOR)N12,NKM,(IX(I),I=1,200),(SPARE(I),I=1,200), (A(I),I=K14,
     > N12),(A(I),I=KNCOMP,NKM)
      BACKSPACE IOR
      BACKSPACE IOR
  104 CONTINUE
      IF (NGC(19).GT.0) GO TO 106
      IF (NGC(1).EQ.0) READ(IO2)(A(I),I=K17,N12)
      NZN2 = 0
      WRITE(IO12)MMAX,MMAX,MMAX,MMAX,MMAX
      DO 105 M = 1,MMAX
      NACT = NXSET(M)
      MS1 = NXODR(NACT)
      NZN1 = NZN2+1
      NZN2 = NZN2+NJM(MS1)*NZON(M)
      J1 = NZN1+K18-1
      J2 = NZN2+K18-1
      WRITE(IO12)NZN1,NZN2
      WRITE(IO12)(A(I),I=J1,J2)
  105 CONTINUE
      REWIND IO12
      REWIND IO2
  106 CONTINUE
      READ(IO19)(A(I),I=K30,NL)
      REWIND IO19
      READ(IO1)(TITL1(I),I=1,18),(TITL2(I),I=1,18),(NGC(I),I=1,24),
     > (IEDG(I),I=1,24),(ITMX(I),I=1,24),(GLIM(I),I=1,6), IX(5),
     > SPARE(50)
      REWIND IO1
      IX(19) = IX19
      IX(22) = 0
      IX(39) = 0
      IX(198) = NTITE
      RETURN
 1000 FORMAT('0ERROR STOP 27 IN SUB. RSTR',10X,10I8)
 1001 FORMAT('0THE CASE TITLE ON THE RESTART TAPE IS'/'0',18A4)
 1002 FORMAT(1X,18A4)
 1003 FORMAT('0MYERROR',10I5)
      END
CMYSH --60.4 ***CITATION*** CHECKS MESH POINT SPECIFICATIONS /CF-RODI
      SUBROUTINE MYSH(JL,JR,IT,IB,KBF,KBB,JMAX,IMAX,KBMAX,N5,IND,IOUT)
C     CHECK MESH SPECIFICATIONS
      IND = 0
      IF (JL.GE.1.AND.JL.LE.JMAX) GO TO 100
      GO TO 111
  100 IF (JR.GE.1.AND.JR.LE.JMAX) GO TO 101
      GO TO 111
  101 IF (JL.LE.JR) GO TO 102
      GO TO 111
  102 IF (N5.LE.5) GO TO 108
      IF (IT.GE.1.AND.IT.LE.IMAX) GO TO 103
      GO TO 111
  103 IF (IB.GE.1.AND.IB.LE.IMAX) GO TO 104
      GO TO 111
  104 IF (IT.LE.IB) GO TO 105
      GO TO 111
  105 IF (N5.LE.10) GO TO 109
      IF (KBF.GE.1.AND.KBF.LE.KBMAX) GO TO 106
      GO TO 111
  106 IF (KBB.GE.1.AND.KBB.LE.KBMAX) GO TO 107
      GO TO 111
  107 IF (KBF.LE.KBB) GO TO 110
      GO TO 111
  108 IT = 1
      IB = 1
  109 KBF = 1
      KBB = 1
  110 CONTINUE
      RETURN
  111 CONTINUE
      IND = 1
      WRITE(IOUT,1000) JL,JR,IT,IB,KBF,KBB
      GO TO 110
 1000 FORMAT('0SOMETHING IS WRONG WITH MESH SPECS',6I5)
      END
CRODO --60.5 ***CITATION*** TRANSFERS SECTION 030 DATA   /CF-IPTM,RSTR
C                           FROM IO10 TO IO35 AND ADDS NCOMP
      SUBROUTINE RODO(NCOMP,LVX)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
C
      DIMENSION NCOMP(LVX)
C
      IO10 = IX(77)
      IO35 = IX(141)
      REWIND IO10
      REWIND IO35
  100 READ(IO10,END=102) I1,I2,I3
      IF (I1.EQ.30) GO TO 103
      IF (I2.EQ.0) GO TO 100
      DO 101 I=1,I2
      READ(IO10)
  101 CONTINUE
      GO TO 100
  102 WRITE(IOUT,1000)
      return
  103 CONTINUE
      NROC = I3
      WRITE(IO35) (NCOMP(L),L=1,LMAX)
      WRITE(IO35) NROC,NROC,NROC,NROC,NROC
      READ(IO10) (NXTR1(I),I=1,24)
      WRITE(IO35) (NXTR1(I),I=1,24)
      READ(IO10) (NXTR1(I),I=1,24)
      WRITE(IO35) (NXTR1(I),I=1,24)
      DO 104 II=1,NROC
      READ(IO10) I1,I2,I3,(NXTR1(I),I=1,I2)
      WRITE(IO35) I1,I2,I3,(NXTR1(I),I=1,I2)
  104 CONTINUE
      REWIND IO35
      REWIND IO10
      RETURN
 1000 FORMAT('0NO SECTION 30 DATA ON LOG 10 (RODO)')
      END
CBURN --133 ***CITATION*** DEPLETION CONTROL/ CF-TSCL
      SUBROUTINE BCIT(SS1,SS2,SS4,SS5,HOL,NJJR,MJJR,NNXTRA,CONC,ZONEN,
     > HOX,NFO,NNFO,NIC,AC,B4,B5,AL,AX,AP,CP,CO,CN,CM,YD, KVX,MVX,NVX,
     > NSETVX,NVO,IVO,ZONVOL)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     >  , XNAME(3,200)
C
      DIMENSION B4(MVX,KVX), B5(MVX,KVX), NJJR(NVX,NSETVX), MJJR(200,
     > NSETVX),AC(1) ,AL(1),AX(1),AP(1),YD(1),CO(1),CP(1),CN(1), CM(1),
     > SS1(KVX,NVX, NSETVX),SS2(KVX,NVX,NSETVX),SS4(KVX,NVX,NSETVX),
     > HOL(NVX,NSETVX, 10),CONC(NVX,MVX),ZONEN(1) , SS5(KVX,NVX,NSETVX),
     >  NNXTRA(NVX,NSETVX) , HOX(NVX,NSETVX,20),NFO(20,NSETVX),NNFO(20,
     > NSETVX),NIC(1000)
C
      DIMENSION ZONVOL(1)
C     A ZONE MAY CONTAIN EQUAL-VOLUME SUBZONES.  EXPOSURE IS TO THE
C     ZONE-AVERAGE NEUTRON FLUX, DEPENDENT ON ZONE-AVERAGE NUCLIDE
C     CONCENTRATIONS.  START OF EXPOSURE STEP NEUTRON FLUX DISTRIBUTION
C     IS ALWAYS USED WITH ONLY LEVEL ADJUSTMENT IF SUBSTEPS ARE TAKEN.
C     USE OF LOGICAL UNITS -
C     IO1- STEP-AVERAGE ZONE CONCENTRATIONS
C     IO2- FLUX, ZONE AND SUBZONE CONCENTRATIONS FOR REDEPLETION
C     IO3- SUBZONE STEP-AVERAGE CONCENTRATIONS
C     IO11-(IO11 OR IO12) END-SUBSTEP SUBZONE CONCENTRATIONS
C     IOTM- (IO11 OR IO12, OR IO2) START SUBSTEP SUBZONE CONCENTRATIONS
C
  100 IO11 = IX(78)
      IO12 = IX(79)
      IO10=IX(77)
      REWIND IO10
      IF (IX(199).EQ.0) GO TO 101
      REWIND IO11
      REWIND IO12
  101 IOTM = IO12
      IDZP=10
      NZI=1
      IEXTRP = 0
      REWIND IO1
      REWIND IO2
  102 READ(IO10,END=105)JK,JA
      IF (JK.EQ.36) GO TO 104
      IF (JA.LE.0) GO TO 102
      DO 103J=1,JA
      READ(IO10)
  103 CONTINUE
      GO TO 102
  104 READ(IO10) HOX
      READ(IO10) NFO
      READ(IO10) NNFO
      READ(IO10) NIC
      REWIND IO10
      GO TO 106
  105 JB=40
      GO TO 107
  106 IF (IX(166).NE.2) GO TO 108
      REWIND IO3
      WRITE(IO3) MMAX,NGC
      IF (IX(199).GT.0) GO TO 108
      JB=38
  107 CONTINUE
      WRITE(IOUT,1001) JB,IX(166),IX(199)
      return
  108 CONTINUE
      CALL CYED(IEXTRP)
C     IEXTRP = 0 - NO EXTRAPOLATION TO END OF CYCLE
C     IEXTRP = 1 - EXTRAPOLATION TO END OF CYCLE
C     IEXTRP = 2 - REPEAT PREVIOUS TIME STEP
      IX(15) = IEXTRP
      IF (IEXTRP.EQ.2) GO TO 109
      IF (IX(199).NE.0) READ(IOTM)
      WRITE(IO2)B4
      WRITE(IO2)CONC
      GO TO 110
  109 CONTINUE
      IOTM=IO2
      READ(IO2)B4
      READ(IO2) CONC
  110 CONTINUE
      ITD=MAX0(1,NDPL(6))
      X=ITD
      JK=ITD/2
      JA=JK
      JJ=ITD-JK*2
      IF (JJ.NE.0) JK=JK+1
      XTT=SPARE(9)
      XT=XTT/X
      JC=NDPL(15)
      JD=NDPL(16)
      WRITE(IOUT,1002)
C     LOOP OVER SUBSTEPS
      DO 176 IT=1,ITD
      IF (IX(199).EQ.0) GO TO 111
      WRITE(IO11)MMAX,(IX(I),I=1,19)
      IF (IT.LE.1) GO TO 111
      READ(IOTM)
  111 POW=0
      U=0
C     LOOP OVER ZONES
      DO 168 MR = 1,MMAX
      Z=0
      NSZN = NZON(MR)
      X=NSZN
      T2NZN=1.0/X
      NACT = NXSET(MR)
      NSET = NXODR(NACT)
      JM = NJM(NSET)
      NDNZ = JM*NSZN
      IF (JC.GT.0) GO TO 112
      NH=0
      GO TO 113
  112 NH=MJJR(JC,NSET)
  113 IF (IX(199).EQ.0) GO TO 115
      READ(IOTM)NZNZN1,NZNZN2
      READ(IOTM)(ZONEN(N),N=1,NDNZ)
      IF (IT.GT.1) GO TO 115
      IF (IEXTRP.NE.2) GO TO 114
      GO TO 115
  114 CONTINUE
      WRITE(IO2)NZNZN1,NZNZN2
      WRITE(IO2)(ZONEN(N),N=1,NDNZ)
  115 CONTINUE
      IF (NDP(MR).GE.0) GO TO 116
      IF (IT.EQ.JK) WRITE(IO1)(CONC(N,MR),N=1,JM)
      IF (IX(199).EQ.0) GO TO 167
      WRITE(IO11)NZNZN1,NZNZN2
      WRITE(IO11)(ZONEN(N),N=1,NDNZ)
      IF (IX(166).NE.2) GO TO 167
      IF (IT.NE.JK) GO TO 167
      WRITE(IO3)NZNZN1,NZNZN2
      WRITE(IO3) (ZONEN(N),N=1,NDNZ)
      GO TO 167
  116 DO 122 N = 1,JM
      NXXTR = NNXTRA(N,NSET)
      AC(N) = 0.0
      AL(N) = 0.0
      AX(N) = 0.0
      IF (NSZN.GT.1) GO TO 117
      CN(N) = CONC(N,MR)
      GO TO 118
  117 CO(N) = CONC(N,MR)
  118 DO 120 K = 1,KMAX
      V=B4(MR,K)
      IF (NXXTR.NE.10) GO TO 119
      IF (CONC(N,MR).EQ.0.) GO TO 119
      X=SS5(K,N,NSET)/CONC(N,MR)
      IF (X.EQ.0.) GO TO 119
      IF (X.GT.200.) GO TO 119
      Y=2.0*(SQRT(X*(X+1.0))-X)
      AL(N)=AL(N)+Y*V*SS1(K,N,NSET)
      AX(N)=AX(N)+Y*V*SS2(K,N,NSET)
      GO TO 120
  119 AL(N) = AL(N)+SS1(K,N,NSET)*V
      AX(N) = AX(N)+SS2(K,N,NSET)*V
      AC(N) = AC(N)+SS5(K,N,NSET)*V
  120 CONTINUE
      AL(N) = AL(N)*1.0E-24
      AX(N) = AX(N)*1.0E-24
      AC(N) = AC(N)*1.0E-24
      IF (NXXTR.EQ.2) GO TO 122
      IF (NXXTR.EQ.6) GO TO 121
      AC(N) = AL(N)-AX(N)
      GO TO 122
  121 AP(N)=AC(N)
      AC(N)=AL(N)-AX(N)-AP(N)
  122 CONTINUE
      IF (NSZN.GT.1) GO TO 123
      CALL NUCY(AC,AL,AX,AP,YD,CO,CM,CP,HOL,HOX,NFO,NNFO,NIC,NVX,NSETVX,
     >  CN,MR,XT,NSET,JM,NSZN,NH)
      IF (NH.LE.0) GO TO 135
      AS=YD(NH)*XT
      AR=0.5*AS
      CP(NH)=CN(NH)+AR
      CN(NH)=CN(NH)+AS
      GO TO 135
  123 IF (NDP(MR).GT.1) GO TO 125
      CALL NUCY(AC,AL,AX,AP,YD,CM,CO,CP,HOL,HOX,NFO,NNFO,NIC,NVX,NSETVX,
     >  ZONEN,MR,XT,NSET,JM,NSZN,NH)
      IF (NH.LE.0) GO TO 135
      NJ=NH-JM
      DO 124NZ=1,NSZN
      NJ=NJ+JM
      AS=YD(NJ)*XT
      AR=0.5*AS
      CO(NH)=CO(NH)+AS*T2NZN
      CP(NH)=CP(NH)+AR*T2NZN
      CM(NJ)=CM(NJ)+AR
      ZONEN(NJ)=ZONEN(NJ)+AS
  124 CONTINUE
      GO TO 135
  125 NZN=-JM
C     LOOP OVER SUBZONES WHEN CROSS SECTIONS ARE CORRELATED
      DO 132 NZ=1,NSZN
      NZN=NZN+JM
      DO 129 N=1,JM
      IF (NNXTRA(N,NSET).NE.10) GO TO 129
      NJ=NZN+N
      XN=ZONEN(NJ)
      AL(N)=0
      AX(N)=0
      DO 128 K=1,KMAX
      IF (XN.EQ.0.) GO TO 126
      Y=SS5(K,N,NSET)
      IF (Y.EQ.0) GO TO 126
      X=Y/XN
      IF (X.GT.200.) GO TO 126
      Y=2.0*(SQRT(X*(X+1.0))-X)
      Y=Y*B4(MR,K)
      GO TO 127
  126 Y=B4(MR,K)
  127 AL(N)=AL(N)+Y*SS1(K,N,NSET)
      AX(N)=AX(N)+Y*SS2(K,N,NSET)
  128 CONTINUE
      AL(N) = AL(N)*1.0E-24
      AX(N) = AX(N)*1.0E-24
      AC(N)=AL(N)-AX(N)
  129 CONTINUE
      NNN=NZN+1
      CALL NUCY(AC,AL,AX,AP,YD,CO,CM,CP,HOL,HOX,NFO,NNFO,NIC,NVX,NSETVX,
     >  ZONEN(NNN),MR,XT,NSET,JM,NZI,NH)
      IF (NH.LE.0) GO TO 130
      AS=YD(NH)*XT
      AR=0.5*AS
      MJ=NH+NNN-1
      CP(NH)=ZONEN(MJ)+AR
      ZONEN(MJ)=ZONEN(MJ)+AS
  130 X=0
      NJ=NNN-1
      DO 131N=1,JM
      NJ=NJ+1
      CM(NJ)=CP(N)
      X=X+ZONEN(NJ)*AX(N)*HOL(N,NSET,9)
  131 CONTINUE
      Z=Z+X*T2NZN
  132 CONTINUE
      DO 134N=1,JM
      CO(N)=0
      CP(N)=0
      NJ=N-JM
      DO 133NZ=1,NSZN
      NJ=NJ+JM
      CO(N)=CO(N)+ZONEN(NJ)
      CP(N)=CP(N)+CM(NJ)
  133 CONTINUE
      CO(N)=CO(N)*T2NZN
      CP(N)=CP(N)*T2NZN
  134 CONTINUE
  135 IF (JD.LT.1) GO TO 147
      NJ=MJJR(JD,NSET)
      IF (NJ.LE.0) GO TO 147
      CP(NJ)=0
      CO(NJ)=0
      IF (NNXTRA(NJ,NSET).EQ.10) GO TO 138
      X=XT*(AL(NJ)+HOL(NJ,NSET,10))
      AR=EXP(-0.5*X)
      AS=AR*AR
      IF (NSZN.GT.1) GO TO 136
      CP(NJ)=CN(NJ)*AR
      CN(NJ)=CN(NJ)*AS
      GO TO 147
  136 ZY=NSZN
      AR=AR/ZY
      MJ=NJ-JM
      DO 137J=1,NSZN
      MJ=MJ+JM
      CM(MJ)= ZONEN(MJ)*AR
      ZONEN(MJ)=ZONEN(MJ)*AS
      CO(NJ)=CO(NJ)+ZONEN(MJ)*T2NZN
      CP(NJ)=CP(NJ)+CM(MJ)*T2NZN
  137 CONTINUE
      GO TO 147
  138 CONTINUE
      DO 146IS=1,IDZP
      MJ=NJ-JM
      DO 145J=1,NSZN
      MJ=MJ+JM
      XN=CN(JM)
      IF (NSZN.GT.1) XN=ZONEN(MJ)
      AT=0
      DO 142K=1,KMAX
      IF (XN.EQ.0.) GO TO 139
      Y=SS5(K,NJ,NSET)
      IF (Y.NE.0) GO TO 140
  139 Y=1.0
      GO TO 141
  140 X=Y/XN
      IF (X.GT.200.) GO TO 139
      Y=2.0*(SQRT(X*(X+1.0))-X)
  141 AT=AT+Y*B4(MR,K)*SS1(K,NJ,NSET)
  142 CONTINUE
      AT= HOL(NJ,NSET,10) +AT*1.0E-24
      AS=EXP(-AT*XT/10.)
      IF (NSZN.GT.1) GO TO 143
      CN(NJ)=CN(NJ)*AS
      IF (IS.EQ.IDZP/2) CP(NJ)=CN(NJ)
      GO TO 146
  143 ZONEN(MJ)=ZONEN(MJ)*AS
      IF (IS.NE.IDZP/2) GO TO 144
      CM(MJ)=ZONEN(MJ)
      CP(NJ)=CP(NJ)+CM(MJ)*T2NZN
  144 IF (IS.NE.IDZP) GO TO 145
      CO(NJ)=CO(NJ)+ZONEN(MJ)*T2NZN
  145 CONTINUE
  146 CONTINUE
  147 CONTINUE
      IX(98) = 1
      DO 160 N = 1,JM
      IF (IT.NE.ITD) GO TO 158
      IF (IEXTRP.NE.1) GO TO 158
      IF (IX(5).EQ.1) GO TO 148
      IF (IX(5).EQ.2) GO TO 148
      GO TO 158
  148 CONTINUE
      IF ((IX(44).EQ.0).AND.(IX(49).EQ.0)) GO TO 150
      IF (IX(49).GT.0) GO TO 149
      IF ((MR.EQ.IX(44)).OR.(MR.EQ.IX(45)).OR.(MR.EQ.IX(46))
     > .OR.(MR.EQ.IX(47)).OR.(MR.EQ.IX(48))) GO TO 150
      GO TO 158
  149 IF (IX(49).NE.NCLASS(MR)) GO TO 158
  150 DO 157 INI = 12,18
      IF (NJJR(N,NSET).NE.NSRH(INI)) GO TO 157
      IF (NSZN.GT.1) GO TO 153
      IF (SPARE(53).GT.0) GO TO 151
      T1=0
      GO TO 152
  151 T1 = CN(N)*DPLH(5)/SPARE(53)
  152 CP(N) = (T1+CN(N))*0.5
      CN(N) = T1
      GO TO 158
  153 JN = N-JM
      T1 = 0.0
      DO 156 J = 1,NSZN
      JN = JN+JM
      IF (SPARE(53).GT.0) GO TO 154
      T1=0
      GO TO 155
  154 ZONEN(JN) = ZONEN(JN)*DPLH(5)/SPARE(53)
  155 T1 = T1+ZONEN(JN)
  156 CONTINUE
      T2 = T1*T2NZN
      CP(N) = (T2+CO(N))*0.5
      CO(N) = T2
      GO TO 158
  157 CONTINUE
  158 CONTINUE
      IF (NSZN.GT.1) GO TO 159
      CONC(N,MR) = CN(N)
      IF (IX(199).EQ.0) GO TO 160
      ZONEN(N) = CN(N)
      GO TO 160
  159 CONC(N,MR) = CO(N)
  160 CONTINUE
      IF (IX(199).EQ.0) GO TO 161
      WRITE(IO11)NZNZN1,NZNZN2
      WRITE(IO11)(ZONEN(N),N=1,NDNZ)
  161 CONTINUE
      IF (NSZN.EQ.1) GO TO 162
      IF (NDP(MR).GT.1) GO TO 164
  162 DO 163N=1,JM
      Z=Z+CONC(N,MR)*AX(N)*HOL(N,NSET,9)
  163 CONTINUE
  164 XTR1(MR)=Z*1.0E+24
      POW=POW+XTR1(MR)*ZONVOL(MR)
      IF (XTR1(MR).LT.U) GO TO 165
      U=XTR1(MR)
      MPM= MR
  165 IF (IT.NE.JK) GO TO 167
      IF (JJ.EQ.0) GO TO 166
      WRITE(IO1)(CP(N),N=1,JM)
      IF (IX(166).NE.2) GO TO 167
      WRITE(IO3)NZNZN1,NZNZN2
      WRITE(IO3) (CM(N),N=1,NDNZ)
      GO TO 167
  166 WRITE(IO1)(CONC(N,MR),N=1,JM)
      IF (IX(166).NE.2) GO TO 167
      WRITE(IO3)NZNZN1,NZNZN2
      WRITE(IO3) (ZONEN(N),N=1,NDNZ)
  167 CONTINUE
  168 CONTINUE
C     RENORMALIZATION OF THE ZONE FLUX
C     TO EFFECT DESIRED REACTOR POWER LEVEL AT A POINT IN TIME
      PIW= XMIS(5)/XMIS(4)*1.0E+6*SPARE(100)
      IF (POW.LE.0) GO TO 169
      Y=PIW/POW
      IF (Y.LT.2.0.AND.Y.GT.0.5) GO TO 170
  169 WRITE(IOUT,1003)
  170 WRITE(IOUT,1000)Y,U,MPM,IT
      IF (IT.EQ.ITD) GO TO 176
      IF (POW.LE.0) GO TO 105
      DO 171K=1,KMAX
      DO 171M=1,MMAX
      B4(M,K)=Y*B4(M,K)
  171 CONTINUE
      IF (IT.NE.JA) GO TO 175
      IF (JJ.NE.0) GO TO 173
      IF (Y.EQ.0.) GO TO 173
      U=1.0/SQRT(Y)
      DO 172K=1,KMAX
      DO 172M=1,MMAX
      B5(M,K)=U*B4(M,K)
  172 CONTINUE
      GO TO 175
  173 DO 174K=1,KMAX
      DO 174M=1,MMAX
      B5(M,K)=B4(M,K)
  174 CONTINUE
  175 IF (IX(199).EQ.0) GO TO 176
      IF (IOTM.EQ.IO2) IOTM=IO12
      REWIND IO11
      REWIND IOTM
      NN=IO11
      IO11=IOTM
      IOTM=NN
  176 CONTINUE
      REWIND IO2
      IF (ITD.LE.1) GO TO 178
      IF (POW.LE.0) GO TO 178
      DO 177K=1,KMAX
      DO 177M=1,MMAX
      B4(M,K)=B5(M,K)
  177 CONTINUE
  178 CONTINUE
      REWIND IO1
      IF (IX(199).EQ.0) GO TO 181
      IF (IO11.EQ.IX(79)) GO TO 180
      REWIND IOTM
      REWIND IO11
      READ(IO11)
      WRITE(IO12)MMAX,(IX(I),I=1,19)
      DO 179 M = 1,MMAX
      NACT = NXSET(M)
      NSET = NXODR(NACT)
      JM = NJM(NSET)
      NDNZ=JM*NZON(M)
      READ(IO11)NZNZN1,NZNZN2
      READ(IO11)(ZONEN(N),N=1,NDNZ)
      WRITE(IO12)NZNZN1,NZNZN2
      WRITE(IO12)(ZONEN(N),N=1,NDNZ)
  179 CONTINUE
  180 REWIND IO11
      REWIND IOTM
      REWIND IO3
  181 SPARE(1)=SPARE(1)+XTT
      SPARE(13) = SPARE(2)
      SPARE(2) = SPARE(1)/86400.0
      RETURN
 1000 FORMAT(' POWER NORMALIZATION',F10.5,', MAXIMUM POWER DENSITY',
     > 1PE14.6,' IN ZONE',I4,' AT END SUBSTEP',I4)
 1001 FORMAT('0***DATA ERROR STOP',5I5)
 1002 FORMAT('0')
 1003 FORMAT('0*** WARNING HENRY, BAD NORMALIZATION')
      END
CSTFM --073  ***FUEL MANAGEMENT*** READS RESTART TAPE/CF-DRIV
      SUBROUTINE STFM(A,MEMORY)
C
      DOUBLE PRECISION FLOTR
C
      COMMON/GMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
      COMMON/CMARY/MEMARY(1),IMN,MNI,IJLMN,NMLJI,IY(50),AX(50),TITL(36)
      COMMON/COOPD/FLOTR(200),INTGR(100)
      COMMON/GMADD/KAY(1),K1,K2,K3,K4,K5,K6,K7,K8,K9,K10,K11,K12,K13,
     > K14,K15,K16,K17,K18,K19,K20,K21,K22,K23,K24,K25,K26,K27,K28,K29,
     > K30,K31,K32,K33,K34,K35,K36,K37,K38,K39,K40,K41,K42,K43,K44,K45,
     > K46,K47,K48,K49,K50,K500,K501,K502,K503,K504,K505,K506,K507,K508,
     >  K509,K51,K52,K53,K54,K540,K541,K542,K543,K544,K545,K546,K547,
     > K548,K549,K550,K55,K56,K57,K58,K59,K60,K61,K62,K63, K64,K65,K66,
     > K67,K68,K69,K70,K71,K72,K73,K74,K75
      COMMON/GMIMS/IB(100),MEMVRY,NFSVX,NRSVX,NDSVX,NISVX,NPDVX,NFMVX,
     > MVX,NVX,NRLVX,I1VX,I2VX,I3VX,I4VX,I5VX,I6VX,I7VX,I8VX,I9VX,I10VX,
     >  NONNN,NSETVX
C
      DIMENSION A(MEMORY)
C
      IOUT = 51
      IOR = INTGR(13)
      NGC2 = INTGR(14)
      NGC3 = INTGR(15)
      INGR16 = INTGR(16)
      IOTWLV = INTGR(17)
      IO24 = INTGR(18)
      REWIND IO24
      REWIND IOTWLV
      I2 = 0
      READ(IOR)NCX
      IF (NCX.NE.-11111) GO TO 107
      READ(IOR)M1,M2,M3,M4,M5,M6,M7,M8
      READ(IOR)(BLSUB(I),I=1,M3)
      READ(IOR)(KAY(I),I=1,M4)
      READ(IOR)(IB(I),I=1,M5)
      READ(IOR)(MEMARY(I),I=1,M6)
      READ(IOR)(FLOTR(I),I=1,M7)
      READ(IOR)(A(I),I=1,M8)
      NW12 = 0
      CALL CSRT(A(K549),A(K49),A(K50),A(K546),A(K547),A(K548),A(K543),
     > A(K544),NVX,MVX,NSETVX,I5VX,IOTWLV,IOR,NW12,IO24,NCX)
      NCX = 0
      DO 103 I1 = 1,200
      I2 = I1
      NDX = NCX
      READ(IOR,END=109)NCX
      IF ((I1.EQ.1).AND.(NCX.NE.1)) GO TO 107
      IF (NGC2.GT.0) GO TO 100
      IF (NCX.GT.0) GO TO 100
      BACKSPACE IOR
      GO TO 108
  100 CONTINUE
      IF (IABS(NGC2).EQ.1) GO TO 101
      IF (NCX.GT.NGC2) GO TO 107
  101 CONTINUE
      READ(IOR)M1,M2,M3,M4,M5,M6,M7,M8
      READ(IOR)(BLSUB(I),I=1,M3)
      READ(IOR)(KAY(I),I=1,M4)
      READ(IOR)(IB(I),I=1,M5)
      READ(IOR)(MEMARY(I),I=1,M6)
      READ(IOR)(FLOTR(I),I=1,M7)
      READ(IOR)(A(I),I=1,M8)
      REWIND IO1
      J2 = 2
      J3 = 0
      CALL GRIT(A(K1), IX(1),J3,IO1,J2)
      CALL GRIT(A(K33), IX(2),J3,IO1,J2)
      CALL GRIT(BLSUB(1),IX(3),J3,IO1,J2)
      CALL GRIT(KAY(1), IX(4),J3,IO1,J2)
      CALL GRIT(IB(1), IX(5),J3,IO1,J2)
      CALL GRIT(A(K42), IX(6),J3,IO1,J2)
      REWIND IO1
      IF (NCX.EQ.NGC2) GO TO 104
      READ(IOR)
      IF (IX(13).GT.1) READ(IOR)
  102 CONTINUE
      READ(IOR)
      IF (IX(13).GT.1) READ(IOR)
      READ(IOR)
      CALL MBST(A(K55),A(K56),A(K57),A(K58),A(K59),A(K60), NRSVX,A(K540)
     >  ,IOR,A(K44),A(K45),NFSVX,NDSVX, NISVX,NVX,NONNN,A(K547),A(K548),
     >  NCX)
      READ(IOR)
      READ(IOR)
  103 CONTINUE
  104 CONTINUE
      INTGR(14) = NGC2
  105 CONTINUE
      NW12 = 1
      CALLCSRT(A(K549),A(K49),A(K50),A(K546),A(K547),A(K548), A(K543),
     > A(K544),NVX,MVX,NSETVX,I5VX,IOTWLV,IOR,NW12,IO24,NCX)
      READ(IOR)
      READ(IOR)
      READ(IOR)
      IF (NCX.GT.1) GO TO 106
      READ(IOR)
  106 CONTINUE
      IO9 = IX(11)
      REWIND IO9
      LNTH = K542+MVX-1
      READ(IOR)(A(N),N=K542,LNTH)
      WRITE(IO9)(A(N),N=K542,LNTH)
      REWIND IO9
      GO TO 108
  107 WRITE(IOUT,1000)I2,NCX,NGC2
      return
  108 CONTINUE
      GO TO 111
  109 CONTINUE
      IF (NGC2.NE.-1) GO TO 107
      NBACK = 9
      IF (NDX.EQ.1) NBACK = NBACK+1
      IF (IX(13).GT.1) NBACK = NBACK+2
      DO 110 N = 1,NBACK
      BACKSPACE IOR
  110 CONTINUE
      NCX = NDX
      INTGR(14) = NCX
      BACKSPACE IO5
      BACKSPACE IO5
      BACKSPACE IO5
      IF ((NCX.GT.0).AND.(NCX.LE.100)) GO TO 105
      GO TO 107
  111 CONTINUE
      INTGR(16) = INGR16
      RETURN
 1000 FORMAT('0ERROR STOP 911',3I8)
      END
CCSRT --074  ***FUEL MANAGEMENT*** RESTART ROUTINE/CF-STFM
      SUBROUTINECSRT(CON0,NZINF,NJM,SUBCNC,ITMIS, AITMIS,HMLOAD,EXPSOR,
     > NVX,MVX,NSETVX,I5VX,IOTWLV,IOR,NW12,IO24,NCX)
C
      COMMON/GMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
C
      DIMENSION CON0(NVX,MVX),NZINF(MVX,7),NJM(6,NSETVX), SUBCNC(I5VX),
     > ITMIS(20),AITMIS(20),HMLOAD(MVX), EXPSOR(MVX)
C
C     IF(NW12.GT.0)WRITE IO12 AND IO24
C     IF(NCX.EQ.-11111) WRITE IO8
C     IF(NW12.EQ.0)WRITE ONLY IO8
C
      IF (NCX.EQ.-11111) REWIND IO8
      READ(IOR)((CON0(N,M),N=1,NVX),M=1,MVX)
      IF (NCX.EQ.-11111) WRITE(IO8)((CON0(N,M),N=1,NVX),M=1,MVX)
      IF (NW12.EQ.0) GO TO 100
      WRITE(IO24)((CON0(N,M),N=1,NVX),M=1,MVX)
  100 CONTINUE
      IF (IX(13).LE.1) GO TO 104
      READ(IOR)NC2,(SUBCNC(N),N=1,NC2)
      NC2 = 0
      DO 103 M = 1,MVX
      NSUB = NZINF(M,1)
      NSET = NZINF(M,3)
      NN = NJM(1,NSET)
      NNT = NSUB*NN
      IF (NSUB.LE.1) GO TO 102
      NC1 = NC2+1
      NC2 = NC2+NNT
  101 IF (NCX.NE.-11111) GO TO 102
      WRITE(IO8)M,NNT,M,M,M,M,M,M,M,M
      WRITE(IO8)(SUBCNC(N),N=NC1,NC2)
  102 CONTINUE
      IF (NW12.EQ.0) GO TO 103
      WRITE(IO24)(SUBCNC(N),N=1,NNT)
  103 CONTINUE
      IF (NCX.NE.-11111) GO TO 104
      NNT = -999
      WRITE(IO8)NNT,NNT,NNT,NNT,NNT,NNT,NNT,NNT,NNT,NNT
  104 CONTINUE
      IF (NCX.NE.-11111) GO TO 105
      REWIND IO8
  105 CONTINUE
      IF (NW12.EQ.0) GO TO 110
      READ(IOR)((CON0(N,M),N=1,NVX),M=1,MVX)
      WRITE(IO24)((CON0(N,M),N=1,NVX),M=1,MVX)
      IF (IX(13).LE.1) GO TO 106
      READ(IOR)NC2,(SUBCNC(N),N=1,NC2)
  106 CONTINUE
      READ(IOR)(ITMIS(N),N=1,20),(AITMIS(N),N=1,20), (HMLOAD(M),M=1,MVX)
     >  ,(EXPSOR(M),M=1,MVX)
      WRITE(IOTWLV)MVX,MVX,MVX,MVX,MVX
      NC2 = 0
      ND2 = 0
      DO 109 M = 1,MVX
      NSUB = NZINF(M,1)
      NSET = NZINF(M,3)
      NN = NJM(1,NSET)
      NNT = NSUB*NN
      NC1 = NC2+1
      NC2 = NC2+NNT
      WRITE(IOTWLV)NC1,NC2
      IF (NSUB.GT.1) GO TO 107
      WRITE(IOTWLV)(CON0(N,M),N=1,NNT)
      IF (IX(13).LE.1) GO TO 108
      WRITE(IO24)(CON0(N,M),N=1,NNT)
      GO TO 108
  107 CONTINUE
      ND1 = ND2+1
      ND2 = ND2+NNT
      WRITE(IO24)(SUBCNC(N),N=ND1,ND2)
      WRITE(IOTWLV)(SUBCNC(N),N=ND1,ND2)
  108 CONTINUE
  109 CONTINUE
      WRITE(IOTWLV)((CON0(N,M),N=1,NVX),M=1,MVX)
      REWIND IOTWLV
      WRITE(IO24)(ITMIS(I),I=1,20),(AITMIS(I),I=1,20)
      WRITE(IO24)(HMLOAD(M),M=1,MVX)
      WRITE(IO24)(EXPSOR(M),M=1,MVX)
      REWIND IO24
  110 CONTINUE
      RETURN
      END
CRODX --94.1 ***CITATION*** CONTROLS ROD MOVEMENT         /CF-CALR
      SUBROUTINE RODX(CONC,MJJR,NCOMP,P2,P2E,NRGNE,BBND, NVX,MVX,NSETVX,
     > LVX,JVX,IVX,KBVX,JIVX,KVX)
C
      DOUBLE PRECISION P2
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     >  , XNAME(3,200)
C
      DIMENSION CONC(NVX,MVX),MJJR(200,NSETVX),NCOMP(LVX)
      DIMENSION P2(JVX,IVX,KVX),P2E(JIVX,KBVX,KVX), NRGNE(JVX,IVX,KBVX),
     > BBND(KVX)
      DIMENSION ICRP(24),ICRPS(24)
C
      IPSN = IX(2)
      IO35 = IX(141)
      REWIND IO35
      IF (IPSN.GT.1) READ(IO35)
      IF (IPSN.LE.1) READ(IO35) (NCOMP(L),L=1,LMAX)
      READ(IO35) NROC
      READ(IO35) (ICRP(I),I=1,24)
      READ(IO35) (ICRPS(I),I=1,24)
      IPS = ICRPS(IPSN)
      IF (IPS.EQ.0) GO TO 133
      DO 100 N=1,NROC
      READ(IO35) IPST,IT,NSPEC,(NXTR1(I),I=1,IT)
      IF (IPST.EQ.IPS) GO TO 101
  100 CONTINUE
      WRITE(IOUT,1000) IPS
      return
  101 CONTINUE
      IF (ICRP(1).NE.0) GO TO 106
C     REGION BASIS
      WRITE(IOUT,1001)
      ITT = IT + 1
      IT2 = IT - 2
      DO 105 II=1,IT2
      I = ITT - II
      LO = NXTR1(I)
      IF (NXTR1(I-1).EQ.0.OR.I-1.EQ.2) GO TO 102
      LN = NXTR1(I-1)
      MN = NCOMP(LN)
      GO TO 103
  102 CONTINUE
      IF (NXTR1(2).EQ.0) GO TO 104
      MN = NXTR1(2)
  103 CONTINUE
      MT = NCOMP(LO)
      NCOMP(LO) = MN
      IF (ICRP(24).GT.0) WRITE(IOUT,1002) LO,NCOMP(LO),MN
  104 CONTINUE
  105 CONTINUE
      GO TO 119
  106 CONTINUE
      IF (ICRP(2).GT.0) GO TO 113
C     ZONE BASIS
      WRITE(IOUT,1003)
      ITT = IT + 1
      IT2 = IT - 2
      DO 111 II=1,IT2
      I = ITT - II
      MO = NXTR1(I)
      IF (NXTR1(I-1).EQ.0.OR.I-1.EQ.2) GO TO 107
      MN = NXTR1(I-1)
      GO TO 108
  107 CONTINUE
      IF (NXTR1(2).EQ.0) GO TO 110
      MN = NXTR1(2)
  108 CONTINUE
      DO 109 L=1,LMAX
      IF (NCOMP(L).NE.MO) GO TO 109
      MT = NCOMP(L)
      NCOMP(L) = (-MN)
      IF (ICRP(24).LE.0) GO TO 109
      WRITE(IOUT,1002) L,NCOMP(L),MT
  109 CONTINUE
  110 CONTINUE
  111 CONTINUE
      DO 112 L=1,LMAX
      NCOMP(L) = IABS(NCOMP(L))
  112 CONTINUE
      GO TO 119
  113 CONTINUE
C     ZONE CONCENTRATION BASIS
      WRITE(IOUT,1004)
      ITT = IT + 1
      IT2 = IT - 2
      DO 118 II=1,IT2
      I = ITT - II
      MO = NXTR1(I)
      IF (NXTR1(I-1).EQ.0.OR.I-1.EQ.2) GO TO 114
      MN = NXTR1(I-1)
      GO TO 115
  114 CONTINUE
      IF (NXTR1(2).EQ.0) GO TO 117
      MN = NXTR1(2)
  115 CONTINUE
      DO 116 N=3,12
      IC = ICRP(N)
      IF (IC.EQ.0) GO TO 116
      NSN = NXSET(MN)
      NRN = NXODR(NSN)
      NN = MJJR(IC,NRN)
      NSO = NXSET(MO)
      NRO = NXODR(NSO)
      NO = MJJR(IC,NRO)
      IF (NN.EQ.0.OR.NO.EQ.0) GO TO 116
      CT = CONC(NO,MO)
      CONC(NO,MO) = CONC(NN,MN)
      IF (ICRP(24).GT.0) WRITE(IOUT,1005) IC,NSN,NRN,NN,NSO,NRO,NO, MO,
     > MN,CONC(NO,MO),CT
  116 CONTINUE
  117 CONTINUE
  118 CONTINUE
      GO TO 133
  119 CONTINUE
      N17 = NUAC(17)
      IF (N17.EQ.0) GO TO 132
C     MODIFY STARTING FLUX IF INTERNAL BLACK ABSORBER PRESENT
      N5 = NUAC(5)
      DO 123 K=1,KMAX
      DO 122 KB=1,KBMAX
      N1 = 0
      DO 121 I=1,IMAX
      DO 120 J=1,JMAX
      N1 = N1 + 1
      IF (N5.LE.0) P = P2(J,I,K)
      IF (N5.GT.0) P = P2E(N1,KB,K)
      IF (P.EQ.0.0) GO TO 120
      PNO = P
      GO TO 124
  120 CONTINUE
  121 CONTINUE
  122 CONTINUE
  123 CONTINUE
      GO TO 132
  124 CONTINUE
      DO 131 KB=1,KBMAX
      N1 = 0
      DO 130 I=1,IMAX
      DO 129 J=1,JMAX
      N1 = N1 + 1
      L = NRGNE(J,I,KB)
      M = NCOMP(L)
      DO 128 K=1,KMAX
      IF (N5.LE.10) P = P2(J,I,K)
      IF (N5.GT.10) P = P2E(N1,KB,K)
      IF (M.NE.N17) GO TO 126
      IF (XMIS(2).GE.0.0) GO TO 125
      IF (BBND(K).EQ.0.0) GO TO 126
  125 P = 0.0
      GO TO 127
  126 IF (P.EQ.0.0) P = PNO
  127 IF (N5.LE.10) P2(J,I,K) = P
      IF (N5.GT.10) P2E(N1,KB,K) = P
  128 CONTINUE
  129 CONTINUE
  130 CONTINUE
  131 CONTINUE
  132 CONTINUE
      IF (ICRP(24).GT.0) WRITE(IOUT,1006) (NCOMP(L),L=1,LMAX)
  133 CONTINUE
      REWIND IO35
      RETURN
 1000 FORMAT('0NO DATA FOR CONTROL ROD PROGRAM SPEC',I5)
 1001 FORMAT('0CONTROL ROD PROGRAM - REGION BASIS')
 1002 FORMAT(1X,10I5)
 1003 FORMAT('0CONTROL ROD PROGRAM - ZONE BASIS')
 1004 FORMAT('0CONTROL ROD PROGRAM - ZONE CONC BASIS')
 1005 FORMAT(1X,9I5,2E15.6)
 1006 FORMAT('0',24I5)
      END
CWSTR --130-***CITATION***-WRITES-RESTART-TAPE/CF-CALR
C**** IF(NCYLE.EQ.999) WRITE COMMON AND FIXED DATA
C**** IF(NCYLE.EQ.0) WRITE CONC. AND FLUX
C**** IF(NCYLE.LT.0) WRITE CONC.
      SUBROUTINE WSTR(NCYLE,A,MEMORY)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AMESH/BMESH(30),NREGI,NREGJ,NREGKB,XSHI(100),XSHJ(100),
     > XSHKB(100), MSHI(100),MSHJ(100),MSHKB(100),Y(211),YY(211), X(211)
     >  ,XX(211),Z(211),ZZ(211), ZONVOL(200),AVZPD(200),PDI(211),
     > PDJ(211) , PDK(211)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     >  , XNAME(3,200)
      COMMON/AVDLM/IVDLM(1),IVX,JVX,KBVX,KVX,LVX,MVX,NVX,IVXP1,JVXP1,
     > KBVXP1,NSETVX,NVO,IVO,IVZ,KVZ,NCRP,NSPA,N3DDIM,NBLOCK,NUO, JIVX,
     > JIP1VX,JP1IXZ,IOVX,IOVZ
      COMMON/AKADD/KAY(1),K1,K2,K3,K4,K5,K6,K7,K8,K9,K10,K11, K12,K13,
     > K131,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23,K24, K25,K26,K27,
     > K28,K29,K30,K31,K32,K33,K34,K35,K36,K37, K38,K39,K40,K41,K42,K43,
     >  K44,K45,K46,K47,K48,K49, K50,K51,K52,K53,K54,K55,K56,K57,K58,
     > K59, K60,K61,K62, K63,K64,K65,K66,K67,K68,K69,K70,K71,K72,K73,
     > K74,K75, K76,K77,K78,K79,K80,K81,K82,K83,K84,K85,K86,K87, K88,
     > K89,K90, K91,K92,K93,K94,K95,K96,K97,K98, K99,K100,NDATA,KNRGN,
     > KNCOMP, KPVOL,KRVOL,MEMVRY, MEMX
      COMMON/ASRCH/ BSRCH(30),XK1,XK2,XK3,XN1,XN2,XN3, DELK1,DELK2,
     > DELK3,BATTY,DRV,TBF,GWC,EK2,RCCM,DNDK(5), NSC(5),NSCN,NXZ,NXN,
     > NXM,NXS,INIL,INIU,INID
C
      DIMENSION A(MEMORY)
C
      IO10 = IX(77)
      IO12 = IX(79)
      REWIND IO12
      IO13 = IX(80)
      IOR = IO13
      WRITE(IOR) NCYLE,NCYLE,NCYLE,NCYLE,NCYLE
      IF (NCYLE.EQ.999) GO TO 106
      J2 = K19-1
      IF ((NGC(19).GT.0).OR.(IX(199).EQ.0)) GO TO 102
      IO11 = IX(78)
      REWIND IO11
      N1 = K41-1
      WRITE(IO11)(A(I),I=K24,N1)
      REWIND IO11
  100 CONTINUE
      INCR = K18-1
      READ(IO12)MVVX
      DO 101 M = 1,MVVX
      READ(IO12)NZN1,NZN2
      J1 = NZN1+INCR
      J2 = NZN2+INCR
      READ(IO12)(A(I),I=J1,J2)
  101 CONTINUE
      REWIND IO12
  102 CONTINUE
      NKM = KPVOL-1
      WRITE(IOR)J2,NKM,(IX(I),I=1,200),(SPARE(I),I=1,200), (A(I),I=K14,
     > J2),(A(I),I=KNCOMP,NKM)
  103 N1 = K41-1
      N2 = 498
      IF ((NGC(19).GT.0).OR.(IX(199).EQ.0)) GO TO 104
      READ(IO11)(A(I),I=K24,N1)
      REWIND IO11
  104 CONTINUE
      IF (NCYLE.NE.0) GO TO 105
      WRITE(IOR)N1,N2,(BFLUX(I1),I1=1,N2), SPARE(39),(A(I),I=K24,N1)
  105 CONTINUE
      BACKSPACE IOR
      GO TO 107
  106 N1 = 1741
      N2 = 2932
      N3 = 498
      N4 = 2730
      N5 = 26
      N6 = 0
      N7 = 109
      N13 = 63
      N8=K34-1
      N9 = K52-1
      N14 = K64-1
      N10 = KNRGN+JVX*IVX*KBVX-1
      WRITE(IOR)N1,N2,N3,N4,N5,N6,N7,N8,N9,N10,N13,N14,MEMORY
      WRITE(IOR)(TITL1(I),I=1,18),(TITL2(I),I=1,18)
      WRITE(IOR)(BLSUB(I1),I1=1,N1)
      WRITE(IOR)(BMESH(I1),I1=1,N2)
      WRITE(IOR)(BFLUX(I1),I1=1,N3)
      WRITE(IOR)(BBURN(I1),I1=1,N4)
      WRITE(IOR)(IVDLM(I1),I1=1,N5)
      WRITE(IOR)(KAY(I1),I1=1,N7)
      WRITE(IOR)(BSRCH(I1),I1=1,N13)
      WRITE(IOR)(A(I1),I1=K8 ,N8)
      WRITE(IOR)(A(I1),I1=K50,N9)
      WRITE(IOR)(A(I1),I1=KNRGN,N10)
      WRITE(IOR)(A(I1),I1=KNCOMP,MEMORY)
      WRITE(IOR)(A(I1),I1=K45,N14)
      LIM = K18-1
      REWIND IO1
      WRITE(IO1)(A(I),I=K17,LIM)
      REWIND IO1
      REWIND IO10
      IREAD = IO10
      IRITE = IOR
      CALL KRAN(A(K17),MVX,NVX,IREAD,IRITE, A(K30),A(K31),A(K32),A(K33),
     >  NSETVX)
      REWIND IO10
      BACKSPACE IOR
      READ(IO1)(A(I),I=K17,LIM)
      REWIND IO1
  107 CONTINUE
      RETURN
      END
CINCO --187  ***FUEL MANAGEMENT*** SAVE INITIAL CONC. ON RESTART I/O.
C     CALLED FROM DRIV
      SUBROUTINE INCO(CON0,NZINF,NJM,SUBCNC, MVY,NVY,NSETVY,I5VY,IOR,A,
     > MEMORY)
C
      DOUBLE PRECISION FLOTR
C
      COMMON/FMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
      COMMON/CMARY/MEMARY(1),IMN,MNI,IJLMN,NMLJI,IY(50),AX(50),TITL(36)
      COMMON/COOPD/FLOTR(200),INTGR(100)
      COMMON/FMADD/KAY(1),K1,K2,K3,K4,K5,K6,K7,K8,K9,K10,K11,K12,K13,
     > K14,K15,K16,K17,K18,K19,K20,K21,K22,K23,K24,K25,K26,K27,K28,K29,
     > K30,K31,K32,K33,K34,K35,K36,K37,K38,K39,K40,K41,K42,K43,K44,K45,
     > K46,K47,K48,K49,K50,K500,K501,K502,K503,K504,K505,K506,K507,K508,
     >  K509,K51,K52,K53,K54,K540,K541,K542,K543,K544,K545,K546,K547,
     > K548,K549,K550,K55,K56,K57,K58,K59,K60,K61,K62,K63, K64,K65,K66,
     > K67,K68,K69,K70,K71,K72,K73,K74,K75
      COMMON/FMIMS/IB(100),MEMVRY,NFSVX,NRSVX,NDSVX,NISVX,NPDVX,NFMVX,
     > MVX,NVX,NRLVX,I1VX,I2VX,I3VX,I4VX,I5VX,I6VX,I7VX,I8VX,I9VX,I10VX,
     >  NONNN,NSETVX
C
      DIMENSION CON0(NVY,MVY),NZINF(MVY,7),NJM(6,NSETVY),SUBCNC(I5VY)
      DIMENSION A(MEMORY)
C
      IX(13) = IB(13)
      NDY = -11111
      M1 = IX(1)
      M2 = IX(2)
      M3 = 455
      M4 = 97
      M5 = 122
      M6 = 141
      M7 = 250
      M8 = K55-1
      WRITE(IOR)NDY,NDY,NDY,NDY,NDY
      WRITE(IOR)M1,M2,M3,M4,M5,M6,M7,M8
      WRITE(IOR)(BLSUB(I),I=1,M3)
      WRITE(IOR)(KAY(I),I=1,M4)
      WRITE(IOR)(IB(I),I=1,M5)
      WRITE(IOR)(MEMARY(I),I=1,M6)
      WRITE(IOR)(FLOTR(I),I=1,M7)
      WRITE(IOR)(A(I),I=1,M8)
      REWIND IO4
      READ(IO4)((CON0(N,M),N=1,NVX),M=1,MVX)
      WRITE(IOR)((CON0(N,M),N=1,NVX),M=1,MVX)
      IF (IX(13).LE.1) GO TO 102
      NC2 = 0
      DO 101 M = 1,MVX
      NSUB = NZINF(M,1)
      IF (NSUB.GT.1) GO TO 100
      READ(IO4)
      GO TO 101
  100 CONTINUE
      NSET = NZINF(M,3)
      NN = NJM(1,NSET)
      NNT = NSUB*NN
      NC1 = NC2+1
      NC2 = NC2+NNT
      READ(IO4)(SUBCNC(N),N=NC1,NC2)
  101 CONTINUE
      WRITE(IOR)NC2,(SUBCNC(N),N=1,NC2)
  102 CONTINUE
      REWIND IO4
      RETURN
      END
CPUTA --067    ***FUEL MANAGEMENT***   STORE MST
C     CALLED FROM/FMIP
      SUBROUTINE PUTA(MST)
C
      DOUBLE PRECISION FLOTR
C
      COMMON/GMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
      COMMON/COOPD/FLOTR(200),INTGR(100)
C
      DIMENSION MST(38)
C
      DO 100 N = 1,38
      MST(N) = NXTR1(N)
  100 CONTINUE
      INTGR(58) = MST(7)
      RETURN
      END
CCHCK --072    ***FUEL MANAGEMENT***   CHECK SOME INPUT
C     CALLED FROM/DRIV
      SUBROUTINE CHCK(NFM,I3VX,I4VX, NIS,NPARNT,NDAUTR,NISVX,NPDVX)
C
      COMMON/GMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
C
      DIMENSION NFM(I3VX,I4VX)
      DIMENSION NIS(30),NPARNT(NPDVX),NDAUTR(NPDVX)
C***********************************************************************
      JOUT = IX(10)
C***********************************************************************
      DO 100 N = 1,100
      NXTR1(N) = 0
      NXTR2(N) = 0
  100 CONTINUE
      NC1 = 0
      NC2 = 0
      DO 103 N1 = 1,NPDVX
      I1 = NPARNT(N1)
      I2 = NDAUTR(N1)
      ID1 = 0
      ID2 = 0
      DO 101 N2 = 1,NISVX
      I3 = NIS(N2)
      IF (I1.EQ.I3) ID1 = 1
      IF (I2.EQ.I3) ID2 = 1
      IF (I2.EQ.0) ID2 = 1
  101 CONTINUE
      IF (ID1.GT.0) GO TO 102
      NC1 = NC1+1
      NXTR1(NC1) = I1
  102 CONTINUE
      IF (ID2.GT.0) GO TO 103
      NC2 = NC2+1
      NXTR2(NC2) = I2
  103 CONTINUE
      IF (NC1.EQ.0) GO TO 104
      WRITE(IOUT,1001)(NXTR1(N),N=1,NC1)
  104 CONTINUE
      IF (NC2.EQ.0) GO TO 105
      WRITE(IOUT,1001)(NXTR2(N),N=1,NC2)
  105 CONTINUE
      NC3 = 0
      DO 106 N = 1,I4VX
      IF ((NFM(2,N).EQ.0).AND.(NFM(13,N).GT.0)) NC3 = NC3+1
  106 CONTINUE
      IF (NC3.GT.0) WRITE(IOUT,1002)
      IF (IX(18).EQ.0) GO TO 107
      WRITE(IOUT,1000)
      return
  107 CONTINUE
      IF ((NC1.GT.0).OR.(NC2.GT.0).OR.(NC3.GT.0)) return
      RETURN
 1000 FORMAT('0ERROR STOP 914')
 1001 FORMAT('0ERROR STOP 908'/(1X,15I7))
 1002 FORMAT('0ERROR STOP 909')
      END
CWCNC --171    ***FUEL MANAGEMENT***   WRITE CONC. ON INTERFACE I/O UNTS
C     CALLED FROM/MNGE
      SUBROUTINE WCNC(CONC,SUBCNC,NSUBNO,NJM,NZINF, MVX,NVX,I5VX,NSETVX,
     >  I7VX,MAC)
C
      COMMON/FMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
C
      DIMENSION CONC(NVX,MVX),SUBCNC(I5VX),NSUBNO(MVX), NJM(6,NSETVX),
     > NZINF(MVX,7)
      DIMENSION MAC(24)
C
      MAC13 = MAC(1)
      IF (MAC13.LT.3) GO TO 100
      WRITE(IOUT,1000)
  100 CONTINUE
C***********************************************************************
      JOUT = IX(10)
C***********************************************************************
  101 REWIND IO6
      REWIND IO7
      JK=0
      JL=2
      IF (IX(13).LE.1) GO TO 110
      NB2 = 0
      DO 109 M = 1,MVX
      NSUB = NZINF(M,1)
      NSET = NZINF(M,3)
      NNUC = NJM(1,NSET)
      NNT = NSUB*NNUC
      IF (NSUB.LE.1) GO TO 105
      NCI = 1
      L = M
      CALL SADD(M,NZINF,NJM,NSUBNO,MVX,NCI,NC,NSETVX,L)
      NC1 = NC-NNUC
      T1 = NSUB
      DO 102 N = 1,NVX
      CONC(N,M) = 0.0
  102 CONTINUE
      DO 104 NN = 1,NNUC
      NC2 = NC1+NN
      T2 = 0.0
      DO 103 NSZ = 1,NSUB
      NC2 = NC2+NNUC
      T2 = T2+SUBCNC(NC2)
  103 CONTINUE
      CONC(NN,M) = T2/T1
  104 CONTINUE
      GO TO 106
  105 CONTINUE
      CALL GRIT(CONC(1,M),I7VX,JK,IO6,JL)
      GO TO 108
  106 CONTINUE
      NB1 = NB2+1
      NB2 = NB2+NSUB*NNUC
      NB3=NB1+I7VX-1
      CALL GRIT(SUBCNC(NB1),I7VX,JK,IO6,JL)
      IF (MAC13.LT.3) GO TO 107
      WRITE(IOUT,1001)M,(SUBCNC(N),N=NB1,NB2)
  107 CONTINUE
  108 CONTINUE
  109 CONTINUE
  110 CONTINUE
      WRITE(IO7)CONC
      IF (MAC13.LT.3) GO TO 111
      WRITE(IOUT,1002) ((CONC(N,M),N=1,NVX),M=1,MVX)
  111 CONTINUE
      RETURN
 1000 FORMAT('0FINAL CONCENTRATIONS AFTER FUEL MANAGEMENT')
 1001 FORMAT('0'/' SUBZONE CONCENTRATIONS FOR ZONE',I4/(1X,1P9E13.5))
 1002 FORMAT('0'/' ZONE CONCENTRATIONS FOR ALL ZONES'/(1X,1P9E13.5))
      END
CMESH --029 ***CITATION*** REGION VOLUMES AND MESH SPACING/ CF-IPTM
      SUBROUTINE MESH(RVOL,PVOL,LVX)
C
      DOUBLE PRECISION
     >        XDEL,ADR,YDELSQ,XNIPTS,XNJPTS,XNKPTS,TEMP,ZXYR,YDIST,
     > XDIST,ZDIST,YDEL,ZDEL,AXYR,XDIST1,XDIST2,YDIST1,YDIST2,XNTOPS,U1,
     >  U2,H,H1,H2,U3
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AMESH/BMESH(30),NREGI,NREGJ,NREGKB,XSHI(100),XSHJ(100),
     > XSHKB(100), MSHI(100),MSHJ(100),MSHKB(100),Y(211),YY(211), X(211)
     >  ,XX(211),Z(211),ZZ(211), ZONVOL(200),AVZPD(200),PDI(211),
     > PDJ(211) , PDK(211)
C
      DIMENSION RVOL(LVX),PVOL(LVX)
      DIMENSION NX(6),TX(6)
C     SET NXY TO SAME NUMBER AS THE DIMENSION OF XX AND YY
      NXY = 211
      IMAX = 1
      KBMAX = 1
      NDIM = IX(25)
      NGEM = IX(26)
      MGEM = 0
      H1 = 6*MSHI(1)*MSHJ(1)
      H2 = XSHI(1)*XSHJ(1)
      H = DSQRT(H2/H1)
      IF ((NGEM.EQ.8).OR.(NGEM.EQ.12)) MGEM = 8
  100 JMAX = 0
      DO 101 J = 1,NREGJ
      JMAX = JMAX+MSHJ(J)
  101 CONTINUE
      IF (NDIM-2) 107,102,102
  102 IMAX = 0
  103 DO 104 I = 1,NREGI
      IMAX = IMAX+MSHI(I)
  104 CONTINUE
      IF (NDIM-2) 107,107,105
  105 KBMAX = 0
      DO 106 KB = 1,NREGKB
      KBMAX = KBMAX+MSHKB(KB)
  106 CONTINUE
  107 NRGNO = 0
      MESHGE = 0
      DO 125 KBR = 1,NREGKB
      NKBPTS = MSHKB(KBR)
      U3 = NKBPTS
      ZDIST = XSHKB(KBR)
      YDIST2 = 0.D+0
      DO 124 IR = 1,NREGI
      NIPTS = MSHI(IR)
      U1 = NIPTS
      YDIST = XSHI(IR)
      YDIST1 = YDIST2
      YDIST2 = YDIST2+XSHI(IR)
      XDIST2 = 0.D+0
      DO 123 JR = 1,NREGJ
      XDIST1 = XDIST2
      XDIST2 = XDIST2+XSHJ(JR)
      NJPTS = MSHJ(JR)
      U2 = NJPTS
      XDIST = XSHJ(JR)
      NTOPTS = NKBPTS*NIPTS*NJPTS
      XNTOPS = FLOAT(NTOPTS)
      NRGNO = NRGNO+1
      GO TO (108,109,110,111,112,113,114,115,116,117,118,119,120,121),
     > NGEM
  108 AXYR = XDIST
      GO TO 122
  109 AXYR = 3.141593*(XDIST2**2-XDIST1**2)
      GO TO 122
  110 AXYR = 4.0*3.141593/3.0*(XDIST2**3-XDIST1**3)
      GO TO 122
  111 AXYR = 1.0
      GO TO 122
  112 GO TO 122
  113 AXYR = YDIST*XDIST
      GO TO 122
  114 AXYR = 3.141593*(XDIST2**2-XDIST1**2)*YDIST
      GO TO 122
  115 AXYR = XDIST*(YDIST2**2-YDIST1**2)/2.0
      GO TO 122
  116 AXYR = 0.3608439* ((XDIST/U2)**2+(YDIST/U1)**2+ 0.4*XDIST*YDIST/
     > (U2*U1))*XNTOPS
      GO TO 122
  117 CONTINUE
      AXYR = 0.8660254040*XDIST*YDIST
C     SQRT(3)/2 = 0.8660254040
      GO TO 122
  118 AXYR = ZDIST*YDIST*XDIST
      GO TO 122
  119 AXYR = 0.5*ZDIST*XDIST*(YDIST2**2-YDIST1**2)
      GO TO 122
  120 AXYR = 0.3608439*ZDIST*((XDIST/U2)**2+(YDIST/U1)**2+ 0.4*XDIST*
     > YDIST/(U2*U1))*XNTOPS/U3
      GO TO 122
  121 CONTINUE
      AXYR = 0.8660254040*XDIST*YDIST*ZDIST
C     SQRT(3)/2 = 0.8660254040
  122 RVOL(NRGNO) = AXYR
      PVOL(NRGNO) = AXYR/XNTOPS
      IF ((NGEM.NE.9).OR.(NGEM.NE.13)) GO TO 123
      IF (NRGNO.EQ.1) GO TO 123
      IF (PVOL(1).NE.PVOL(NRGNO)) MESHGE = 1
  123 CONTINUE
  124 CONTINUE
  125 CONTINUE
      KB = 0
      ZZ(1) = 0.0
      ZXYR=0.D+0
      ADR = 0.0
      DO 133 KBR = 1,NREGKB
      NKBPTS = MSHKB(KBR)
      XNKPTS = FLOAT (NKBPTS)
      ZDEL = XSHKB(KBR)/XNKPTS
      DO 132 KNR = 1,NKBPTS
      KB = KB+1
      ZXYR=ZXYR+ZDEL
      IF (KB-1) 126,126,127
  126 AXYR=0.5D+0*ZDEL
      GO TO 130
  127 IF (KNR-1) 128,128,129
  128 AXYR = AXYR + 0.5*(ZDEL+ADR)
      GO TO 130
  129 AXYR=AXYR+ZDEL
  130 ZZ(KB+1)=ZXYR
      Z(KB)=AXYR
      IF (KNR-NKBPTS) 132,131,131
  131 ADR = ZDEL
  132 CONTINUE
  133 CONTINUE
      NREGIJ = NREGI
      IF (MGEM-8) 135,134,135
  134 NREGIJ = NREGJ
  135 I = 0
      YY(1) = 0.0
      ZXYR=0.D+0
      ADR = 0.0
      DO 147 IR = 1,NREGIJ
      IF (MGEM-8) 136,137,136
  136 NIPTS = MSHI(IR)
      XNIPTS = FLOAT(NIPTS)
      XDEL = XSHI(IR)/XNIPTS
      GO TO 138
  137 NIPTS = MSHJ(IR)
      XNIPTS = FLOAT(NIPTS)
      XDEL = XSHJ(IR)/XNIPTS
  138 DO 146 INR = 1,NIPTS
      I=I+1
      IF ((NGEM.NE.10).AND.(NGEM.NE.14)) GO TO 139
      Y(I) = YY(I)+H
      YY(I+1) = YY(I)+3.0*H
      PDI(I) = YY(I+1)-H
      GO TO 146
  139 CONTINUE
      ZXYR=ZXYR+XDEL
      IF (I-1) 140,140,141
  140 AXYR=0.5D+0*XDEL
      GO TO 144
  141 IF (INR-1) 142,142,143
  142 AXYR=AXYR+0.5*(XDEL+ADR)
      GO TO 144
  143 AXYR=AXYR+XDEL
  144 Y(I)=AXYR
      YY(I+1)=ZXYR
      IF (INR-NIPTS) 146,145,145
  145 ADR = XDEL
  146 CONTINUE
  147 CONTINUE
      ZTEMP = 1.0/3.0
      J = 0
      XX(1) = 0.0
      ZXYR=0.D+0
      ZDEL1 = ZZ(2)-ZZ(1)
      YDEL1 = YY(2)-YY(1)
      IF (NGEM-5) 148,148,149
  148 T1 = 1.0
      GO TO 152
  149 IF (NGEM-11) 150,151,151
  150 T1 = YDEL1
      GO TO 152
  151 T1 = YDEL1*ZDEL1
  152 CONTINUE
      YDELSQ = YY(2)**2-YY(1)**2
      NREGIJ = NREGJ
      IF (MGEM-8) 154,153,154
  153 NREGIJ = NREGI
  154 DO 164 JR = 1,NREGIJ
      IF (MGEM.EQ.8) GO TO 155
      NJPTS = MSHJ(JR)
      TEMP = PVOL(JR)/T1
      XNJPTS = FLOAT(NJPTS)
      XDEL = XSHJ(JR)/XNJPTS
      GO TO 156
  155 NJPTS = MSHI(JR)
      JS = (JR-1)*NREGJ+1
      TEMP = PVOL(JS)/T1
      XNJPTS = FLOAT(NJPTS)
      XDEL = XSHI(JR)/XNJPTS
  156 DO 163 JNR = 1,NJPTS
      J = J+1
      GO TO (157,158,161,163,163,157,158,159,157,160,157,159,157,160),
     > NGEM
  157 ZXYR=ZXYR+XDEL
      GO TO 162
  158 ZXYR= DSQRT(TEMP/3.141593+ZXYR**2)
      GO TO 162
  159 ZXYR= DSQRT(2.0*TEMP+ZXYR **2)
      GO TO 162
  160 CONTINUE
      X(J) = XX(J)+H
      XX(J+1) = X(J)+H
      GO TO 163
  161 ZXYR= (3.0*TEMP/(4.0*3.141593)+ZXYR**3)**ZTEMP
  162 CONTINUE
      XX(J+1)=ZXYR
  163 CONTINUE
  164 CONTINUE
      IF ((NGEM.EQ.10).OR.(NGEM.EQ.14)) GO TO 171
      JXLM = JMAX
      IF (MGEM.EQ.8) JXLM = IMAX
      DO 168 J = 1,JXLM
      GO TO (165,166,167,168,168,165,166,166,165,168,165,166,165,168),
     > NGEM
  165 X(J) = (XX(J+1)+XX(J))*0.5
      GO TO 168
  166 X(J) = SQRT((XX(J+1)**2+XX(J)**2)*0.5)
      GO TO 168
  167 X(J) = ((XX(J+1)**3+XX(J)**3)*0.5)**ZTEMP
  168 CONTINUE
      IF (MGEM-8) 171,169,171
  169 DO 170 N = 1,NXY
      TEMP1 = XX(N)
      TEMP2 = YY(N)
      XX(N) = TEMP2
      YY(N) = TEMP1
      TEMP1 = X(N)
      TEMP2 = Y(N)
      X(N) = TEMP2
      Y(N) = TEMP1
  170 CONTINUE
  171 CONTINUE
      IMXP1=IMAX+1
      JMXP1=JMAX+1
      KBMXP1 = KBMAX+1
      GO TO (172,174,175,175,175,176,179,180,181,182,183,187,188,189),
     > NGEM
  172 WRITE(IOUT,1005)XX(JMAX+1)
  173 WRITE(IOUT,1006)
      WRITE(IOUT,1007)(MSHJ(J),XSHJ(J),J=1,NREGJ)
      WRITE(IOUT,1008)JMAX
      WRITE(IOUT,1009)
      WRITE(IOUT,1010)(J,XX(J),J=2,JMXP1)
      WRITE(IOUT,1011)
      WRITE(IOUT,1010)(J,X(J),J=1,JMAX)
      GO TO 190
  174 WRITE(IOUT,1012)XX(JMAX+1)
      GO TO 173
  175 WRITE(IOUT,1013)XX(JMAX+1)
      GO TO 173
  176 WRITE(IOUT,1014)XX(JMAX+1),YY(IMAX+1)
  177 WRITE(IOUT,1006)
      WRITE(IOUT,1007)(MSHJ(J),XSHJ(J),J=1,NREGJ)
      WRITE(IOUT,1015)
      WRITE(IOUT,1007)(MSHI(I),XSHI(I),I=1,NREGI)
      WRITE(IOUT,1016)JMAX,IMAX
      WRITE(IOUT,1009)
      WRITE(IOUT,1010)(J,XX(J),J=2,JMXP1)
      WRITE(IOUT,1017)
      WRITE(IOUT,1010)(I,YY(I),I=2,IMXP1)
      WRITE(IOUT,1011)
      WRITE(IOUT,1010)(J,X(J),J=1,JMAX)
      IF (NGEM.NE.10) GO TO 178
      WRITE(IOUT,1000)
      WRITE(IOUT,1001)(I,Y(I),PDI(I),I=1,IMAX)
      GO TO 190
  178 CONTINUE
      WRITE(IOUT,1017)
      WRITE(IOUT,1010)(I,Y(I),I=1,IMAX)
      GO TO 190
  179 WRITE(IOUT,1018)XX(JMAX+1),YY(IMAX+1)
      GO TO 177
  180 WRITE(IOUT,1019)XX(JMAX+1),YY(IMAX+1)
      GO TO 177
  181 WRITE(IOUT,1020)XX(JMAX+1),YY(IMAX+1)
      GO TO 177
  182 CONTINUE
      WRITE(IOUT,1002)XX(JMAX+1),YY(IMAX+1)
      GO TO 177
  183 WRITE(IOUT,1021)XX(JMAX+1),YY(IMAX+1),ZZ(KBMAX+1)
  184 WRITE(IOUT,1006)
      WRITE(IOUT,1007)(MSHJ(J),XSHJ(J),J=1,NREGJ)
      WRITE(IOUT,1015)
      WRITE(IOUT,1007)(MSHI(I),XSHI(I),I=1,NREGI)
      WRITE(IOUT,1022)
      WRITE(IOUT,1007)(MSHKB(I),XSHKB(I),I=1,NREGKB)
      WRITE(IOUT,1023)JMAX,IMAX,KBMAX
      WRITE(IOUT,1009)
      WRITE(IOUT,1010)(J,XX(J),J=2,JMXP1)
      WRITE(IOUT,1017)
      WRITE(IOUT,1010)(I,YY(I),I=2,IMXP1)
      WRITE(IOUT,1024)
      WRITE(IOUT,1010)(KB,ZZ(KB),KB=2,KBMXP1)
      WRITE(IOUT,1011)
      WRITE(IOUT,1010)(J,X(J),J=1,JMAX)
      IF (NGEM.NE.14) GO TO 185
      WRITE(IOUT,1000)
      WRITE(IOUT,1001)(I,Y(I),PDI(I),I=1,IMAX)
      GO TO 186
  185 CONTINUE
      WRITE(IOUT,1017)
      WRITE(IOUT,1010)(I,Y(I),I=1,IMAX)
  186 CONTINUE
      WRITE(IOUT,1024)
      WRITE(IOUT,1010)(KB, Z(KB ),KB=1,KBMAX)
      GO TO 190
  187 WRITE(IOUT,1025)XX(JMAX+1),YY(IMAX+1),ZZ(KBMAX+1)
      GO TO 184
  188 WRITE(IOUT,1026)XX(JMAX+1),YY(IMAX+1),ZZ(KBMAX+1)
      GO TO 184
  189 CONTINUE
      WRITE(IOUT,1003)XX(JMAX+1),YY(IMAX+1),ZZ(KBMAX+1)
      GO TO 184
  190 CONTINUE
      DO 191 J = 1,JMAX
      IF (XX(J)-XX(J+1)) 191,194,194
  191 CONTINUE
      DO 192 I = 1,IMAX
      IF (YY(I)-YY(I+1)) 192,194,194
  192 CONTINUE
      DO 193 KB = 1,KBMAX
      IF (ZZ(KB)-ZZ(KB+1)) 193,193,194
  193 CONTINUE
      GO TO 195
  194 NER(3) = 3
  195 IF (MESHGE.EQ.0) GO TO 196
      WRITE(IOUT,1027)
  196 CONTINUE
      IF ((NGEM.NE.10).AND.(NGEM.NE.14)) GO TO 200
      DO 199 I = 1,NREGI
      T1 = 2*MSHI(I)
      T2 = XSHI(I)
      DO 198 J = 1,NREGJ
      T3 = MSHJ(J)
      T4 = XSHJ(J)
      T5 = (T1*T4)/(T2*T3)
      T6 = ABS(T5-1.0)
      IF (T6.LE.0.00001) GO TO 197
      WRITE(IOUT,1004)I,J,T1,T4,T3,T2,T5
  197 CONTINUE
  198 CONTINUE
  199 CONTINUE
  200 CONTINUE
      IF(NGC(7).EQ.0) GO TO 201
      IO32 = IX(138)
      REWIND IO32
      WRITE(IO32)(TITL1(I),I=1,18),(TITL2(I),I=1,18),NUAC(5),JMAX,IMAX,
     *KBMAX,NGC(21),NGC(7),(X(J),J=1,JMAX),(Y(I),I=1,IMAX),(Z(KB),KB=1,
     *KBMAX)
      REWIND IO32
  201 CONTINUE
      RETURN
 1000 FORMAT('0    I   ODD J  EVEN J')
 1001 FORMAT(1X,I5,2F8.3,I5,2F8.3,I5,2F8.3,I5,2F8.3,I5,2F8.3,I5,2F8.3)
 1002 FORMAT('0 TWO DIMENSIONAL TRIANGULAR GEOMETRY (X,Y)  WIDTH',
     > 1PE14.6,'  HEIGHT',E14.6//)
 1003 FORMAT('0 THREE DIMENSIONAL TRIANGULAR GEOMETRY (X,Y,Z)  WIDTH',
     > 1PE14.6,'  HEIGHT',E14.6,'  DEPTH',E14.6//)
 1004 FORMAT('0******WARNING--TRIANGLES NOT EQULATERAL FOR HORIZONTAL-VE
     >RTICAL REGION',2I3/' 2*I, WIDTH, J, HEIGHT, AND (2*I*WIDTH)/(J*HEI
     >GHT) ARE',1P5E13.5)
 1005 FORMAT('0 ONE DIMENSIONAL SLAB GEOMETRY (X)  WIDTH',1PE14.6//)
 1006 FORMAT('0 REGION SPECIFICATIONS'/'    PTS  REGION WIDTH')
 1007 FORMAT(1X,I6,1PE14.6,I6,E14.6,I6,E14.6,I6,E14.6,I6,E14.6,I6,E14.6)
 1008 FORMAT('0 X-DIR. POINTS',I4)
 1009 FORMAT('0 DISTANCES TO MESH INTERVAL INTERFACES'/'0    J   DIST.')
 1010 FORMAT(1X,I5,F8.3,I5,F8.3,I5,F8.3,I5,F8.3,I5,F8.3,I5,F8.3,I5,F8.3,
     > I5,F8.3,I5,F8.3)
 1011 FORMAT('0 DISTANCES TO FLUX POINTS'/ '0    J   DIST.')
 1012 FORMAT('0 ONE DIMENSIONAL CYLINDRICAL GEOMETRY (R)  WIDTH',
     > 1PE14.6//)
 1013 FORMAT('0 ONE DIMENSIONAL SPHERICAL GEOMETRY (R)  WIDTH',
     > 1PE14.6//)
 1014 FORMAT('0 TWO DIMENSIONAL SLAB GEOMETRY (X,Y)  WIDTH',1PE14.6,
     > '  HEIGHT',E14.6//)
 1015 FORMAT('0   PTS  REGION HEIGHT')
 1016 FORMAT('0 X-DIR. POINTS',I4,9X,'Y-DIR. POINTS',I4)
 1017 FORMAT('0    I   DIST.')
 1018 FORMAT('0 TWO DIMENSIONAL CYLINDRICAL GEOMETRY (R,Z)  WIDTH',
     > 1PE14.6,'  HEIGHT',E14.6//)
 1019 FORMAT('0 TWO DIMENSIONAL CIRCULAR GEOMETRY (R,THETA)  WIDTH',
     > 1PE14.6,'  HEIGHT',E14.6//)
 1020 FORMAT('0 TWO DIMENSIONAL HEXAGIONAL GEOMETRY (X,Y)  WIDTH',
     > 1PE14.6,'  HEIGHT',E14.6//)
 1021 FORMAT('0 THREE DIMENSIONAL SLAB GEOMETRY (X,Y,Z)  WIDTH',
     > 1PE14.6,'  HEIGHT',E14.6,'  DEPTH',E14.6//)
 1022 FORMAT('0   PTS  REGION DEPTH')
 1023 FORMAT('0 X-DIR. POINTS',I4,9X,'Y-DIR. POINTS',I4,9X,
     > 'Z-DIR. POINTS',I4)
 1024 FORMAT('0    KB   DIST')
 1025 FORMAT('0 THREE DIMENSIONAL CYLINDRICAL GEOMETRY (R,THETA,Z)  ',
     > 'WIDTH',1PE14.6,'  HEIGHT',E14.6,'  DEPTH',E14.6//)
 1026 FORMAT('0 THREE DIMENSIONAL HEXAGIONAL GEOMETRY (X,Y,Z)  WIDTH',
     > 1PE14.6,'  HEIGHT',E14.6,'  DEPTH',E14.6//)
 1027 FORMAT('0******WARNING--REGION VOLUMES NOT EQUAL IN HEX GEOM.')
      END
COVER --034 ***CITATION*** READS OVERLAY SECTION 006/ CF-IPTM
      SUBROUTINE OVER(NRGN,NCOMP,RVOL,PVOL,IVX,JVX,KBVX,LSZ,NNN1,N222)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
C
      DIMENSION NRGN(JVX,IVX,KBVX),NCOMP(LSZ),RVOL(LSZ),PVOL(LSZ)
      DIMENSION NOVER(6,200),JL(3),JR(3),IT(3),IB(3),KBF(3),KBB(3)
C
      NTOT = IVX*JVX*KBVX
      WRITE(IOUT,1000)
      IF (NUAC(5).GT.5) GO TO 100
      IGO = 1
      GO TO 102
  100 IF (NUAC(5).GT.10) GO TO 101
      IGO = 2
      GO TO 102
  101 IGO = 3
  102 LENTRY = 0
      READ(IOIN,1001)M,N
      IF (M.EQ.0) GO TO 137
      WRITE(IOUT,1002)M
C 103 READ(IOIN,1001)(JL(I),JR(I),IT(I),IB(I),KBF(I),KBB(I),I=1,3)
C     DO 104 I = 1,3
C     IF (JL(I).EQ.0) GO TO 105
C     LENTRY = LENTRY+1
C     NOVER(1,LENTRY) = JL(I)
C     NOVER(2,LENTRY) = JR(I)
C     NOVER(3,LENTRY) = IT(I)
C     NOVER(4,LENTRY) = IB(I)
C     NOVER(5,LENTRY) = KBF(I)
C     NOVER(6,LENTRY) = KBB(I)
C 104 CONTINUE
  103 READ(IOIN,1001) JLL  ,JRL  ,ITL  ,IBL  ,KBFL  ,KBBL
      IF (JLL  .EQ.0) GO TO 105
      LENTRY = LENTRY+1
      NOVER(1,LENTRY) = JLL
      NOVER(2,LENTRY) = JRL
      NOVER(3,LENTRY) = ITL
      NOVER(4,LENTRY) = IBL
      NOVER(5,LENTRY) = KBFL
      NOVER(6,LENTRY) = KBBL
      GO TO 103
  105 DO 116 L = 1,LENTRY
      IF ((NOVER(1,L).GT.0).AND.(NOVER(1,L).LE.JMAX)) GO TO 106
      NER(6) = 6
  106 IF ((NOVER(2,L).GT.0).AND.(NOVER(2,L).LE.JMAX)) GO TO 107
      NER(6) = 6
  107 IF (NOVER(1,L).LE.NOVER(2,L)) GO TO 108
      NER(6) = 6
  108 GO TO (116,109,109),IGO
  109 IF ((NOVER(3,L).GT.0).AND.(NOVER(3,L).LE.IMAX)) GO TO 110
      NER(6) = 6
  110 IF ((NOVER(4,L).GT.0).AND.(NOVER(4,L).LE.IMAX)) GO TO 111
      NER(6) = 6
  111 IF (NOVER(3,L).LE.NOVER(4,L)) GO TO 112
      NER(6) = 6
  112 GO TO (116,116,113),IGO
  113 IF ((NOVER(5,L).GT.0).AND.(NOVER(5,L).LE.KBMAX)) GO TO 114
      NER(6) = 6
  114 IF ((NOVER(6,L).GT.0).AND.(NOVER(6,L).LE.KBMAX)) GO TO 115
      NER(6) = 6
  115 IF (NOVER(5,L).LE.NOVER(6,L)) GO TO 116
      NER(6) = 6
  116 CONTINUE
      GO TO (117,118,119),IGO
  117 WRITE(IOUT,1003)(NOVER(1,L),NOVER(2,L),L=1,LENTRY)
      GO TO 120
  118 WRITE(IOUT,1003)(NOVER(1,L),NOVER(2,L),NOVER(3,L),NOVER(4,L), L=1,
     >  LENTRY)
      GO TO 120
  119 WRITE(IOUT,1003)(NOVER(1,L),NOVER(2,L),NOVER(3,L),NOVER(4,L),
     > NOVER(5,L),NOVER(6,L),L=1,LENTRY)
  120 IF (NER(6).NE.6) GO TO 121
      WRITE(IOUT,1004)
      return
  121 CONTINUE
      I1 = 1
      I2 = 1
      KB1 = 1
      KB2 = 1
      DO 136 LE = 1,LENTRY
      J1 = NOVER(1,LE)
      J2 = NOVER(2,LE)
      GO TO (124,122,122),IGO
  122 I1 = NOVER(3,LE)
      I2 = NOVER(4,LE)
      GO TO (124,124,123),IGO
  123 KB1 = NOVER(5,LE)
      KB2 = NOVER(6,LE)
  124 DO 135 KB = KB1,KB2
      DO 134 I = I1,I2
      DO 133 J = J1,J2
      IF(N.EQ.0) GO TO 798
      IF((KB.EQ.KB1).AND.(I.EQ.I1).AND.(J.EQ.J1)) GO TO 125
      GO TO 799
  798 CONTINUE
      IF ((LE.EQ.1).AND.(KB.EQ.KB1).AND.(I.EQ.I1).AND.(J.EQ.J1)) GO TO
     > 125
  799 CONTINUE
      L2 = NRGN(J,I,KB)
      VOL2 = PVOL(L2)
      T1 = ABS(VOL2/VOL1-1.0)
      IF (T1.GE.1.0E-6) GO TO 125
      IF (IND.EQ.0) GO TO 132
      GO TO 130
  125 CONTINUE
      L1 = NRGN(J,I,KB)
      VOL1 = PVOL(L1)
      IND = 0
      IF(N.GT.0) GO TO 800
      DO 126 KKBB = 1,KBMAX
      LREG = NRGN(J,I,KKBB)
      MM = NCOMP(LREG)
      IF (MM.NE.M) GO TO 126
      VOTM = PVOL(LREG)
      IF (ABS(VOTM/VOL1-1.0).LT.1.0E-6) GO TO 131
  126 CONTINUE
      DO 127 IIB = 1,IMAX
      LREG = NRGN(J,IIB,KB)
      MM = NCOMP(LREG)
      IF (MM.NE.M) GO TO 127
      VOTM = PVOL(LREG)
      IF (ABS(VOTM/VOL1-1.0).LT.1.0E-6) GO TO 131
  127 CONTINUE
      DO 128 JJB = 1,JMAX
      LREG = NRGN(JJB,I,KB)
      MM = NCOMP(LREG)
      IF (MM.NE.M) GO TO 128
      VOTM = PVOL(LREG)
      IF (ABS(VOTM/VOL1-1.0).LT.1.0E-6) GO TO 131
  128 CONTINUE
  800 CONTINUE
      LMAX = LMAX+1
      NNN1 = NNN1+1
      IND = 1
      IF (NNN1.LT.N222) GO TO 129
      WRITE(IOUT,1005)
      return
  129 CONTINUE
      NCOMP(LMAX) = M
      PVOL(LMAX) = VOL1
  130 CONTINUE
      NRGN(J,I,KB) = LMAX
      GO TO 133
  131 CONTINUE
      NCOMP(LREG) = M
  132 CONTINUE
      NRGN(J,I,KB) = LREG
  133 CONTINUE
  134 CONTINUE
  135 CONTINUE
  136 CONTINUE
      GO TO 102
  137 MMAX = 0
      DO 138 L = 1,LMAX
      RVOL(L) = 0.0
      MMAX = MAX0(MMAX,NCOMP(L))
  138 CONTINUE
      DO 141 KB = 1,KBVX
      DO 140 I = 1,IVX
      DO 139 J = 1,JVX
      L = NRGN(J,I,KB)
      RVOL(L) = RVOL(L)+PVOL(L)
  139 CONTINUE
  140 CONTINUE
  141 CONTINUE
  142 CONTINUE
      RETURN
 1000 FORMAT('0MESH OVERLAY INPUT')
 1001 FORMAT(18I4)
 1002 FORMAT('0ZONE NUMBER',I3)
 1003 FORMAT(1X,36I3)
 1004 FORMAT('0ERROR STOP NUMBER 6')
 1005 FORMAT('0ERROR STOP NUMBER 0'/
     > ' STORAGE EXCEEDED IN OVERLAY CALCULATION')
      END
CKNFX --094 ***CITATION*** INITIAL FLUX FOR 3-D/ CF- EIGN
      SUBROUTINE KNFX(P2E,NRGNE,NCOMP,BBND, IVX,JVX,KBVX,KVX,LVX,JIVX)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
C
      DIMENSION P2E(JIVX ,KBVX,KVX),NRGNE(JVX,IVX,KBVX)
      DIMENSION NCOMP(LVX)
      DIMENSION BBND(KVX)
C
  100 IF (IX(24).EQ.0) REWIND IOFLX
      IF (IX(24).GT.0) GO TO 101
      IF (IX(39).NE.0) GO TO 101
      IF (IX(22).NE.0) GO TO 101
      IF ((NGC(2).NE.0).AND.(NUAC(2).LT.2)) GO TO 106
      IF (NGC(2).NE.0) GO TO 101
      IF (IX(16).GT.0) GO TO 106
      IF (IX(3).GT.1) GO TO 106
  101 CONTINUE
      XLPL = 1.0E-30
      IF(IX(24).GT.0.AND.PROD.LE.10.0) XLPL = 1.0
      DO 105 KB=1,KBMAX
      DO 104 I=1,IMAX
      NN1= (I-1)*JVX
      DO 103 J=1,JMAX
      N1= NN1 + J
      DO 102 K=1,KMAX
      T1 = 1.0E+12
      IF (IX(24).GT.0) T1 = P2E(N1 ,KB,1)*XLPL
      P2E(N1 ,KB,K) = T1
  102 CONTINUE
  103 CONTINUE
  104 CONTINUE
  105 CONTINUE
  106 CONTINUE
      DO 110 K=1,KMAX
      DO 109 KB=1,KBMAX
      N1= 0
      DO 108 I=1,IMAX
      DO 107 J=1,JMAX
      N1= N1 + 1
      IF (P2E(N1,KB,K).EQ.0.0) GO TO 107
      T2 = P2E(N1,KB,K)
      GO TO 111
  107 CONTINUE
  108 CONTINUE
  109 CONTINUE
  110 CONTINUE
      WRITE(IOUT,1000)
      return
  111 CONTINUE
      DO 115 K = 1,KMAX
      DO 114 KB = 1,KBMAX
      N1= 0
      DO 113 I = 1,IMAX
      DO 112 J = 1,JMAX
      N1= N1 + 1
      IF (P2E(N1,KB,K).EQ.0.0) P2E(N1 ,KB,K) = T2
  112 CONTINUE
  113 CONTINUE
  114 CONTINUE
  115 CONTINUE
      DO 123 KB = 1,KBMAX
      DO 122 I = 1,IMAX
      NN1= (I-1)*JVX
      DO 121 J = 1,JMAX
      N1= NN1 + J
      L = NRGNE(J,I,KB)
      M = NCOMP(L)
      DO 120 K = 1,KMAX
      IF (M-NUAC(17)) 119,116,119
  116 IF (XMIS(2)) 117,118,118
  117 IF (BBND(K)) 118,119,118
  118 P2E(N1 ,KB,K) = 0.0
      GO TO 120
  119 CONTINUE
  120 CONTINUE
  121 CONTINUE
  122 CONTINUE
  123 CONTINUE
      IF (IX(39).NE.0) GO TO 124
      IF (IX(22).NE.0) GO TO 124
      IF ((NGC(2).GT.0).AND.(NUAC(2).EQ.0)) GO TO 130
  124 CONTINUE
      IGOTO = 2
      IF (IX(24).GT.0) IGOTO = 1
      BETTA = XMIS(6)
      VRGK2 = BETTA
      SPARE(39) = BETTA
  125 IF (IX(31)) 126,126,129
  126 IF (IMAX-1) 127,127,128
  127 BETTA = 1.0
      GO TO 129
  128 ARG1 = 3.141593/FLOAT(IMXP1)
      ARG2 = 3.141593/FLOAT(KBMXP1)
      ARG3 = 3.141593/FLOAT(JMXP1)
      XBET=(COS(ARG1)+COS(ARG2))/(3.0-COS(ARG3))
      YBET = AMAX1(XBET,0.95)
      T1=KMAX
      T2=(T1+11.0)/12.0
      ZBET=YBET**T2
      BETTA = 2.0/(1.0+SQRT(1.0-ZBET**2))
  129 CONTINUE
      IF(NGC(6) .NE. -2) GO TO 130
      READ(36)
      READ(36)
      DO 131 K=1,KMAX
      READ(36) ((P2E(I,KB,K),I=1,JIVX),KB=1,KBMAX)
  131 CONTINUE
  130 RETURN
 1000 FORMAT('0ERROR STOP NUMBER 11')
      END
CEQTS --188  ***FUEL MANAGEMENT*** TEST FOR EQUI. CYCLE CONV./CF-MNGE
      SUBROUTINE EQTS(CON0,CONC,MAC,MVX,NVX)
C
      DOUBLE PRECISION FLOTR
C
      COMMON/COOPD/FLOTR(200),INTGR(100)
      COMMON/FMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
C
      DIMENSION CON0(NVX,MVX),CONC(NVX,MVX),MAC(24)
C
      IF (MAC(2).EQ.0) GO TO 106
      IF(INTGR(19).EQ.1) GO TO 106
      IF(INTGR(51).EQ.0) GO TO 106
      REWIND IO2
      REWIND IO4
      READ(IO2)((CON0(N,M),N=1,NVX),M=1,MVX)
      REWIND IO2
      READ(IO4)
      IF (IX(13).LE.1) GO TO 102
      DO 101 M = 1,MVX
      READ(IO4)
  101 CONTINUE
  102 CONTINUE
      READ(IO4)((CONC(N,M),N=1,NVX),M=1,MVX)
      REWIND IO4
      INTGR(55) = 0
      T3 = 0.0
      DO 104 M = 1,MVX
      DO 103 N = 1,NVX
      IF ((CONC(N,M).EQ.0.0).OR.(CON0(N,M).EQ.0.0)) GO TO 103
      T1 = CON0(N,M)/CONC(N,M)
      T2 = ABS(1.0-T1)
      T3 = AMAX1(T2,T3)
  103 CONTINUE
  104 CONTINUE
      WRITE(IOUT,1000) T3
      IF (T3.GT.FLOTR(108)) GO TO 105
      INTGR(55) = 1
      WRITE(IOUT,1001)
  105 CONTINUE
  106 CONTINUE
      RETURN
 1000 FORMAT('0*********EQULIBRIUM NUCLIDE CONVERGENCE',1PE13.5)
 1001 FORMAT('0'/'0***********EQUILIBRIUM CONDITION MET***********')
      END
CINPT0 --002A ***CITATION*** CALL FROM INPUT
      SUBROUTINE INPT0
C
      DOUBLE PRECISION FLOTR
C
      COMMON/COOPD/FLOTR(200),INTGR(100)
C
      DO 100 N = 1,200
      FLOTR(N) = 0.0
  100 CONTINUE
      RETURN
      END
CINPT --002 ***CITATION*** INPUT ACCESSING ROUTINE
      SUBROUTINE INPT(A,MEMORY)
C
C      DOUBLE PRECISION FLOTR, FLATR
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AMESH/BMESH(30),NREGI,NREGJ,NREGKB,XSHI(100),XSHJ(100),
     > XSHKB(100), MSHI(100),MSHJ(100),MSHKB(100),Y(211),YY(211), X(211)
     >  ,XX(211),Z(211),ZZ(211), ZONVOL(200),AVZPD(200),PDI(211),
     > PDJ(211) , PDK(211)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     >  , XNAME(3,200)
      COMMON/AVDLM/IVDLM(1),IVX,JVX,KBVX,KVX,LVX,MVX,NVX,IVXP1,JVXP1,
     > KBVXP1,NSETVX,NVO,IVO,IVZ,KVZ,NCRP,NSPA,N3DDIM,NBLOCK, JIVX,
     > JIP1VX,JP1IXZ,IOVX,IOVZ
      COMMON/AKADD/KAY(1),K1,K2,K3,K4,K5,K6,K7,K8,K9,K10,K11, K12,K13,
     > K131,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23,K24, K25,K26,K27,
     > K28,K29,K30,K31,K32,K33,K34,K35,K36,K37, K38,K39,K40,K41,K42,K43,
     >  K44,K45,K46,K47,K48,K49, K50,K51,K52,K53,K54,K55,K56,K57,K58,
     > K59, K60,K61,K62, K63,K64,K65,K66,K67,K68,K69,K70,K71,K72,K73,
     > K74,K75, K76,K77,K78,K79,K80,K81,K82,K83,K84,K85,K86,K87, K88,
     > K89,K90, K91,K92,K93,K94,K95,K96,K97,K98, K99,K100,NDATA,KNRGN,
     > KNCOMP, KPVOL,KRVOL,MEMVRY, MEMX
      COMMON/ASRCH/ BSRCH(30),XK1,XK2,XK3,XN1,XN2,XN3, DELK1,DELK2,
     > DELK3,BATTY,DRV,TBF,GWC,EK2,RCCM,DNDK(5), NSC(5),NSCN,NXZ,NXN,
     > NXM,NXS,INIL,INIU,INID
      COMMON/CMARY/MEMARY,IMN,MNI,IJLMN,NMLJI,IY(50),AX(50),TITL(36)
      COMMON/COOPD/FLOTR(200),INTGR(100)
C
      CHARACTER*11 DATEX
C
C     DIMENSION DATEX(3)
      DIMENSION FLATR(8)
      DIMENSION A(MEMORY)
      CHARACTER*4 BLANK,TITL,TITL1,TITL2
      CHARACTER*8 FLATR,FLOTR
C
      DATA BLANK/'    '/
      DATA FLATR(1)/8HMANGDATA/, FLATR(2)/8HSCRATCH1/, FLATR(3)/
     > 8HHISTDATA/, FLATR(4)/8HCYCLHIST/, FLATR(5)/8HMASSDATA/, FLATR(6)
     >  /8HSBZNDENS/, FLATR(7)/8HZONEDENS/, FLATR(8)/8HSCRATCH2/
C
      CALL INPT0
C
C      DO 100 N = 1,200
C      FLOTR(N) = 0.0
C  100 CONTINUE
C
      DO 101 N = 1,8
      FLOTR(N) = FLATR(N)
  101 CONTINUE
      DO 102 N = 1,100
      INTGR(N) = 0
  102 CONTINUE
      INTGR(1) = 8
  103 MEMVRY = MEMORY
      CALL SETV
      NSPA = 0
      IX(1) = 1
      IO13 = IX(80)
      I1H1 = 1
      NDATA = 0
      INUCZ = 200
      NTYP = 0
      INNO(18) = 0
      LVX = 0
  104 ICPU1 = ICLOCK(0)
      IREAL1 = IFIX( SECNDS(0.0) )
      IX(69) = NGC(19)
      NTITE = 0
      IMEM = 0
      ILAST = NTYP
      CALL DATE( DATEX )
      WRITE(IOUT,1001) DATEX
      READ(IOIN,1002)(TITL1(I),I=1,18)
      DO 105 I = 1,18
      IF (TITL1(I).NE.BLANK) GO TO 106
  105 CONTINUE
      WRITE(IOUT,1000)
      return
  106 CONTINUE
      IF (IX(27).EQ.0) GO TO 107
      REWIND IO2
      NLIM = KNRGN+IVX*JVX*KBVX-1
      WRITE(IO2)(A(N),N=KNRGN,NLIM)
      REWIND IO2
      IRV = 1
      CALL BNSB(A(K50),A(K51),KVX,IRV)
C*******************************(BBND,BND,KVX,IRV)
  107 CONTINUE
      MM1VX = MMAX
      KM1VX = KMAX
      NM1VX = NMAX
      NSM1VX = NSETVX
      MM1AC5 = NUAC(5)
      READ(IOIN,1002)(TITL2(I),I=1,18)
      IF (I1H1) 109,109,108
  108 I1H1 = 0
      WRITE(IOUT,1004)(TITL1(I),I=1,18)
      GO TO 110
  109 WRITE(IOUT,1003)(TITL1(I),I=1,18)
  110 WRITE(IOUT,1004)(TITL2(I),I=1,18)
      DO 111 I = 1,18
      TITL(I) = TITL1(I)
  111 CONTINUE
      DO 112 I = 1,18
      II = I+18
      TITL(II) = TITL2(I)
  112 CONTINUE
      CALL IPTM(A,MEMORY,NTITE,IMEM,NM1VX,NSM1VX,MM1AC5)
      IF (IX(167).EQ.0) GO TO 113
      IX(167) = 0
      GO TO 104
  113 CONTINUE
      JIVX = JVX*IVX
      JIP1VX = JVX*IVXP1
      JP1IXZ = JVXP1*IVZ
      MVZ = MAX0(MVX,NSETVX+2)
COMENT*****IX3738 IS DIMENSION OF I/O VARIABLE AIO*****
      IX3738 = IX(38)-IX(37)+1
COMENT*****THE NEXT STATMENT FORCES FLAT FLUX IF NOT RESTART*****
      IF (NGC(2).EQ.0) IX(39) = 1
      ISIZ = K41-K24+1
      CALL CALR(A,A(K19),NTITE,NVX,MVX,IX3738,MVZ,A(K24),ISIZ)
      IF (NGC(3).EQ.0) GO TO 114
      REWIND IO13
  114 CONTINUE
      IF ((NGC(3).EQ.0).AND.(NGC(2).NE.0)) REWIND IO13
      IX(3) = 0
      ICPU2 = ICLOCK(0)
      IREAL2 = IFIX( SECNDS(0.0) )
      TOTCPU = (FLOAT(ICPU2)-FLOAT(ICPU1))/6000.0
      TOTREL = (FLOAT(IREAL2)-FLOAT(IREAL1))/60.0
      WRITE(IOUT,1005)TOTCPU,TOTREL
      WRITE(IOUT,1006)
      WRITE(IOUT,1006)
      IX(4) = 0
      IX(6) = 0
      IX(7) = 0
      IX(27) = 1
      GO TO 104
 1000 FORMAT('0JOB ENDED NORMALLY')
 1001 FORMAT(1H0,30X,'*********THIS JOB WAS RUN ON  ',A11,
     >       '*********'/////)
 1002 FORMAT(18A4)
 1003 FORMAT('1',18A4)
 1004 FORMAT(1X,18A4)
 1005 FORMAT('0END OF CASE - TOTAL CPU TIME WAS',F7.2,
     > ' MINUTES   TOTAL CLOCK TIME WAS',F7.2,' MINUTES')
 1006 FORMAT(' ',111('*'))
      END
CCALR --005 ***CITATION*** ENTIRE PROBLEM CONTROL/ CF-INPT
      SUBROUTINE CALR(A,RATE,NTITE,NDX,MDX,IX3738,MVZ,PF,ISIZ)
C
      DOUBLE PRECISION FLOTR
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AMESH/BMESH(30),NREGI,NREGJ,NREGKB,XSHI(100),XSHJ(100),
     > XSHKB(100), MSHI(100),MSHJ(100),MSHKB(100),Y(211),YY(211), X(211)
     >  ,XX(211),Z(211),ZZ(211), ZONVOL(200),AVZPD(200),PDI(211),
     > PDJ(211) , PDK(211)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     >  , XNAME(3,200)
      COMMON/AKADD/KAY(1),K1,K2,K3,K4,K5,K6,K7,K8,K9,K10,K11, K12,K13,
     > K131,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23,K24, K25,K26,K27,
     > K28,K29,K30,K31,K32,K33,K34,K35,K36,K37, K38,K39,K40,K41,K42,K43,
     >  K44,K45,K46,K47,K48,K49, K50,K51,K52,K53,K54,K55,K56,K57,K58,
     > K59, K60,K61,K62, K63,K64,K65,K66,K67,K68,K69,K70,K71,K72,K73,
     > K74,K75, K76,K77,K78,K79,K80,K81,K82,K83,K84,K85,K86,K87, K88,
     > K89,K90, K91,K92,K93,K94,K95,K96,K97,K98, K99,K100,NDATA,KNRGN,
     > KNCOMP, KPVOL,KRVOL,MEMVRY, MEMX
      COMMON/AVDLM/IVDLM(1),IVX,JVX,KBVX,KVX,LVX,MVX,NVX,IVXP1,JVXP1,
     > KBVXP1,NSETVX,NVO,IVO,IVZ,KVZ,NCRP,NSPA,N3DDIM,NBLOCK, JIVX,
     > JIP1VX,JP1IXZ,IOVX,IOVZ
      COMMON/CMARY/MEMARY,IMN,MNI,IJLMN,NMLJI,IY(50),BX(50),TITL(36)
      COMMON/COOPD/FLOTR(200),INTGR(100)
      COMMON/AMISS/ITMIS(20),AITMIS(20)
C
      DIMENSION A(1),RATE(NDX,MDX,10)
      DIMENSION PF(ISIZ)
C
      MEMORY=MEMVRY
      IX(172) = 0
      IX172 = 0
      IO19 = IX(86)
      KK1 = K19+NVX*MVX*10
      KK2 = K61+NVO
      KL1 = KK1-K23
      KL2 = KK2-K23
      KL3 = MAX0(KL1,KL2)
      KL4 = MAX0(KK1,KK2)
      DO 100 N = 1,20
      ITMIS(N) = 0
      AITMIS(N) = 0.0
  100 CONTINUE
C     IF(NTITE.EQ.1) RESTART OR CONTINUE SOME CYCLE.
C     IF(NTITE.EQ.0) NORESTART OR RESTART STATICS PROBLEM.
C     IF(NTITE.EQ.-1) RESTART DEPLETION ONLY OR CONT. FIRST CYCLE.
      IO13 = IX(80)
      NCCYL = 999
      IF ((NGC(3).GT.0).AND.(NTITE.EQ.0)) CALL WSTR(NCCYL,A,MEMORY)
      NRCYC = 1
      NCYCLE = 1
      MAC4 = 1
      IF (NDPL(1).NE.0) NCYCLE = NDPL(1)
      INNOO = 1
      IF ((INNO(91).EQ.0).OR.(INNO(93).EQ.0)) INNOO = 0
      IF (INNOO.EQ.0) GO TO 102
C*****WRITE FIXED FUEL MANAGEMENT INTERFACE DATA
      IF (NGC(1).LE.0) GO TO 102
      IX(171) = INTGR(29)
      IF (IX(171).LE.0) GO TO 101
      IO33 = IX(139)
      IO34 = IX(140)
      IOOR = IO33
      IOOW = IO34
      REWIND IOOR
      REWIND IOOW
  101 CONTINUE
      IO23 = IX(90)
      CALL WFCC(A,MEMORY, IO23)
      ITMIS(1) = 0
      MAC2 = INTGR(22)
      IF (MAC2.GT.0) NCYCLE = MAC2
      IF (INTGR(24).GT.0) MAC4 = INTGR(24)
      IF (INTGR(35).LE.0) GO TO 102
      NRCYC = INTGR(35)+1
  102 CONTINUE
      I11 = ICLOCK(0)
      NCY = 1
      IQUE = 1
      NRC = 1
      NNST = NGC(2)
      IF (NGC(2).EQ.0) GO TO 103
      INTGR(51) = 0
      NCY = IABS(IX(19))
      IF (INNOO.GT.0) IQUE = INTGR(19)
      IF (INNOO.GT.0) NRC = INTGR(46)
      IF (NTITE.LE.0) GO TO 103
      IF (NGC(2).LT.0) GO TO 103
      GO TO 161
  103 CONTINUE
C**********************START EQUILIBRIUM LOOP***************************
COMENTDO 174 IQUE = 1,MAC4
  104 CONTINUE
C*********************START DEPLETION CYCLE LOOP************************
COMENTDO 168 NCY = 1,NCYCLE
  105 CONTINUE
      IF (NDPL(12).EQ.0) GO TO 106
      IF (NCY.EQ.1) GO TO 106
      NRSET1 = 1
      NRSET2 = 0
      CALL RSET(NRSET1,NRSET2,NCY,A(K12),A(K1),A(K2),A(K3),A(K4),A(K5),
     > A(K6),KVX,NVX,NSETVX,A(K9))
  106 CONTINUE
      ICUP1 = ICLOCK(0)
      IRAL1 = IFIX( SECNDS(0.0) )
      IX(16) = 0
      IX(99) = 0
      LSTEP = 0
      IX(3) = NCY
      I21 = ICLOCK(0)
      U1 = SPARE(1)
      U2 = SPARE(2)
      U9 = SPARE(9)
      U10 = SPARE(10)
      U11 = SPARE(11)
      U12 = SPARE(12)
      U13 = SPARE(13)
      U26 = SPARE(26)
      U74 = SPARE(74)
      U75 = SPARE(75)
C*********************START REPEAT CYCLE LOOP***************************
COMENTDO 164 NRC = 1,NRCYC
  107 CONTINUE
      IF (NDPL(12).EQ.0) GO TO 108
      IF (NRCYC.EQ.1) GO TO 108
      IF (NRC.EQ.1) GO TO 108
      NRSET1 = 2
      NRSET2 = 0
      CALL RSET(NRSET1,NRSET2,NCY,A(K12),A(K1),A(K2),A(K3),A(K4),A(K5),
     > A(K6),KVX,NVX,NSETVX,A(K9))
  108 CONTINUE
      FLOTR(29) = 10000.0
      FLOTR(30) = 10000.0
      IF (NGC(1).EQ.0) GO TO 109
      IF (NGC(2).EQ.0) GO TO 109
      IF (NTITE.LT.0) GO TO 123
      IF ((NGC(2).LT.0).AND.(NTITE.EQ.1)) GO TO 123
  109 CONTINUE
      IX(14) = 0
      IX(8) = NRC
      IND1 = 0
      CALL HOWE(NCY,IND1,IND2,IHW,ITX,ITM)
      N1C1S = 0
      IF (IND2.EQ.0) GO TO 123
      N1C1S = 1
      IX(5) = IHW
      ITMAX = ITX
      ITIME = ITM
      IX(75) = 0
      IX(73) = 0
      IGO = 1
      IX(71) = 0
      NDO = 1
      NDOUBL = 1
      IF (IX(5).GT.1) NDOUBL = NSRH(3)
C*********************START INITIAL REACTIVITY LOOP*********************
      IX(127) = ICLOCK(0)
COMENTDO 117 NDO = 1,NDOUBL
  110 CONTINUE
      IX(73) = IX(73) + 1
  111 CONTINUE
      CALL EIGN (A,A(K24),A(K24),NTITE,IVX,JVX,KVX,JIVX,KBVX,IX3738)
      IX(198) = 1
      NTITE = 0
      IX(16) = 1
      GO TO (112,119),IGO
  112 CONTINUE
      IDJ = 0
      IF (IX(75).EQ.1) GO TO 117
      IF (IX(70).EQ.0) GO TO 116
      IF (IX(70).LT.0) GO TO 113
      WRITE(IOUT,1005)
      GO TO 114
  113 WRITE(IOUT,1012)
  114 CONTINUE
      IF (NGC(15).EQ.0) GO TO 117
      IF (NGC(15).EQ.2) GO TO 115
      IF (IX(126).EQ.0) GO TO 117
  115 WRITE(IOUT,1006)
      return
  116 CONTINUE
      NDO = NDO+1
      IF (NDO.LE.NDOUBL) GO TO 110
  117 CONTINUE
      T1 = 1.0/SPARE(18)
      IF ((INTGR(35).GT.0).AND.(INTGR(36).EQ.3)) GO TO 118
      IF ((T1.GT.GLIM(1)).OR.(T1.LT.GLIM(2))) GO TO 178
      IF (IX(5).LE.0) GO TO 118
      IF (SPARE(58).GT.GLIM(3)) GO TO 178
  118 CONTINUE
      IF (IX(23).EQ.0) GO TO 119
      IX(24) = 1
      IDJ = 1
      IF (IX(37).GT.0) IX(71) = 1
      IGO = 2
      GO TO 111
  119 CONTINUE
      IF ((KL1.LE.0).OR.(IDJ.GT.0)) GO TO 120
      REWIND IO19
      WRITE(IO19)(A(I),I=K23,KK1)
      REWIND IO19
  120 CONTINUE
      IX(71) = 0
      INDTOR = 0
      CALL OUTC (A,A(K17),A(K40),A(K38),A(K14),A(K19),A(K52),A(K16),
     > A(K48),A(K23),NVX,MVX,KVX,IX3738,INDTOR,MVZ,A(K39))
      IF ((KL1.LE.0).OR.(IDJ.GT.0)) GO TO 121
      READ(IO19)(A(I),I=K23,KK1)
      REWIND IO19
  121 CONTINUE
      NCCYL = 0
      IF ((NGC(1).EQ.0).AND.(NGC(3).GT.0)) CALLWSTR(NCCYL,A,MEMORY)
C**** STATICS BYPASS
      IF (NGC(1).EQ.0) GO TO 177
      IF (NCY.GT.1) GO TO 122
      IF ((NGC(3).GT.0).AND.(NGC(2).EQ.0)) CALLWSTR(NCCYL,A,MEMORY)
  122 CONTINUE
      NGC(2) = 0
  123 CONTINUE
  124 CONTINUE
      IF (INNOO.EQ.0) GO TO 125
C*****WRITE START OF CYCLE CONCENTRATIONS ON IO24
      IO24 = IX(91)
      IO12 = IX(79)
      REWIND IO24
      IXND = 0
      CALL WNSS (A(K17),A(K18),A(K44),MVX,NVX,IVO,IO12,IO24,IXND)
      REWIND IO12
  125 CONTINUE
      IF (NCY-2) 126,127,128
  126 NSTEP = NDPL(2)
      GO TO 129
  127 NSTEP = NDPL(3)
      GO TO 129
  128 NSTEP = NDPL(4)
  129 CONTINUE
      NSTEP = MAX0(1,NSTEP)
C*********************START DEPLETION TIME STEP LOOP********************
COMENTDO 157 NST = 1,NSTEP
      NST = 1
      IF (NNST.LT.0) NST = IX(2)
      NNST = 0
  130 CONTINUE
      IF (NDPL(12).EQ.0) GO TO 131
      IF (LSTEP.GT.0) GO TO 131
      NRSET1 = 3
      NRSET2 = NST
      CALL RSET(NRSET1,NRSET2,NCY,A(K12),A(K1),A(K2),A(K3),A(K4),A(K5),
     > A(K6),KVX,NVX,NSETVX,A(K9))
  131 CONTINUE
      IF (IX(172).EQ.0) GO TO 133
      READ(IOOR,END=132)PF,XLAMDA,BETTA,SPARE(45),SPARE(46)
      GO TO 133
  132 CONTINUE
      IX(172) = 0
  133 CONTINUE
      ICPUT1 = ICLOCK(0)
      IRELT1 = IFIX( SECNDS(0.0) )
      IX(2) = NST
      IF (NDPL(11).GT.0) CALL RODX(A(K17),A(K10),A(KNCOMP),A(K24),
     > A(K24),A(KNRGN),A(K50),NVX,MVX,NSETVX,LVX,JVX,IVX,KBVX, JIVX,KVX)
C NEED SOMETHING TO TELL IF NRTSP = ITMX(4)
      NRTSP = 1
C*********************START REPEAT TIME STEP LOOP***********************
      I31 = ICLOCK(0)
      DO 146 NRT = 1,NRTSP
      IX(9) = NRT
      IND1 = 1
      CALL HOWE(NCY,IND1,IND2,IHW,ITX,ITM)
      IX(5) = IHW
      ITMAX = ITX
      ITIME = ITM
      IX(75) = 0
      IX(73) = 0
      IGO = 1
      IX(71) = 0
      NDO = 1
      NDOUBL = 1
      IF (IX(5).GT.1) NDOUBL = NSRH(3)
C*********************START CYCLE REACTIVITY LOOP***********************
      IX(127) = ICLOCK(0)
COMENTDO 141 NDO = 1,NDOUBL
  134 CONTINUE
      IX(73) = IX(73) + 1
  135 CONTINUE
      CALL EIGN (A,A(K24),A(K24),NTITE,IVX,JVX,KVX,JIVX,KBVX,IX3738)
      IX(198) = 1
      NTITE = 0
      NGC(2) = 0
      IX(16) = 0
      GO TO (136,143),IGO
  136 CONTINUE
      TF1 = FLOTR(29)
      TF2 = FLOTR(30)
      TM1 = AMIN1(XKEF1,TF1)
      TM2 = AMIN1(SPARE(52),TF2)
      FLOTR(29) = TM1
      FLOTR(30) = TM2
      IF (IX(75).EQ.1) GO TO 141
      IF (IX(70).EQ.0) GO TO 140
      IF (IX(70).LT.0) GO TO 137
      WRITE(IOUT,1007)
      GO TO 138
  137 WRITE(IOUT,1013)
  138 CONTINUE
      IF (NGC(15).EQ.0) GO TO 141
      IF (NGC(15).EQ.2) GO TO 139
      IF (IX(126).EQ.0) GO TO 141
  139 WRITE(IOUT,1008)
      return
  140 CONTINUE
      NDO = NDO+1
      IF (NDO.LE.NDOUBL) GO TO 134
  141 CONTINUE
      T1 = 1.0/SPARE(18)
      IF ((INTGR(35).GT.0).AND.(INTGR(36).EQ.3)) GO TO 142
      IF ((T1.GT.GLIM(1)).OR.(T1.LT.GLIM(2))) GO TO 178
      IF (IX(5).LE.0) GO TO 142
      IF (SPARE(58).GT.GLIM(3)) GO TO 178
  142 CONTINUE
      IF (LSTEP.NE.1) GO TO 143
      IF (NDPL(5).GE.0) GO TO 143
      IX(24) = 1
      IF (IX(37).GT.0) IX(71) = 1
      IGO = 2
      GO TO 135
  143 CONTINUE
      IF (KL3.LE.0) GO TO 144
      REWIND IO19
      WRITE(IO19)(A(I),I=K23,KL4)
      REWIND IO19
  144 CONTINUE
      INDTOR = 1
      IF (LSTEP.EQ.1) INDTOR = 0
      CALL OUTC (A,A(K17),A(K40),A(K38),A(K14),A(K19),A(K52),A(K16),
     > A(K48),A(K23),NVX,MVX,KVX,IX3738,INDTOR,MVZ,A(K39))
      IF (LSTEP.EQ.1) GO TO 149
  145 CONTINUE
      SPARE(14) = XKEF1
      CALL TSCL(A,KVX,MVX,NVX,NSETVX,NVO,IVO)
      IX(4) = 0
      IF (IX(15).GT.0) IX(4) = 1
      IF (IX(4).GT.0) GO TO 147
      I32 = ICLOCK(0)
      II3 = (I32-I31)/6000
      IF (II3.LT.ITMX(22)) GO TO 146
      WRITE(IOUT,1014)
      IF (NGC(15).EQ.2) GO TO 179
      GO TO 147
  146 CONTINUE
  147 CONTINUE
      IX(41) = 0
      IF ((NST.EQ.NSTEP).OR.(IX(4).EQ.1)) IX(41) = 1
      IF ((NGC(1).GT.0).AND.(INDTOR.GT.0)) CALL DTOR
      IO1X16=1
      CALL RERT(A(K17), A(K9),RATE,A(K1),A(K2),A(K4),A(K5),A(K38),
     > ZONVOL,A(K18),A(K8),A(K43),A(K67),A(K13),KVX,MVX,NVX,NSETVX, NVO,
     >  IO1X16)
      CALL TABL (RATE,A(K10),MVX,NVX,NSETVX,IO1X16)
      CALL RQED(IX(102),IND)
      IF (IND.NE.0  .AND. IXPUT(2).EQ.0) GO TO 148
      CALL EDIN (A(K17),A(K18),A(K9),MVX,NVX,NSETVX,NVO)
  148 CONTINUE
      IX(14) = IX(14)+1
  149 CONTINUE
      IF ((LSTEP.EQ.1).AND.(NDPL(5).LT.1)) GO TO 150
      IF (KL3.LE.0) GO TO 150
      READ(IO19)(A(I),I=K23,KL4)
      REWIND IO19
  150 CONTINUE
      IF (LSTEP.EQ.1) GO TO 151
      IF ((NCY.GT.1).OR.(NST.GT.1).OR.(IQUE.GT.1)) GO TO 151
      IF (N1C1S.GT.0) GO TO 151
      NCCYL = 0
      IF (NGC(3).GT.0) CALL WSTR(NCCYL,A,MEMORY)
  151 CONTINUE
      IX(2) = IX(2)+1
      IF (IX(171).LE.0) GO TO 154
      IF (IX172.GT.0) GO TO 153
      IF (MAC4.EQ.1) GO TO 152
      IF (IQUE.LT.IX(171)) GO TO 154
      GO TO 153
  152 CONTINUE
      IF (NCY.LT.IX(171)) GO TO 154
  153 CONTINUE
      WRITE(IOOW)PF,XLAMDA,BETTA,SPARE(45),SPARE(46)
      IX172 = 1
  154 CONTINUE
      NCCYL = -NCY
      IF (NGC(3).EQ.0) GO TO 155
      CALL WSTR(NCCYL,A,MEMORY)
      BACKSPACE IO13
      BACKSPACE IO13
  155 CONTINUE
      IF (LSTEP.EQ.1) GO TO 159
      IF (IX(4).GT.0) GO TO 157
      IF (SPARE(2).LT.DPLH(1)) GO TO 156
      WRITE(IOUT,1011)NCY
      GO TO 157
  156 CONTINUE
      NST = NST+1
      IX2 = IX(2)-1
      ICPUT2 = ICLOCK(0)
      IRELT2 = IFIX( SECNDS(0.0) )
      CPUT = (FLOAT(ICPUT2)-FLOAT(ICPUT1))/6000.0
      RELT = (FLOAT(IRELT2)-FLOAT(IRELT1))/60.0
      WRITE(IOUT,1009)IX2,CPUT,RELT
      IF (NST.LE.NSTEP) GO TO 130
  157 CONTINUE
      IF (NGC(3).EQ.0) GO TO 158
      IF (INNOO.GT.0) GO TO 158
      READ(IO13)
      READ(IO13)
  158 CONTINUE
      IX(16) = 0
      IX(4) = 0
C
      IF (NDPL(5).EQ.0) GO TO 159
      IX(99) = 1
      LSTEP = 1
      GO TO 130
  159 CONTINUE
      IF (IX172.LE.0) GO TO 160
      REWIND IOOW
      REWIND IOOR
      IOT1 = IOOR
      IOOR = IOOW
      IOOW = IOT1
      IX(172) = 1
  160 CONTINUE
      IX(99) = 0
      LSTEP = 0
      IF (INNOO.EQ.0) GO TO 165
      ITMIS(1) = ITMIS(1)+1
C*****WRITE   END OF CYCLE CONCENTRATIONS ON IO24
      IO24 = IX(91)
      IO12 = IX(79)
      IXND = 1
      CALL WNSS (A(K17),A(K18),A(K44),MVX,NVX,IVO,IO12,IO24,IXND)
      REWIND IO12
      REWIND IO24
  161 CONTINUE
      REWIND IO1
      WRITE(IO1)(A(I),I=1,MEMORY)
      REWIND IO1
      INTGR(11) = 0
      IO22 = IX(89)
      INTGR(12) = IO22
      INTGR(71) = NCY
      INTGR(13) = IO13
      INTGR(14) = NGC(2)
      INTGR(15) = NGC(3)
      INTGR(77) = 0
      INTGR(19) = IQUE
      INTGR(20) = IOUT
      INTGR(46) = NRC
      INTGR(47) = 0
      INTGR(49) = 0
      IF (INTGR(35).EQ.0) GO TO 162
      IF (NGC(2).NE.0) GO TO 162
      FLOTR(28) = FLOTR(21)
      IF (INTGR(36).EQ.1) FLOTR(21) = XKEF1
      IF (INTGR(36).EQ.2) FLOTR(21) =SPARE(52)
      IF (INTGR(36).EQ.3) FLOTR(21) =SPARE(2)
      IF (INTGR(36).EQ.4) FLOTR(21) = FLOTR(29)
      IF (INTGR(36).EQ.5) FLOTR(21) = FLOTR(30)
  162 CONTINUE
      IF ((NCY.EQ.NCYCLE).AND.(NGC(2).EQ.0)) INTGR(77) = 1
      CALL MEDT(A,MEMORY)
      READ(IO1)(A(I),I=1,MEMORY)
      REWIND IO1
      IO26 = IX(93)
      IO27 = IX(94)
      IO12 = IX(79)
      IO29 = IX(96)
C*****READ CONCENTRATIONS FROM FUEL MANAGEMENT INTERFACE IO26-IO27
      CALL RNSS (A(K17),A(K18),A(K44),NVX,MVX,IVO,IO12,IO26,IO27,IO29)
      I22 = ICLOCK(0)
      II2 = (I22-I21)/6000
      IF (II2.LT.ITMX(23)) GO TO 163
      WRITE(IOUT,1015)
      IF (NGC(15).EQ.2) GO TO 179
      GO TO 164
  163 CONTINUE
      NRC = NRC+1
      IF (INTGR(47).LE.0) GO TO 164
      IF (NRC.GT.NRCYC) GO TO 164
      IX(2) = 0
      IX(198) = 0
      SPARE(1 ) = U1
      SPARE(2 ) = U2
      SPARE(9 ) = U9
      SPARE(10) = U10
      SPARE(11) = U11
      SPARE(12) = U12
      SPARE(13) = U13
      SPARE(26) = U26
      SPARE(74) = U74
      SPARE(75) = U75
      GO TO 107
  164 CONTINUE
      NRC = 1
      CALL CYCR
      IF (NGC(3).EQ.0) GO TO 165
      WRITE(IO13)(IX(I),I=1,200),(SPARE(I),I=1,200)
  165 CONTINUE
      IF (INTGR(35).LE.0) GO TO 166
      IF (INTGR(49).GT.0) GO TO 166
      WRITE(IOUT,1000)
      IF (INTGR(41).GT.0) GO TO 175
  166 CONTINUE
      IX(2) = 0
      ICUP2 = ICLOCK(0)
      IRAL2 = IFIX( SECNDS(0.0) )
      CUP = (FLOAT(ICUP2)-FLOAT(ICUP1))/6000.0
      RAL = (FLOAT(IRAL2)-FLOAT(IRAL1))/60.0
      WRITE(IOUT,1002)NCY,CUP,RAL
      NCY = NCY+1
      IF ((NCY.GT.1).AND.(DPLH(2).NE.0)) SPARE(100) = DPLH(2)
      NGC(2) = 0
      I12 = ICLOCK(0)
      II1 = (I12-I11)/6000
      IF (II1.LT.ITMX(24)) GO TO 167
      WRITE(IOUT,1016)
      MAC4 = 1
      IF (NGC(15).EQ.2) GO TO 179
      GO TO 168
  167 CONTINUE
      IF ((INTGR(77).GT.0).AND.(INTGR(35).LT.0)) GO TO 168
      IF (NCY.LE.NCYCLE) GO TO 105
  168 CONTINUE
      NCY = 1
      IX(16) = 0
      SPARE(1) = 0.0
      SPARE(2) = 0.0
      SPARE(9) = 0.0
      SPARE(10) = 0.0
      SPARE(11) = 0.0
      SPARE(12) = 0.0
      SPARE(13) = 0.0
      SPARE(26) = 0.0
      SPARE(74) = 0.0
      SPARE(75) = 0.0
      IX(198) = 0
      IF (INTGR(55).GT.0) GO TO 177
      IF ((NGC(3).EQ.0).OR.(MAC4.LE.1).OR.(IQUE.EQ.MAC4)) GO TO 173
      REWIND IO13
  169 CONTINUE
      READ(IO13,END=171) ISIGNL
      IF (ISIGNL.NE.-11111) GO TO 169
      DO 170 N = 1,8
      READ(IO13,END=171)
  170 CONTINUE
      GO TO 172
  171 CONTINUE
      WRITE(IOUT,1003)
      return
  172 CONTINUE
      IF (IX(199).GT.0) READ(IO13,END=171)
  173 CONTINUE
      IQUE = IQUE+1
      IF (IQUE.LE.MAC4) GO TO 104
  174 CONTINUE
      IF (MAC4.EQ.1) GO TO 177
      WRITE(IOUT,1004)
      IF (INTGR(26).EQ.0) GO TO 177
  175 CONTINUE
      WRITE(IOUT,1001)
      IF (NGC(3).EQ.0) GO TO 176
      REWIND IO13
  176 CONTINUE
      return
  177 CONTINUE
      GO TO 180
  178 WRITE(IOUT,1010)T1,SPARE(58)
      return
  179 CONTINUE
  180 CONTINUE
      RETURN
 1000 FORMAT('0REPEAT CYCLE CONDITIONS NOT MET')
 1001 FORMAT('0OPTION TO TERMINATE IS ON')
 1002 FORMAT('0CYCLE',I4,'  REQUIRED',0PF7.3,
     > '  MINUTES CPU TIME, AND',F7.3,'  MINUTES CLOCK TIME')
 1003 FORMAT('0ERROR STOP 913')
 1004 FORMAT('0EQUILIBRIUM CYCLE CONDITIONS NOT MET')
 1005 FORMAT('0INITIAL REACTIVITY LOOP ITERATION COUNT EXCEEDED')
 1006 FORMAT(' ERROR STOP 13')
 1007 FORMAT('0 CYCLE REACTIVITY LOOP ITERATION COUNT EXCEEDED')
 1008 FORMAT(' ERROR STOP 13')
 1009 FORMAT('0TIME STEP',I3,'  REQUIRED',0PF7.3,
     > '  MINUTES CPU TIME, AND',F7.3,'  MINUTES CLOCK TIME')
 1010 FORMAT('0THE MULTIPLICATION FACTOR ',1PE13.5,
     > ' OR THE MAXIMUM SEARCH NUCLIDE CONCENTRATION ',E13.5,
     > ' EXCEEDS THE RESTRAINTS'/
     > ' SEE GLIM1,GLIM2,GLIM3, CARD 5 SECTION 001')
 1011 FORMAT('0MAXIMUM EXPOSURE TIME FOR CYCLE',I3,1H ,'EXCEEDED')
 1012 FORMAT('0INITIAL REACTIVITY LOOP COMPUTER TIME LIMIT EXCEEDED')
 1013 FORMAT('0CYCLE REACTIVITY LOOP COMPUTER TIME LIMIT EXCEEDED')
 1014 FORMAT('0REPEAT TIME STEP LOOP COMPUTER TIME LIMIT EXCEEDED')
 1015 FORMAT('0REPEAT CYCLE LOOP COMPUTER TIME LIMIT EXCEEDED')
 1016 FORMAT('0TOTAL COMPUTER TIME LIMIT EXCEEDED')
      END
CMACR --035 ***CITATION*** READS INPUT SECTION 008/ CF-IPTM
      SUBROUTINE MACR(SIG,F1,XI, MVX,KVX,IOMC)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
C
      DIMENSION SIG(KVX,MVX,8),F1(KVX,KVX,MVX),XI(KVX)
C     FOR INPUT PURPOSES WE SHALL TEMPORARILY EXEED THE SPACE
C      ALLOCATED FOR ARRAY F1, THEREFORE SAVE VALUES
      REWIND IO1
      WRITE(IO1)(((F1(KK,K,M),KK=1,KMAX),K=1,KMAX),M=1,MMAX)
      REWIND IO1
      IO14 = IX(81)
      IF (IX(27).LE.0) GO TO 101
      IF ((MM1VX.NE.MVX).OR.(KM1VX.NE.KVX)) GO TO 101
      REWIND IO14
      DO 100 K = 1,KMAX
      READ(IO14)((F1(KK,K,M),KK=1,KMAX),M=1,MMAX)
  100 CONTINUE
      REWIND IO14
  101 CONTINUE
      AX=0
      DO 103 M = 1,MMAX
      DO 102 K = 1,KMAX
      SIG(K,M,7) = 0.0
      SIG(K,M,8) = 0.0
      IF ((MM1VX.EQ.MVX).AND.(KM1VX.EQ.KVX)) GO TO 102
      SIG(K,M,1) = 0.0
      SIG(K,M,3) = 0.0
      SIG(K,M,4) = 0.0
      SIG(K,M,5) = 0.0
      SIG(K,M,6) = 0.0
  102 CONTINUE
  103 CONTINUE
  104 READ(IOMC,1000)M,K,T1,T2,T3,T4,T5
      IF (M) 107,107,105
  105 IF (K.GT.KMAX) GO TO 106
      IF (M.GT.MMAX) GO TO 106
      IF (K.EQ.0) GO TO 106
      READ(IOMC,1001)(F1(KK,K,M),KK=1,KMAX)
      SIG(K,M,1) = T1
      SIG(K,M,3) = T2
      SIG(K,M,4) = T3
      SIG(K,M,5) = T4
      AX=AX+T5
      SIG(K,M,7)=T5
      GO TO 104
  106 JB=34
      WRITE(IOUT,1003) JB,K,KMAX,M,MMAX
      return
  107 IF (AX.NE.0.) GO TO 110
      DO 109 M = 1,MMAX
      DO 108 K = 1,KMAX
      SIG(K,M,7) = SIG(K,M,4) *1.0E+6
  108 CONTINUE
  109 CONTINUE
  110 CONTINUE
C     STORE F1 ARRAY IN FORM TO BE USED LATER
      REWIND IO14
      DO 111 K=1,KMAX
      WRITE(IO14) ((F1(KK,K,M),KK=1,KMAX),M=1,MMAX)
  111 CONTINUE
      REWIND IO14
  112 DO 115 M = 1,MMAX
      DO 114 K = 1,KMAX
      SIG(K,M,2) = 0.0
      DO 113 KK = 1,KMAX
      SIG(K,M,2) = SIG(K,M,2)+F1(KK,K,M)
  113 CONTINUE
  114 CONTINUE
  115 CONTINUE
C     RESET F1 TO PREVIOUS VALUES
      READ(IO1) (((F1(KK,K,M),KK=1,KMAX),K=1,KMAX),M=1,MMAX)
      REWIND IO1
      READ(IOMC,1001)(XI(K),K=1,KMAX)
      SUMXI = 0.0
      DO 116 K = 1,KMAX
      SUMXI = SUMXI+XI(K)
  116 CONTINUE
      WRITE(IOUT,1002)(XI(K),K=1,KMAX),SUMXI
      RETURN
 1000 FORMAT(2I6,5E12.0)
 1001 FORMAT(6E12.0)
 1002 FORMAT('0'/'0FISSION SOURCE DISTRIBUTION AND SUM',10F9.5/
     > (1X,14F9.5))
 1003 FORMAT('0***DATA ERROR STOP',6I6)
      END
CSRCH --042 ***CITATION*** READS INPUT SECTION 028/ CF-IPTM
      SUBROUTINE SRCH(CONC,MJJR,NVX,MVX,NSETVX)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     >  , XNAME(3,200)
      COMMON/AMESH/BMESH(30),NREGI,NREGJ,NREGKB,XSHI(100),XSHJ(100),
     > XSHKB(100), MSHI(100),MSHJ(100),MSHKB(100),Y(211),YY(211), X(211)
     >  ,XX(211),Z(211),ZZ(211), ZONVOL(200),AVZPD(200),PDI(211),
     > PDJ(211) , PDK(211)
C
      DIMENSION CONC(NVX,MVX),MJJR(200,NSETVX)
      DIMENSION XTR3(100)
C
      EQUIVALENCE (NXTR1(1),XTR3(1))
C
      WRITE(IOUT,1006)
      KKKK = 0
      IO17 = IX(84)
      IO10 = IX(77)
      REWIND IO10
  100 READ(IO10,END=101)
      GO TO 100
  101 BACKSPACE IO10
      REWIND IO3
      XDUM = 0.0
      IDUM = 0
      NREC = 0
      IN = 0
  102 READ(IOIN,1007) (NSRH(I),I=1,24)
      IF (NSRH(1).EQ.0) GO TO 128
      READ(IOIN,1008) (XSRH1(I),I=1,6)
      IN = IN + 1
      IF (XSRH1(1).EQ.0.0) XSRH1(1) = 1.0
      IF (XSRH1(2).EQ.0.0) XSRH1(2) = 1.0
      IF ((NSRH(4).GT.0).AND.(NSRH(9).GT.0)) NER(17) = 17
      IF ((NSRH(2).EQ.3).AND.(NSRH(10).EQ.(-1))) NER(17) = 17
      WRITE(IOUT,1009) (NSRH(I),I=1,24),(XSRH1(I),I=1,6)
      WRITE(IO3) (NSRH(I),I=1,24),(XSRH1(I),I=1,6)
      NREC = NREC + 1
      IF (NSRH(2).EQ.3) GO TO 120
      IF (NSRH(10).NE.(-1)) GO TO 102
C*********GOODIES GO HERE*************
      IF (KKKK.GT.0) GO TO 103
      KKKK = 1
      REWIND IO17
      WRITE(IO17) ((CONC(N,M),N=1,NMAX),M=1,MMAX)
      REWIND IO17
  103 CONTINUE
      DO 104 M=1,MMAX
      DO 104 N=1,NMAX
      CONC(N,M) = 0.0
  104 CONTINUE
      WRITE(IOUT,1000)
      NXN = 1
      NXM = 1
      NXS = 1
      CON = 0.0
  105 READ(IOIN,1007) MF,ML,N1,N2
      IF (MF.EQ.0) GO TO 114
      IF (ML.LT.MF) ML = MF
      WRITE(IOUT,1001) MF,ML
      IT = 0
      I2 = 0
  106 I1 = I2 + 1
      I2 = I1 + 5
      READ(IOIN,1002) (NXTR1(I),XTR1(I),I=I1,I2)
      DO 107 I=I1,I2
      IF (NXTR1(I).EQ.0) GO TO 108
      IT = IT + 1
  107 CONTINUE
      GO TO 106
  108 CONTINUE
      WRITE(IOUT,1003) (NXTR1(I),XTR1(I),I=1,IT)
      DO 113 M=MF,ML
      NS = NXSET(M)
      NR = NXODR(NS)
      NSX = NSIG2(NR)
      IF (IT.GT.NSX) NER(40) = 40
      DO 112 N=1,IT
      NRL = NXTR1(N)
      IF (NRL.LE.0.OR.NRL.GT.200) GO TO 109
      IF (MJJR(NRL,NR).NE.0) GO TO 110
  109 CONTINUE
      WRITE(IOUT,1004) NRL,NS
      NER(41) = 41
      NRL = 1
  110 CONTINUE
      NDOR = MJJR(NRL,NR)
      CONC(NDOR,M) = XTR1(N)
      IF (CONC(NDOR,M).LE.CON) GO TO 111
      CON = CONC(NDOR,M)
      NXN = NDOR
      NXM = M
      NXS = NR
  111 CONTINUE
  112 CONTINUE
  113 CONTINUE
      GO TO 105
  114 CONTINUE
      NXZ = 0
      DO 117 M=1,MMAX
      DO 115 N=1,NMAX
      IF (CONC(N,M).NE.0.0) GO TO 116
  115 CONTINUE
      GO TO 117
  116 NXZ = NXZ + 1
      NXTR1(NXZ) = M
  117 CONTINUE
      IF (NXZ.GT.0) GO TO 118
      WRITE(IOUT,1005) NXZ
      return
  118 CONTINUE
      WRITE(IO3) NXZ,NXN,NXM,NXS,IDUM,CON,XDUM,XDUM,XDUM,XDUM
      WRITE(IO3) (NXTR1(I),I=1,NXZ)
      DO 119 I=1,NXZ
      M = NXTR1(I)
      WRITE(IO3) (CONC(N,M),N=1,NMAX)
  119 CONTINUE
      NREC = NREC + NXZ + 2
      GO TO 102
  120 CONTINUE
      DO 121 L=1,100
      XTR1(L) = 0.0
      XTR2(L) = 0.0
      XTR3(L) = 0.0
  121 CONTINUE
      INDX = 1
      INGX = 1
      XMX = 0.0
      WRITE(IOUT,1015)
      READ(IOIN,1010) NXJ,NXI,NXKB
      NREC = NREC + 1
      IF (NXJ.LE.0) GO TO 123
      READ(IOIN,1011) (XTR1(J),J=1,NXJ)
      WRITE(IOUT,1012) (XTR1(J),J=1,NXJ)
      NREC = NREC + 1
      DO 122 J=1,NXJ
      XTR1(J) = XTR1(J)*XSHJ(J)
      IF (XTR1(J).LE.XMX) GO TO 122
      XMX = XTR1(J)
      INGX = 1
      INDX = J
  122 CONTINUE
  123 IF (NXI.LE.0) GO TO 125
      READ(IOIN,1011) (XTR2(I),I=1,NXI)
      WRITE(IOUT,1013) (XTR2(I),I=1,NXI)
      NREC = NREC + 1
      DO 124 I=1,NXI
      XTR2(I) = XTR2(I)*XSHI(I)
      IF (XTR2(I).LE.XMX) GO TO 124
      XMX = XTR2(I)
      INGX = 2
      INDX = I
  124 CONTINUE
  125 IF (NXKB.LE.0) GO TO 127
      READ(IOIN,1011) (XTR3(KB),KB=1,NXKB)
      WRITE(IOUT,1014) (XTR3(KB),KB=1,NXKB)
      NREC = NREC + 1
      DO 126 KB=1,NXKB
      XTR3(KB) = XTR3(KB)*XSHKB(KB)
      IF (XTR3(KB).LE.XMX) GO TO 126
      XMX = XTR3(KB)
      INGX = 3
      INDX = KB
  126 CONTINUE
  127 CONTINUE
      WRITE(IO3) NXJ,NXI,NXKB,INDX,INGX,IDUM,IDUM,XMX,XDUM,XDUM, XDUM,
     > XDUM
      IF (NXJ.GT.0) WRITE(IO3) (XTR1(J),J=1,NXJ)
      IF (NXI.GT.0) WRITE(IO3) (XTR2(I),I=1,NXI)
      IF (NXKB.GT.0) WRITE(IO3) (XTR3(KB),KB=1,NXKB)
      GO TO 102
  128 REWIND IO3
      INN = 28
      WRITE(IO10) INN,NREC,IN,NMAX,IDUM
      IF (IN.EQ.0) GO TO 134
      DO 133 IM=1,IN
      READ(IO3) (NSRH(I),I=1,24),(XSRH1(I),I=1,6)
      WRITE(IO10) (NSRH(I),I=1,24),(XSRH1(I),I=1,6)
      IF (NSRH(2).EQ.3) GO TO 130
      IF (NSRH(10).NE.(-1)) GO TO 133
C*********GOODIES GO HERE*************
      READ(IO3) (NXTR1(I),I=1,5),(XTR1(I),I=1,5)
      WRITE(IO10) (NXTR1(I),I=1,5),(XTR1(I),I=1,5)
      NXZ = NXTR1(1)
      READ(IO3) (NXTR1(I),I=1,NXZ)
      WRITE(IO10) (NXTR1(I),I=1,NXZ)
      DO 129 I=1,NXZ
      READ(IO3) (XTR1(N),N=1,NMAX)
      WRITE(IO10) (XTR1(N),N=1,NMAX)
  129 CONTINUE
      GO TO 133
  130 CONTINUE
      READ(IO3) (NXTR1(I),I=1,7),(XTR1(I),I=1,5)
      WRITE(IO10) (NXTR1(I),I=1,7),(XTR1(I),I=1,5)
      NXJ = NXTR1(1)
      NXI = NXTR1(2)
      NXKB = NXTR1(3)
      IF (NXJ.LE.0) GO TO 131
      READ(IO3) (XTR1(I),I=1,NXJ)
      WRITE(IO10) (XTR1(I),I=1,NXJ)
  131 IF (NXI.LE.0) GO TO 132
      READ(IO3) (XTR1(I),I=1,NXI)
      WRITE(IO10) (XTR1(I),I=1,NXI)
  132 IF (NXKB.LE.0) GO TO 133
      READ(IO3) (XTR1(I),I=1,NXKB)
      WRITE(IO10) (XTR1(I),I=1,NXKB)
  133 CONTINUE
  134 REWIND IO10
      IF (KKKK.LE.0) GO TO 135
      READ(IO17) ((CONC(N,M),N=1,NMAX),M=1,MMAX)
      REWIND IO17
  135 CONTINUE
      RETURN
 1000 FORMAT('0RELATIVE CONCENTRATION CHANGES FOR NUCLIDE SEARCH')
 1001 FORMAT('0ZONES',I4,' TO',I4)
 1002 FORMAT(6(I3,E9.0))
 1003 FORMAT(1X,I6,1PE13.5,I6,E13.5,I6,E13.5,I6,E13.5,I6,E13.5,I6,E13.5)
 1004 FORMAT('0NUCLIDE',I4,2H  ,'IS NOT IN CROSS SECTION SET',I3)
 1005 FORMAT('1****NUMBER OF SEARCH ZONES IS .LE. ZERO****',I10)
 1006 FORMAT('0SEARCH INPUT DATA - SECTION 028')
 1007 FORMAT(24I3)
 1008 FORMAT(6E12.0)
 1009 FORMAT(1X,24I4/1X,1P6E13.5)
 1010 FORMAT(24I3)
 1011 FORMAT(6E12.0)
 1012 FORMAT('0LEFT TO RIGHT',1P8E12.5/(1X,13X,1P8E12.5))
 1013 FORMAT('0TOP TO BOTTOM',1P8E12.5/(1X,13X,1P8E12.5))
 1014 FORMAT('0FRONT TO BACK',1P8E12.5/(1X,13X,1P8E12.5))
 1015 FORMAT('0RELATIVE CHANGES FOR DIMENSION SEARCH')
      END
CDISK --057***CITATION*** REMOVES INPUT SECTION FROM IO10/ CF-IPTM
C     CF-IPRT,SRCH
C     NSEC IS THE SECTION TO BE REMOVED
      SUBROUTINE DISK(CONC,ZONEN,NSEC,MVX,NVX,NVO, HOX,NFO,NNFO,NIC,
     > NSETVX)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
C
      DIMENSION CONC(NVX,MVX), ZONEN(NVO)
      DIMENSION HOX(NVX,NSETVX,20),NFO(20,NSETVX),NNFO(20,NSETVX),
     > NIC(1000)
C
  100 REWIND IO1
      IND = NSEC
      NSEC = IABS(NSEC)
      IO10 = IX(77)
      REWIND IO10
      WRITE(IO1)((CONC(N,M),N=1,NMAX),M=1,MMAX), (ZONEN(I),I=1,NVO)
      REWIND IO1
  101 READ(IO10,END=134) INSEC,NREC,NSET,I1,I2
      IF (INSEC.EQ.28) GO TO 102
      IF (INSEC.EQ.40) GO TO 114
      IF (INSEC.EQ.36) GO TO 125
      IF (INSEC.EQ.30) GO TO 129
C******ADD AN IF FOR EACH NEW SECT. ON IO10
      WRITE(IO3) INSEC,NREC,NSET,I1,I2
      GO TO 101
  102 IF (NSEC.EQ.INSEC) GO TO 103
      WRITE(IO3) INSEC,NREC,NSET,I1,I2
  103 IF (NSET.EQ.0) GO TO 101
      DO 113 N=1,NSET
      READ(IO10) (NSRH(I),I=1,24),(XSRH1(I),I=1,6)
      IF (NSEC.EQ.INSEC) GO TO 104
      WRITE(IO3) (NSRH(I),I=1,24),(XSRH1(I),I=1,6)
  104 CONTINUE
      IF (NSRH(2).EQ.3) GO TO 108
      IF (NSRH(10).NE.(-1)) GO TO 113
      READ(IO10) (NXTR1(I),I=1,5),(XTR1(I),I=1,5)
      NXZ = NXTR1(1)
      IF (NSEC.EQ.INSEC) GO TO 105
      WRITE(IO3) (NXTR1(I),I=1,5),(XTR1(I),I=1,5)
  105 CONTINUE
      READ(IO10) (NXTR1(I),I=1,NXZ)
      IF (NSEC.EQ.INSEC) GO TO 106
      WRITE(IO3) (NXTR1(I),I=1,NXZ)
  106 CONTINUE
      DO 107 M=1,NXZ
      READ(IO10) (XTR1(I),I=1,I1)
      IF (NSEC.EQ.INSEC) GO TO 107
      WRITE(IO3) (XTR1(I),I=1,I1)
  107 CONTINUE
      GO TO 113
  108 CONTINUE
      READ(IO10) (NXTR1(I),I=1,7),(XTR1(I),I=1,5)
      NXJ = NXTR1(1)
      NXI = NXTR1(2)
      NXKB = NXTR1(3)
      IF (NSEC.EQ.INSEC) GO TO 109
      WRITE(IO3) (NXTR1(I),I=1,7),(XTR1(I),I=1,5)
  109 IF (NXJ.LE.0) GO TO 110
      READ(IO10) (XTR1(I),I=1,NXJ)
      IF (NSEC.EQ.INSEC) GO TO 110
      WRITE(IO3) (XTR1(I),I=1,NXJ)
  110 IF (NXI.LE.0) GO TO 111
      READ(IO10) (XTR1(I),I=1,NXI)
      IF (NSEC.EQ.INSEC) GO TO 111
      WRITE(IO3) (XTR1(I),I=1,NXI)
  111 IF (NXKB.LE.0) GO TO 112
      READ(IO10) (XTR1(I),I=1,NXKB)
      IF (NSEC.EQ.INSEC) GO TO 112
      WRITE(IO3) (XTR1(I),I=1,NXKB)
  112 CONTINUE
  113 CONTINUE
      GO TO 101
  114 IF (NSEC.EQ.INSEC) GO TO 115
      WRITE(IO3) INSEC,NREC,NSET,I1,I2
  115 IF (NREC.EQ.0) GO TO 117
      DO 116 N = 1,NREC
      READ(IO10)I1,I2,J1,T1,J2,T2,J3,T3,J4,T4,J5,T5
      IF (NSEC.EQ.INSEC) GO TO 116
      WRITE(IO3)I1,I2,J1,T1,J2,T2,J3,T3,J4,T4,J5,T5
  116 CONTINUE
  117 READ(IO10) INSEC,NREC,KAAX,I1,I2
      IF (NSEC.EQ.INSEC) GO TO 118
      WRITE(IO3) INSEC,NREC,KAAX,I1,I2
  118 IF (NREC.EQ.0) GO TO 120
      DO 119 N = 1,NREC
      READ(IO10)(XTR1(K),K=1,KAAX)
      IF (NSEC.EQ.INSEC) GO TO 119
      WRITE(IO3)(XTR1(K),K=1,KAAX)
  119 CONTINUE
  120 READ(IO10)INSEC,NREC,NN,NAAX,MAAX
      IF (NSEC.EQ.INSEC) GO TO 121
      WRITE(IO3)INSEC,NREC,NN,NAAX,MAAX
  121 IF (NREC.EQ.0) GO TO 101
      IF (NN.EQ.0) GO TO 122
      READ(IO10)(NXTR1(N),N=1,NN)
  122 CONTINUE
      READ(IO10)((CONC(N,M),N=1,NAAX),M=1,MAAX)
      IF (NSEC.EQ.INSEC) GO TO 124
      IF (NN.EQ.0) GO TO 123
      WRITE(IO3)(NXTR1(N),N=1,NN)
  123 CONTINUE
      WRITE(IO3)((CONC(N,M),N=1,NAAX),M=1,MAAX)
  124 GO TO 120
  125 CONTINUE
      IF (NSEC.EQ.INSEC) GO TO 126
      WRITE(IO3)INSEC,NREC,NSET,I1,I2
  126 CONTINUE
      IF (IND.GT.0) GO TO 127
      READ(IO10)
      READ(IO10)
      READ(IO10)
      READ(IO10)
      GO TO 128
  127 CONTINUE
      READ(IO10)(((HOX(NV,NS,I20),NV=1,NSET),NS=1,I1),I20=1,20)
      READ(IO10)((NFO(I20,NS),I20=1,20),NS=1,I1)
      READ(IO10)((NNFO(I20,NS),I20=1,20),NS=1,I1)
      READ(IO10)NIC
  128 CONTINUE
      IF (NSEC.EQ.INSEC) GO TO 101
      WRITE(IO3)(((HOX(NV,NS,I20),NV=1,NSET),NS=1,I1),I20=1,20)
      WRITE(IO3)((NFO(I20,NS),I20=1,20),NS=1,I1)
      WRITE(IO3) ((NNFO(I20,NS),I20=1,20),NS=1,I1)
      WRITE(IO3)NIC
      GO TO 101
  129 IF (NSEC.EQ.INSEC) GO TO 130
      WRITE(IO3) INSEC,NREC,NSET,I1,I2
  130 READ(IO10) (NXTR1(I),I=1,24)
      IF (NSEC.EQ.INSEC) GO TO 131
      WRITE(IO3) (NXTR1(I),I=1,24)
  131 READ(IO10) (NXTR1(I),I=1,24)
      IF (NSEC.EQ.INSEC) GO TO 132
      WRITE(IO3) (NXTR1(I),I=1,24)
  132 DO 133 II=1,NSET
      READ(IO10) J1,J2,J3,(NXTR1(I),I=1,J2)
      IF (NSEC.EQ.INSEC) GO TO 133
      WRITE(IO3) J1,J2,J3,(NXTR1(I),I=1,J2)
  133 CONTINUE
      GO TO 101
  134 REWIND IO10
      REWIND IO3
      IREAD = IO3
      IRITE = IO10
      CALL TRAN(CONC,MVX,NVX,IREAD,IRITE,HOX,NFO,NNFO,NIC,NSETVX)
  135 REWIND IO3
      REWIND IO10
      READ(IO1)((CONC(N,M),N=1,NMAX),M=1,MMAX), (ZONEN(I),I=1,NVO)
      REWIND IO1
      RETURN
      END
CTRAN --060***CITATION***TRANSFERS INPUT DATA FROM KO3 TO KO10/CF-DISK,
CONTINUED                RSTR
      SUBROUTINE TRAN(CONC,MVX,NVX,KO3,KO10,HOX,NFO,NNFO,NIC,NSETVX)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
C
      DIMENSION CONC(NVX,MVX)
      DIMENSION HOX(NVX,NSETVX,20),NFO(20,NSETVX),NNFO(20,NSETVX),
     > NIC(1000)
C
C     OBS. ERR=118 => CORRECAO/ALTERACAO PARA MICRO 386/486
  100 READ(KO3,END=118,ERR=118) INSEC,NREC,NSET,I1,I2
      IF ((INSEC.EQ.-9999).AND.(NREC.EQ.-9999)) GO TO 118
      WRITE(KO10) INSEC,NREC,NSET,I1,I2
      IF (INSEC.EQ.28) GO TO 101
      IF (INSEC.EQ.40) GO TO 108
      IF (INSEC.EQ.36) GO TO 115
      IF (INSEC.EQ.30) GO TO 116
C******ADD AN IF FOR EACH NEW SECT. ON IO10
      GO TO 100
  101 IF (NSET.EQ.0) GO TO 100
      DO 107 N=1,NSET
      READ(KO3) (NSRH(I),I=1,24),(XSRH1(I),I=1,6)
      WRITE(KO10) (NSRH(I),I=1,24),(XSRH1(I),I=1,6)
      IF (NSRH(2).EQ.3) GO TO 103
      IF (NSRH(10).NE.(-1)) GO TO 107
      READ(KO3) (NXTR1(I),I=1,5),(XTR1(I),I=1,5)
      WRITE(KO10) (NXTR1(I),I=1,5),(XTR1(I),I=1,5)
      NXZ = NXTR1(1)
      READ(KO3) (NXTR1(I),I=1,NXZ)
      WRITE(KO10) (NXTR1(I),I=1,NXZ)
      DO 102 M=1,NXZ
      READ(KO3) (XTR1(I),I=1,I1)
      WRITE(KO10) (XTR1(I),I=1,I1)
  102 CONTINUE
      GO TO 107
  103 CONTINUE
      READ(KO3) (NXTR1(I),I=1,7),(XTR1(I),I=1,5)
      WRITE(KO10) (NXTR1(I),I=1,7),(XTR1(I),I=1,5)
      NXJ = NXTR1(1)
      NXI = NXTR1(2)
      NXKB = NXTR1(3)
      IF (NXJ.LE.0) GO TO 104
      READ(KO3) (XTR1(I),I=1,NXJ)
      WRITE(KO10) (XTR1(I),I=1,NXJ)
  104 IF (NXI.LE.0) GO TO 105
      READ(KO3) (XTR1(I),I=1,NXI)
      WRITE(KO10) (XTR1(I),I=1,NXI)
  105 IF (NXKB.LE.0) GO TO 106
      READ(KO3) (XTR1(I),I=1,NXKB)
      WRITE(KO10) (XTR1(I),I=1,NXKB)
  106 CONTINUE
  107 CONTINUE
      GO TO 100
  108 IF (NREC.EQ.0) GO TO 110
      DO 109 N = 1,NREC
      READ(KO3)I1,I2,J1,T1,J2,T2,J3,T3,J4,T4,J5,T5
      WRITE(KO10)I1,I2,J1,T1,J2,T2,J3,T3,J4,T4,J5,T5
  109 CONTINUE
  110 READ(KO3) INSEC,NREC,KAAX,I1,I2
      WRITE(KO10) INSEC,NREC,KAAX,I1,I2
      IF (NREC.EQ.0) GO TO 112
      DO 111 N = 1,NREC
      READ(KO3)(XTR1(K),K=1,KAAX)
      WRITE(KO10)(XTR1(K),K=1,KAAX)
  111 CONTINUE
  112 READ(KO3)INSEC,NREC,NN,NAAX,MAAX
      WRITE(KO10)INSEC,NREC,NN,NAAX,MAAX
      IF (NREC.EQ.0) GO TO 100
      IF (NN.EQ.0) GO TO 113
      READ(KO3)(NXTR1(N),N=1,NN)
  113 CONTINUE
      READ(KO3)((CONC(N,M),N=1,NAAX),M=1,MAAX)
      IF (NN.EQ.0) GO TO 114
      WRITE(KO10)(NXTR1(N),N=1,NN)
  114 CONTINUE
      WRITE(KO10)((CONC(N,M),N=1,NAAX),M=1,MAAX)
      GO TO 112
  115 CONTINUE
      READ (KO3 )(((HOX(NV,NS,I20),NV=1,NSET),NS=1,I1),I20=1,20)
      READ (KO3 )((NFO(I20,NS),I20=1,20),NS=1,I1)
      READ (KO3 )((NNFO(I20,NS),I20=1,20),NS=1,I1)
      READ(KO3)NIC
      WRITE(KO10)(((HOX(NV,NS,I20),NV=1,NSET),NS=1,I1),I20=1,20)
      WRITE(KO10)((NFO(I20,NS),I20=1,20),NS=1,I1)
      WRITE(KO10)((NNFO(I20,NS),I20=1,20),NS=1,I1)
      WRITE(KO10)NIC
      GO TO 100
  116 READ(KO3) (NXTR1(I),I=1,24)
      WRITE(KO10) (NXTR1(I),I=1,24)
      READ(KO3) (NXTR1(I),I=1,24)
      WRITE(KO10) (NXTR1(I),I=1,24)
      DO 117 II=1,NSET
      READ(KO3) J1,J2,J3,(NXTR1(I),I=1,J2)
      WRITE(KO10) J1,J2,J3,(NXTR1(I),I=1,J2)
  117 CONTINUE
      GO TO 100
  118 CONTINUE
      RETURN
      END
CWIO3 --60.2 ***CITATION*** WRITE 036 DATA ON IO3/ CF-IPTM
      SUBROUTINE WIO3(HOX,NFO,NNFO,NIC,NVX,NSETVX)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
C
      DIMENSION HOX(NVX,NSETVX,20),NFO(NSETVX,20),NNFO(NSETVX,20),
     > NIC(1000)
C
      REWIND IO3
      NSEC = 36
      NREC = 4
      IDUM = 0
      WRITE(IO3)NSEC,NREC,NVX,NSETVX,IDUM
      WRITE(IO3)HOX
      WRITE(IO3)NFO
      WRITE(IO3)NNFO
      WRITE(IO3)NIC
      RETURN
      END
CSTSH --071    ***FUEL MANAGEMENT***   STORE NFM
C     CALLED FROM/SHUF
      SUBROUTINE STSH(NFM ,I3VX,I4VX)
C
      COMMON/GMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
C
      DIMENSION NFM(I3VX,I4VX)
C
      I1 = 1
      IREC = 0
      REWIND IO2
      DO 100 N1 = 1,I4VX
      CALL GRIT(NFM(1,N1),NXTR2(N1),IREC,IO2,I1)
      IF (NFM(10,N1).EQ.0) NFM(10,N1) = 100
  100 CONTINUE
      REWIND IO2
      RETURN
      END
CEIGN --076 ***CITATION*** EIGENVALUE CALC. CONTROL/ CF-CALR
      SUBROUTINE EIGN (A,P2,P2E,NTITE,IDX,JDX,KDX,JIDX,KBDX,IX3738)
C
      DOUBLE PRECISION P2
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
      COMMON/AKADD/KAY(1),K1,K2,K3,K4,K5,K6,K7,K8,K9,K10,K11, K12,K13,
     > K131,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23,K24, K25,K26,K27,
     > K28,K29,K30,K31,K32,K33,K34,K35,K36,K37, K38,K39,K40,K41,K42,K43,
     >  K44,K45,K46,K47,K48,K49, K50,K51,K52,K53,K54,K55,K56,K57,K58,
     > K59, K60,K61,K62, K63,K64,K65,K66,K67,K68,K69,K70,K71,K72,K73,
     > K74,K75, K76,K77,K78,K79,K80,K81,K82,K83,K84,K85,K86,K87, K88,
     > K89,K90, K91,K92,K93,K94,K95,K96,K97,K98, K99,K100,NDATA,KNRGN,
     > KNCOMP, KPVOL,KRVOL,MEMVRY, MEMX
      COMMON/AVDLM/IVDLM(1),IVX,JVX,KBVX,KVX,LVX,MVX,NVX,IVXP1,JVXP1,
     > KBVXP1,NSETVX,NVO,IVO,IVZ,KVZ,NCRP,NSPA,N3DDIM,NBLOCK, JIVX,
     > JIP1VX,JP1IXZ,IOVX,IOVZ
C
      DIMENSION A(1), P2(JDX,IDX,KDX), P2E(JIDX,KBDX,KDX)
C
      IX(40) = 0
      JIPROD = JMAX*IMAX
      IF (IX(24).EQ.0) GO TO 102
      DO 100 K= 1,KMAX
      READ(IOFLX)
  100 CONTINUE
      READ(IOFLX)
      IX(5) = 0
      XLAMDA = SPARE(27)
      IF (NUAC(5).GT.10) GO TO 101
      IF (IX(71).GT.0) GO TO 106
      GO TO 107
  101 IF (IX(71).GT.0) GO TO 111
      GO TO 112
  102 CONTINUE
      IX(17) = IX(5)
      INDO = 0
C**** IN BIGS, ARRAY F1 WILL USE THE CORE RESERVED FOR ARRAY SCAC
  103 CONTINUE
      CALL BIGS (A(K23),A(K17),A(K1),A(K2),A(K3),A(K4),A(K5),A(K6),
     > A(K14),A(K8),A(K7),INDO,A(K9),KVX,MVX,NVX,NSETVX,A(K50),A(K16),
     > A(K18),A(K13),NVO)
  104 IF (NUAC(5)-10) 105,105,110
  105 CONTINUE
  106 CONTINUE
      CALL CNST (A(KNRGN),A(K23),A(K65),A(K64),A(K15),A(K14),A(K63),
     > A(KNCOMP),A(KPVOL),A(K50),A(K51),IVX,JVX,KVX,LVX,MVX,IVXP1,JVXP1,
     >  IVZ,KVZ,IOVX,IOVZ,A,MEMVRY,A(K64),IX3738)
      IF (IX(172).GT.0) GO TO 108
      IF (IX(71).GT.0) GO TO 107
      IF (IX(39).NE.0) GO TO 107
      IF (IX(22).NE.0) GO TO 107
      IF (NTITE.NE.0) GO TO 107
      IF ((NGC(2).NE.0).AND.(NUAC(2).EQ.0)) GO TO 109
      IF ((NGC(2).NE.0).AND.(NUAC(2).NE.0)) GO TO 107
      IF (IX(2).GT.1) GO TO 109
  107 CONTINUE
      IF (IX(5).GE.2.AND.IX(73).GT.1) GO TO 108
      CALL INFX (P2,A(KNRGN),A(KNCOMP),A(K50),IVX,JVX,KVX,LVX)
  108 CONTINUE
      IX(39) = 0
      IX(22) = 0
  109 CONTINUE
      CALL FLUX (A(KNRGN),A(K29),A(K21),A(K36),A(K37),A(K38),A(K39),
     > A(K23),A(K17),A(K41),A(K24),A(K65),A(K64), A(K19),A(K20),A(K63),
     > A(KNCOMP),A(K15),A(K1),A(K2),A(K3),A(K4),A(K5),A(K6),A(K14),
     > A(K8),A(K7),A(KPVOL),A(K9), A(K50),A(K51),A(K16),A(K52), A(K49),
     > IVX,JVX, KVX,LVX,MVX,NVX,IVXP1,JVXP1,IVZ,KVZ, NSETVX,IOVX,IOVZ,A,
     >  MEMVRY,A(K64),IX3738,A(K62),A(K45),NCRP,NSPA, A(K18),A(K13),NVO)
      GO TO 115
  110 CONTINUE
  111 CONTINUE
      CALL KNST (A(KNRGN),A(K23),A(K65),A(K64),A(K66),A(K15),A(K14),
     > A(K63),A(KNCOMP),A(KPVOL),A(K50),A(K51),IVX,JVX,KBVX,KVX,LVX,MVX,
     >  IVXP1,JVXP1,KBVXP1,IVZ,KVZ,JIVX,JIP1VX,JP1IXZ,IOVX,IOVZ,A,
     > MEMVRY,A(K64),IX3738)
      IF (IX(172).GT.0) GO TO 113
      IF (IX(71).GT.0) GO TO 112
      IF (IX(39).NE.0) GO TO 112
      IF (IX(22).NE.0) GO TO 112
      IF (NTITE.NE.0) GO TO 112
      IF ((NGC(2).NE.0).AND.(NUAC(2).EQ.0)) GO TO 114
      IF ((NGC(2).NE.0).AND.(NUAC(2).NE.0)) GO TO 112
      IF (IX(2).GT.1) GO TO 114
  112 CONTINUE
      IF (IX(5).GE.2.AND.IX(73).GT.1) GO TO 113
      CALL KNFX (P2E,A(KNRGN),A(KNCOMP),A(K50),IVX,JVX,KBVX,KVX,LVX,
     > JIVX)
  113 CONTINUE
      IX(39) = 0
      IX(22) = 0
  114 CONTINUE
      CALL KLUX (A(KNRGN),A(K29),A(K21),A(K36),A(K37),A(K38),A(K39),
     > A(K23),A(K17),A(K41),A(K24),A(K65),A(K64),A(K66),A(K19),A(K20),
     > A(K63), A(KNCOMP),A(K15),A(K1),A(K2),A(K3),A(K4),A(K5),A(K6),
     > A(K14), A(K8),A(K7),A(KPVOL),A(K9), A(K50),A(K51),A(K16),A(K52),
     > A(K49),IVX,JVX,KBVX,KVX,LVX,MVX,NVX,IVXP1,JVXP1,KBVXP1,IVZ,KVZ,
     > NSETVX,JIVX,JIP1VX,JP1IXZ,IOVX,IOVZ,A,MEMVRY,A(K64),IX3738,A(K62)
     >  , A(K45),NCRP,NSPA,A(K18),A(K13),NVO)
  115 CONTINUE
      IF (IX(5).LT.2) GO TO 122
      IF (IX(5).GT.2) GO TO 117
      CALL DISH(A(K1),A(K2),A(K17),A(K9),A(K4),KVX,MVX,NVX,NSETVX)
      IF (IX(199).EQ.0) GO TO 116
      CALL SSZU(A(K17),A(K18),A(K9),A(K19),MVX,NVX,NSETVX,NVO)
  116 CONTINUE
      GO TO 118
  117 CONTINUE
      CALL CRSH(A(KRVOL),A(KPVOL),LVX)
  118 CONTINUE
      IF (IX(73).EQ.2) GO TO 122
      IF (IX(75).EQ.1.OR.IX(70).NE.0) GO TO 119
      GO TO 120
  119 IF (IX(5).EQ.2) GO TO 123
      GO TO 124
  120 IF (NUAC(5).GT.10) GO TO 121
      CALL DASH(P2,A(K19),JVX,IVX,KVX)
      GO TO 122
  121 CALL KASH(P2E,A(K19),JVX,IVX,KBVX,KVX,JIVX)
  122 CONTINUE
      IF (IX(5).EQ.1) GO TO 123
      IF (IX(5).EQ.(-1)) GO TO 123
      IF (IX(5).EQ.(-2)) GO TO 123
      GO TO 124
  123 CALL FASP(A(K1),A(K14),A(K17),A(K9),A(KPVOL),A(KNCOMP),A(K21),
     > XLAMDA,KVX,NVX,MVX,LVX,NSETVX)
  124 CONTINUE
      IF (IX(24).GT.0) GO TO 129
      IF (IX(5).GE.2.AND.IX(70).NE.0) GO TO 125
      IF (IX(5).GE.2.AND.IX(75).LE.0) GO TO 134
  125 CONTINUE
      IF (NUAC(3).GT.0) GO TO 126
      CALL NMBL(A(K21),A(K38),P2,A(KRVOL),A(KNCOMP),A(K14),P2E,A(K52),
     > IVX,JVX,KBVX,KVX,LVX,MVX,JIVX,A(K36),A(K39))
      IF (NGC(8).GT.0) CALL DODA (A(K41),A(K41),P2,P2E,A(KNRGN),A(KNRGN)
     >  , A(K16),XKEF1,JVX,IVX,KBVX,KVX,LVX,JIVX,A(K14),A(KPVOL),
     > A(KNCOMP), MVX,A(K19),A(K19))
  126 CONTINUE
      DO 128 K= 1,KMAX
      IF (NUAC(5).LE.10) GO TO 127
      WRITE(IOFLX) ((P2E(N1 ,KB,K),N1=1,JIPROD),KB=1,KBMAX)
      GO TO 128
  127 WRITE(IOFLX) ((P2(J,I,K),J=1,JMAX),I=1,IMAX)
  128 CONTINUE
      WRITE(IOFLX)XLAMDA,BETTA,VRGK2
      REWIND IOFLX
      GO TO 134
  129 CONTINUE
      DO 131 K=1,KMAX
      IF (NUAC(5).LE.10) GO TO 130
      WRITE(IOFLX) ((P2E(N1 ,KB,K),N1=1,JIPROD),KB=1,KBMAX)
      GO TO 131
  130 WRITE(IOFLX) ((P2(J,I,K),J=1,JMAX),I=1,IMAX)
  131 CONTINUE
      REWIND IOFLX
      DO 133 K= 1,KMAX
      IF (NUAC(5).LE.10) GO TO 132
      READ(IOFLX) ((P2E(N1 ,KB,K),N1=1,JIPROD),KB=1,KBMAX)
      GO TO 133
  132 READ(IOFLX) ((P2(J,I,K),J=1,JMAX),I=1,IMAX)
  133 CONTINUE
      READ(IOFLX)XLAMDA,BETTA,VRGK2
      REWIND IOFLX
  134 CONTINUE
      RETURN
      END
CEXTR --079***CITATION*** EXTRAPOLATION SUBROUTINE/CF FLUX,KLUX
      SUBROUTINE EXTR
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
C
      DIMENSION RP(10)
C
      IF (IX(196).EQ.0) GO TO 101
      IX(196) = 0
      NTITE = IX(198)
      IF (NTITE.NE.0) GO TO 101
      IF ((NGC(2).EQ.0).OR.(NUAC(2).NE.0)) GO TO 101
      ISK = IX(160)
      IEXR = IX(161)
      NI3 = IX(162)
      IC10 = IX(163)
      IC20 = IX(164)
      IBCUT = IX(197)
      XXMU = SPARE(31)
      XOMU = SPARE(32)
      VVVV = SPARE(33)
      XUSQ = SPARE(40)
      DO 100 I = 1,10
      I1 = 160+I
      RP(I) = SPARE(I1)
  100 CONTINUE
  101 CONTINUE
      IX135 = IX(135)
      IX(135) = 0
      NA = IX(35)
  102 NIT = NIT+1
      IF (NIT.EQ.1) ISK = 0
      IF ((IX(172).GT.0).AND.(NIT.EQ.1)) GO TO 105
      IF (IX(172).GT.0) GO TO 109
      IF (NIT-30) 103,103,109
  103 IF (NIT-1) 104,104,106
  104 CONTINUE
      ISK = 0
      IBCUT=NUAC(19)
      IF (IBCUT.GT.0) GO TO 105
      XUSQ=1.0-(2.0/BETTA-1.0)**2
      SPARE(40) = XUSQ
      BETTA=2.0/(2.0-XUSQ)
  105 IEXR = 0
      NI3 = 0
      VOG1 = 1.0
      IC10 = 12
      IC20 = 20
      GO TO 108
  106 IF (IBCUT) 107,107,109
  107 X=1.0-0.25*XUSQ*BETTA
      IF (X.LE.0.) GO TO 109
      BETTA=AMIN1(1.0/X,1.9999)
  108 VRGK2=BETTA
      SPARE(39)=BETTA
  109 CONTINUE
      NIIT = NIIT+1
      IF (NIIT-3) 111,110,111
  110 IEXR = 1
  111 CONTINUE
      IX(32) = 0
      IX(33) = 0
  112 VRG2 = VRG1
      VRGP2 = VRGP1
      EXFC3 = EXFC2
      EXFC2 = EXFC1
      VOG2 = VOG1
      NI3 = NI3+1
      XO1 = ABS( RMX-1.0)
      XO2 = ABS( RMN-1.0)
      VRGP1 = AMAX1(XO1,XO2)
      IEP = 0
      IF ((NUAC(18).GT.0).OR.(VRGP1.LT.0.01)) GO TO 114
  113 IEP = 1
  114 CONTINUE
  115 IF (XO1-XO2) 116,116,117
  116 VRG1 = RMN-1.0
      VOG1 = RMX-1.0
      VVVV = RMN
      GO TO 118
  117 VRG1 = RMX-1.0
      VOG1 = RMN-1.0
      VVVV = RMX
  118 IF (VRG2.EQ.0.0) GO TO 165
      YYMU = ABS(XXMU)
      XXMU = (VRG1/VRG2)*(1.0+VRG2)
      XOMU = XXMU
      IF (VOG2) 119,120,119
  119 XOMU = (VOG1/VOG2)*(1.0+VOG2)
  120 CONTINUE
      VRGABS = 1.0
      EXFC1 = 1.0
      EOFC1 = 1.0
      T35 = 1.0-XXMU
      T36 = 1.0-XOMU
      IF (T35) 121,122,121
  121 VRGABS = VRG1/T35
      EXFC1 = XXMU/T35
  122 IF (T36) 123,124,123
  123 EOFC1 = XOMU/T36
  124 CONTINUE
      SPARE(31) = XXMU
      SPARE(32) = XOMU
      SPARE(33) = VVVV
  125 XMUAV = (XXMU+XOMU)*0.5
      IF (XMUAV.NE.1.) GO TO 126
      EXFC1=1.0
      GO TO 127
  126 EXFC1 = XMUAV/(1.0-XMUAV)
  127 SPARE(34) = EXFC1
      IF (VVVV.EQ.0.0) GO TO 128
      VRGABS = EXFC1*(1.0-1.0/VVVV)
  128 CONTINUE
      IF (VRGP2.EQ.0.0) PROUT = 1.0
      IF (VRGP2.EQ.0.0) GO TO 129
      PROUT = VRGP1/VRGP2
  129 CONTINUE
      IF (ISK.EQ.0) GO TO 131
      DO 130 N = 1,7
      RP(N) = RP(N+1)
  130 CONTINUE
      RP(8) = PROUT
  131 CONTINUE
      IF (NIIT-IC10) 132,132,133
  132 IF (ISK.GT.0) GO TO 141
      IF (IEXR) 165,165,150
  133 IF (ISK.GT.0) GO TO 134
      NIIIT = NIIIT+1
      RP(NIIIT) = PROUT
  134 CONTINUE
      IF (NIIT-IC20) 132,135,135
  135 NIIT = 0
      ISK = 1
      NIIIT = 0
      IC10 = 2
      IC20 = 10
  136 CONTINUE
  137 IF (ABS(VRG1)-10.0) 139,138,138
  138 BETTA = 0.2+0.8*BETTA
      VRGK2=BETTA
      SPARE(39)=BETTA
      IBCUT=1
      ISK = 0
      GO TO 163
  139 IF (ABS(VRG1)-2.0) 141,140,140
  140 IF (ABS(XMUAV)-1.0) 141,138,138
  141 CONTINUE
      IF (NIT.LE.30) GO TO 142
      IF ((ABS(XXMU).GT.1.3).AND.(YYMU.GT.1.3)) GO TO 161
  142 CONTINUE
      III = 0
      DO 145 IIII = 1,8
  143 IF (RP(IIII)-1.0) 145,144,144
  144 III = III+1
  145 CONTINUE
  146 IF (III-2) 147,148,148
  147 NPOS = 0
      GO TO 149
  148 NPOS = 1
  149 IF (NPOS) 150,150,161
  150 CONTINUE
      IF (IX(129).GT.0) NI3 = 0
      IF (NI3-NA) 165,151,151
  151 IF (ABS(XMUAV)-1.0) 152,165,165
  152 IF (ABS(XXMU)-1.0) 153,165,165
  153 CONTINUE
      IF (EXFC2.EQ.0) GO TO 155
      IF (ABS(EXFC1/EXFC2-1.0)-0.05) 154,154,155
  154 CONTINUE
      IF (NIT.LT.NUAC(22)-1) GO TO 155
      IF (IX135.EQ.1) GO TO 156
      IX(135) = 1
  155 IEXR = 1
      GO TO 165
  156 CONTINUE
      IF ((EXFC1*SPARE(35)).LT.0.0) GO TO 155
      IEXR = 0
      NIIT = 0
      ISK = 0
      NIIIT = 0
      NI3 = 0
      VOGP1 = ABS(RMN-1.0)
      P98T = EXFC1
      IF (NUAC(18).GT.0) GO TO 157
      IF (VOGP1.EQ.0.0) GO TO 157
C     SEQUENCE
      O98 = 0.9
      P98T = O98*(1.0-VOGP1)/VOGP1
  157 CONTINUE
  158 CONTINUE
  159 T1 = NUAC(21)
      IF (T1.EQ.0.0) T1 = 75.0
  160 EXFC1 = AMIN1(EXFC1,P98T,T1)
      IX(32) = 1
      IC10 = 12
      IC20 = 20
      NI3 = 0
      GO TO 165
  161 CONTINUE
  162 BETTA = (6.0*BETTA+1.0)/7.0
      VRGK2=BETTA
      SPARE(39)=BETTA
      IBCUT=1
      ISK = 0
  163 CONTINUE
  164 IX(33) = 1
      NI3 = 0
  165 CONTINUE
      IX(197) = IBCUT
      IX(160) = ISK
      IX(161) = IEXR
      IX(162) = NI3
      IX(163) = IC10
      IX(164) = IC20
      SPARE(160) = VOG1
      DO 166 I = 1,10
      I1 = 160+I
      SPARE(I1) = RP(I)
  166 CONTINUE
      RETURN
 1000 FORMAT('       BETTA = ',F12.5)
      END
CFASP --084 ***CITATION*** CALC. ABS. IN SEARCH NUCLIDES /CF-FLUX,KLUX
      SUBROUTINE FASP(SS1,SIG,CONC,NJJR,PVOL,NCOMP,B1,XLAMDA, KVX,NVX,
     > MVX,LVX,NSETVX)
C
      DOUBLE PRECISION B1
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     >  , XNAME(3,200)
C
      DIMENSION SS1(KVX,NVX,NSETVX),SIG(KVX,MVX,10),CONC(NVX,MVX),
     > NJJR(NVX,NSETVX),PVOL(LVX),NCOMP(LVX),B1(MVX,KVX)
C
      XWACH = SPARE(66)
      T11 = 1.0
      IF (IX(5).EQ.2) GO TO 101
      IF (IX(5).EQ.1) GO TO 100
      IF (IX(5).LT.0) GO TO 119
      return 2468
  100 IF (IX(128).LE.0) GO TO 116
  101 CONTINUE
      DO 103 M = 1,MMAX
      DO 102 K = 1,KMAX
      SIG(K,M,5) = 0.0
  102 CONTINUE
  103 CONTINUE
      IF (NSRH(10).EQ.(-1)) GO TO 111
      DO 110 M = 1,MMAX
      NS = NXSET(M)
      NR = NXODR(NS)
      NSX = NSIG2(NR)
      IF ((IX(44).EQ.0).AND.(IX(49).EQ.0)) GO TO 105
      IF (IX(49).GT.0) GO TO 104
      IF ((M.EQ.IX(44)).OR.(M.EQ.IX(45)).OR.(M.EQ.IX(46))
     > .OR.(M.EQ.IX(47)).OR.(M.EQ.IX(48))) GO TO 105
      GO TO 109
  104 IF (IX(49).NE.NCLASS(M)) GO TO 109
  105 CONTINUE
      DO 108 N=1,NSX
      DO 107 INI=12,18
      IF (NJJR(N,NR).NE.NSRH(INI)) GO TO 107
      DO 106 K = 1,KMAX
      SIG(K,M,5) = SIG(K,M,5)+CONC(N,M)*SS1(K,N,NR)
  106 CONTINUE
  107 CONTINUE
  108 CONTINUE
  109 CONTINUE
  110 CONTINUE
      GO TO 115
  111 CONTINUE
      IO18 = IX(85)
      REWIND IO18
      READ(IO18) NXZ
      READ(IO18) (NXTR1(I),I=1,NXZ)
      DO 114 I=1,NXZ
      M = NXTR1(I)
      NS = NXSET(M)
      NR = NXODR(NS)
      NSX = NSIG2(NR)
      READ(IO18) (XTR1(N),N=1,NSX)
      DO 113 N=1,NSX
      IF (XTR1(N).EQ.0.0) GO TO 113
      IF (NSRH(23).GT.0.AND.XTR1(N).LT.0.0) GO TO 113
      DO 112 K=1,KMAX
      SIG(K,M,5) = SIG(K,M,5)+CONC(N,M)*SS1(K,N,NR)
  112 CONTINUE
  113 CONTINUE
  114 CONTINUE
      REWIND IO18
  115 CONTINUE
  116 CONTINUE
      SPARE(48) = 0.0
      DO 118 K = 1,KMAX
      DO 117 M=1,MMAX
      SPARE(48) = SPARE(48) + B1(M,K)*SIG(K,M,5)
  117 CONTINUE
  118 CONTINUE
      GO TO 120
  119 T11 = XLAMDA
  120 T1 = T11*SPARE(48)/SPARE(56)
      SPARE(52) = T1
      IF (IX(5).EQ.2) GO TO 122
      WRITE(IOUT,1000)XWACH
      IF (IX(5).NE.1) GO TO 121
      IF (IX(128).LE.0) WRITE(IOUT,1001) SPARE(29),T1
      IF (IX(128).GT.0) WRITE(IOUT,1004) SPARE(29),T1
      GO TO 123
  121 CONTINUE
      IF (IX(5).EQ.-1) WRITE(IOUT,1002) XLAMDA,T1
      IF (IX(5).EQ.-2) WRITE(IOUT,1003)XLAMDA,T1
      GO TO 123
  122 CONTINUE
      WRITE(IOUT,1005) T1
  123 CONTINUE
      RETURN
 1000 FORMAT('0END OF CRITICALITY SEARCH - ITERATION TIME',0PF7.3,
     > ' MINUTES')
 1001 FORMAT('0SEARCH NUCLIDES WERE MULTIPLIED BY',1PE13.5,
     > ', FRACTION ABSORPTIONS IN SEARCH NUCLIDES ',0PF10.6)
 1002 FORMAT('0DENSITY OF 1/V CROSS SECTION IS',1PE13.5,
     > ', FRACTION ABSORPTIONS IN SEARCH PARAMETER',0PF10.6)
 1003 FORMAT('0BUCKLINGS WERE MULTIPLIED BY',1PE13.5,
     > ', FRACTION ABSORPTIONS IN SEARCH PARAMETER',0PF10.6)
 1004 FORMAT('0INPUT RELATIVE CONCENTRATION CHANGE TIMES ',1PE13.5,
     > ' HAS BEEN ADDED TO THE INITIAL SEARCH CONCENTRATIONS'/
     > '0FRACTION ABSORPTION IN SEARCH NUCLIDES ',0PF10.6)
 1005 FORMAT('0FRACTION ABSORPTION IN SEARCH NUCLIDES ',0PF10.6)
      END
CRSET --94.2 ***CITATION*** REASSIGN MICROSCOPIC CROSS SECTION SETS
      SUBROUTINE RSET(NRSET1,NST,NCY,NNDI1,SS1,SS2,SS3,SS4,SS5,SSC, KVX,
     > NVX,NSETVX,NJJR)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     >  , XNAME(3,200)
C
      DIMENSION NNDI1(NVX,NSETVX),SS1(KVX,NVX,NSETVX), SS2(KVX,NVX,
     > NSETVX),SS3(KVX,NVX,NSETVX),SS4(KVX,NVX,NSETVX), SS5(KVX,NVX,
     > NSETVX),SSC(KVX,KVX)
      DIMENSION NJJR(NVX,NSETVX)
C
      IF (NRSET1.EQ.3) GO TO 118
      IF (NRSET1.EQ.2) GO TO 101
      IF (IXPUT(26).EQ.2) GO TO 147
      IF (IXPUT(26).EQ.0) GO TO 100
      IF (NCY.GT.IXPUT(25)) GO TO 147
      GO TO 102
  100 CONTINUE
      IF (NCY.GT.(IXPUT(25)+1)) GO TO 147
      GO TO 102
  101 CONTINUE
      IF (NCY.GT.IXPUT(25)) GO TO 147
  102 CONTINUE
      REWIND IO4
  103 CONTINUE
      READ(IO4)N
      IF (N.NE.-1) GO TO 103
      READ(IO4)HOX
      REWIND IO4
      REWIND IOSIG
      NL = 0
      DO 116 NRLE = 1,100
      READ(IOSIG)
      DO 104 M = 1,MMAX
      NS = NXSET(M)
      IF (NS.EQ.NRLE) GO TO 106
  104 CONTINUE
      READ(IOSIG)N1,N2
      NNUM = 2*N2+2
      DO 105 LC = 1,NNUM
      READ(IOSIG)
  105 CONTINUE
      GO TO 116
  106 CONTINUE
      NORD = NXODR(NS)
      NL = NL+1
      READ(IOSIG)
      READ(IOSIG)
      NNC = NSIG2(NORD)
      DO 115 N = 1,NNC
      READ(IOSIG)
      IF (NNDI1(N,NORD)-1) 107,108,111
  107 CONTINUE
      READ(IOSIG) (SS1(K,N,NORD),SS2(K,N,NORD),SS3(K,N,NORD),SS4(K,N,
     > NORD), SS5(K,N,NORD),K=1,KVX),((SSC(KK,K),KK=1,KVX),K=1,KVX)
      GO TO 114
  108 CONTINUE
      READ(IOSIG) (SS1(K,N,NORD),SS2(K,N,NORD),SS3(K,N,NORD),SS4(K,N,
     > NORD), SS5(K,N,NORD),K=1,KVX)
      DO 110 KK = 1,KVX
      DO 109 K = 1,KVX
      SSC(KK,K) = 0.0
  109 CONTINUE
  110 CONTINUE
      IF (K.LT.KVX) SSC(K+1,K) = SS5(K,N,NORD)
      GO TO 114
  111 CONTINUE
      READ(IOSIG)(SS1(K,N,NORD),K=1,KVX)
      DO 113 K = 1,KVX
      SS2(K,N,NORD) = 0.0
      SS3(K,N,NORD) = 0.0
      SS4(K,N,NORD) = 0.0
      SS5(K,N,NORD) = 0.0
      DO 112 KK = 1,KVX
      SSC(KK,K) = 0.0
  112 CONTINUE
  113 CONTINUE
  114 CONTINUE
      WRITE(IO4)((SSC(KK,K),KK=1,KVX),K=1,KVX)
  115 CONTINUE
      READ(IOSIG)
      IF (NL.EQ.NSETVX) GO TO 117
  116 CONTINUE
  117 CONTINUE
      NXTR1(1) = -1
      WRITE(IO4)NXTR1
      WRITE(IO4) HOX
      REWIND IO4
      WRITE(IOUT,1000)
      GO TO 147
  118 CONTINUE
      IF (NCY.GT.IXPUT(25)) GO TO 147
  119 CONTINUE
      N1 = 28
  120 CONTINUE
      N1 = N1+1
      IF (IXPUT(N1).EQ.0) GO TO 147
      IF (IXPUT(N1).EQ.NST) GO TO 122
      DO 121 N = 1,44
      N1 = N1+1
      IF (IXPUT(N1).EQ.0) GO TO 120
  121 CONTINUE
      GO TO 147
  122 CONTINUE
      N2 = N1-1
  123 CONTINUE
      REWIND IO1
      REWIND IO4
      REWIND IOSIG
      N2 = N2+2
      N3 = N2+1
      IF (IXPUT(N2).NE.0) GO TO 124
      N1 = N2
      GO TO 120
  124 CONTINUE
      NORGR = IXPUT(N2)
      NUR = IXPUT(N3)
      NSKIP = NUR-1
      IF (NSKIP.EQ.0) GO TO 127
      DO 126 I = 1,NSKIP
      READ(IOSIG)
      READ(IOSIG) II,III
      NNUM = 2*III+2
      DO 125 LC = 1,NNUM
      READ(IOSIG)
  125 CONTINUE
  126 CONTINUE
  127 CONTINUE
      NORD = NXODR(NORGR)
      NSKIPS = NORD-1
      IF (NSKIPS.EQ.0) GO TO 130
      DO 129 I = 1,NSKIPS
      NNC = NSIG2(I)
      DO 128 II = 1,NNC
      READ(IO4)((SSC(KK,K),KK=1,KVX),K=1,KVX)
      WRITE(IO1)((SSC(KK,K),KK=1,KVX),K=1,KVX)
  128 CONTINUE
  129 CONTINUE
  130 CONTINUE
      READ(IOSIG)
      READ(IOSIG)M1,MNUC,MNGRP
      READ(IOSIG)
      NNC = NSIG2(NORD)
      IF (NNC.NE.MNUC) GO TO 144
      IF (NSIG3(NORD).NE.MNGRP) GO TO 144
      DO 139 N = 1,NNC
      READ(IOSIG)NUCNO
      IF (NUCNO.NE.NJJR(N,NORD)) GO TO 146
      IF (NNDI1(N,NORD)-1) 131,132,135
  131 CONTINUE
      READ(IOSIG) (SS1(K,N,NORD),SS2(K,N,NORD),SS3(K,N,NORD),SS4(K,N,
     > NORD), SS5(K,N,NORD),K=1,KVX),((SSC(KK,K),KK=1,KVX),K=1,KVX)
      GO TO 138
  132 CONTINUE
      READ(IOSIG) (SS1(K,N,NORD),SS2(K,N,NORD),SS3(K,N,NORD),SS4(K,N,
     > NORD), SS5(K,N,NORD),K=1,KVX)
      DO 134 KK = 1,KVX
      DO 133 K = 1,KVX
      SSC(KK,K) = 0.0
  133 CONTINUE
  134 CONTINUE
      IF (K.LT.KVX) SSC(K+1,K) = SS5(K,N,NORD)
      GO TO 138
  135 CONTINUE
      READ(IOSIG)(SS1(K,N,NORD),K=1,KVX)
      DO 137 K = 1,KVX
      SS2(K,N,NORD) = 0.0
      SS3(K,N,NORD) = 0.0
      SS4(K,N,NORD) = 0.0
      SS5(K,N,NORD) = 0.0
      DO 136 KK = 1,KVX
      SSC(KK,K) = 0.0
  136 CONTINUE
  137 CONTINUE
  138 CONTINUE
      WRITE(IO1)((SSC(KK,K),KK=1,KVX),K=1,KVX)
      READ(IO4)
  139 CONTINUE
      NSTRT = NORD+1
      DO 141 I = NSTRT,NSETVX
      NNC = NSIG2(I)
      DO 140 N = 1,NNC
      READ(IO4)((SSC(KK,K),KK=1,KVX),K=1,KVX)
      WRITE(IO1)((SSC(KK,K),KK=1,KVX),K=1,KVX)
  140 CONTINUE
  141 CONTINUE
      READ(IO4)HOX
      REWIND IO1
      REWIND IO4
      DO 143 I = 1,NSETVX
      NNC = NSIG2(I)
      DO 142 N = 1,NNC
      READ(IO1)((SSC(KK,K),KK=1,KVX),K=1,KVX)
      WRITE(IO4)((SSC(KK,K),KK=1,KVX),K=1,KVX)
  142 CONTINUE
  143 CONTINUE
      NXTR1(1) = -1
      WRITE(IO4)NXTR1
      WRITE(IO4) HOX
      REWIND IO1
      REWIND IO4
      WRITE(IOUT,1001)IXPUT(N2),IXPUT(N3)
      GO TO 123
  144 CONTINUE
      WRITE(IOUT,1002)MNUC,MNGRP,NNC,NSIG3(NORD)
  145 CONTINUE
      return
  146 CONTINUE
      WRITE(IOUT,1002)NUCNO,NJJR(N,NORD)
      GO TO 145
  147 CONTINUE
      RETURN
 1000 FORMAT('0MICROSCOPIC CROSS SECTIONS HAVE BEEN RETURNED TO THE ORIG
     >INAL SPECIFICATIONS')
 1001 FORMAT('0THE MICROSCOPIC CROSS SECTIONS IN SET',I3,'  HAVE BEEN RE
     >PLACED BY THOSE IN SET',I3)
 1002 FORMAT('0ERROR STOP 37',4I4)
      END
CBEGN --102 ***CITATION*** INITILIZE 1,2-D FLUX CALC/ CF-FLUX
      SUBROUTINE BEGN(XL,P2,E1,XLAMDA,IVX,JVX,KVX,LVX)
C
      DOUBLE PRECISION P2, XLAMDA
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDB,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
C
      DIMENSION XL(6,KVX)
      DIMENSION P2(JVX,IVX,KVX)
      DIMENSION E1(LVX,KVX)
C
      NTITE = IX(198)
      IF (IX(172).GT.0) GO TO 101
      IF (NTITE.NE.0) GO TO 100
      IF ((NGC(2).NE.0).AND.(NUAC(2).EQ.0)) GO TO 101
  100 CONTINUE
      VRGK2 = BETTA
      SPARE(39) = BETTA
  101 CONTINUE
      NOIR = NUAC(23)
      DO 103 K = 1,KMAX
      DO 102 L = 1,LMAX
      E1(L,K) = 0.0
  102 CONTINUE
  103 CONTINUE
      DO 106 K = 1,KMAX
      DO 105 I = 1,IMAX
      DO 104 J = 1,JMAX
      IF (P2(J,I,K).EQ.0.0) GO TO 104
      IX(10) = I
      IX(11) =J
      IX(13) = K
      GO TO 107
  104 CONTINUE
  105 CONTINUE
  106 CONTINUE
  107 CONTINUE
      VRGK1 = 1.0
      IF (IX(24).EQ.0) GO TO 108
      WRITE(IOUT,1009)
      IF (NUAC(3).EQ.0) VRGK1 = 0.0
      GO TO 134
  108 CONTINUE
      XLAMDA = XLAMDB
      IF (IX(172).GT.0) GO TO 110
      IF (NTITE.NE.0) GO TO 109
      IF (NGC(2).NE.0.AND.NUAC(2).EQ.0) GO TO 110
  109 CONTINUE
      XLAMDA = 1.0
  110 CONTINUE
      IF (IX(5).GE.2) XLAMDA = 1.0/XSRH1(1)
C***************************SEARCH OPTIONS******************************
      IF ((IX(5).EQ.0).OR.(IX(5).GE.2)) GO TO 123
      IF (IX(5).EQ.(-5)) GO TO 123
      IF (IX(172).GT.0) GO TO 112
      IF (NTITE.NE.0) GO TO 111
      IF ((NGC(2).NE.0).AND.(NUAC(2).EQ.0)) GO TO 112
  111 CONTINUE
      XLAMDA = 1.0
      XKEF1 = 1.0
      SPARE(45) = 1.0
      SPARE(46) = 0.1
      IF ((IX(5).EQ.-1).OR.(IX(5).EQ.1)) XLAMDA = 0.0
  112 CONTINUE
      IF ((NGC(1).GT.0).AND.(IX(2).GT.1)) GO TO 119
      WRITE(IOUT,1007)(TITL1(I),I=1,18)
      WRITE(IOUT,1008) (TITL2(I),I=1,18)
      IF (NGC(1).EQ.0) GO TO 116
      IF (IX(2).GT.0) GO TO 113
      WRITE(IOUT,1000)IX(3),SPARE(12)
      GO TO 116
  113 CONTINUE
      IF (IX(99).EQ.0) GO TO 114
      WRITE(IOUT,1001)IX(3),SPARE(12)
      GO TO 115
  114 CONTINUE
      WRITE(IOUT,1006)IX(3),SPARE(2),SPARE(12)
  115 CONTINUE
  116 CONTINUE
      IF (NUAC(20).LE.0) GO TO 117
      WRITE(IOUT,1010)NOIR
      GO TO 118
  117 CONTINUE
      WRITE(IOUT,1011)NOIR
  118 CONTINUE
      WRITE(IOUT,1005)SPARE(51),SPARE(57)
      GO TO 122
  119 CONTINUE
      IF (IX(99).EQ.0) GO TO 120
      WRITE(IOUT,1001)IX(3),SPARE(12)
      GO TO 121
  120 CONTINUE
      WRITE(IOUT,1006)IX(3),SPARE(2),SPARE(12)
  121 CONTINUE
  122 WRITE(IOUT,1012)
      GO TO 136
  123 CONTINUE
      IF (IX(172).GT.0) GO TO 125
      IF (NTITE.NE.0) GO TO 124
      IF ((NGC(2).NE.0).AND.(NUAC(2).EQ.0)) GO TO 125
  124 CONTINUE
      XKEF1 = 1.0
  125 CONTINUE
      IF (XLAMDA.NE.0.0) XKEF1 = 1.0/XLAMDA
      IF ((NGC(1).GT.0).AND.(IX(2).GT.1)) GO TO 131
      WRITE(IOUT,1007)(TITL1(I),I=1,18)
      WRITE(IOUT,1008) (TITL2(I),I=1,18)
      IF (NGC(1).EQ.0) GO TO 129
      IF (IX(2).GT.0) GO TO 126
      WRITE(IOUT,1000) IX(3),SPARE(12)
      GO TO 129
  126 CONTINUE
      IF (IX(99).EQ.0) GO TO 127
      WRITE(IOUT,1001)IX(3),SPARE(12)
      GO TO 128
  127 CONTINUE
      WRITE(IOUT,1006)IX(3),SPARE(2),SPARE(12)
  128 CONTINUE
  129 CONTINUE
      IF (IX(5).EQ.(-5)) WRITE(IOUT,1002)
      IF (NUAC(20).LE.0) GO TO 130
      WRITE(IOUT,1010)NOIR
      GO TO 134
  130 CONTINUE
      WRITE(IOUT,1011)NOIR
      GO TO 134
  131 CONTINUE
      IF (IX(99).EQ.0) GO TO 132
      WRITE(IOUT,1001)IX(3),SPARE(12)
      GO TO 133
  132 CONTINUE
      WRITE(IOUT,1006)IX(3),SPARE(2),SPARE(12)
  133 CONTINUE
  134 CONTINUE
      IF (IX(5).EQ.(-5)) GO TO 135
      WRITE(IOUT,1013)
      GO TO 136
  135 WRITE(IOUT,1003)
      XLAMDA = 1.0
      XKEF1 = 1.0
      SPARE(46) = 0.1
  136 CONTINUE
      IF (NTITE.NE.0) GO TO 137
      IX(196) = 0
      IF ((NGC(2).NE.0).AND.(NUAC(2).EQ.0)) IX(196) = 1
      IF ((NGC(2).NE.0).AND.(NUAC(2).EQ.0)) GO TO 138
  137 CONTINUE
      KXMN8 = KMAX-IX(29)
      KXMN8 = MAX0(KXMN8,1)
      IEP = 1
      JXP1 = JMAX+1
      IX25 = IX(25)
      IX28 = IX(28)
      NIT = 0
      IEXR = 0
      IRECV = 0
      NIIT = 0
      NIIIT = 0
      LO3 = 0
      LO4 = 0
      VRG1 = 1.0
      VRGP1 = 1.0
      XKEF2 = 2.0
  138 CONTINUE
      IF (IX(5).EQ.(-5)) XKEF2 = 1.0
      IF (IX(24).NE.0) GO TO 141
      DO 140 K = 1,KMAX
      DO 139 N = 1,6
      XL(N,K) = 0.0
  139 CONTINUE
  140 CONTINUE
  141 CONTINUE
C     WRITE(IOUT,1004)NTITE,NGC(2),NUAC(2),KXMN8,IEP,JXP1,IX25,IX28,
C    > NIT,IEXR,IRECV,NIIT,NIIIT,LO3,LO4,VRG1,VRGP1,XKEF2
      RETURN
 1000 FORMAT('0AN INITILIZATION FLUX - EIGENVALUE PROBLEM FOLLOWS FOR CY
     >CLE',I3,'  TOTAL DEPLETION TIME',F8.2,' DAYS'//)
 1001 FORMAT('0A FINAL FLUX - EIGENVALUE PROBLEM FOLLOWS FOR CYCLE',I3,
     > '  TOTAL DEPLETION TIME',F11.3,' DAYS')
 1002 FORMAT('0A FIXED SOURCE PROBLEM FOLLOWS')
 1003 FORMAT(' ITERATION  FLUX CHANGE    BETA      MU-1      MU-2      M
     >U-3    DRIVE FACTOR       BALANCE')
 1004 FORMAT('0',15I4,1P3E13.5)
 1005 FORMAT(' LIMITING VALUES OF THE SEARCH FACTOR FOR ABSORPTION AND T
     >OTAL LOSS ARE',1P2E13.5)
 1006 FORMAT('0A FLUX - EIGENVALUE PROBLEM FOLLOWS FOR CYCLE',I3,
     > ' CYCLE TIME',0PF11.4,' DAYS   TOTAL TIME',F11.4,' DAYS'//)
 1007 FORMAT('1',18A4)
 1008 FORMAT(1X,18A4)
 1009 FORMAT('0ADJOINT PROBLEM FOLLOWS')
 1010 FORMAT(' LINE RELAXATION WILL BE DONE ON ROWS - ',I3,' INNER ITERA
     >TION(S)')
 1011 FORMAT(' LINE RELAXATION WILL BE DONE ON ROWS AND COLUMNS - ',I3,
     > ' INNER ITERATION(S)')
 1012 FORMAT(' ITERATION  FLUX CHANGE    BETA      MU-1      MU-2     MU
     >-3            K     SEARCH FACTOR')
 1013 FORMAT(' ITERATION  FLUX CHANGE    BETA      MU-1      MU-2     MU
     >-3            K')
      END
CDASH --104 ***CITATION*** FLUX DRIVING FOR INDIRECT       / CF-FLUX
C                          SEARCH 1,2D
      SUBROUTINE DASH(P2,SOUR, JVX,IVX,KVX)
C
      DOUBLE PRECISION P2,SOUR,ALPHA,X,PN,PNM1,PNP1,PRD
      DOUBLE PRECISION
     >       SUMXI,TPTSA,XADB,XPDB,XS1DB,XS2DB, TL,XRDB,CS1S,CS2S,XLL1,
     > D8,XADX,YADX, XLL2,XLL3,XLL4,XLL5,XLL6,XLEK,B2LK,B3LK,B4LK,B5LK,
     > D1,D2,D3,D4,D5, D6,D7,YADB,YPDB,YLEK,YS1S,YS2S,YS1DB,YS2DB,YRDB,
     > SPR50,XLAST
C
      COMMON/ADUBP/SUMXI,TPTSA,XADB,XPDB,XS1DB,XS2DB, TL,XRDB,CS1S,CS2S,
     >  XLL1,D8,XADX,YADX, XLL2,XLL3,XLL4,XLL5,XLL6,XLEK,B2LK,B3LK,B4LK,
     >  B5LK,D1,D2,D3,D4,D5, D6,D7,YADB,YPDB,YLEK,YS1S,YS2S,YS1DB,YS2DB,
     >  YRDB,SPR50,XLAST
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XELK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDB,EPI1,EPI2, BETTA,SAMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
C
      DIMENSION P2(JVX,IVX,KVX),SOUR(JVX,IVX)
C
      IF (IX(73).GT.1) GO TO 100
      NFLXA = IOFLX
      NFLXB = IX(84)
      GO TO 101
  100 CONTINUE
      NFLXA = IX(152)
      NFLXB = IX(153)
      ITEMP = NFLXB
      NFLXB = NFLXA
      NFLXA = ITEMP
  101 CONTINUE
      REWIND NFLXA
      WRITE(NFLXA) XPDB,XKEF1
      DO 102 K=1,KMAX
      WRITE(NFLXA) ((P2(J,I,K),J=1,JMAX),I=1,IMAX)
  102 CONTINUE
      REWIND NFLXA
      IF (IX(73).LE.1) GO TO 108
      REWIND NFLXB
      READ(NFLXB) PRD,XK
      X = XPDB*XK/(PRD*XKEF1)
      ALPHA =-X*(XSRH1(1)-XKEF1)/(XSRH1(1)-XK)
  103 IF (ALPHA.GE.(-0.5)) GO TO 104
      ALPHA = (-0.5)
  104 CONTINUE
      DO 107 K=1,KMAX
      READ(NFLXB) ((SOUR(J,I),J=1,JMAX),I=1,IMAX)
      DO 106 I=1,IMAX
      DO 105 J=1,JMAX
      PN = P2(J,I,K)
      IF (PN.LE.0.0) GO TO 105
      PNP1 = PN + ALPHA*SOUR(J,I)
      IF (PNP1.LE.0.0) PNP1 = 1.0D-40
      P2(J,I,K) = PNP1
  105 CONTINUE
  106 CONTINUE
  107 CONTINUE
      REWIND NFLXB
      IF (NSRH(24).LT.0) WRITE(IOUT,1000) ALPHA,NFLXA,NFLXB
  108 CONTINUE
      IX(152) = NFLXA
      IX(153) = NFLXB
      IF (IX(130).GT.0.AND.IX(73).EQ.1) IX(73) = IX(73) + 1
      RETURN
 1000 FORMAT(' DB20',' ALPHA=',1PE15.6,2I10)
      END
CKEGN --118 ***CITATION*** INITILIZE 3-D FLUX CALC/ CF-KLUX
      SUBROUTINE KEGN(XL,P2E,E1,XLAMDA,IVX,JVX,KBVX,KVX,LVX,JIVX)
C
      DOUBLE PRECISION XLAMDA
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDB,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
C
      DIMENSION XL(6,KVX)
      DIMENSION P2E(JIVX,KBVX,KVX),E1(LVX,KVX)
C
      NOIR = NUAC(23)
      NTITE = IX(198)
      IF (IX(172).GT.0) GO TO 101
      IF (NTITE.NE.0) GO TO 100
      IF ((NGC(2).NE.0).AND.(NUAC(2).EQ.0)) GO TO 101
  100 CONTINUE
      VRGK2 = BETTA
      SPARE(39) = BETTA
  101 CONTINUE
      DO 103 K = 1,KMAX
      DO 102 L=1,LMAX
      E1(L,K) = 0.0
  102 CONTINUE
  103 CONTINUE
      DO 107 K = 1,KMAX
      DO 106 KB = 1,KBMAX
      N1= 0
      DO 105 I = 1,IMAX
      DO 104 J = 1,JMAX
      N1= N1 + 1
      IF (P2E(N1,KB,K).EQ.0.0) GO TO 104
      IX(10) = I
      IX(11) =J
      IX(12) = KB
      IX(13) = K
      GO TO 108
  104 CONTINUE
  105 CONTINUE
  106 CONTINUE
  107 CONTINUE
  108 CONTINUE
      VRGK1 = 1.0
      IF (IX(24).EQ.0) GO TO 109
      WRITE(IOUT,1007)
      IF (NUAC(3).EQ.0) VRGK1 = 0.0
      GO TO 139
  109 CONTINUE
      XLAMDA = XLAMDB
      IF (IX(172).GT.0) GO TO 111
      IF (NTITE.NE.0) GO TO 110
      IF (NGC(2).NE.0.AND.NUAC(2).EQ.0) GO TO 111
  110 CONTINUE
      XLAMDA = 1.0
  111 CONTINUE
      IF (IX(5).GE.2) XLAMDA = 1.0/XSRH1(1)
C***************************SEARCH OPTIONS******************************
      IF (IX(5).EQ.(-5)) GO TO 126
      IF ((IX(5).EQ.0).OR.(IX(5).GE.2)) GO TO 126
      IF (IX(172).GT.0) GO TO 113
      IF (NTITE.NE.0) GO TO 112
      IF ((NGC(2).NE.0).AND.(NUAC(2).EQ.0)) GO TO 113
  112 CONTINUE
      XLAMDA = 1.0
      XKEF1 = 1.0
      SPARE(45) = 1.0
      SPARE(46) = 0.1
      IF ((IX(5).EQ.-1).OR.(IX(5).EQ.1)) XLAMDA = 0.0
  113 CONTINUE
      IF ((NGC(1).GT.0).AND.(IX(2).GT.1)) GO TO 122
      WRITE(IOUT,1005)(TITL1(I),I=1,18)
      WRITE(IOUT,1006) (TITL2(I),I=1,18)
      IF (NGC(1).EQ.0) GO TO 117
      IF (IX(2).GT.0) GO TO 114
      WRITE(IOUT,1000)IX(3),SPARE(12)
      GO TO 117
  114 CONTINUE
      IF (IX(99).EQ.0) GO TO 115
      WRITE(IOUT,1001)IX(3),SPARE(12)
      GO TO 116
  115 CONTINUE
      WRITE(IOUT,1013)IX(3),SPARE(2),SPARE(12)
  116 CONTINUE
  117 CONTINUE
      IF (NUAC(5).EQ.13) GO TO 118
      IF (NUAC(20)+1) 120,119,118
  118 WRITE(IOUT,1008) NOIR
      GO TO 121
  119 WRITE(IOUT,1010) NOIR
      GO TO 121
  120 WRITE(IOUT,1009) NOIR
  121 CONTINUE
      WRITE(IOUT,1004)SPARE(51),SPARE(57)
      GO TO 125
  122 CONTINUE
      IF (IX(99).EQ.0) GO TO 123
      WRITE(IOUT,1001)IX(3),SPARE(12)
      GO TO 124
  123 CONTINUE
      WRITE(IOUT,1013)IX(3),SPARE(2),SPARE(12)
  124 CONTINUE
  125 WRITE(IOUT,1011)
      GO TO 141
  126 CONTINUE
      IF (IX(172).GT.0) GO TO 128
      IF (NTITE.NE.0) GO TO 127
      IF ((NGC(2).NE.0).AND.(NUAC(2).EQ.0)) GO TO 128
  127 CONTINUE
      XKEF1 = 1.0
      IF (XLAMDA.NE.0.0) XKEF1 = 1.0/XLAMDA
  128 CONTINUE
      IF ((NGC(1).GT.0).AND.(IX(2).GT.1)) GO TO 136
      WRITE(IOUT,1005)(TITL1(I),I=1,18)
      WRITE(IOUT,1006) (TITL2(I),I=1,18)
      IF (NGC(1).EQ.0) GO TO 132
      IF (IX(2).GT.0) GO TO 129
      WRITE(IOUT,1000) IX(3),SPARE(12)
      GO TO 132
  129 CONTINUE
      IF (IX(99).EQ.0) GO TO 130
      WRITE(IOUT,1001)IX(3),SPARE(12)
      GO TO 131
  130 CONTINUE
      WRITE(IOUT,1013)IX(3),SPARE(2),SPARE(12)
  131 CONTINUE
  132 CONTINUE
      IF (IX(5).EQ.(-5)) WRITE(IOUT,1002)
      IF (NUAC(5).EQ.13) GO TO 133
      IF (NUAC(20)+1) 135,134,133
  133 WRITE(IOUT,1008) NOIR
      GO TO 139
  134 WRITE(IOUT,1010) NOIR
      GO TO 139
  135 WRITE(IOUT,1009) NOIR
      GO TO 139
  136 CONTINUE
      IF (IX(99).EQ.0) GO TO 137
      WRITE(IOUT,1001)IX(3),SPARE(12)
      GO TO 138
  137 CONTINUE
      WRITE(IOUT,1013)IX(3),SPARE(2),SPARE(12)
  138 CONTINUE
  139 CONTINUE
      IF (IX(5).EQ.(-5)) GO TO 140
      WRITE(IOUT,1012)
      GO TO 141
  140 WRITE(IOUT,1003)
      XLAMDA = 1.0
      XKEF1 = 1.0
      SPARE(46) = 0.1
  141 CONTINUE
      IF (NTITE.NE.0) GO TO 142
      IX(196) = 0
      IF ((NGC(2).NE.0).AND.(NUAC(2).EQ.0)) IX(196) = 1
      IF ((NGC(2).NE.0).AND.(NUAC(2).EQ.0)) GO TO 143
  142 CONTINUE
      KXMN8 = KMAX-IX(29)
      KXMN8 = MAX0(KXMN8,1)
      IEP = 1
      JXP1 = JMAX+1
      IX25 = IX(25)
      IX28 = IX(28)
      NIT = 0
      IEXR = 0
      IRECV = 0
      NIIT = 0
      NIIIT = 0
      LO3 = 0
      LO4 = 0
      VRG1 = 1.0
      VRGP1 = 1.0
      XKEF2 = 2.0
  143 CONTINUE
      IF (IX(5).EQ.(-5)) XKEF2 = 1.0
      IF (IX(24).NE.0) GO TO 146
      DO 145 K = 1,KMAX
      DO 144 N = 1,6
      XL(N,K) = 0.0
  144 CONTINUE
  145 CONTINUE
  146 CONTINUE
      RETURN
 1000 FORMAT('0AN INITILIZATION FLUX - EIGENVALUE PROBLEM FOLLOWS FOR CY
     >CLE',I3,'  TOTAL DEPLETION TIME',F8.2,' DAYS'//)
 1001 FORMAT('0A FINAL FLUX - EIGENVALUE PROBLEM FOLLOWS FOR CYCLE',I3,
     > '  TOTAL DEPLETION TIME',F11.3,' DAYS')
 1002 FORMAT('0A FIXED SOURCE PROBLEM FOLLOWS')
 1003 FORMAT(' ITERATION  FLUX CHANGE    BETA      MU-1      MU-2      M
     >U-3    DRIVE FACTOR       BALANCE')
 1004 FORMAT(' LIMITING VALUES OF THE SEARCH FACTOR FOR ABSORPTION AND T
     >OTAL LOSS ARE',1P2E13.5)
 1005 FORMAT('1',18A4)
 1006 FORMAT(1X,18A4)
 1007 FORMAT('0ADJOINT PROBLEM FOLLOWS')
 1008 FORMAT(' LINE RELAXATION WILL BE DONE ON ROWS - ',I3,' INNER ITERA
     >TION(S)')
 1009 FORMAT(' LINE RELAXATION WILL BE DONE ON ROWS AND COLUMNS - ',I3,
     > ' INNER ITERATION(S)')
 1010 FORMAT(' LINE RELAXATION WILL BE DONE ON ROWS,COLUMNS,AND PLANES -
     > ',I3,' INNER ITERATION(S)')
 1011 FORMAT(' ITERATION  FLUX CHANGE    BETA      MU-1      MU-2     MU
     >-3            K     SEARCH FACTOR')
 1012 FORMAT(' ITERATION  FLUX CHANGE    BETA      MU-1      MU-2     MU
     >-3            K')
 1013 FORMAT('0A FLUX - EIGENVALUE PROBLEM FOLLOWS FOR CYCLE',I3,
     > ' CYCLE TIME',0PF11.4,' DAYS   TOTAL TIME',F11.4,' DAYS'//)
      END
CKASH --120 ***CITATION*** FLUX DRIVING FOR INDIRECT       / CF-KLUX
C                          SEARCH 3 D
      SUBROUTINE KASH(P2E,SOURE, JVX,IVX,KBVX,KVX,JIVX)
C
      DOUBLE PRECISION ALPHA,X,PN,PNM1,PNP1,PRD
      DOUBLE PRECISION
     >       SUMXI,TPTSA,XADB,XPDB,XS1DB,XS2DB, TL,XRDB,CS1S,CS2S,XLL1,
     > D8,XADX,YADX, XLL2,XLL3,XLL4,XLL5,XLL6,XLEK,B2LK,B3LK,B4LK,B5LK,
     > D1,D2,D3,D4,D5, D6,D7,YADB,YPDB,YLEK,YS1S,YS2S,YS1DB,YS2DB,YRDB,
     > SPR50,XLAST
C
      COMMON/ADUBP/SUMXI,TPTSA,XADB,XPDB,XS1DB,XS2DB, TL,XRDB,CS1S,CS2S,
     >  XLL1,D8,XADX,YADX, XLL2,XLL3,XLL4,XLL5,XLL6,XLEK,B2LK,B3LK,B4LK,
     >  B5LK,D1,D2,D3,D4,D5, D6,D7,YADB,YPDB,YLEK,YS1S,YS2S,YS1DB,YS2DB,
     >  YRDB,SPR50,XLAST
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XELK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDB,EPI1,EPI2, BETTA,SAMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
C
      DIMENSION P2E(JIVX,KBVX,KVX),SOURE(JVX,IVX,KBVX)
C
      JIPROD = JMAX*IMAX
      IF (IX(73).GT.1) GO TO 100
      NFLXA = IOFLX
      NFLXB = IX(84)
      GO TO 101
  100 CONTINUE
      NFLXA = IX(152)
      NFLXB = IX(153)
      ITEMP = NFLXB
      NFLXB = NFLXA
      NFLXA = ITEMP
  101 CONTINUE
      REWIND NFLXA
      WRITE(NFLXA) XPDB,XKEF1
      DO 102 K=1,KMAX
      WRITE(NFLXA) ((P2E(N1,KB,K),N1=1,JIPROD),KB=1,KBMAX)
  102 CONTINUE
      REWIND NFLXA
      IF (IX(73).LE.1) GO TO 109
      REWIND NFLXB
      READ(NFLXB) PRD,XK
      X = XPDB*XK/(PRD*XKEF1)
      ALPHA =-X*(XSRH1(1)-XKEF1)/(XSRH1(1)-XK)
  103 IF (ALPHA.GE.(-0.5)) GO TO 104
      ALPHA = (-0.5)
  104 CONTINUE
      DO 108 K=1,KMAX
      READ(NFLXB) (((SOURE(J,I,KB),J=1,JMAX),I=1,IMAX),KB=1,KBMAX)
      DO 107 KB=1,KBMAX
      N1 = 0
      DO 106 I=1,IMAX
      DO 105 J=1,JMAX
      N1 = N1 + 1
      PN = P2E(N1,KB,K)
      IF (PN.LE.0.0) GO TO 105
      PNP1 = PN + ALPHA*SOURE(J,I,KB)
      IF (PNP1.LE.0.0) PNP1 = 1.0D-40
      P2E(N1,KB,K) = PNP1
  105 CONTINUE
  106 CONTINUE
  107 CONTINUE
  108 CONTINUE
      REWIND NFLXB
      IF (NSRH(24).LT.0) WRITE(IOUT,1000) ALPHA,NFLXA,NFLXB
  109 CONTINUE
      IX(152) = NFLXA
      IX(153) = NFLXB
      IF (IX(130).GT.0.AND.IX(73).EQ.1) IX(73) = IX(73) + 1
      RETURN
 1000 FORMAT(' DB20',' ALPHA=',1PE15.6,2I10)
      END
CKRAN --131***CITATION***TRANSFERS INPUT DATA FROM KO3 TO KO10/CF-WSTR
      SUBROUTINE KRAN(CONC,MVX,NVX,KO3,KO10,HOX,NFO,NNFO,NIC,NSETVX)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
C
      DIMENSION CONC(NVX,MVX)
      DIMENSION HOX(NVX,NSETVX,20),NFO(20,NSETVX),NNFO(20,NSETVX),
     > NIC(1000)
C
  100 READ(KO3,END=118) INSEC,NREC,NSET,I1,I2
      WRITE(KO10) INSEC,NREC,NSET,I1,I2
      IF (INSEC.EQ.28) GO TO 101
      IF (INSEC.EQ.40) GO TO 108
      IF (INSEC.EQ.36) GO TO 115
      IF (INSEC.EQ.30) GO TO 116
C******ADD AN IF FOR EACH NEW SECT. ON IO10
      GO TO 100
  101 IF (NSET.EQ.0) GO TO 100
      DO 107 N=1,NSET
      READ(KO3) (NSRH(I),I=1,24),(XSRH1(I),I=1,6)
      WRITE(KO10) (NSRH(I),I=1,24),(XSRH1(I),I=1,6)
      IF (NSRH(2).EQ.3) GO TO 103
      IF (NSRH(10).NE.(-1)) GO TO 107
      READ(KO3) (NXTR1(I),I=1,5),(XTR1(I),I=1,5)
      WRITE(KO10) (NXTR1(I),I=1,5),(XTR1(I),I=1,5)
      NXZ = NXTR1(1)
      READ(KO3) (NXTR1(I),I=1,NXZ)
      WRITE(KO10) (NXTR1(I),I=1,NXZ)
      DO 102 M=1,NXZ
      READ(KO3) (XTR1(I),I=1,I1)
      WRITE(KO10) (XTR1(I),I=1,I1)
  102 CONTINUE
      GO TO 107
  103 CONTINUE
      READ(KO3) (NXTR1(I),I=1,7),(XTR1(I),I=1,5)
      WRITE(KO10) (NXTR1(I),I=1,7),(XTR1(I),I=1,5)
      NXJ = NXTR1(1)
      NXI = NXTR1(2)
      NXKB = NXTR1(3)
      IF (NXJ.LE.0) GO TO 104
      READ(KO3) (XTR1(I),I=1,NXJ)
      WRITE(KO10) (XTR1(I),I=1,NXJ)
  104 IF (NXI.LE.0) GO TO 105
      READ(KO3) (XTR1(I),I=1,NXI)
      WRITE(KO10) (XTR1(I),I=1,NXI)
  105 IF (NXKB.LE.0) GO TO 106
      READ(KO3) (XTR1(I),I=1,NXKB)
      WRITE(KO10) (XTR1(I),I=1,NXKB)
  106 CONTINUE
  107 CONTINUE
      GO TO 100
  108 IF (NREC.EQ.0) GO TO 110
      DO 109 N = 1,NREC
      READ(KO3)I1,I2,J1,T1,J2,T2,J3,T3,J4,T4,J5,T5
      WRITE(KO10)I1,I2,J1,T1,J2,T2,J3,T3,J4,T4,J5,T5
  109 CONTINUE
  110 READ(KO3) INSEC,NREC,KAAX,I1,I2
      WRITE(KO10) INSEC,NREC,KAAX,I1,I2
      IF (NREC.EQ.0) GO TO 112
      DO 111 N = 1,NREC
      READ(KO3)(XTR1(K),K=1,KAAX)
      WRITE(KO10)(XTR1(K),K=1,KAAX)
  111 CONTINUE
  112 READ(KO3)INSEC,NREC,NN,NAAX,MAAX
      WRITE(KO10)INSEC,NREC,NN,NAAX,MAAX
      IF (NREC.EQ.0) GO TO 100
      IF (NN.EQ.0) GO TO 113
      READ(KO3)(NXTR1(N),N=1,NN)
  113 CONTINUE
      READ(KO3)((CONC(N,M),N=1,NAAX),M=1,MAAX)
      IF (NN.EQ.0) GO TO 114
      WRITE(KO10)(NXTR1(N),N=1,NN)
  114 CONTINUE
      WRITE(KO10)((CONC(N,M),N=1,NAAX),M=1,MAAX)
      GO TO 112
  115 CONTINUE
      READ (KO3 )(((HOX(NV,NS,I20),NV=1,NSET),NS=1,I1),I20=1,20)
      READ (KO3 )((NFO(I20,NS),I20=1,20),NS=1,I1)
      READ (KO3 )((NNFO(I20,NS),I20=1,20),NS=1,I1)
      READ(KO3)NIC
      WRITE(KO10)(((HOX(NV,NS,I20),NV=1,NSET),NS=1,I1),I20=1,20)
      WRITE(KO10)((NFO(I20,NS),I20=1,20),NS=1,I1)
      WRITE(KO10)((NNFO(I20,NS),I20=1,20),NS=1,I1)
      WRITE(KO10)NIC
      GO TO 100
  116 READ(KO3) (NXTR1(I),I=1,24)
      WRITE(KO10) (NXTR1(I),I=1,24)
      READ(KO3) (NXTR1(I),I=1,24)
      WRITE(KO10) (NXTR1(I),I=1,24)
      DO 117 II=1,NSET
      READ(KO3) J1,J2,J3,(NXTR1(I),I=1,J2)
      WRITE(KO10) J1,J2,J3,(NXTR1(I),I=1,J2)
  117 CONTINUE
      GO TO 100
  118 CONTINUE
      INSEC = -9999
      NREC = -9999
      WRITE(KO10)INSEC,NREC,NREC,NREC,NREC
      RETURN
      END
CCYED --134 ***CITATION*** END CYCLE EXTRAPOLATION/ CF-BURN
      SUBROUTINE CYED(IEXTRP)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
C
  100 IEXTRP = 0
      C1 = 0.75
      SPARE(11) = SPARE(10)
      SPARE(10) = SPARE(9)
      IF (IX(3)-1) 101,101,105
  101 IF (IX(2)-2) 102,103,104
  102 SPARE(9) = SPARE(20)
      GO TO 109
  103 SPARE(9) = SPARE(21)
      GO TO 109
  104 SPARE(9) = SPARE(22)
      GO TO 109
  105 IF (IX(2)-2) 106,107,108
  106 SPARE(9) = SPARE(23)
      GO TO 109
  107 SPARE(9) = SPARE(24)
      GO TO 109
  108 SPARE(9) = SPARE(25)
  109 CONTINUE
      SPARE(17) = SPARE(16)
      SPARE(16) = SPARE(15)
      SPARE(15) = SPARE(14)
      SPARE(55) = SPARE(54)
      SPARE(54) = SPARE(53)
      SPARE(53) = SPARE(52)
      T1 = SPARE(16)-SPARE(15)
      IF (IX(2)-1) 125,125,110
C***************************SEARCH OPTIONS******************************
  110 IF ((IX(5).EQ.1).OR.(IX(5).LT.0).OR.(NDPL(11).GT.0)) GO TO 111
      IF (IX(5).EQ.2) GO TO 111
      GO TO 114
  111 CONTINUE
      T1 = SPARE(54)-SPARE(53)
      IF (T1.EQ.0.0) GO TO 125
      T2 = SPARE(53)-DPLH(5)+DPLH(6)-DPLH(4)
      T3 = SPARE(10)*T2/T1
      IF (T3.GT.0.0) GO TO 113
  112 T2 = SPARE(10)+T3
      IF (T2.GT.0.0) GO TO 124
      GO TO 125
  113 IF (T3.GT.SPARE(9)) GO TO 125
      SPARE(9) = T3
      IEXTRP = 1
      GO TO 125
  114 IF (T1) 115,125,115
  115 DELTE = ((SPARE(15)-GLIM(2))/T1)*SPARE(10)
      IF (DELTE-SPARE(9)) 116,116,125
  116 IF (DELTE) 122,117,117
  117 CONTINUE
      IF (T1) 125,118,118
  118 IF (SPARE(10)) 119,125,119
  119 T1 = T1/SPARE(10)
      IF (SPARE(11)) 120,125,120
  120 T2 = C1*(SPARE(17)-SPARE(16))/SPARE(11)
      IF (T1-T2) 125,125,121
  121 IF (T1.GE.(T2/C1/C1)) GO TO 125
      SPARE(9) = DELTE
      IEXTRP = 1
      GO TO 125
  122 T2 = SPARE(10)+DELTE
      IF (T2) 125,125,123
  123 IF (T1) 125,125,124
  124 SPARE(9) = T2
      IEXTRP = 2
      SPARE(1) = SPARE(1)-SPARE(10)
      SPARE(2) = SPARE(1)/86400.0
      IX(2) = IX(2)-1
  125 CONTINUE
      RETURN
      END
CNUCY --135 ***CITATION*** NUC. CHAIN CALCULATION/ CF-BURN
      SUBROUTINE NUCY(AC,AL,AX,AP,YD,CM,CO,CP,HOL,HOX,NFO,NNFO,NIC,NVX,
     > NSETVX,CN,MR,XT,NSET,JM,NSZN,NH)
C
      DOUBLE PRECISION
     > QQ,Q,SI,AQ,QT,XA,YI,XXX,ZZ,ZY,YB,YBB,YJ,Y,XAXA,UW,UY,UV
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     >  , XNAME(3,200)
C
      DIMENSION AC(1),AL(1),AX(1),AP(1),YD(1),CM(1),CO(1),CP(1),CN(1),
     > HOL(NVX,NSETVX,10),HOX(NVX,NSETVX,20),NFO(20,NSETVX), NNFO(20,
     > NSETVX),NIC(1000)
      DIMENSION Q(24),SI(24),AQ(24),QT(24),QQ(24)
C
  100 JMM = NJMM(NSET)
      JNQ = NJNQ(NSET)
      IF (XT.LE.0) GO TO 152
      ICHNN=0
      IDIOT=1
      JT=NSZN*JM
      DO 101M=1,JT
      CM(M)=CN(M)
  101 YD(M)=0.
      II = NCH(NSET)
      IF (II.GT.0) GO TO 104
  102 JB = 9
      WRITE(IOUT,1000)JB,MR,NSET
  103 return
  104 NA=0
      NB=0
      I=II
      MA=0
  105 I=I+1
      IF (NIC(I).NE.0) GO TO 106
      IF (NA.GT.0) GO TO 145
      NA=1
      IDIOT=IDIOT+1
      GO TO 114
C     SET UP DATA FOR ONE CHAIN
  106 NB=NB+1
      Q(NB)=1.0
      NA=0
      JR= IABS(NIC(I))
      IF (JR.LE.200) GO TO 109
      IF (JR.LE.500) GO TO 108
      JR=JR-500
      I=I+1
      MA=MA+1
      X = NIC(I)
      IF (X.EQ.0) GO TO 102
      IF (X.GT.0) GO TO 107
      SI(NB)=-X*AX(JR)/1000.0
      IF (NIC(I).EQ.-1) SI(NB)=AP(JR)
      GO TO 111
  107 SI(NB) = AC(JR)*X/10000.
      GO TO 111
  108 JR=JR-200
      Q(NB) = 0
  109 IF (NIC(I).LT.0) GO TO 110
      SI(NB) = AC(JR)
      GO TO 111
  110 SI(NB) = HOL(JR,NSET,10)
  111 AQ(NB) = AL(JR)+HOL(JR,NSET,10)
      QT(NB)=AQ(NB)*XT
      SI(NB)=SI(NB)*XT
      IF (ICHNN.GT.0) GO TO 113
      IF (JR.LT.JMM) GO TO 113
C     CALCULATE FISSION YIELD RATES
      DO 112L=1,JNQ
      J = NNFO(L,NSET)
      X=AX(J)
      DO 112M=JMM,JM
      JJ=J-JM
      MN=M-JM
      DO 112NZ=1,NSZN
      JJ=JJ+JM
      MN=MN+JM
      YD(MN) = YD(MN)+X*HOX(M,NSET,L )*0.5* (CN(JJ)+CM(JJ))
  112 CONTINUE
      ICHNN=1
C     CHECK FOR ANY ZERO LOSS RATE
  113 IF (AQ(NB).GT.0) GO TO 105
      IF (NIC(I+1).EQ.0) GO TO 105
      JB=10
      WRITE(IOUT,1001)JB,NIC(I),IDIOT,MR,NB
      GO TO 103
  114 NE=I-NB-MA
      NLL=I-1
      JB=NB-1
      IF (JB.LT.1) GO TO 117
C     ARBITRARILY SEPARATE IDENTICAL ROOTS
  115 DO 116JI=1,JB
      KK=JI+1
      DO 116JK=KK,NB
      IF (DABS(AQ(JK)/AQ(JI)-1.0).GT.1.0E-6) GO TO 116
      AQ(JI)=AQ(JI)*1.00001
      QT(JI)=XT*AQ(JI)
      GO TO 115
  116 CONTINUE
C     PROCESS ONE CHAIN
  117 NB=0
      M=NE-1
      N=0
  118 N=N+1
      DO 119IJ=1,NSZN
  119 QQ(IJ)=0
      M=M+1
      JI= IABS(NIC(M))
      JR=JI
      IF (JI.LE.200) GO TO 121
      IF (JI.LE.500) GO TO 120
      JR=JR-500
      M=M+1
      GO TO 121
  120 JR=JR-200
  121 NN=N-1
      XA=QT(N)
      IF (XA.LT.100.) GO TO 122
      YI=0
      GO TO 123
  122 YI=DEXP(-XA)
      IF (XA.LT.0.01) GO TO 124
  123 XXX = (1.0- YI)/AQ(N)
      GO TO 125
  124 XXX = XT*(1.0D+0-0.5D+0*XA*(1.0D+0-0.3333333333333333D+0*XA*
     > (1.0D+0-0.25D+0*XA*(1.0D+0-0.2D+0*XA*(1.0D+0-
     > 0.1666666666666667D+0*XA)))))
  125 IF (NN.LE.0) GO TO 141
      K=0
      KM=NE-1
  126 K=K+1
      KM=KM+1
      JK= IABS(NIC(KM))
      JO=JK
      IF (JK.LE.500) GO TO 127
      JO=JK-500
      KM=KM+1
      GO TO 128
  127 IF (JK.GT.200) GO TO 140
  128 ZZ=0.0
      ZY=0.0
      YB=XXX
      DO 129IZ=K ,NN
      YB=YB*SI(IZ)/QT(IZ)
      IF (DABS(YB).GT.1.D-65) GO TO 129
      YB=0
  129 CONTINUE
      YBB=YB
      J=K-1
      UV=0.
  130 J=J+1
      YJ = 0.0
      IF (QT(J).GT.170.0) GO TO 131
      YJ = DEXP(-QT(J))
  131 XA=QT( N)-QT(J )
      IF (DABS(XA).LT.0.01) GO TO 132
      Y= (YJ-YI)/XA
      GO TO 134
  132 IF (XA.GE.0) GO TO 133
      XA=-XA
      YJ=YI
  133 Y = YJ*(1.0D+0-0.5D+0*XA*(1.0D+0-0.3333333333333333D+0*XA*(1.0D+0
     > -0.25D+0*XA*(1.0D+0-0.2D+0*XA*(1.0D+0-0.1666666666666667D+0*XA ))
     > )))
  134 CONTINUE
      XAXA=QT(J)
      UW=SI(J)
      DO 135IZ= K,NN
      IF (IZ.EQ.J) GO TO 135
      UW=(UW*SI(IZ))/(QT(IZ)-XAXA)
      IF (DABS(UW).GT.1.D-65) GO TO 135
      UW=0
  135 CONTINUE
  136 XAXA= (UW/AQ(J))*Y
      YBB=DMAX1(YBB,XAXA)
      ZY=ZY+XAXA
      UY= UW*Y
      UV=DMAX1(UV,DABS(UY))
      ZZ=ZZ+UY
      IF (J.LT.NN) GO TO 130
      IF (1.0E+12*ZZ.GT.UV) GO TO 137
      ZZ=0.
  137 XAXA=YB-ZY
      IF (1.0E+12*XAXA.GE.YBB) GO TO 138
      XAXA=0
  138 JN=JO-JM
      DO 139IJ=1,NSZN
      JN=JN+JM
      QQ(IJ)=CN(JN)*ZZ+YD(JN)*XAXA*Q(K)+QQ(IJ)
  139 CONTINUE
  140 IF (K.LT.NN) GO TO 126
  141 JN=JR-JM
C     DETERMINE SUB-ZONE NUCLIDE DENSITIES
      DO 144IJ=1,NSZN
      JN=JN+JM
      IF (JI.GT.500) GO TO 142
      IF (JI.GT.200) GO TO 143
  142 QQ(IJ)=QQ(IJ)+XXX*YD(JN)
      CM(JN)=CN(JN)*YI+ QQ(IJ)
      GO TO 144
  143 CM(JN)=CM(JN) + QQ(IJ)
  144 CONTINUE
      IF (M.LT.NLL) GO TO 118
      MA=0
      GO TO 105
  145 CONTINUE
      IF (NH.EQ.0) GO TO 147
      IF (ICHNN.GT.0) GO TO 147
      DO 146L=1,JNQ
      J = NNFO(L,NSET)
      X=AX(J)
      JJ=J-JM
      MN=NH-JM
      DO 146NZ=1,NSZN
      JJ=JJ+JM
      MN=MN+JM
      YD(MN) = YD(MN)+X*HOX(NH,NSET,L )*0.5* (CN(JJ)+CM(JJ))
  146 CONTINUE
  147 CONTINUE
C     GET AVERAGE DENSITIES OVER SUB-ZONES AND IN TIME
      IF (NSZN.GT.1) GO TO 149
      DO 148 M = 1,JT
      CP(M) =(CN(M)+CM(M))*0.5
      CN(M) = CM(M)
  148 CONTINUE
      GO TO 152
  149 ZY = NSZN
      ZZ = 1.0/ZY
      DO 151 M = 1,JM
      JN = M-JM
      X = 0
      DO 150 J = 1,NSZN
      JN = JN+JM
      CN(JN) = CM(JN)
      X = X+CM(JN)
      CM(JN)=0.5*(CM(JN)+CN(JN))
  150 CONTINUE
      ZY = X*ZZ
      CP(M) = 0.5*(CO(M)+ZY)
      CO(M) = ZY
  151 CONTINUE
  152 CONTINUE
      RETURN
 1000 FORMAT('0ERROR STOP',I3,/' NUMBER OF CHAINS FOR ZONE',I3,
     > ' SIGMA SET',I3,' IS ZERO')
 1001 FORMAT('0ERROR STOP',I3/' ZERO LOSS RATE FOR NUC ORDER NO',I4,
     > ' CHAIN',I3,' ZONE',I3,' EXTRA',I3)
      END
CDTOR --146 ***CITATION*** PRINT DEPLETION TIMES/ CF-OUTC
      SUBROUTINE DTOR
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
C
  100 XT = SPARE(9)
      XTTT = XT/86400.0
      IEXTRP = IX(15)
      WRITE(IOUT,1002)
      IF (IEXTRP.EQ.0) GO TO 102
      IF (IEXTRP.EQ.1) GO TO 101
      WRITE(IOUT,1000)
      T1 = (XT-SPARE(10))/86400.0
      SPARE(12) = SPARE(12)+T1
      GO TO 103
  101 CONTINUE
      WRITE(IOUT,1001)
  102 CONTINUE
      SPARE(12) = SPARE(12)+XTTT
  103 CONTINUE
      WRITE(IOUT,1003)IX(2),IX(3),SPARE( 2),XTTT,SPARE(12)
      IF (IEXTRP.EQ.0) GO TO 104
      WRITE(IOUT,1005)IX(3),IX(2)
      IX(4) = 1
  104 CONTINUE
      WRITE(IOUT,1004)
      SPARE(74) = SPARE(2)
      SPARE(75) = SPARE(2)-XTTT/2.0
      RETURN
 1000 FORMAT(' END OF CYCLE CONDITIONS HAVE BEEN DETERMINED BY RE-DEPLET
     >ING THE PREVIOUS TIME STEP')
 1001 FORMAT(' END OF CYCLE CONDITIONS HAVE BEEN DETERMINED BY EXTRAPOLA
     >TION')
 1002 FORMAT('0'/'0',124('*'))
 1003 FORMAT(' AFTER STEP',I3,' OF CYCLE',I3,', THE TIME IS',0PF11.4,
     > ' DAYS. THE TIME STEP WAS',F11.4,' DAYS, AND TOTAL TIME IS',
     > F11.4,' DAYS')
 1004 FORMAT(1X,124('*'))
 1005 FORMAT(1H ,'END OF CYCLE',I3,'.  THE CYCLE REQUIRED',I3,' STEPS')
      END
CACCT --172    ***FUEL MANAGEMENT***   WRITE MASS BALANCE DATA ON I/O
C     CALLED FROM/MNGE
      SUBROUTINE ACCT(FRFEED,REFEED,TOFEED,XLODNG,DISCHR,FRFEEX,NRSVX,
     > LJJR,NIND,IDDN,XMAS, NFSVX,NDSVX, NISVX,NVX,NONNN,ITMIS,AITMIS,
     > MAC,TOFF,TORF,TOF,TOL,TOD,TOIL)
C
      DOUBLE PRECISION FLOTR
C
      COMMON/FMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
      COMMON/CMARY/MEMARY,IMN,MNI,IJLMN,NMLJI,IY(50),AX(50),TITL(36)
      COMMON/COOPD/FLOTR(200),INTGR(100)
C
      DIMENSION FRFEED(NISVX,NFSVX),REFEED(NISVX,NRSVX), TOFEED(NISVX,
     > NRSVX),XLODNG(NISVX,NDSVX), DISCHR(NISVX,NDSVX),FRFEEX(NISVX,
     > NFSVX)
      DIMENSION LJJR(NISVX),IDDN(NONNN)
      DIMENSION XMAS(NONNN),ITMIS(20),AITMIS(20)
      DIMENSION TOFF(NISVX),TORF(NISVX),TOF(NISVX),TOL(NISVX),
     > TOD(NISVX),TOIL(NISVX)
      DIMENSION MAC(24)
C
      MAC13 = MAC(1)
      IOR = INTGR(13)
      NGC2 = INTGR(14)
      NGC3 = INTGR(15)
      T1 = 1.0/602.252
      IF (MAC13.GE.0) WRITE(IOUT,1002)NCY
      DO 100 N = 1,NISVX
      TOIL(N) = 0.0
      TOFF(N) = 0.0
      TOL (N) = 0.0
      TOD (N) = 0.0
      TORF(N) = 0.0
      TOF (N) = 0.0
  100 CONTINUE
      IF (NCY.GT.1) GO TO 104
      DO 101 N = 1,100
      NXTR1(N) = 0
      XTR1(N) = 0.0
  101 CONTINUE
      NXTR1(3) = NISVX
      NXTR1(4) = NFSVX
      NXTR1(5) = NDSVX
      NXTR1(6) = NRSVX
      REWIND IO5
      WRITE(IO5)(NXTR1(N),N=1,100),(XTR1(N),N=1,100)
      DO 103 NN = 1,NISVX
      N = LJJR(NN)
      T2 = T1*XMAS(N)
      DO 102 NF = 1,NFSVX
      N = NN
      FRFEEX(N,NF) = FRFEEX(N,NF)*T2
      TOIL(N) = TOIL(N)+FRFEEX(N,NF)
  102 CONTINUE
  103 CONTINUE
      X = 0.0
      WRITE(IO5)((FRFEEX(N,NF),N=1,NISVX),NF=1,NFSVX), ((X,N=1,NISVX),
     > NF=1,NRSVX),((X,N=1,NISVX),NF=1,NRSVX)
      WRITE(IO5)(TOIL(N),N=1,NISVX)
      IF (NGC3.GT.0) WRITE(IOR)(NXTR1(N),N=1,100), (XTR1(N),N=1,100),
     > ((FRFEEX(N,NF),N=1,NISVX),NF=1,NRSVX)
  104 CONTINUE
      DO 108 NN = 1,NISVX
      N = LJJR(NN)
      T2 = T1*XMAS(N)
      DO 105 NF = 1,NFSVX
      N = NN
      FRFEED(N,NF) = FRFEED(N,NF)*T2
      TOFF(N) = TOFF(N)+FRFEED(N,NF)
  105 CONTINUE
      DO 106 NF = 1,NDSVX
      XLODNG(N,NF) = XLODNG(N,NF)*T2
      TOL (N) = TOL (N)+XLODNG(N,NF)
      DISCHR(N,NF) = DISCHR(N,NF)*T2
      TOD (N) = TOD (N)+DISCHR(N,NF)
  106 CONTINUE
      DO 107 NF = 1,NRSVX
      REFEED(N,NF) = REFEED(N,NF)*T2
      TORF(N) = TORF(N)+REFEED(N,NF)
      TOFEED(N,NF) = TOFEED(N,NF)*T2
      TOF (N) = TOF (N)+TOFEED(N,NF)
  107 CONTINUE
  108 CONTINUE
      ITMIS(1) = NCY
      IF (INTGR(77).GT.0) ITMIS(1) = -1234
      WRITE(IO5)((XLODNG(N,ND),N=1,NISVX),ND=1,NDSVX), ((DISCHR(N,ND),N=
     >  1,NISVX),ND=1,NDSVX)
      WRITE(IO5)(TOL(N),N=1,NISVX),(TOD(N),N=1,NISVX)
      WRITE(IO5)(ITMIS(N),N=1,20),(AITMIS(N),N=1,20)
      IF (INTGR(77).EQ.0) GO TO 109
      REWIND IO5
      GO TO 110
  109 CONTINUE
      WRITE(IO5)((FRFEED(N,NF),N=1,NISVX),NF=1,NFSVX), ((REFEED(N,NR),N=
     >  1,NISVX),NR=1,NRSVX), ((TOFEED(N,NR),N=1,NISVX),NR=1,NRSVX)
      WRITE(IO5)(TOFF(N),N=1,NISVX),(TORF(N),N=1,NISVX), (TOF(N),N=1,
     > NISVX)
  110 CONTINUE
      IF (NGC3.EQ.0) GO TO 111
      WRITE(IOR)((XLODNG(N,ND),N=1,NISVX),ND=1,NDSVX), ((DISCHR(N,ND),N=
     >  1,NISVX),ND=1,NDSVX)
      WRITE(IOR)(ITMIS(N),N=1,20),(AITMIS(N),N=1,20)
      WRITE(IOR)((FRFEED(N,NF),N=1,NISVX),NF=1,NFSVX), ((REFEED(N,NR),N=
     >  1,NISVX),NR=1,NRSVX), ((TOFEED(N,NR),N=1,NISVX),NR=1,NRSVX)
  111 CONTINUE
      IF (NCY.GT.1) GO TO 113
      IF (MAC13.LT.2) GO TO 113
      DO 112 NF = 1,NFSVX
      WRITE(IOUT,1003)NF
      WRITE(IOUT,1005)(IDDN(LJJR(N)),FRFEEX(N,NF),N=1,NISVX)
  112 CONTINUE
  113 CONTINUE
      IF (MAC13.LT.2) GO TO 117
      DO 114 NF = 1,NDSVX
      WRITE(IOUT,1009)NF
      WRITE(IOUT,1008)(IDDN(LJJR(N)),XLODNG(N,NF),N=1,NISVX)
      WRITE(IOUT,1007)(IDDN(LJJR(N)),DISCHR(N,NF),N=1,NISVX)
  114 CONTINUE
      DO 115 NF = 1,NFSVX
      WRITE(IOUT,1003)NF
      WRITE(IOUT,1010)(IDDN(LJJR(N)),FRFEED(N,NF),N=1,NISVX)
  115 CONTINUE
      DO 116 NF = 1,NRSVX
      WRITE(IOUT,1013)NF
      WRITE(IOUT,1011)(IDDN(LJJR(N)),REFEED(N,NF),N=1,NISVX)
      WRITE(IOUT,1012)(IDDN(LJJR(N)),TOFEED(N,NF),N=1,NISVX)
  116 CONTINUE
  117 CONTINUE
      IF (MAC13.LT.0) GO TO 119
      WRITE(IOUT,1000)
      WRITE(IOUT,1001)
      IF (NCY.GT.1) GO TO 118
      WRITE(IOUT,1005)(IDDN(LJJR(N)),TOIL(N),N=1,NISVX)
  118 CONTINUE
      WRITE(IOUT,1008)(IDDN(LJJR(N)),TOL (N),N=1,NISVX)
      WRITE(IOUT,1007)(IDDN(LJJR(N)),TOD (N),N=1,NISVX)
      WRITE(IOUT,1010)(IDDN(LJJR(N)),TOFF(N),N=1,NISVX)
      WRITE(IOUT,1011)(IDDN(LJJR(N)),TORF(N),N=1,NISVX)
      WRITE(IOUT,1012)(IDDN(LJJR(N)),TOF (N),N=1,NISVX)
  119 CONTINUE
      RETURN
 1000 FORMAT('0**********TOTALS SUMMED OVER STREAMS')
 1001 FORMAT(1X)
 1002 FORMAT('0'/'0ACCOUNTING INFORMATION (MASSES IN KG) FOLLOWS FOR CYC
     >LE',I4)
 1003 FORMAT('0FRESH FUEL FEED STREAM',I3)
 1004 FORMAT(1X )
 1005 FORMAT(' INITIAL INVENTORY',(I7,1PE13.5,I7,E13.5,I7,E13.5,I7,E13.5
     > ,I7,E13.5))
 1006 FORMAT(' REMOVALS         ',(I7,1PE13.5,I7,E13.5,I7,E13.5,I7,E13.5
     > ,I7,E13.5))
 1007 FORMAT(' DISCHARGES       ',(I7,1PE13.5,I7,E13.5,I7,E13.5,I7,E13.5
     > ,I7,E13.5))
 1008 FORMAT(' LOADING          ',(I7,1PE13.5,I7,E13.5,I7,E13.5,I7,E13.5
     > ,I7,E13.5))
 1009 FORMAT('0DISCHARGE STREAM',I3)
 1010 FORMAT(' FRESH FEED       ',(I7,1PE13.5,I7,E13.5,I7,E13.5,I7,E13.5
     > ,I7,E13.5))
 1011 FORMAT(' RECYCLE FEED     ',(I7,1PE13.5,I7,E13.5,I7,E13.5,I7,E13.5
     > ,I7,E13.5))
 1012 FORMAT(' TOTAL NET FEED   ',(I7,1PE13.5,I7,E13.5,I7,E13.5,I7,E13.5
     > ,I7,E13.5))
 1013 FORMAT('0MAKEUP    STREAM',I3)
      END
CCONT --175    ***FUEL MANAGEMENT***   CALCULATE REACTOR CONTENTS
C     CALLED FROM/SECO
      SUBROUTINE CONT(NFM,ZONVOL,CON0,CONC,NJJR,NZINF, NSUBNO,XLODNG,
     > NIS,NJM,SUBCNC,LJJR, I3VX,I4VX,NVX,MVX,NRLVX, NISVX,NFSVX,NDSVX,
     > NIND,I5VX,NONNN,NSETVX,IFR)
C
      COMMON/FMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
C
      DIMENSION NFM(I3VX,I4VX),ZONVOL(MVX),CON0(NVX,MVX), CONC(NVX,MVX),
     >  NZINF(MVX,7), NSUBNO(MVX), XLODNG(NISVX,NDSVX), NIS(30),NJM(6,
     > NSETVX)
      DIMENSION SUBCNC(I5VX)
      DIMENSION NJJR(NONNN,NSETVX), LJJR(NISVX)
C
      DO 115 NSPEC = 1,I4VX
      IF (NCY.GT.NFM(10,NSPEC)) GO TO 115
      N1 = NFM(11,NSPEC)
      N2 = NFM(12,NSPEC)
      DO 100 I = 1,NCY
      IF (N1.EQ.NCY) GO TO 101
      IF (N1.GT.NCY) GO TO 115
      N1 = N1+N2
  100 CONTINUE
      GO TO 115
  101 CONTINUE
      NDPOT = NFM(8,NSPEC)
      DO 106 NGRS = 13,I3VX
      NRMV = NFM(NGRS,NSPEC)
      IF (NRMV.EQ.0) GO TO 107
      DO 105 M = 1,MVX
      IF (NRMV.NE.NZINF(M,7)) GO TO 105
      VOL = ZONVOL(M)
      NSET = NZINF(M,3)
      NSBN = NZINF(M,1)
      NUPZ = NJM(1,NSET)
      NCI = 1
      L = M
      IF (NSBN.GT.1) CALL SADD(M,NZINF,NJM,NSUBNO,MVX,NCI,NC,NSETVX,L)
      DO 104 NNN = 1,NISVX
      N1 = LJJR(NNN)
      N = NJJR(N1,NSET)
      IF (N.EQ.0) GO TO 104
      IF (NSBN.LE.1) T1 = CONC(N,M)*VOL
      IF (NSBN.LE.1) GO TO 103
      NCU = NC+N
      T1 = 0
      DO 102 NSB = 1,NSBN
      NSU = (NSB-1)*NUPZ+NCU
      T1 = T1+SUBCNC(NSU)
  102 CONTINUE
      T1 = T1/FLOAT(NSBN)*VOL
  103 CONTINUE
      XLODNG(NNN,NDPOT) = XLODNG(NNN,NDPOT)+T1
  104 CONTINUE
  105 CONTINUE
  106 CONTINUE
  107 CONTINUE
      NSTRT = NGRS+1
      NNO = 0
      DO 108 NN = NSTRT,I3VX
      NZ1 = NFM(NN,NSPEC)
      NZ2 = NFM(NN+1,NSPEC)
      IF (NZ1.EQ.0) NGRS = NGRS+1
      IF (NZ1.EQ.0) GO TO 109
      NGRS = NGRS+1
      NNO = NNO+1
      NXTR1(NNO) = NZ1
  108 CONTINUE
  109 CONTINUE
      IF (NNO.NE.0) GO TO 110
      IF (NZ2.EQ.0) GO TO 115
      GO TO 107
  110 CONTINUE
      DO 114 NNN = 1,NNO
      M = NXTR1(NNN)
      VOL = ZONVOL(M)
      NSET = NZINF(M,3)
      NSBN = NZINF(M,1)
      NUPZ = NJM(1,NSET)
      NCI = 1
      L = M
      IF (NSBN.GT.1) CALL SADD(M,NZINF,NJM,NSUBNO,MVX,NCI,NC,NSETVX,L)
      DO 113 NN = 1,NISVX
      N1 = LJJR(NN)
      N = NJJR(N1,NSET)
      IF (N.EQ.0) GO TO 113
      IF (NSBN.LE.1) T1 = CONC(N,M)*VOL
      IF (NSBN.LE.1) GO TO 112
      NCU = NC+N
      T1 = 0
      DO 111 NSB = 1,NSBN
      NSU = (NSB-1)*NUPZ+NCU
      T1 = T1+SUBCNC(NSU)
  111 CONTINUE
      T1 = T1/FLOAT(NSBN)*VOL
  112 CONTINUE
      XLODNG(NN,NDPOT) = XLODNG(NN,NDPOT)+T1
  113 CONTINUE
  114 CONTINUE
      IF (NZ2.NE.0) GO TO 107
  115 CONTINUE
      RETURN
      END
CDPOT --177    ***FUEL MANAGEMENT***   LOAD DISCHARGE POTS
C     CALLED FROM/MANG
      SUBROUTINE DPOT(NFM,NZINF, ZONVOL,NSUBNO, NJM,NIS, CONC,SUBCNC,
     > CODC,DISCHR, CEQ0,DLTMD,NPARNT,NDAUTR,DKAYC, NJJR,FPREC, DPQD,
     > NSPOT,NIND, LJJR,NCOO,SUBCN0, I3VX,I4VX,MVX,NRLVX,NVX,I5VX,
     > NISVX,NDSVX,I2VX,NFSVX,NRSVX,NPDVX,NONNN,NSETVX,I7VX,MAC)
C
      COMMON/FMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
C
      DIMENSION NFM(I3VX,I4VX), ZONVOL(MVX),NSUBNO(MVX), NZINF(MVX,7),
     > NJM(6,NSETVX),NIS(30),CONC(NVX,MVX), SUBCNC(I5VX),CODC(NISVX,
     > NDSVX,I2VX),DISCHR(NISVX,NDSVX), CEQ0(NISVX),DLTMD(NDSVX),
     > NPARNT(NPDVX),NDAUTR(NPDVX), DKAYC(NPDVX), FPREC(NISVX,NDSVX),
     > DPQD(NDSVX,2)
      DIMENSION NJJR(NONNN,NSETVX),NCOO(4,NONNN),LJJR(NISVX)
      DIMENSION SUBCN0(I7VX)
      DIMENSION MAC(24)
C
      MAC13 = MAC(1)
C***********************************************************************
      JOUT = IX(10)
C***********************************************************************
      DO 138 NSPEC = 1,I4VX
      IF (NCY.GT.NFM(10,NSPEC)) GO TO 138
      N1 = NFM(11,NSPEC)
      N2 = NFM(12,NSPEC)
      DO 100 I = 1,NCY
      IF (N1.EQ.NCY) GO TO 101
      IF (N1.GT.NCY) GO TO 138
      N1 = N1+N2
  100 CONTINUE
      GO TO 138
  101 NDPOT = NFM(8,NSPEC)
      NFPOT = NFM(2,NSPEC)
      IF (MAC13.LT.1) GO TO 102
      WRITE(IOUT,1000)NSPEC
      IF (NFM(2,NSPEC).EQ.0) GO TO 102
      WRITE(IOUT,1001)NDPOT,NSPOT
  102 CONTINUE
C*****GROSS REMOVALS (ZONECLASS)
      DO 108 NGRS = 13,I3VX
      NRMV = NFM(NGRS,NSPEC)
      IF (NRMV.EQ.0) GO TO 109
      IF (MAC13.LT.1) GO TO 103
      WRITE(IOUT,1002)
  103 CONTINUE
      DO 107 M = 1,MVX
      IF (NRMV.NE.NZINF(M,7)) GO TO 107
      VUSE = ZONVOL(M)
      NSET = NZINF(M,3)
      IF (NSUBNO(M).GT.0) VUSE = VUSE/FLOAT(NZINF(M,1))
      NCI = 0
      L = M
      IF (NSUBNO(M).GT.0) CALL SADD(M,NZINF,NJM,NSUBNO,MVX,NCI,NC,
     > NSETVX,L)
      DO 106 NUCT = 1,NISVX
      N1 = LJJR(NUCT)
      NUC = NJJR(N1,NSET)
      IF (NUC.EQ.0) GO TO 106
      IF (NSUBNO(M).NE.0) GO TO 104
      CUSE = CONC(NUC,M)*VUSE
      GO TO 105
  104 CONTINUE
      NCU = NC+NUC
      CUSE = SUBCNC(NCU)*VUSE
  105 CONTINUE
      CODC(NUCT,NDPOT,NSPOT) = CODC(NUCT,NDPOT,NSPOT)+CUSE
      DISCHR(NUCT,NDPOT) = DISCHR(NUCT,NDPOT)+CUSE
  106 CONTINUE
      IF (MAC13.LT.1) GO TO 107
      WRITE(IOUT,1003)NRMV,M,NSUBNO(M),VUSE
  107 CONTINUE
  108 CONTINUE
C*****ZONE REMOVALS
  109 CONTINUE
      NSTRT = NGRS+1
      NNO = 0
      DO 110 NN = NSTRT,I3VX
      NZ1 = NFM(NN,NSPEC)
      NZ2 = NFM(NN+1,NSPEC)
      IF (NZ1.EQ.0) NGRS = NGRS+1
      IF (NZ1.EQ.0) GO TO 112
      NGRS = NGRS+1
      NNO = NNO+1
      NXTR1(NNO) = NZ1
  110 CONTINUE
  111 WRITE(IOUT,1004)(NXTR1(N),N=1,NNO)
      return
  112 CONTINUE
      IF (NNO.NE.0) GO TO 113
      IF (NZ2.EQ.0) GO TO 137
      GO TO 109
  113 CONTINUE
      IF (MAC13.LT.1) GO TO 114
      WRITE(IOUT,1005)(NXTR1(NNNN),NNNN = 1,NNO)
  114 CONTINUE
      M = NXTR1(NNO)
      VUSE = ZONVOL(M)
      NSET = NZINF(M,3)
      IF (NSUBNO(M).GT.0) VUSE = VUSE/FLOAT(NZINF(M,1))
      NCI = 0
      L = M
      IF (NSUBNO(M).GT.0) CALL SADD(M,NZINF,NJM,NSUBNO,MVX,NCI,NC,
     > NSETVX,L)
      IF (MAC13.LT.1) GO TO 115
      WRITE(IOUT,1006)M,NSUBNO(M),VUSE
  115 CONTINUE
      IF (NFM(2,NSPEC).NE.0) GO TO 119
      IF (NSUBNO(M).EQ.0) GO TO 117
      NCI = 1
      L = M
      CALL SADD(M,NZINF,NJM,NSUBNO,MVX,NCI,NC,NSETVX,L)
      NN = NJM(1,NSET)
      NSUB = NZINF(M,1)
      NNT = NN*NSUB
      DO 116 NUCT = 1,NNT
      NCU = NC+NUCT
      SUBCN0(NUCT) = SUBCNC(NCU)
  116 CONTINUE
      GO TO 123
  117 CONTINUE
      DO 118 NUCT = 1,NVX
      SUBCN0(NUCT) = CONC(NUCT,M)
  118 CONTINUE
      GO TO 123
  119 CONTINUE
      DO 122 NUCT = 1,NISVX
      N1 = LJJR(NUCT)
      NUC = NJJR(N1,NSET)
      IF (NUC.EQ.0) GO TO 122
      IF (NSUBNO(M).NE.0) GO TO 120
      CUSE = CONC(NUC,M)*VUSE
      GO TO 121
  120 CONTINUE
      NCU = NC+NUC
      CUSE = SUBCNC(NCU)*VUSE
  121 CONTINUE
      IF (NFM(2,NSPEC).EQ.0) GO TO 122
      CODC(NUCT,NDPOT,NSPOT) = CODC(NUCT,NDPOT,NSPOT)+CUSE
      DISCHR(NUCT,NDPOT) = DISCHR(NUCT,NDPOT)+CUSE
  122 CONTINUE
  123 CONTINUE
  124 IF (NNO.LE.1) GO TO 136
C*****INTERCHANGE CONCENTRATIONS
      NFM2 = 0
      M1 = 2
  125 CONTINUE
      M2 = NNO-M1+2
      M3 = M2-1
      M = NXTR1(M2)
      MM = NXTR1(M3)
  126 CONTINUE
      NSUBM = NSUBNO(M)
      NSUBMM = NSUBNO(MM)
      NSET1 = NZINF(M,3)
      NSET2 = NZINF(MM,3)
      T1 = (ZONVOL(MM)/NZINF(MM,1))*(NZINF(M,1)/ZONVOL(M))
      NCI = 0
      NCM = 0
      L = M
      IF (NSUBM.GT.0) CALL SADD(M,NZINF,NJM,NSUBNO,MVX,NCI,NCM, NSETVX,
     > L)
      NCMM = 0
      IF (NFM2.EQ.0) GO TO 127
      L = 1
      IF (NSUBMM.GT.0) CALL SADD(MM,NZINF,NJM,NSUBNO,MVX,NCI,NCMM,
     > NSETVX,L)
      GO TO 128
  127 CONTINUE
      L = M
      IF (NSUBMM.GT.0) CALL SADD(MM,NZINF,NJM,NSUBNO,MVX,NCI,NCMM,
     > NSETVX,L)
  128 CONTINUE
      DO 132 NON = 1,NONNN
      NCO1 = NCOO(1,NON)
      IF (NCO1.GT.4) GO TO 132
      N1 = NJJR(NON,NSET1)
      N2 = NJJR(NON,NSET2)
      IF ((N1.EQ.0).OR.(N2.EQ.0)) GO TO 132
      NUCM = NCM+N1
      NUCMM = NCMM+N2
      IF ((NSUBM.EQ.0).AND.(NSUBMM.EQ.0)) GO TO 131
      IF ((NSUBM.GT.0).AND.(NSUBMM.GT.0)) GO TO 130
      IF ((NSUBM.GT.0).AND.(NSUBMM.EQ.0)) GO TO 129
C*****SUBZONES   M=NO,   MM=YES.
      CUSE = SUBCNC(NUCMM)*T1
      IF (NFM2.GT.0) CUSE = SUBCN0(NUCMM)*T1
      CONC(N1,M) = CUSE
      GO TO 132
  129 CONTINUE
C*****SUBZONES   M=YES,   MM=NO.
      CUSE = CONC(N2,MM)*T1
      IF (NFM2.GT.0) CUSE = SUBCN0(N2)*T1
      SUBCNC(NUCM) = CUSE
      GO TO 132
  130 CONTINUE
C*****SUBZONES   M=YES,   MM=YES.
      CUSE = SUBCNC(NUCMM)*T1
      IF (NFM2.GT.0) CUSE = SUBCN0(NUCMM)*T1
      SUBCNC(NUCM) = CUSE
      GO TO 132
  131 CONTINUE
C*****SUBZONES   M=NO,   MM=NO.
      CUSE = CONC(N2,MM)*T1
      IF (NFM2.GT.0) CUSE = SUBCN0(N2)*T1
      CONC(N1,M) = CUSE
  132 CONTINUE
  133 CONTINUE
      IF (NFM2.GT.0) GO TO 135
      M1 = M1+1
      IF (M1.GT.NNO) GO TO 134
      GO TO 125
  134 CONTINUE
      IF (NFM(2,NSPEC).GT.0) GO TO 135
      M = NXTR1(1)
      MM = NXTR1(NNO)
      NFM2 = 1
      GO TO 126
  135 CONTINUE
      IF (MAC13.LT.1) GO TO 136
      WRITE(IOUT,1007)
      IF (NFM(2,NSPEC).GT.0) GO TO 136
      WRITE(IOUT,1008)M,MM
  136 CONTINUE
      IF (NZ2.NE.0) GO TO 109
  137 CONTINUE
  138 CONTINUE
      DO 141 NDPOT = 1,NDSVX
      IF (DLTMD(NDPOT).EQ.0.0) GO TO 139
      IF (IPDVX.EQ.0) GO TO 139
C*****APPLY DECAY EQUATIONS TO MATERIAL IN SUBPOT
      CALL DCAX(CODC,CEQ0,DLTMD(NDPOT) ,NDPOT,NSPOT,NPARNT,NDAUTR,
     > DKAYC,NIS, NISVX,NDSVX,I2VX,NPDVX,NVX,NRLVX)
  139 CONTINUE
C*****APPLY FRACTION PROCESSING RECOVERIES
      XMUT = DPQD(NDPOT,2)
      IF (XMUT.EQ.0) XMUT = 1.0
      DO 140 N = 1,NISVX
      CODC(N,NDPOT,NSPOT) = CODC(N,NDPOT,NSPOT)*XMUT*FPREC(N,NDPOT)
  140 CONTINUE
      IF (MAC13.LT.1) GO TO 141
      WRITE(IOUT,1009)NDPOT,DLTMD(NDPOT),XMUT,((CODC(N,NDPOT,NS), N=1,
     > NISVX),NS=1,I2VX)
  141 CONTINUE
      RETURN
 1000 FORMAT('0'/'0UNLOADING REACTOR FOR MANAGEMENT INPUT SPECIFICATION'
     > ,I3)
 1001 FORMAT('0'/'0UNLOADING TO DISCHARGE STREAM',I3,' SUBSTREAM',I3)
 1002 FORMAT('0GROSS SPECIFICATIONS-CLASS ZONE SUB-ZONE     VOLUME')
 1003 FORMAT(' UNLOADING',I15,I6,I7,1PE17.5)
 1004 FORMAT('0ERROR STOP 907'/(1X,30I4))
 1005 FORMAT('0ZONES SPECIFICATION - ZONES INVOLVED',20I4/(1X,30I4))
 1006 FORMAT('0        UNLOADING ZONE',I4,'    SUBZONE',I4,'    VOLUME',
     > 1PE13.5)
 1007 FORMAT('0ZONE CONCENTRATIONS HAVE BEEN INTERCHANGED')
 1008 FORMAT('0ZONE',I3,' HAS BEEN LOADED FROM ZONE',I3,' (CLOSED-LOOP S
     >PECIFICATION)')
 1009 FORMAT('0MATERIAL IN DISCHARGE STREAM',I3,' HAS BEEN DECAYED WITH'
     > ,1PE13.5,' DAYS'/' DPQD2=',0PF6.3,' AND FRACTION PROCESSING RECOV
     >ERIES APPLIED. STREAM CONTENTS FOLLOWS'/(1X,1P9E13.5))
      END
CMBED --186    ***FUEL MANAGEMENT***   PROCESS AND EDIT MASS BALANCES
C     CALLED FROM/MNGE
      SUBROUTINE MBED(FRFEED,REFEED,TOFEED,XLODNG,DISCHR,FRFEEX,NRSVX,
     > LJJR,NIND,IDDN,XMAS, NFSVX,NDSVX, NISVX,NVX,NONNN,ITMIS,AITMIS,
     > MAC,TOFF,TORF,TOF,TOL,TOD,TOIL)
C
      DOUBLE PRECISION FLOTR
C
      COMMON/FMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
      COMMON/CMARY/MEMARY,IMN,MNI,IJLMN,NMLJI,IY(50),AX(50),TITL(36)
      COMMON/COOPD/FLOTR(200),INTGR(100)
C
      DIMENSION FRFEED(NISVX,NFSVX),REFEED(NISVX,NRSVX), TOFEED(NISVX,
     > NRSVX),XLODNG(NISVX,NDSVX), DISCHR(NISVX,NDSVX),FRFEEX(NISVX,
     > NFSVX)
      DIMENSION LJJR(NISVX),IDDN(NONNN)
      DIMENSION XMAS(NONNN),ITMIS(20),AITMIS(20)
      DIMENSION TOFF(NISVX),TORF(NISVX),TOF(NISVX),TOL(NISVX),
     > TOD(NISVX),TOIL(NISVX)
      DIMENSION MAC(24)
C
      REWIND IO5
      IF (MAC(1).GE.0) GO TO 111
      IF (MAC(2).EQ.0) GO TO 100
      IF (INTGR(55).EQ.0) GO TO 111
  100 CONTINUE
      WRITE(IOUT,1002)
      DO 109 NCYC = 1,200
      WRITE(IOUT,1003)NCYC
      IF (NCYC.GT.1) GO TO 101
      READ(IO5)(NXTR1(N),N=1,100),(XTR1(N),N=1,100)
      READ(IO5)((FRFEEX(N,NF),N=1,NISVX),NF=1,NFSVX), ((X,N=1,NISVX),NF=
     >  1,NRSVX),((X,N=1,NISVX),NF=1,NRSVX)
      READ(IO5)(TOIL(N),N=1,NISVX)
  101 CONTINUE
      READ(IO5)((XLODNG(N,ND),N=1,NISVX),ND=1,NDSVX), ((DISCHR(N,ND),N=
     > 1,NISVX),ND=1,NDSVX)
      READ(IO5)(TOL(N),N=1,NISVX),(TOD(N),N=1,NISVX)
      READ(IO5)(ITMIS(N),N=1,20),(AITMIS(N),N=1,20)
      IF (ITMIS(1).EQ.-1234) GO TO 102
      READ(IO5)((FRFEED(N,NF),N=1,NISVX),NF=1,NFSVX), ((REFEED(N,NR),N=
     > 1,NISVX),NR=1,NRSVX), ((TOFEED(N,NR),N=1,NISVX),NR=1,NRSVX)
      READ(IO5)(TOFF(N),N=1,NISVX),(TORF(N),N=1,NISVX), (TOF(N),N=1,
     > NISVX)
  102 CONTINUE
      IF (NCYC.GT.1) GO TO 104
      DO 103 NF = 1,NFSVX
      WRITE(IOUT,1004)NF
      WRITE(IOUT,1006)(IDDN(LJJR(N)),FRFEEX(N,NF),N=1,NISVX)
  103 CONTINUE
  104 CONTINUE
      DO 105 NF = 1,NDSVX
      WRITE(IOUT,1010)NF
      WRITE(IOUT,1009)(IDDN(LJJR(N)),XLODNG(N,NF),N=1,NISVX)
      WRITE(IOUT,1008)(IDDN(LJJR(N)),DISCHR(N,NF),N=1,NISVX)
  105 CONTINUE
      IF (ITMIS(1).EQ.-1234) GO TO 110
      DO 106 NF = 1,NFSVX
      WRITE(IOUT,1004)NF
      WRITE(IOUT,1011)(IDDN(LJJR(N)),FRFEED(N,NF),N=1,NISVX)
  106 CONTINUE
      DO 107 NF = 1,NRSVX
      WRITE(IOUT,1014)NF
      WRITE(IOUT,1012)(IDDN(LJJR(N)),REFEED(N,NF),N=1,NISVX)
      WRITE(IOUT,1013)(IDDN(LJJR(N)),TOFEED(N,NF),N=1,NISVX)
  107 CONTINUE
      WRITE(IOUT,1000)
      WRITE(IOUT,1001)
      IF (NCY.GT.1) GO TO 108
      WRITE(IOUT,1006)(IDDN(LJJR(N)),TOIL(N),N=1,NISVX)
  108 CONTINUE
      WRITE(IOUT,1009)(IDDN(LJJR(N)),TOL (N),N=1,NISVX)
      WRITE(IOUT,1008)(IDDN(LJJR(N)),TOD (N),N=1,NISVX)
      WRITE(IOUT,1011)(IDDN(LJJR(N)),TOFF(N),N=1,NISVX)
      WRITE(IOUT,1012)(IDDN(LJJR(N)),TORF(N),N=1,NISVX)
      WRITE(IOUT,1013)(IDDN(LJJR(N)),TOF (N),N=1,NISVX)
  109 CONTINUE
  110 CONTINUE
      REWIND IO5
  111 CONTINUE
      RETURN
 1000 FORMAT('0**********TOTALS SUMMED OVER STREAMS')
 1001 FORMAT(1X)
 1002 FORMAT('1')
 1003 FORMAT('0'/'0ACCOUNTING INFORMATION (MASSES IN KG) FOLLOWS FOR CYC
     >LE',I4)
 1004 FORMAT('0FRESH FUEL FEED STREAM',I3)
 1005 FORMAT(1X)
 1006 FORMAT(' INITIAL INVENTORY',(I7,1PE13.5,I7,E13.5,I7,E13.5,I7,E13.5
     > ,I7,E13.5))
 1007 FORMAT(' REMOVALS         ',(I7,1PE13.5,I7,E13.5,I7,E13.5,I7,E13.5
     > ,I7,E13.5))
 1008 FORMAT(' DISCHARGES       ',(I7,1PE13.5,I7,E13.5,I7,E13.5,I7,E13.5
     > ,I7,E13.5))
 1009 FORMAT(' LOADING          ',(I7,1PE13.5,I7,E13.5,I7,E13.5,I7,E13.5
     > ,I7,E13.5))
 1010 FORMAT('0DISCHARGE STREAM',I3)
 1011 FORMAT(' FRESH FEED       ',(I7,1PE13.5,I7,E13.5,I7,E13.5,I7,E13.5
     > ,I7,E13.5))
 1012 FORMAT(' RECYCLE FEED     ',(I7,1PE13.5,I7,E13.5,I7,E13.5,I7,E13.5
     > ,I7,E13.5))
 1013 FORMAT(' TOTAL NET FEED   ',(I7,1PE13.5,I7,E13.5,I7,E13.5,I7,E13.5
     > ,I7,E13.5))
 1014 FORMAT('0MAKEUP    STREAM',I3)
      END
CGEOM --027 ***CITATION*** READS INPUT SECTION 003/ CF-INPT
      SUBROUTINE GEOMCIT(DND)
C
C     DOUBLE PRECISION HOLBND
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
C
      DIMENSION DND(1)
      DIMENSION B(6)
      DIMENSION HOLBND(6)
      CHARACTER*8 HOLBND
C
      DATA HOLBND/8HLEFT    ,8HTOP     ,8HRIGHT   ,8HBOTTOM  ,
     > 8HFRONT   ,8HBACK    /
C
  100 READ(IOIN,1000)(NUAC(I),I=1,24)
C     FORCE KEFF TO BE CALCULATED WITH NEUTRON BALANCE INSTEAD
C     OF WITH RESIDUES.
      NUAC(3) = 0
      IF (NUAC(5)-5) 101,101,102
  101 NUAC(20) = 1
      NUAC(12) = 1
      NUAC(14) = 1
  102 CONTINUE
      IX(72) = 0
      IF (NUAC(11).GE.0) GO TO 103
      NUAC(13) = NUAC(11)
      IX(72) = 1
      NUAC(8) = 0
  103 CONTINUE
      IF (NUAC(13).LE.1) GO TO 104
      IX(72)=NUAC(13)
      NUAC(8)=0
  104 CONTINUE
      IF ((NUAC(12).LT.0).OR.(NUAC(14).LT.0).OR.(NUAC(15).LT.0)
     > .OR.(NUAC(16).LT.0)) NER(30) = 30
      IF (IX(72).NE.1) GO TO 105
      N = NUAC(5)
      IF ((N.EQ.2).OR.(N.EQ.3).OR.(N.EQ.7).OR.(N.EQ.9).OR.(N.EQ.13))
     > NER(30) = 30
  105 CONTINUE
      INRB=IX(72)+1
C******************CONVERGENCE CRITERIA*********************************
      READ(IOIN,1001)(EPI(I),I=1,6)
      IF (EPI(1).LE.0) EPI(1) = 0.0001
      IF (EPI(2).LE.0) EPI(2) = 0.00001
      IF (EPI(3).LE.0) EPI(3) = 0.0001
      IF (EPI(4).LE.0) EPI(4)=0.0001
      IF (EPI(5).LE.0) EPI(5)=0.0001
      EPI1 = EPI(1)
      EPI2 = EPI(2)
      READ(IOIN,1001)(XMIS(I),I=1,6)
      IF (XMIS(3)) 107,106,107
  106 XMIS(3) = 1.0
  107 IF (XMIS(4)) 109,108,109
  108 XMIS(4) = 1.0
  109 IF (XMIS(5)) 111,110,111
  110 XMIS(5) = 1.0
  111 CONTINUE
      SPARE(100) = XMIS(3)
      IX(31) = 0
      IF (XMIS(6)) 113,113,112
  112 IX(31) = 1
  113 CONTINUE
      WRITE(IOUT,1002)
      WRITE(IOUT,1003)(NUAC(I),I=1,24)
      WRITE(IOUT,1008)(EPI (I),I=1,6)
      WRITE(IOUT,1008)(XMIS(I),I=1,6)
      IX(26) = NUAC(5)
      IF (NUAC(5).GT.5) GO TO 114
      IX(25) = 1
      GO TO 116
  114 IF (NUAC(5).GT.10) GO TO 115
      IX(25) = 2
      GO TO 116
  115 IX(25) = 3
  116 CONTINUE
      I1 = 0
      I2 = 0
      IF (XMIS(1).LT.0.0) I1 = IFIX(-XMIS(1) + 0.01)
      IF (XMIS(2).LT.0.0) I2 = IFIX(-XMIS(2) + 0.01)
      I3 = MAX0(I1,I2)
      IF (I3.LE.0) GO TO 117
      IO19 = IX(86)
      REWIND IO19
      REWIND IO3
      WRITE(IO3) (DND(K),K=1,I3)
      REWIND IO3
  117 CONTINUE
      IF (XMIS(1)) 118,132,133
  118 KMX = I1
      IGOTO = IX(25) - 2
      IF (IGOTO) 119,120,126
  119 IF (IX(72).GT.0) GO TO 144
      I = 1
      READ(IOIN,1001) (DND(K),K=1,KMX)
      WRITE(IO19) I,(DND(K),K=1,KMX)
      WRITE(IOUT,1004) HOLBND(I),(DND(K),K=1,KMX)
      I = 3
      READ(IOIN,1001) (DND(K),K=1,KMX)
      WRITE(IO19) I,(DND(K),K=1,KMX)
      WRITE(IOUT,1004) HOLBND(I),(DND(K),K=1,KMX)
      GO TO 144
  120 DO 125 I = 1,4
      GO TO (124,121,122,123),INRB
  121 IF (I.EQ.1.OR.I.EQ.3) GO TO 125
      GO TO 124
  122 IF (I.EQ.3.OR.I.EQ.4) GO TO 125
      GO TO 124
  123 IF (I.EQ.3) GO TO 125
  124 CONTINUE
      READ(IOIN,1001) (DND(K),K=1,KMX)
      WRITE(IO19) I,(DND(K),K=1,KMX)
      WRITE(IOUT,1004) HOLBND(I),(DND(K),K=1,KMX)
  125 CONTINUE
      GO TO 144
  126 DO 131 I = 1,6
      GO TO (130,127,128,129),INRB
  127 IF (I.EQ.1.OR.I.EQ.3) GO TO 131
      GO TO 130
  128 IF (I.EQ.3.OR.I.EQ.4) GO TO 131
      GO TO 130
  129 IF (I.EQ.3) GO TO 131
  130 CONTINUE
      READ(IOIN,1001) (DND(K),K=1,KMX)
      WRITE(IO19) I,(DND(K),K=1,KMX)
      WRITE(IOUT,1004) HOLBND(I),(DND(K),K=1,KMX)
  131 CONTINUE
      GO TO 144
  132 T1 = 0.4692
      GO TO 134
  133 T1 = XMIS(1)
  134 DO 137 I = 11,16
      II = I-10
      IF (NUAC(I)) 136,135,136
  135 B(II) = T1
      GO TO 137
  136 B(II) = 0.0
  137 CONTINUE
      WRITE(IOUT,1009)
      GO TO (138,139,140,142),INRB
  138 WRITE(IOUT,1005) B(1),B(2),B(3),B(4),B(5),B(6)
      GO TO 143
  139 WRITE(IOUT,1010) B(2),B(4),B(5),B(6)
      GO TO 143
  140 CONTINUE
      IF ((NUAC(5).EQ.10).OR.(NUAC(5).EQ.14)) GO TO 141
      WRITE(IOUT,1011)B(1),B(2),B(5),B(6)
      GO TO 143
  141 CONTINUE
      WRITE(IOUT,1012)B(1),B(2),B(5),B(6)
      GO TO 143
  142 WRITE(IOUT,1013) B(1),B(2),B(4),B(5),B(6)
  143 CONTINUE
  144 IF (NUAC(17)) 150,150,145
  145 IF (XMIS(2)) 146,147,148
  146 KMX = I2
      I = 7
      READ(IOIN,1001) (DND(K),K=1,KMX)
      WRITE(IO19) I,(DND(K),K=1,KMX)
      WRITE(IOUT,1006) NUAC(17),(DND(K),K=1,KMX)
      GO TO 150
  147 T1 = 0.4692
      GO TO 149
  148 T1 = XMIS(2)
  149 WRITE(IOUT,1007)NUAC(17),T1
  150 CONTINUE
      IF (I3.LE.0) GO TO 151
      REWIND IO19
      READ(IO3) (DND(K),K=1,I3)
      REWIND IO3
  151 CONTINUE
  152 RETURN
 1000 FORMAT(24I3)
 1001 FORMAT(6E12.0)
 1002 FORMAT('0'/'0NEUTRON FLUX PROBLEM DESCRIPTION - SECTION 003')
 1003 FORMAT('0',24I4)
 1004 FORMAT(1X,A8,1P6E14.6/(1X,8X,1P6E14.6))
 1005 FORMAT(1X,1P6E14.6)
 1006 FORMAT('0'/'0ROD BND. CONSTANTS FOR ZONE',I3/(1X,1P6E14.6))
 1007 FORMAT('0'/'0ROD BND. CONSTANT FOR ALL GROUPS IN ZONE',I3,'  IS',
     > 1PE14.6)
 1008 FORMAT(1X,1P6E14.6)
 1009 FORMAT('0'/'0LEFT,TOP,RIGHT,BOTTOM,FRONT,BACK BOUNDARY CONDITIONS
     >ARE')
 1010 FORMAT(7X,'PERIODIC',1PE14.6,6X,'PERIODIC',1P3E14.6)
 1011 FORMAT(1X,1P2E14.6,'  ROTATION(90)  ROTATION(90)',1P2E14.6)
 1012 FORMAT(1X,1P2E14.6,'  ROTATION(60)  ROTATION(60)',1P2E14.6)
 1013 FORMAT(1X,1P2E14.6,' ROTATION(180)',1P3E14.6)
      END
CSHIN --070    ***FUEL MANAGEMENT***   USED BY SHUF
C     CALLED FROM/SHUF
      SUBROUTINE SHIN(MAC,FMC,FDM)
C
      DOUBLE PRECISION FLOTR
C
      COMMON/GMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
      COMMON/GMIMS/IB(100),MEMVRY,NFSVX,NRSVX,NDSVX,NISVX,NPDVX,NFMVX,
     > MVX,NVX,NRLVX,I1VX,I2VX,I3VX,I4VX,I5VX,I6VX,I7VX,I8VX,I9VX,I10VX,
     >  NONNN,NSETVX
      COMMON/COOPD/FLOTR(200),INTGR(100)
C
      DIMENSION MAC(24),FMC(24),FDM(100)
C***********************************************************************
      JOUT = IX(10)
C***********************************************************************
      DO 100 I = 1,100
      FDM(I) = 1.0
  100 CONTINUE
      READ(IOIN,1006)(MAC(I),I=1,24)
      READ(IOIN,1001)(FMC(I),I=1,12)
      IF (FMC(8).EQ.0.0) FMC(8) = 0.01
      IF (FMC(9).EQ.0.0) FMC(9) = 0.001
      IF (FMC(10).EQ.0.0) FMC(10) = 1.0
      IF (FMC(11).EQ.0.0) FMC(11) = 1.0
      MAC13 = MAC(13)
      IF (MAC13.EQ.0) GO TO 109
      GO TO 102
  101 CONTINUE
      WRITE(IOUT,1000)
      return
  102 CONTINUE
      DO 103 N = 1,100
      XTR1(N) = 0.0
  103 CONTINUE
      I2 = 0
      DO 105 NN = 1,9
      I1 = I2+1
      I2 = I2+12
      IF (I2.GT.101) I2 = 101
      READ(IOIN,1002)(XTR1(I),I=I1,I2)
      DO 104 NNN = I1,I2
      IF (XTR1(NNN).EQ.0.0) GO TO 106
  104 CONTINUE
      IF (I2.EQ.101) GO TO 101
  105 CONTINUE
  106 CONTINUE
      T1 = XTR1(1)
      FDM(1) = T1
      IF (T1.EQ.0) GO TO 101
      DO 108 N = 2,100
      IF (XTR1(N).EQ.0.0) GO TO 107
      T1 = XTR1(N)
  107 CONTINUE
      FDM(N) = T1
  108 CONTINUE
  109 CONTINUE
      WRITE(IOUT,1003)(MAC(I),I=1,24)
      WRITE(IOUT,1004)(FMC(I),I=1,12)
      DO 110 I = 1,24
      IP20 = I+20
      INTGR(IP20) = MAC(I)
  110 CONTINUE
      INTGR(67) = MAC(17)
      INTGR(37) = IABS(MAC(17))
      DO 111 I = 1,12
      IP100 = I+100
      FLOTR(IP100) = FMC(I)
  111 CONTINUE
      IX(18) = 0
      IF (MAC(15).EQ.0) GO TO 112
      IF (MAC(16).LE.0) IX(18) = 1
      IF (MAC(17).EQ.0) IX(18) = 1
      IF (MAC(16).GT.6) IX(18) = 1
      IF ((MAC(16).EQ.1).AND.(FMC(1).LE.0.0)) IX(18) = 1
      IF ((MAC(16).EQ.3).AND.(FMC(3).LE.0.0)) IX(18) = 1
      IF ((MAC(16).EQ.4).AND.(FMC(4).LE.0.0)) IX(18) = 1
      IF (IX(18).GT.0) GO TO 112
      MAC16 = MAC(16)
      FLOTR(20) = FMC(MAC16)
      FLOTR(22) = FMC(10)
  112 CONTINUE
      IF (MAC13.EQ.0) GO TO 113
      WRITE(IOUT,1005)(FDM(I),I=1,I2)
  113 CONTINUE
      REWIND IO2
      I3VX = 0
      I4VX = 0
      WRITE(IOUT,1007)
  114 READ(IOIN,1006)(NXTR1(I),I=1,24)
      IF (NXTR1(1).EQ.0) GO TO 120
      NT1 = 12
      NSTR = 0
      DO 115 N = 13,23
      IF ((NXTR1(N).EQ.0).AND.(NXTR1(N+1).EQ.0)) GO TO 118
      NT1 = NT1+1
  115 CONTINUE
      NT1 = NT1+1
      N2 = 24
  116 N1 = N2+1
      N2 = N2+24
      READ(IOIN,1006)(NXTR1(I),I=N1,N2)
      NSTR = 0
      IF ((NXTR1(N1-1).EQ.0).AND.(NXTR1(N1).EQ.0)) NSTR = 1
      IF ((NXTR1(N1-1).EQ.0).AND.(NXTR1(N1).EQ.0)) GO TO 118
      NL = N2-1
      DO 117 N =N1,NL
      IF ((NXTR1(N).EQ.0).AND.(NXTR1(N+1).EQ.0)) GO TO 118
      NT1 = NT1+1
  117 CONTINUE
      NT1 = NT1+1
      GO TO 116
  118 CONTINUE
      I4VX = I4VX+1
      NT1 = NT1+2-NSTR
      NT1 = NT1+1
      NXTR1(NT1) = 0
      I3VX = MAX0(I3VX,NT1)
      NXTR2(I4VX) = NT1
      I2 = 2
      IREC = 0
      CALL GRIT(NXTR1(1),NT1,IREC,IO2,I2)
      WRITE(IOUT,1008)(NXTR1(N),N=1,NT1)
      IF (NT1.LE.200) GO TO 114
      WRITE(IOUT,119)
  119 FORM AT(1H0,'ERROR STOP 902')
      return
  120 CONTINUE
      IFMVX = I3VX*I4VX
      IF (I3VX.EQ.0) I3VX = 1
      IF (I4VX.EQ.0) I4VX = 1
      NFMVX = I3VX*I4VX
      REWIND IO2
      RETURN
 1000 FORMAT('0ERROR STOP 902')
 1001 FORMAT(6E12.0)
 1002 FORMAT(12E6.0)
 1003 FORMAT('0CARD 2'/(1X,30I4))
 1004 FORMAT('0CARDS 3 AND 4'/(1X,1P6E13.5))
 1005 FORMAT('0CARDS 5+ OR DEFAULT'/(1X,1P9E13.5))
 1006 FORMAT(24I3)
 1007 FORMAT('0CARDS 6+')
 1008 FORMAT(1X,30I4)
      END
CFINS --099 ***CITATION*** CALC. ROD LOSSES FOR 1,2-D /CF-DNSD,WFLX
      SUBROUTINE FINS(P2,B2,NRGN,DCONB,DCONR,SCAC,XL,IVX,JVX,KVX, LVX,
     > IVXP1,JVXP1,IVZ,IOVX,IOVZ,PVOL,NCOMP,MVX)
C
      DOUBLE PRECISION P2
      DOUBLE PRECISION
     >       SUMXI,TPTSA,XADB,XPDB,XS1DB,XS2DB, TL,XRDB,CS1S,CS2S,XLL1,
     > D8,XADX,YADX, XLL2,XLL3,XLL4,XLL5,XLL6,XLEK,B2LK,B3LK,B4LK,B5LK,
     > D1,D2,D3,D4,D5, D6,D7,YADB,YPDB,YLEK,YS1S,YS2S,YS1DB,YS2DB,YRDB,
     > SPR50,XLAST
      COMMON/ADUBP/SUMXI,TPTSA,XADB,XPDB,XS1DB,XS2DB, TL,XRDB,CS1S,CS2S,
     >  XLL1,D8,XADX,YADX, XLL2,XLL3,XLL4,XLL5,XLL6,XLEK,B2LK,B3LK,B4LK,
     >  B5LK,D1,D2,D3,D4,D5, D6,D7,YADB,YPDB,YLEK,YS1S,YS2S,YS1DB,YS2DB,
     >  YRDB,SPR50,XLAST
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XELK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SAMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
C
      DIMENSION P2(JVX,IVX,KVX), NRGN(JVX,IVX),DCONB(JVX,IVXP1,IOVX),
     > DCONR(JVXP1,IVZ,IOVZ),B2(MVX,KVX),SCAC(KVX,MVX,KVX),XL(6,KVX)
      DIMENSION PVOL(LVX),NCOMP(LVX)
C     INRB = 1  ORDINARY
C     INRB = 2  PERIODIC(REPEATING)
C     INRB = 3  90 DEGREE ROTATIONAL
C     INRB = 4  180 DEGREE ROTATIONAL
      INRB = IX(72) + 1
      N = IX(20)
  100 DO 138 I = 1,IMAX
      DO 137 J = 1,JMAX
      L = NRGN(J,I)
      M = NCOMP(L)
      IF (P2(J,I,K)) 103,101,103
  101 IF (XMIS(2).GE.0) GO TO 136
      TT5 = 0.0
      DO 102 KK = 1,KMAX
      TT5 = TT5 + SCAC(KK,M,K)*P2(J,I,KK)*PVOL(L)
  102 CONTINUE
      B2(M,K) = B2(M,K) + TT5
      GO TO 136
  103 IF (I-1) 107,107,104
  104 CONTINUE
      IF (NUAC(5).NE.10) GO TO 105
      IF (P2(J+1,I-1,K).NE.0.0) GO TO 107
      LT = NRGN(J+1,I-1)
      GO TO 106
  105 CONTINUE
      IF (P2(J,I-1,K).NE.0.0) GO TO 107
      LT = NRGN(J,I-1)
  106 CONTINUE
      MT = NCOMP(LT)
      B2(MT,K) = B2(MT,K) + P2(J,I,K)*DCONB(J,I,N)
  107 IF (I-IVX) 110,108,108
  108 IF (INRB.NE.3) GO TO 115
      G = P2(JVX,J,K)
      LB = NRGN(JVX,J)
      IF (NUAC(5).NE.10) GO TO 109
      IF ((J/2)*2.NE.J) GO TO 115
      G = P2(JVX,J/2,K)
      LB = NRGN(JVX,J/2)
  109 CONTINUE
      IF (G.NE.0.0) GO TO 115
      MB = NCOMP(LB)
      T1 = DCONB(J,I+1,N)
      GO TO 113
  110 CONTINUE
      IF (NUAC(5).NE.10) GO TO 111
      IF (J.EQ.1) GO TO 115
      IF (P2(J-1,I+1,K).NE.0.0) GO TO 115
      LB = NRGN(J-1,I+1)
      T1 = DCONB(J-1,I+1,N)
      GO TO 112
  111 CONTINUE
      IF (P2(J,I+1,K).NE.0.0) GO TO 115
      LB = NRGN(J ,I+1)
      T1 = DCONB(J ,I+1,N)
  112 CONTINUE
      MB = NCOMP(LB)
  113 IF (T1-4096.0E-13) 114,115,114
  114 B2(MB,K) = B2(MB,K) + P2(J,I,K)*T1
  115 IF (J.LE.1) GO TO 116
      IF (P2(J-1,I,K).NE.0.0) GO TO 118
      LL = NRGN(J-1,I)
      ML = NCOMP(LL)
      GO TO 117
  116 IF (INRB.NE.2) GO TO 118
      IF (P2(JVX,I,K).NE.0.0) GO TO 118
      LL = NRGN(JVX,I)
      ML = NCOMP(LL)
  117 B2(ML,K) = B2(ML,K) + P2(J,I,K)*DCONR(J,I,N)
  118 IF (J.GE.JVX) GO TO 119
      IF (P2(J+1,I,K).NE.0.0) GO TO 126
      LR = NRGN(J+1,I)
      MR = NCOMP(LR)
      T1 = DCONR(J+1,I,N)
      GO TO 124
  119 GO TO (126,120,121,123),INRB
  120 CONTINUE
      IF (P2(1,I,K).NE.0.0) GO TO 126
      LR = NRGN(1,I)
      MR = NCOMP(LR)
      T1 = DCONR(J+1,I,N)
      GO TO 124
  121 CONTINUE
      G = P2(I,JVX,K)
      LR = NRGN(I,IVX)
      IF (NUAC(5).NE.10) GO TO 122
      G = P2(2*I,IVX,K)
      LR = NRGN(2*I,IVX)
  122 CONTINUE
      IF (G.NE.0.0) GO TO 126
      MR = NCOMP(LR)
      T1 = DCONR(J+1,I,N)
      GO TO 124
  123 CONTINUE
      IF (P2(JVX,IVXP1-I,K).NE.0.0) GO TO 126
      LR = NRGN(JVX,IVXP1-I)
      MR = NCOMP(LR)
      T1 = DCONR(J+1,I,N)
  124 IF (T1.EQ.4096.0E-13) GO TO 126
  125 B2(MR,K) = B2(MR,K) + P2(J,I,K)*T1
  126 IF (NUAC(5)-9) 136,127,136
  127 KKK=N+IOVX
      IF (I-1) 131,131,128
  128 IF (J-JMAX) 129,131,131
  129 IF (P2(J+1,I-1,K)) 131,130,131
  130 LB=NRGN(J+1,I-1)
      MB = NCOMP(LB)
      B2(MB,K) = B2(MB,K) + P2(J,I,K)*DCONR(J+1,I,KKK)
  131 IF (J-1) 135,135,132
  132 IF (I-IMAX) 133,135,135
  133 IF (P2(J-1,I+1,K)) 135,134,135
  134 LB=NRGN(J-1,I+1)
      MB = NCOMP(LB)
      B2(MB,K) = B2(MB,K) + P2(J,I,K)*DCONR(J,I+1,KKK)
  135 CONTINUE
  136 CONTINUE
  137 CONTINUE
  138 CONTINUE
  139 CONTINUE
      DO 140 M=1,MMAX
      XRDB = XRDB + B2(M,K)
  140 CONTINUE
  141 CONTINUE
      RETURN
      END
CRDUE --103 ***CITATION*** RESIDUE CALC. FOR 1,2-D/ CF-FLUX
      SUBROUTINE RDUE(SCAC, RESLM,RESSA, P2 ,NRGN , SOUR ,DCONR ,DCONB ,
     >  XI, IVX,JVX,KVX,LVX,IVXP1,JVXP1,IVZ,KVZ, IOVX,IOVZ,A,MEMORY,AIO,
     >  IX3738,XLAMDA, SIG,PVOL,NCOMP,MVX)
C
      DOUBLE PRECISION P2,P2UT,P2UB,P2UL,P2UR,P2UH,P2UI,T1,TT1,TT2,TT3,
     > TT4,TT5,TT6,XLA,SOUR,XLAMDA,XLD,TTT1,TTT2,TTT3,TTT4
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDB,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
C
      DIMENSION SCAC(KVX,MVX,KVX), P2 (JVX,IVX, KVX),NRGN (JVX, IVX ),
     > SOUR (JVX,IVX ), DCONR (JVXP1,IVZ,IOVZ),DCONB (JVX,IVXP1, IOVX),
     > XI(KVX)
      DIMENSION AIO(IX3738)
      DIMENSION A(MEMORY)
      DIMENSION SIG(KVX,MVX,10),PVOL(LVX),NCOMP(LVX)
C     INRB = 1  ORDINARY
C     INRB = 2  PERIODIC(REPEATING)
C     INRB = 3  90 DEGREE ROTATIONAL
C     INRB = 4  180 DEGREE ROTATIONAL
      INRB = IX(72) + 1
      KMAXP1 = KMAX + 1
      IX37 = IX(37)
      IX38 = IX(38)
      IO15 = IX(82)
      IOADJ = IO15
      IF (IX(71).GT.0) IOADJ = IO2
      IF (IX37.GT.0) REWIND IOADJ
      TTT1 = 0.0
      TTT2 = 0.0
      TTT3 = 0.0
      TTT4 = 0.0
      IF ((IX(24).EQ.0).OR.(IX(17).EQ.0)) GO TO 100
      XLA = 1.0/SPARE(50)
      XLD = XLAMDA
      IF (IX(17).GE.1) XLD = 0.0
      GO TO 103
  100 CONTINUE
C******************************SEARCH OPTIONS***************************
      IF ((IX(5).EQ.0).OR.(IX(5).GE.2)) GO TO 102
  101 XLD = XLAMDA
      IF (IX(5).EQ.1) XLD = 0.0
      XLA = 1.0/SPARE(50)
      GO TO 103
  102 XLD = 0.0
      XLA = XLAMDA
  103 CONTINUE
C     CONTINUE
      DO 129 KT1=1,KMAX
      IF (IX37.EQ.0) GO TO 106
      READ(IOADJ) AIO
      IF (IX(71).GT.0) GO TO 104
      K = KT1
      GO TO 105
  104 K = KMAXP1 - KT1
  105 N = 1
      GO TO 109
  106 CONTINUE
      IF (IX(24).GT.0) GO TO 107
      K = KT1
      GO TO 108
  107 K = KMAXP1 - KT1
  108 N = K
  109 CONTINUE
  110 DO 128 I = 1,IMAX
      DO 127 J = 1,JMAX
      T1 = P2 (J,I, K)
      IF (T1.EQ.0.) GO TO 127
      L = NRGN (J,I )
      M = NCOMP(L)
      TT5 = 0.0
      IF (IX(24).EQ.0) GO TO 112
      DO 111 KK = 1,KMAX
      TT5 = TT5 + SCAC(K,M,KK)*P2(J,I,KK)
  111 CONTINUE
      GO TO 114
  112 CONTINUE
      DO 113 KK = 1,KMAX
      TT5 = TT5 + SCAC(KK,M,K)*P2(J,I,KK)
  113 CONTINUE
  114 CONTINUE
      TT1 = (SIG(K,M,3) + SIG(K,M,9) + XLD*SIG(K,M,5))*T1*PVOL(L)
      TT3 = SIG(K,M,2)*T1
      TDR = DCONR (J+1,I, N)
      IF (TDR.EQ.4096.0E-13) TDR=0.0
      T2 = DCONB(J,I,N)
      T3 = DCONB(J,I+1,N)
      N2 = J
      N3 = J
      IF (NUAC(5).NE.10) GO TO 116
      NOE = J-(J/2)*2
      IF (NOE.EQ.0) GO TO 115
      N2 = N2+1
      T3 = 0.0
      GO TO 116
  115 CONTINUE
      T2 = 0.0
      N3 = N3-1
      T3 = DCONB(N3,I+1,N)
  116 CONTINUE
      P2UT = P2(N2,I-1,K)
      P2UB = P2(N3,I+1,K)
      P2UL = P2(J-1,I,K)
      P2UR = P2(J+1,I,K)
      IF (I.EQ.1) P2UT=0.
      IF (I.LT.IMAX) GO TO 117
      P2UB = 0.0
      IF (INRB.NE.3) GO TO 117
      P2UB = P2(JVX,J,K)
      IF (NUAC(5).EQ.10) P2UB = P2(JVX,J/2,K)
  117 IF (J.GT.1) GO TO 118
      P2UL = 0.0
      IF (INRB.EQ.2) P2UL = P2(JMAX,I,K)
  118 IF (J.LT.JMAX) GO TO 122
      P2UR = 0.0
      GO TO (122,119,120,121),INRB
  119 P2UR = P2(1,I,K)
      GO TO 122
  120 P2UR = P2(I,IVX,K)
      IF (NUAC(5).EQ.10) P2UR = P2(2*I,IVX,K)
      GO TO 122
  121 P2UR = P2(JVX,IVXP1-I,K)
  122 CONTINUE
      IF (NUAC(5).EQ.9) GO TO 123
      TT4 = (T1-P2UT )*T2 + (T1-P2UB )*T3 + (T1- P2UL )*DCONR (J,I, N)+
     > (T1-P2UR )*TDR
      GO TO 124
C     2-D HEXAGONAL RESIDUES CONTRIBUTION FROM LEAKAGE TERMS
  123 KKK = N+IOVX
      P2UH=P2(J-1,I+1,K)
      P2UI=P2(J+1,I-1,K)
      IF (I.EQ.1.OR.J.EQ.JMAX) P2UI=0.0
      IF (J.EQ.1.OR.I.EQ.IMAX) P2UH=0.0
      TT4 = (T1-P2UT )*DCONB (J,I, N)+ (T1-P2UB )*DCONB (J,I+1, N)+ (T1-
     >  P2UL )*DCONR (J,I, N)+ (T1-P2UR )*TDR + (T1-P2UH)*DCONR(J,I+1,
     > KKK)+ (T1-P2UI)*DCONR(J+1,I,KKK)
  124 CONTINUE
      IF (IX(24).EQ.0) GO TO 125
      TT6 = SIG(K,M,4)*PVOL(L)*SOUR(J,I)*XKEF1
      GO TO 126
  125 TT6 = XI(K)*SOUR(J,I) + XLD*SIG(K,M,8)*PVOL(L)
  126 CONTINUE
      TT3=PVOL(L)*(TT3-TT5)
      TTT1 = TTT1 + TT6*(TT4+TT1+TT3)
      TTT2 = TTT2 +TT6**2
      TTT3 = TTT3 + TT1*(XLA*TT6-TT4-TT3)
      TTT4 = TTT4 + TT1**2
  127 CONTINUE
  128 CONTINUE
  129 CONTINUE
      IF (IX37.GT.0) REWIND IOADJ
C     RESIDUES ESTIMATE OF EIGENVALUE (1/K)
      RESLM = TTT2/TTT1
C     RESIDUES ESTIMATE OF RELATIVE ABSORPTION CROSS SECTION
      RESSA = TTT3/TTT4
      IF (NUAC(3).LE.0.) GO TO 130
      XKEF2 = XKEF1
      XKEF1 = RESLM
      XLAMDA = 1.0/XKEF1
      VRGK1 = ABS(XKEF2/XKEF1-1.0)
  130 CONTINUE
      RETURN
      END
CFWRD --105 ***CITATION*** LINE RELAXATION ON ROWS FOR 1,2-D/ CF-DNSD
      SUBROUTINE FWRD( SCAT, P2,DCONB,DCONR,PTSA, IVX,JVX,KVX, IVXP1,
     > JVXP1,IVZ,KVZ,BET,DEL,NRGN,E1,LVX, IOVX,IOVZ)
C
      DOUBLE PRECISION BET(211),DEL(211),T,TEMP,TMF,P2,SCAT
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BAT(211),DAL(211)
C
      DIMENSION SCAT(JVX,IVX), P2(JVX,IVX,KVX),DCONB(JVX,IVXP1,IOVX),
     > DCONR(JVXP1,IVZ,IOVZ),PTSA(JVX,IVX,IOVX)
      DIMENSION NRGN(JVX,IVX),E1(LVX,KVX)
C
      INRB=IX(72)+1
      N = IX(20)
  100 DO 143 I = 1,IVX
      IP1 = I-1
      IP2 = I+1
      DEL(1) = 0.0
      D1 = DCONB(1,I,N)
      D2 = DCONB(1,IP2,N)
      D4 = DCONR(2,I,N)
  101 IF (I-1) 102,102,108
  102 IF (P2(1,1,K)) 103,104,103
  103 BET(1) = (P2(1,2,K)*D2+ SCAT(1,1))/D4
      DEL(1) = D4/(PTSA(1,1,N)+E1(1,K))
      IF (INRB.EQ.2) BET(1)=BET(1)+P2(JVX,I ,K)*DCONR(1,I,N)/D4
  104 DO 107 J = 2,JVX
      IF (P2(J,1,K)) 106,105,106
  105 DEL(J) = 0.0
      GO TO 107
  106 T=D4*DEL(J-1)
      L = NRGN(J,1)
      D4 = DCONR(J+1,1,N)
      BET(J) = (P2(J,2,K)*DCONB(J,2,N)+ SCAT(J,1)+ BET(J-1)*T)/D4
      DEL(J) = D4/(PTSA(J,1,N)-T+E1(L,K))
  107 CONTINUE
      GO TO 121
  108 IF (I-IVX) 115,109,109
  109 IF (P2(1,IVX,K)) 110,111,110
  110 BET(1) = (P2(1,IP1,K)*D1+ SCAT(1,IVX))/D4
      L = NRGN(1,IVX)
      DEL(1) = D4/(PTSA(1,IVX,N)+E1(L,K))
      IF (INRB.EQ.2) BET(1)=BET(1)+P2(JVX,I ,K)*DCONR(1,I,N)/D4
      IF (INRB.EQ.3) BET(1)=BET(1)+P2(JVX,1,K)*D2/D4
  111 DO 114 J = 2,JVX
      IF (P2(J,IVX,K)) 113,112,113
  112 DEL(J) = 0.0
      GO TO 114
  113 T=D4*DEL(J-1)
      L = NRGN(J,IVX)
      D4 = DCONR(J+1,IVX,N)
      BET(J) = (P2(J,IP1,K)*DCONB(J,IVX,N)+ SCAT(J,IVX)+BET(J-1)*T)/D4
      DEL(J) = D4/(PTSA(J,IVX,N)-T+E1(L,K))
      IF (INRB.NE.3) GO TO 114
      IF (J.EQ.JVX) GO TO 114
      BET(J)=BET(J)+P2(JVX,J,K)*DCONB(J,IVXP1,N)/D4
  114 CONTINUE
      GO TO 121
  115 IF (P2(1,I,K)) 116,117,116
  116 CONTINUE
      L = NRGN(1,I)
      BET(1) = (P2(1,IP1,K)*D1+P2(1,IP2,K)*D2+ SCAT(1,I))/D4
      DEL(1) = D4/(PTSA(1,I,N)+E1(L,K))
      IF (INRB.EQ.2) BET(1)=BET(1)+P2(JVX,I ,K)*DCONR(1,I,N)/D4
  117 CONTINUE
      DO 120 J = 2,JVX
      IF (P2(J,I,K)) 119,118,119
  118 DEL(J) = 0.0
      GO TO 120
  119 T=D4*DEL(J-1)
      L = NRGN(J,I)
      D4 = DCONR(J+1,I,N)
      BET(J) = (P2(J,IP1,K)*DCONB(J,I,N)+P2(J,IP2,K)*DCONB(J,IP2,N)+
     > SCAT(J,I)+BET(J-1)*T)/D4
      DEL(J) = D4/(PTSA(J,I,N)-T+E1(L,K))
  120 CONTINUE
  121 CONTINUE
      GO TO (125,122,123,124),INRB
  122 BET(JVX)=BET(JVX)+P2(1,I,K)
      GO TO 125
  123 IF (I.EQ.IVX) GO TO 125
      BET(JVX)=BET(JVX)+P2(I,IVX,K)
      GO TO 125
  124 BET(JVX)=BET(JVX)+P2(JVX,IVXP1-I,K)
  125 TEMP = BET(JVX)*DEL(JVX)
      T = P2(JVX,I,K)
      TMF = T+BETTA*(TEMP-T)
      IF (IEP) 126,130,127
  126 P2(JVX,I,K)=TEMP
      GO TO 131
  127 IF (TMF-TEMP) 129,130,128
  128 TMF = DMIN1(TMF,(TEMP+ T))
      GO TO 130
  129 TMF = DMAX1(TMF,0.5*TEMP)
  130 CONTINUE
      P2 (JVX,I, K) = TMF
  131 DO 138 JJ = 2,JVX
      J = JVXP1-JJ
      T = P2(J,I,K)
      TEMP = DEL(J)*(TEMP+BET(J))
      TMF = T+BETTA*(TEMP-T)
      IF (IEP) 132,136,133
  132 P2(J,I,K)=TEMP
      GO TO 138
  133 IF (TMF-TEMP) 135,136,134
  134 TMF = DMIN1(TMF,(TEMP+ T))
      GO TO 136
  135 TMF = DMAX1(TMF,0.5*TEMP)
  136 CONTINUE
  137 P2 (J,I, K) = TMF
  138 CONTINUE
      IF (NUAC(8)) 139,143,141
  139 L=IVXP1-I
      DO 140J=1,JVX
      M=JVXP1-J
      P2(M,L,K)=P2(J,I,K)
  140 CONTINUE
      GO TO 143
  141 DO 142J=1,JVX
      P2(I,J,K)=P2(J,I,K)
  142 CONTINUE
  143 CONTINUE
      RETURN
      END
CFXRD --106 ***CITATION*** LINE RELAXATION ON COLS FOR 1,2-D/ CF-DNSD
      SUBROUTINE FXRD( SCAT, P2,DCONB,DCONR,PTSA, IVX,JVX,KVX, IVXP1,
     > JVXP1,IVZ,KVZ,BET,DEL,NRGN,E1,LVX, IOVX,IOVZ)
C
      DOUBLE PRECISION BET(211),DEL(211),T,TEMP,TMF,P2,SCAT
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BAT(211),DAL(211)
C
      DIMENSION SCAT(JVX,IVX), P2(JVX,IVX,KVX),DCONB(JVX,IVXP1,IOVX),
     > DCONR(JVXP1,IVZ,IOVZ),PTSA(JVX,IVX,IOVX)
      DIMENSION NRGN(JVX,IVX),E1(LVX,KVX)
C
      INRB=IX(72)+1
      N = IX(20)
  100 DO 142 J = 1,JVX
      JP1 = J-1
      JP2 = J+1
      DEL(1) = 0.0
      D1 = DCONR(J,1,N)
      D2 = DCONR(JP2,1,N)
      D4 = DCONB(J,2,N)
  101 IF (J-1) 102,102,108
  102 IF (P2(1,1,K)) 103,104,103
  103 BET(1) = (P2(2,1,K)*D2+ SCAT(1,1))/D4
      DEL(1) = D4/(PTSA(1,1,N)+E1(1,K))
  104 DO 107 I = 2,IVX
      IF (P2(1,I,K)) 106,105,106
  105 DEL(I) = 0.0
      GO TO 107
  106 T=D4*DEL(I-1)
      L = NRGN(1,I)
      D4 = DCONB(1,I+1,N)
      BET(I) = (P2(2,I,K)*DCONR(2,I,N)+ SCAT(1,I)+ BET(I-1)*T)/D4
      DEL(I) = D4/(PTSA(1,I,N)-T+E1(L,K))
  107 CONTINUE
      GO TO 125
  108 IF (J-JVX) 119,109,109
  109 IF (P2(JVX,1,K)) 110,113,110
  110 BET(1) = (P2(JP1,1,K)*D1+ SCAT(J,1))/D4
      L = NRGN(JVX,1)
      DEL(1) = D4/(PTSA(JVX,1,N)+E1(L,K))
      GO TO (113,113,111,112),INRB
  111 BET(1)=BET(1)+P2(1,IVX,K)*D2/D4
      GO TO 113
  112 BET(1)=BET(1)+P2(JVX,IVX,K)*D2/D4
  113 DO 118 I = 2,IVX
      IF (P2(JVX,I,K)) 115,114,115
  114 DEL(I) = 0.0
      GO TO 118
  115 T=D4*DEL(I-1)
      L = NRGN(JVX,I)
      D4 = DCONB(J,I+1,N)
      BET(I) = (P2(JP1,I,K)*DCONR(JVX,I,N)+ SCAT(JVX,I)+BET(I-1)*T)/D4
      DEL(I) = D4/(PTSA(JVX,I,N)-T+E1(L,K))
      GO TO (118,118,116,117),INRB
  116 BET(I)=BET(I)+P2(I,IVX,K)*DCONR(JVXP1,I,N)/D4
      GO TO 118
  117 BET(I)=BET(I)+P2(JVX,IVXP1-I,K)*DCONR(JVXP1,I,N)/D4
  118 CONTINUE
      GO TO 125
  119 IF (P2(J,1,K)) 120,121,120
  120 CONTINUE
      L = NRGN(J,1)
      BET(1) = (P2(JP1,1,K)*D1+P2(JP2,1,K)*D2+ SCAT(J,1))/D4
      DEL(1) = D4/(PTSA(J,1,N)+E1(L,K))
  121 CONTINUE
      DO 124 I=2,IVX
      IF (P2(J,I,K)) 123,122,123
  122 DEL(I) = 0.0
      GO TO 124
  123 T=D4*DEL(I-1)
      L = NRGN(J,I)
      D4 = DCONB(J,I+1,N)
      BET(I) = (P2(JP1,I,K)*DCONR(J,I,N)+P2(JP2,I,K)*DCONR(JP2,I,N)+
     > SCAT(J,I)+BET(I-1)*T)/D4
      DEL(I) = D4/(PTSA(J,I,N)-T+E1(L,K))
  124 CONTINUE
  125 CONTINUE
      IF (INRB.NE.3) GO TO 126
      IF (J.EQ.JVX) GO TO 126
      BET(IVX)=BET(IVX)+P2(JVX,J,K)
  126 TEMP = BET(IVX)*DEL(IVX)
      T = P2(J,IVX,K)
      TMF=T+VRGK2*(TEMP-T)
      IF (IEP) 127,131,128
  127 P2(J,IVX,K)=TEMP
      GO TO 132
  128 IF (TMF-TEMP) 130,131,129
  129 TMF = DMIN1(TMF,(TEMP+ T))
      GO TO 131
  130 TMF = DMAX1(TMF,0.5*TEMP)
  131 CONTINUE
      P2(J,IVX,K)=TMF
  132 DO 139 JJ = 2,IVX
      I = IVXP1-JJ
      T = P2(J,I,K)
      TEMP = DEL(I)*(TEMP+BET(I))
      TMF=T+VRGK2*(TEMP-T)
      IF (IEP) 133,137,134
  133 P2(J,I,K)=TEMP
      GO TO 139
  134 IF (TMF-TEMP) 136,137,135
  135 TMF = DMIN1(TMF,(TEMP+ T))
      GO TO 137
  136 TMF = DMAX1(TMF,0.5*TEMP)
  137 CONTINUE
  138 P2 (J,I, K) = TMF
  139 CONTINUE
      IF (NUAC(8)) 140,142,142
  140 M=JVXP1-J
      DO 141I=1,IVX
      L=IVXP1-I
      P2(M,L,K)=P2(J,I,K)
  141 CONTINUE
  142 CONTINUE
      RETURN
      END
CFTRI 110.1  ***CITATION*** TRI. GEOM. LINE RELAX. 2-D/ CF-DNSD
      SUBROUTINE FTRI( SCAT, P2,DCONB,DCONR,PTSA, IVX,JVX,KVX, IVXP1,
     > JVXP1,IVZ,KVZ,BET,DEL,NRGN,E1,LVX, IOVX,IOVZ)
C
      DOUBLE PRECISION BET(211),DEL(211),T,TEMP,TMF,P2,SCAT
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BAT(211),DAL(211)
C
      DIMENSION SCAT(JVX,IVX), P2(JVX,IVX,KVX),DCONB(JVX,IVXP1,IOVX),
     > DCONR(JVXP1,IVZ,IOVZ),PTSA(JVX,IVX,IOVX)
      DIMENSION NRGN(JVX,IVX),E1(LVX,KVX)
C
      INRB=IX(72)+1
      N = IX(20)
  100 DO 143 I = 1,IVX
      IP1 = I-1
      IP2 = I+1
      DEL(1) = 0.0
      D1 = DCONB(1,I,N)
      D4 = DCONR(2,I,N)
  101 IF (I-1) 102,102,108
  102 IF (P2(1,1,K)) 103,104,103
  103 BET(1) = SCAT(1,1)/D4
      DEL(1) = D4/(PTSA(1,1,N)+E1(1,K))
      IF (INRB.EQ.2) BET(1) = BET(1)+P2(JVX,I,K)*DCONR(1,I,N)/D4
  104 DO 107 J = 2,JVX
      IF (P2(J,1,K)) 106,105,106
  105 DEL(J) = 0.0
      GO TO 107
  106 T=D4*DEL(J-1)
      L = NRGN(J,1)
      D4 = DCONR(J+1,1,N)
      TEMP = P2(J-1,2,K)*DCONB(J-1,2,N)
      IF (I.EQ.IMAX) TEMP = 0.0
      BET(J) = (TEMP + SCAT(J,1)+ BET(J-1)*T)/D4
      DEL(J) = D4/(PTSA(J,1,N)-T+E1(L,K))
  107 CONTINUE
      GO TO 121
  108 IF (I-IVX) 115,109,109
  109 IF (P2(1,IVX,K)) 110,111,110
  110 BET(1) = (P2(2,IP1,K)*D1+ SCAT(1,IVX))/D4
      L = NRGN(1,IVX)
      DEL(1) = D4/(PTSA(1,IVX,N)+E1(L,K))
      IF (INRB.EQ.2) BET(1) = BET(1)+P2(JVX,I,K)*DCONR(1,I,N)/D4
  111 DO 114 J = 2,JVX
      IF (P2(J,IVX,K)) 113,112,113
  112 DEL(J) = 0.0
      GO TO 114
  113 T=D4*DEL(J-1)
      L = NRGN(J,IVX)
      D4 = DCONR(J+1,IVX,N)
      BET(J) = (P2(J+1,IP1,K)*DCONB(J,IVX,N)+ SCAT(J,IVX)+BET(J-1)*T)/D4
      DEL(J) = D4/(PTSA(J,IVX,N)-T+E1(L,K))
      IF (INRB.NE.3) GO TO 114
      IF (((J/2)*2).NE.J) GO TO 114
      IF (J.EQ.JVX) GO TO 114
      BET(J) = BET(J)+P2(JVX,J/2,K)*DCONB(J-1,IVXP1,N)/D4
  114 CONTINUE
      GO TO 121
  115 IF (P2(1,I,K)) 116,117,116
  116 CONTINUE
      L = NRGN(1,I)
      BET(1) = (P2(2,IP1,K)*D1 + SCAT(1,I))/D4
      DEL(1) = D4/(PTSA(1,I,N)+E1(L,K))
      IF (INRB.EQ.2) BET(1) = BET(1)+P2(JVX,I,K)*DCONR(1,I,N)/D4
  117 CONTINUE
      DO 120 J = 2,JVX
      IF (P2(J,I,K)) 119,118,119
  118 DEL(J) = 0.0
      GO TO 120
  119 T=D4*DEL(J-1)
      L = NRGN(J,I)
      D4 = DCONR(J+1,I,N)
      BET(J)=(P2(J+1,IP1,K)*DCONB(J,I,N)+P2(J-1,IP2,K)*DCONB(J-1,IP2,N)+
     >  SCAT(J,I)+BET(J-1)*T)/D4
      DEL(J) = D4/(PTSA(J,I,N)-T+E1(L,K))
  120 CONTINUE
  121 CONTINUE
      GO TO (125,122,123,124),INRB
  122 CONTINUE
      BET(JVX) = BET(JVX)+P2(1,I,K)
      GO TO 125
  123 CONTINUE
      IF (I.EQ.IVX) GO TO 125
      BET(JVX) = BET(JVX)+P2(2*I,IVX,K)
      GO TO 125
  124 CONTINUE
      BET(JVX) = BET(JVX)+P2(JVX,IVXP1-I,K)
  125 TEMP = BET(JVX)*DEL(JVX)
      T = P2(JVX,I,K)
      TMF = T+BETTA*(TEMP-T)
      IF (IEP) 126,130,127
  126 P2(JVX,I,K)=TEMP
      GO TO 131
  127 IF (TMF-TEMP) 129,130,128
  128 TMF = DMIN1(TMF,(TEMP+ T))
      GO TO 130
  129 TMF = DMAX1(TMF,0.5*TEMP)
  130 CONTINUE
      P2 (JVX,I, K) = TMF
  131 DO 138 JJ = 2,JVX
      J = JVXP1-JJ
      T = P2(J,I,K)
      TEMP = DEL(J)*(TEMP+BET(J))
      TMF = T+BETTA*(TEMP-T)
      IF (IEP) 132,136,133
  132 P2(J,I,K)=TEMP
      GO TO 138
  133 IF (TMF-TEMP) 135,136,134
  134 TMF = DMIN1(TMF,(TEMP+ T))
      GO TO 136
  135 TMF = DMAX1(TMF,0.5*TEMP)
  136 CONTINUE
  137 P2 (J,I, K) = TMF
  138 CONTINUE
      IF (NUAC(8)) 139,143,141
  139 L=IVXP1-I
      DO 140J=1,JVX
      M=JVXP1-J
      P2(M,L,K)=P2(J,I,K)
  140 CONTINUE
      GO TO 143
  141 DO 142J=1,JVX
      P2(I,J,K)=P2(J,I,K)
  142 CONTINUE
  143 CONTINUE
      RETURN
      END
CKNSD --112 ***CITATION*** FLUX CALCULATION CONTROL FOR 3-D /CF-KLUX
      SUBROUTINE KNSD(SCATE,P2E,DCONBE,DCONRE,DCONBK,PTSAE,SOURE,NRGNE,
     > XII,SCAC,P1E,E1,IVX,JVX,KBVX,KVX,IVXP1,JVXP1,KBVXP1,LVX, JIVX,
     > JIP1VX,JP1IXZ,IOVX,IOVZ,SPAR,BIEMS,NCRP,NSPA, SIG,PVOL,NCOMP,MVX,
     >  AIO,IX3738,XLAMDA,XI,XL,B2,IOADJ,IOFS,KGP1)
C
      DOUBLE PRECISION XLAMDA, XII
      DOUBLE PRECISION
     >       SUMXI,TPTSA,XADB,XPDB,XS1DB,XS2DB, TL,XRDB,CS1S,CS2S,XLL1,
     > D8,XADX,YADX, XLL2,XLL3,XLL4,XLL5,XLL6,XLEK,B2LK,B3LK,B4LK,B5LK,
     > D1,D2,D3,D4,D5, D6,D7,YADB,YPDB,YLEK,YS1S,YS2S,YS1DB,YS2DB,YRDB,
     > SPR50,XLAST
C
      COMMON/ADUBP/SUMXI,TPTSA,XADB,XPDB,XS1DB,XS2DB, TL,XRDB,CS1S,CS2S,
     >  XLL1,D8,XADX,YADX, XLL2,XLL3,XLL4,XLL5,XLL6,XLEK,B2LK,B3LK,B4LK,
     >  B5LK,D1,D2,D3,D4,D5, D6,D7,YADB,YPDB,YLEK,YS1S,YS2S,YS1DB,YS2DB,
     >  YRDB,SPR50,XLAST
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XELK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDB,EPI1,EPI2, BETTA,SAMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
C
      DIMENSION SCATE(JVX,IVX,KBVX), P2E(JIVX ,KBVX,KVX),DCONBE(JIP1VX ,
     >  KBVX,IOVX),DCONRE(JP1IXZ ,KBVX,IOVZ),DCONBK(JIVX , KBVXP1,IOVX),
     >  PTSAE(JIVX ,KBVX,IOVX),SOURE(JVX,IVX,KBVX), NRGNE(JVX,IVX,KBVX),
     >  XII(KVX),SCAC(KVX,MVX,KVX),P1E(JIVX,KBVX)
      DIMENSION E1(LVX,KVX)
      DIMENSION TSOUR(211)
      DIMENSION SPAR(NCRP,NSPA),BIEMS(KVX)
      DIMENSION SIG(KVX,MVX,10),PVOL(LVX),NCOMP(LVX)
      DIMENSION AIO(IX3738),XI(KVX),XL(6,KVX),B2(MVX,KVX)
CCCCC ********* SUBSCRIPT DEFINITIONS (KNSD E-061) ********* CCCCC
C    NEW         OLD            NEW         OLD
C     N1         J,I
C     N2         1,I             N5      JMAX,I
C     N3 *       1,I             N7         J,IMXP1
C     N4 *   JMXP1,I             N8         J,IMAX
C                                 J         J,1
C     INRB = 1  ORDINARY
C     INRB = 2  PERIODIC(REPEATING)
C     INRB = 3  90 DEGREE ROTATIONAL
C     INRB = 4  180 DEGREE ROTATIONAL
      INRB = IX(72) + 1
      IO19 = IX(86)
      IF (IX(135).EQ.1) REWIND IO19
      RMX = 1.0
      RMN = 1.0
      IX37 = IX(37)
      DO 152 KT1 = 1,KMAX
      IF (IX37.EQ.0) GO TO 102
      READ(IOADJ) AIO
      IF (IX(71).GT.0) GO TO 100
      K = KT1
      GO TO 101
  100 K = KGP1 - KT1
  101 CONTINUE
      IX(20) = 1
      GO TO 105
  102 CONTINUE
      IF (IX(24).GT.0) GO TO 103
      K = KT1
      GO TO 104
  103 K = KGP1-KT1
  104 CONTINUE
      IX(20) = K
  105 CONTINUE
      IF (IX(5).EQ.(-5)) GO TO 112
      IF (IX(24).EQ.0) GO TO 106
      IF (IX(17).GE.1) GO TO 108
  106 CONTINUE
      DO 107 L=1,LMAX
      M = NCOMP(L)
      E1(L,K) = XLAMDA*SIG(K,M,5)*PVOL(L)
      IF (IX(24).EQ.0) GO TO 107
      IF ((IX(17).EQ.-2).AND.(IX(71).GT.0)) E1(L,K) =SIG(K,M,5)*PVOL(L)
  107 CONTINUE
  108 CONTINUE
      IF (IX(24).GT.0) GO TO 111
C***************************SEARCH OPTIONS******************************
      IF ((IX(5).EQ.0).OR.(IX(5).GE.2)) GO TO 110
  109 XII(K) = XI(K)/SPARE(50)
      GO TO 111
  110 XII(K) = XI(K)*XLAMDA
  111 CONTINUE
      GO TO 113
  112 CONTINUE
      IF (IX(132).GT.0) READ(IOFS) SPAR
      BIEMS(K) = XLAMDA*XI(K)
  113 CONTINUE
      NOINNR=NUAC(23)
      IF (IX(24).GT.0) GO TO 114
      KSCT1 = K-IX28
      IF (KSCT1.LE.0) KSCT1 = 1
      KSCT2 = MAX0((K-1),1)
      IF (K.GE.KXMN8) KSCT2 = KVX
C IRECV IS THE GROUP NO. WHICH CAN UPSCATTER TO GROUP 1. IT IS NOT BEING
C USED AND IS SET TO 0 IN KEGN.
      IF (K.LT.IRECV) KSCT2 = IRECV
      GO TO 115
  114 CONTINUE
      KSCT1 = K
      IF (K.GE.KXMN8) KSCT1 = KXMN8
      KSCT2 = K+IX28
      IF (KSCT2.GT.KVX) KSCT2 = KVX
      IF (K.LT.IRECV) KSCT1 = 1
  115 CONTINUE
      DO 122 KB=1,KBVX
      DO 121 I=1,IVX
      NN1 = (I-1)*JVX
      DO 120 J=1,JVX
      N1 = NN1 + J
      L = NRGNE(J,I,KB)
      M = NCOMP(L)
      P1E(N1,KB) = P2E(N1,KB,K)
      IF (IX(24).GT.0) GO TO 117
      CKSS = 0.0
      DO 116 KK=KSCT1,KSCT2
      CKSS = CKSS + SCAC(KK,M,K)*P2E(N1,KB,KK)
  116 CONTINUE
      SCATE(J,I,KB) = CKSS*PVOL(L) + SOURE(J,I,KB)*XII(K)
      GO TO 119
  117 CKSS = SOURE(J,I,KB)*SIG(K,M,4)
      DO 118 KK= KSCT1,KSCT2
      CKSS = CKSS + SCAC(K,M,KK)*P2E(N1,KB,KK)
  118 CONTINUE
      SCATE(J,I,KB) = CKSS*PVOL(L)
  119 CONTINUE
  120 CONTINUE
  121 CONTINUE
  122 CONTINUE
      IF (IX(5).NE.(-5)) GO TO 126
      BM = BIEMS(K)
      NP = 0
      DO 125 KB=1,KBVX
      DO 124 I=1,IVX
      DO 123 J=1,JVX
      NP = NP + 1
      SCATE(J,I,KB) = SCATE(J,I,KB) + BM*SPAR(NP,1)
  123 CONTINUE
  124 CONTINUE
  125 CONTINUE
  126 CONTINUE
      IF (IX(135).EQ.1) WRITE(IO19) P1E
      DO 130 INNR=1,NOINNR
      IF (NUAC(5).EQ.14) GO TO 129
      IF (IX(72).EQ.1) GO TO 128
      IF (NUAC(5).EQ.13) GO TO 127
      CALL KWRD(SCATE,P2E,DCONBE,DCONRE,DCONBK,PTSAE,TSOUR, NRGNE,E1,
     > LVX, IVX,JVX,KBVX,KVX,IVXP1,JVXP1,KBVXP1, JIVX,JIP1VX,JP1IXZ,
     > IOVX,IOVZ)
      IF (IX(72).GT.1) GO TO 130
      IF (NUAC(20).GT.-1) GO TO 130
      CALL KXRD(SCATE,P2E,DCONBE,DCONRE,DCONBK,PTSAE,TSOUR, NRGNE,E1,
     > LVX, IVX,JVX,KBVX,KVX,IVXP1,JVXP1,KBVXP1, JIVX,JIP1VX,JP1IXZ,
     > IOVX,IOVZ)
      IF (NUAC(20).NE.-1) GO TO 130
      CALL KZRD(SCATE,P2E,DCONBE,DCONRE,DCONBK,PTSAE,TSOUR, NRGNE,E1,
     > LVX, IVX,JVX,KBVX,KVX,IVXP1,JVXP1,KBVXP1, JIVX,JIP1VX,JP1IXZ,
     > IOVX,IOVZ)
      GO TO 130
  127 CONTINUE
      CALL MWRD(SCATE,P2E,DCONBE,DCONRE,DCONBK,PTSAE,TSOUR, NRGNE,E1,
     > LVX, IVX,JVX,KBVX,KVX,IVXP1,JVXP1,KBVXP1, JIVX,JIP1VX,JP1IXZ,
     > IOVX,IOVZ)
      GO TO 130
  128 CALL KPER(SCATE,P2E,DCONBE,DCONRE,DCONBK,PTSAE,TSOUR, NRGNE, E1,
     > LVX, IVX,JVX,KBVX,KVX,IVXP1,JVXP1,KBVXP1, JIVX,JIP1VX,JP1IXZ,
     > IOVX,IOVZ)
      GO TO 130
  129 CONTINUE
      CALL KTRI(SCATE,P2E,DCONBE,DCONRE,DCONBK,PTSAE,TSOUR, NRGNE,E1,
     > LVX, IVX,JVX,KBVX,KVX,IVXP1,JVXP1,KBVXP1, JIVX,JIP1VX,JP1IXZ,
     > IOVX,IOVZ)
  130 CONTINUE
      IF ((NUAC(3).GT.0).OR.(IX(24).GT.0)) GO TO 147
      XLL1 = 0.0
      XLL2 = 0.0
      XLL3 = 0.0
      XLL4 = 0.0
      XLL5 = 0.0
      XLL6 = 0.0
      N = IX(20)
      NN3 = (IMXP1-1)*JVX
      NN4 = (IMAX-1)*JVX
      DO 131 M=1,MMAX
      B2(M,K) = 0.0
  131 CONTINUE
      DO 137 KB = 1,KBMAX
      DO 133 I = 1,IMAX
      N2= (I-1)*JVX
      N5= N2 + JMAX
      N2= N2 + 1
      N3= (I-1)*JVXP1
      N4=N3 + JMXP1
      N3= N3 + 1
      XLL1 = XLL1+P2E(N2 ,KB,K)*DCONRE(N3 ,KB,N)
      T1 = DCONRE(N4 ,KB,N)
      IF (T1-4096.0E-13) 132,133,132
  132 XLL3 = XLL3+P2E(N5 ,KB,K)*T1
  133 CONTINUE
      DO 136 J = 1,JMAX
      N7 = NN3 + J
      N8 = NN4 + J
      XLL2 = XLL2+P2E(J ,KB,K)*DCONBE(J ,KB,N)
      IF (NUAC(5).NE.14) GO TO 134
      IF (J.EQ.1) GO TO 136
      N7 = N7-1
  134 CONTINUE
      T1 = DCONBE(N7 ,KB,N)
      IF (T1-4096.0E-13) 135,136,135
  135 XLL4 = XLL4+P2E(N8 ,KB,K)*T1
  136 CONTINUE
  137 CONTINUE
      N1= 0
      DO 140 I=1,IMAX
      DO 139 J=1,JMAX
      N1= N1 + 1
      XLL5 = XLL5 + P2E(N1 ,1,K)*DCONBK(N1 ,1,N)
      T1 = DCONBK(N1 ,KBMXP1,N)
      IF (T1-4096.0E-13) 138,139,138
  138 XLL6 = XLL6+P2E(N1 ,KBMAX,K)*T1
  139 CONTINUE
  140 CONTINUE
      GO TO (141,142,143,144),INRB
  141 XLEK = XLEK + XLL1 + XLL2 + XLL3 + XLL4 + XLL5 + XLL6
      GO TO 145
  142 XLEK = XLEK + XLL2 + XLL4 + XLL5 + XLL6
      XLL1 = XLL1 - XLL3
      XLL3 = (-XLL1)
      GO TO 145
  143 XLEK = XLEK + XLL1 + XLL2 + XLL5 + XLL6
      XLL4 = (-XLL3)
      GO TO 145
  144 XLEK = XLEK + XLL1 + XLL2 + XLL4 + XLL5 + XLL6
      XLL3 = 0.0
  145 CONTINUE
      XL(1,K) = XLL1
      XL(2,K) = XLL2
      XL(3,K) = XLL3
      XL(4,K) = XLL4
      XL(5,K) = XLL5
      XL(6,K) = XLL6
      IF (NUAC(17).LE.0) GO TO 146
      CALL KINS(P2E,B2,NRGNE,DCONBE,DCONRE,DCONBK,SCAC,XL, IVX, JVX,
     > KBVX,KVX,LVX,JVXP1,KBVXP1,JIVX,JIP1VX,JP1IXZ,IOVX,IOVZ, PVOL,
     > NCOMP,MVX,IVXP1)
  146 CONTINUE
  147 CONTINUE
      DO 151 KB=1,KBMAX
      N1 = 0
      DO 150 I=1,IMAX
      DO 149 J=1,JMAX
      N1 = N1 + 1
      TT1 = P1E(N1,KB)
      T2 = P2E(N1,KB,K)
      IF (TT1.EQ.0.0) GO TO 148
      RATO = T2/TT1
      RMX = AMAX1(RMX,RATO)
      RMN = AMIN1(RMN,RATO)
  148 CONTINUE
  149 CONTINUE
  150 CONTINUE
  151 CONTINUE
  152 CONTINUE
      IF (IX(135).EQ.1) REWIND IO19
      RETURN
      END
CKINS --115 ***CITATION*** CALC. ROD LOSSES FOR 3D  /CF-KNSD
      SUBROUTINE KINS(P2E,B2,NRGNE,DCONBE,DCONRE,DCONBK,SCAC,XL, IVX,
     > JVX,KBVX,KVX,LVX,JVXP1,KBVXP1,JIVX,JIP1VX,JP1IXZ,IOVX,IOVZ, PVOL,
     >  NCOMP,MVX,IVXP1)
C
      DOUBLE PRECISION
     >       SUMXI,TPTSA,XADB,XPDB,XS1DB,XS2DB, TL,XRDB,CS1S,CS2S,XLL1,
     > D8,XADX,YADX, XLL2,XLL3,XLL4,XLL5,XLL6,XLEK,B2LK,B3LK,B4LK,B5LK,
     > D1,D2,D3,D4,D5, D6,D7,YADB,YPDB,YLEK,YS1S,YS2S,YS1DB,YS2DB,YRDB,
     > SPR50,XLAST
C
      COMMON/ADUBP/SUMXI,TPTSA,XADB,XPDB,XS1DB,XS2DB, TL,XRDB,CS1S,CS2S,
     >  XLL1,D8,XADX,YADX, XLL2,XLL3,XLL4,XLL5,XLL6,XLEK,B2LK,B3LK,B4LK,
     >  B5LK,D1,D2,D3,D4,D5, D6,D7,YADB,YPDB,YLEK,YS1S,YS2S,YS1DB,YS2DB,
     >  YRDB,SPR50,XLAST
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XELK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SAMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
C
      DIMENSION P2E(JIVX,KBVX,KVX),B2(MVX,KVX),NRGNE(JVX,IVX,KBVX),
     > DCONBE(JIP1VX,KBVX,IOVX),DCONRE(JP1IXZ,KBVX,IOVZ), DCONBK(JIVX,
     > KBVXP1,IOVX),SCAC(KVX,MVX,KVX),XL(6,KVX)
      DIMENSION PVOL(LVX),NCOMP(LVX)
CCCCC ********* SUBSCRIPT DEFINITIONS (KINS E-110) ********* CCCCC
C    NEW         OLD            NEW         OLD
C     N1         J,I             N6       J-1,I+1
C     N2         J,I-1           N7       J+1,I-1
C     N3         J,I+1           N8 *       J,I
C     N4       J-1,I             N9 *       J,I+1
C     N5       J+1,I             N10 *    J+1,I
C     N11        1,I             N12      JVX,I
C     N13      JVX,J             N14        I,IVX
C     N15      JVX,IVXP1-I
C     INRB = 1  ORDINARY
C     INRB = 2  PERIODIC(REPEATING)
C     INRB = 3  90 DEGREE ROTATIONAL
C     INRB = 4  180 DEGREE ROTATIONAL
      INRB = IX(72) + 1
      N = IX(20)
  100 DO 146 KB = 1,KBMAX
      DO 145 I = 1,IMAX
      NN1= (I-1)*JVX
      NN2= (I-1)*JVXP1
      DO 144 J = 1,JMAX
      N1= NN1 + J
      N2= N1 - JVX
      N3= N1 + JVX
      N4= N1 - 1
      N5= N1 + 1
      N6= N3 - 1
      N7= N2 + 1
      N8= NN2 + J
      N9= N8 + JVXP1
      N10= N8 + 1
      L = NRGNE(J,I,KB)
      M = NCOMP(L)
      IF (P2E(N1,KB,K)) 103,101,103
  101 IF (XMIS(2).GE.0) GO TO 143
      TT5 = 0.0
      DO 102 KK = 1,KMAX
      TT5 = TT5 + SCAC(KK,M,K)*P2E(N1,KB,KK)
  102 CONTINUE
      B2(M,K) = B2(M,K) + TT5*PVOL(L)
      GO TO 143
  103 IF (KB-1) 106,106,104
  104 IF (P2E(N1,KB-1,K)) 106,105,106
  105 LF = NRGNE(J,I,KB-1)
      MF = NCOMP(LF)
      B2(MF,K) = B2(MF,K)+P2E(N1 ,KB,K)*DCONBK(N1 ,KB,N)
  106 IF (KB-KBMAX) 107,110,110
  107 IF (P2E(N1,KB+1,K)) 110,108,110
  108 LBK = NRGNE(J,I,KB+1)
      MBK = NCOMP(LBK)
      T1 = DCONBK(N1 ,KB+1 ,N)
      IF (T1-4096.0E-13) 109,110,109
  109 B2(MBK,K) = B2(MBK,K)+P2E(N1 ,KB,K)*T1
  110 IF (I-1) 114,114,111
  111 CONTINUE
      IF (NUAC(5).NE.14) GO TO 112
      IF (P2E(N7,KB,K).NE.0) GO TO 114
      LT = NRGNE(J+1,I-1,KB)
      GO TO 113
  112 CONTINUE
      IF (P2E(N2,KB,K).NE.0) GO TO 114
      LT = NRGNE(J,I-1,KB)
  113 CONTINUE
      MT = NCOMP(LT)
      B2(MT,K) = B2(MT,K)+P2E(N1 ,KB,K)*DCONBE(N1 ,KB,N)
  114 IF (I-IMAX) 117,115,115
  115 IF (INRB.NE.3) GO TO 122
      N13 = J*JVX
      LB = NRGNE(JVX,J,KB)
      IF (NUAC(5).NE.14) GO TO 116
      IF ((J/2)*2.NE.J) GO TO 122
      N13 = N13/2
      LB = NRGNE(JVX,J/2,KB)
  116 CONTINUE
      IF (P2E(N13,KB,K).NE.0.0) GO TO 122
      MB = NCOMP(LB)
      T1 = DCONBE(N3,KB,N)
      GO TO 120
  117 CONTINUE
      IF (NUAC(5).NE.14) GO TO 118
      IF (J.EQ.1) GO TO 122
      IF (P2E(N6,KB,K).NE.0) GO TO 122
      LB = NRGNE(J-1,I+1,KB)
      N3 = N3-1
      GO TO 119
  118 CONTINUE
      IF (P2E(N3,KB,K).NE.0) GO TO 122
      LB = NRGNE(J ,I+1,KB)
  119 CONTINUE
      MB = NCOMP(LB)
      T1 = DCONBE(N3 ,KB,N)
  120 IF (T1-4096.0E-13) 121,122,121
  121 B2(MB,K) = B2(MB,K)+P2E(N1 ,KB,K)*T1
  122 IF (J.LE.1) GO TO 123
      IF (P2E(N4,KB,K).NE.0.0) GO TO 125
      LL = NRGNE(J-1,I,KB)
      ML = NCOMP(LL)
      GO TO 124
  123 IF (INRB.NE.2) GO TO 125
      N12 = NN1 + JVX
      IF (P2E(N12,KB,K).NE.0.0) GO TO 125
      LL = NRGNE(JVX,I,KB)
      ML = NCOMP(LL)
  124 B2(ML,K) = B2(ML,K) + P2E(N1 ,KB,K)*DCONRE(N8 ,KB,N)
  125 IF (J.GE.JVX) GO TO 126
      IF (P2E(N5,KB,K).NE.0.0) GO TO 133
      LR = NRGNE(J+1,I,KB)
      MR = NCOMP(LR)
      T1 = DCONRE(N10 ,KB,N)
      GO TO 131
  126 GO TO (133,127,128,130),INRB
  127 CONTINUE
      N11 = NN1 + 1
      IF (P2E(N11,KB,K).NE.0.0) GO TO 133
      LR = NRGNE(1,I,KB)
      MR = NCOMP(LR)
      T1 = DCONRE(N10 ,KB,N)
      GO TO 131
  128 CONTINUE
      N14 = (IVX-1)*JVX + I
      LR = NRGNE(I,IVX,KB)
      IF (NUAC(5).NE.14) GO TO 129
      N14 = N14+I
      LR = NRGNE(2*I,IVX,KB)
  129 CONTINUE
      IF (P2E(N14,KB,K).NE.0.0) GO TO 133
      MR = NCOMP(LR)
      T1 = DCONRE(N10,KB,N)
      GO TO 131
  130 CONTINUE
      N15 = (IVXP1-I)*JVX
      IF (P2E(N15,KB,K).NE.0.0) GO TO 133
      LR = NRGNE(JVX,IVXP1-I,KB)
      MR = NCOMP(LR)
      T1 = DCONRE(N10,KB,N)
  131 IF (T1.EQ.4096.0E-13) GO TO 133
  132 B2(MR,K) = B2(MR,K) + P2E(N1 ,KB,K)*T1
  133 IF (NUAC(5)-13) 143,134,143
  134 KKK = N + IOVX
      IF (I-1) 138,138,135
  135 IF (J-JMAX) 136,138,138
  136 IF (P2E(N7,KB,K)) 138,137,138
  137 LB=NRGNE(J+1,I-1,KB)
      MB = NCOMP(LB)
      B2(MB,K)=B2(MB,K)+P2E(N1 ,KB,K)*DCONRE(N10 ,KB,KKK)
  138 IF (J-1) 142,142,139
  139 IF (I-IMAX) 140,142,142
  140 IF (P2E(N6,KB,K)) 142,141,142
  141 LB=NRGNE(J-1,I+1,KB)
      MB = NCOMP(LB)
      B2(MB,K)=B2(MB,K)+P2E(N1 ,KB,K)*DCONRE(N9 ,KB,KKK)
  142 CONTINUE
  143 CONTINUE
  144 CONTINUE
  145 CONTINUE
  146 CONTINUE
  147 CONTINUE
      IF (NUAC(17).EQ.0) GO TO 149
      DO 148 M=1,MMAX
      XRDB = XRDB + B2(M,K)
  148 CONTINUE
  149 CONTINUE
      RETURN
      END
CKDUE --119 ***CITATION*** RESIDUE CALC. FOR 3-D/ CF-KLUX
      SUBROUTINE KDUE(SCAC, RESLM,RESSA, P2E,NRGNE, SOURE,DCONRE,DCONBE,
     >  DCONBK,XI, IVX,JVX,KBVX,KVX,LVX,IVXP1,JVXP1, KBVXP1,IVZ,KVZ,
     > JIVX,JIP1VX,JP1IXZ,IOVX,IOVZ,A,MEMORY,AIO,IX3738, XLAMDA,SIG,
     > PVOL,NCOMP,MVX)
C
      DOUBLE PRECISION XLAMDA,XLD,
     > TTT1,TTT2,TTT3,TTT4,TT1,TT2,TT3,TT4,TT5,TT6
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDB,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
C
      DIMENSION SCAC(KVX,MVX,KVX), P2E(JIVX ,KBVX,KVX), NRGNE(JVX,IVX,
     > KBVX),SOURE(JVX,IVX,KBVX), DCONRE(JP1IXZ ,KBVX, IOVZ),
     > DCONBE(JIP1VX ,KBVX,IOVX),DCONBK(JIVX ,KBVXP1,IOVX), XI(KVX)
      DIMENSION A(MEMORY)
      DIMENSION AIO(IX3738)
      DIMENSION SIG(KVX,MVX,10),PVOL(LVX),NCOMP(LVX)
CCCCC ********* SUBSCRIPT DEFINITIONS (KDUE E-200) ********* CCCCC
C    NEW         OLD            NEW         OLD
C     N1         J,I             N6       J-1,I+1
C     N2         J,I-1           N7       J+1,I-1
C     N3         J,I+1           N8 *       J,I
C     N4       J-1,I             N9 *       J,I+1
C     N5       J+1,I             N10 *    J+1,I
C     N11        1,I             N12      JVX,I
C     N13      JVX,J             N14        I,IVX
C     N15      JVX,IVXP1-I
C     INRB = 1  ORDINARY
C     INRB = 2  PERIODIC(REPEATING)
C     INRB = 3  90 DEGREE ROTATIONAL
C     INRB = 4  180 DEGREE ROTATIONAL
      INRB = IX(72) + 1
      KMAXP1 = KMAX + 1
      IX37 = IX(37)
      IX38 = IX(38)
      IO15 = IX(82)
      IOADJ = IO15
      IF (IX(71).GT.0) IOADJ = IO2
      IF (IX37.GT.0) REWIND IOADJ
      TTT1 = 0.0
      TTT2 = 0.0
      TTT3 = 0.0
      TTT4 = 0.0
      IF ((IX(24).EQ.0).OR.(IX(17).EQ.0)) GO TO 100
      XLA = 1.0/SPARE(50)
      XLD = XLAMDA
      IF (IX(17).GE.1) XLD = 0.0
      GO TO 103
  100 CONTINUE
C******************************SEARCH OPTIONS***************************
      IF ((IX(5).EQ.0).OR.(IX(5).GE.2)) GO TO 102
  101 XLD = XLAMDA
      IF (IX(5).EQ.1) XLD = 0.0
      XLA = 1.0/SPARE(50)
      GO TO 103
  102 XLD = 0.0
      XLA = XLAMDA
C     CONTINUE
  103 CONTINUE
      DO 129 KT1=1,KMAX
      IF (IX37.EQ.0) GO TO 106
      READ(IOADJ) AIO
      IF (IX(71).GT.0) GO TO 104
      K = KT1
      GO TO 105
  104 K = KMAXP1 - KT1
  105 N = 1
      GO TO 109
  106 CONTINUE
      IF (IX(24).GT.0) GO TO 107
      K = KT1
      GO TO 108
  107 K = KMAXP1 - KT1
  108 N = K
  109 CONTINUE
      DO 128 KB = 1,KBMAX
      DO 127 I = 1,IMAX
      NN1= (I-1)*JVX
      NN2= (I-1)*JVXP1
      DO 126 J = 1,JMAX
      NOE = J-(J/2)*2
      N1= NN1 + J
      N2= N1 - JVX
      N3= N1 + JVX
      N4= N1 - 1
      N5= N1 + 1
      N6= N3 - 1
      N7= N2 + 1
      N8= NN2 + J
      N10= N8 + 1
      T1 = P2E(N1 ,KB,K)
      IF (T1.EQ.0.0) GO TO 126
      L = NRGNE(J,I,KB)
      M = NCOMP(L)
      TT5 = 0.0
      IF (IX(24).EQ.0) GO TO 111
      DO 110 KK = 1,KMAX
      TT5 = TT5 + SCAC(K,M,KK)*P2E(N1,KB,KK)
  110 CONTINUE
      GO TO 113
  111 CONTINUE
      DO 112 KK = 1,KMAX
      TT5 = TT5 + SCAC(KK,M,K)*P2E(N1,KB,KK)
  112 CONTINUE
  113 CONTINUE
      TT1 = (SIG(K,M,3) + SIG(K,M,9) + XLD*SIG(K,M,5))*T1*PVOL(L)
      TT3 = SIG(K,M,2)*T1
      TDR = DCONRE(N10 ,KB,N)
      IF (TDR.EQ.4096.0E-13) TDR = 0.0
      T2 = DCONBE(N1,KB,N)
      T3 = DCONBE(N3,KB,N)
      IF (NUAC(5).NE.14) GO TO 115
      T2 = 0.0
      T3 = 0.0
      IF (NOE.EQ.0) GO TO 114
      N2 = N2+1
      T2 = DCONBE(N1,KB,N)
      GO TO 115
  114 CONTINUE
      N3 = N3-1
      T3 = DCONBE(N3,KB,N)
  115 CONTINUE
      P2EUT = P2E(N2 ,KB,K)
      P2EUB = P2E(N3 ,KB,K)
      P2EUL = P2E(N4 ,KB,K)
      P2EUR = P2E(N5 ,KB,K)
      P2EUF = P2E(N1 ,KB-1,K)
      P2EUK = P2E(N1 ,KB+1,K)
      IF (I.EQ.1) P2EUT = 0.0
      IF (I.NE.IMAX) GO TO 116
      P2EUB = 0.0
      IF (INRB.NE.3) GO TO 116
      N13 = J*JVX
      IF (NUAC(5).EQ.14) N13 = N13/2
      P2EUB = P2E(N13,KB,K)
  116 CONTINUE
      IF (J.NE.1) GO TO 117
      P2EUL = 0.0
      IF (INRB.NE.2) GO TO 117
      N12 = NN1 + JMAX
      P2EUL = P2E(N12 ,KB,K)
  117 IF (J.NE.JMAX) GO TO 121
      P2EUR = 0.0
      GO TO (121,118,119,120),INRB
  118 CONTINUE
      N11 = NN1 + 1
      P2EUR = P2E(N11,KB,K)
      GO TO 121
  119 CONTINUE
      N14 = (IVX-1)*JVX + I
      IF (NUAC(5).EQ.14) N14 = N14+I
      P2EUR = P2E(N14,KB,K)
      GO TO 121
  120 CONTINUE
      N15 = (IVXP1-I)*JVX
      P2EUR = P2E(N15,KB,K)
  121 CONTINUE
      IF (KB.EQ.1) P2EUF = 0.0
      IF (KB.EQ.KBMAX) P2EUK = 0.0
      IF (NUAC(5).EQ.13) GO TO 122
      TT4 = (T1-P2EUT )*T2 + (T1-P2EUB )*T3 + (T1-P2EUL )*DCONRE(N8 ,KB,
     >  N)+ (T1-P2EUR)*TDR+ (T1-P2EUF )* DCONBK(N1 ,KB,N)+ (T1-P2EUK )*
     > DCONBK(N1 ,KB+1,N)
      GO TO 123
C     3-D HEXAGONAL RESIDUES
  122 KKK = N + IOVX
      N9= N8 + JVXP1
      P2EUH=P2E(N6 ,KB,K)
      P2EUI=P2E(N7 ,KB,K)
      IF (I.EQ.1.OR.J.EQ.JMAX) P2EUI=0.0
      IF (J.EQ.1.OR.I.EQ.IMAX) P2EUH=0.0
      TT4 = (T1-P2EUT )*DCONBE(N1 ,KB,N)+ (T1-P2EUB )*DCONBE(N3 ,KB,N) +
     >  (T1-P2EUL )*DCONRE(N8 ,KB,N)+ (T1-P2EUR)*TDR+ (T1-P2EUF )*
     > DCONBK(N1 ,KB,N)+ (T1-P2EUK )*DCONBK(N1 ,KB+1,N) + (T1-P2EUH)*
     > DCONRE(N9 ,KB,KKK)+ (T1-P2EUI)*DCONRE(N10 ,KB,KKK)
  123 CONTINUE
      IF (IX(24).EQ.0) GO TO 124
      TT6 = SIG(K,M,4)*PVOL(L)*SOURE(J,I,KB)*XKEF1
      GO TO 125
  124 TT6 = XI(K)*SOURE(J,I,KB) + XLD*SIG(K,M,8)*PVOL(L)
  125 CONTINUE
      TT3=PVOL(L)*(TT3-TT5)
      TTT1 = TTT1 + TT6*(TT4+TT1+TT3)
      TTT2 = TTT2 +TT6**2
      TTT3 = TTT3 + TT1*(XLA*TT6-TT4-TT3)
      TTT4 = TTT4 + TT1**2
  126 CONTINUE
  127 CONTINUE
  128 CONTINUE
  129 CONTINUE
      IF (IX37.GT.0) REWIND IOADJ
      RESLM = TTT2/TTT1
      RESSA = TTT3/TTT4
      IF (NUAC(3).LE.0) GO TO 130
      XKEF2 = XKEF1
      XKEF1 = RESLM
      XLAMDA = 1.0/XKEF1
      VRGK1 = ABS(XKEF2/XKEF1-1.0)
  130 CONTINUE
      RETURN
      END
CKTRI 125.1 ***CITATION*** LINE RELAX ON ROWS 3-D TRIANGLE GEOM/CF-KNSD
      SUBROUTINE KTRI(SCATE,P2E,DCONBE,DCONRE,DCONBK,PTSAE,TSOUR, NRGNE,
     >  E1,LVX, IVX,JVX,KBVX,KVX,IVXP1,JVXP1,KBVXP1, JIVX,JIP1VX,JP1IXZ,
     >  IOVX,IOVZ)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
C
      DIMENSION SCATE(JVX,IVX,KBVX),P2E(JIVX,KBVX,KVX), DCONBE(JIP1VX,
     > KBVX,IOVX),DCONRE(JP1IXZ,KBVX,IOVZ), DCONBK(JIVX,KBVXP1,IOVX),
     > PTSAE(JIVX,KBVX,IOVX)
      DIMENSION E1(LVX,KVX),NRGNE(JVX,IVX,KBVX)
      DIMENSION TSOUR(211)
CCCC ********** SUBSCRIPT DEFINITIONS (KWRD E-070) ********* CCCCC
C    NEW         OLD            NEW         OLD
C     N1         J,I             N5 *     J+1,I
C     N2         J,I-1           N6       JVX,I
C     N3         J,I+1           N14        M,L
C     N4         N/A             N15        I,J
C     M2 = J-1,I+1
C     M3 = J+1,I-1
      INRB = IX(72)+1
      N = IX(20)
      DO 136 KB=1,KBVX
      ASSIGN 100 TO IBR1
      IF (KB.LE.1) ASSIGN 101 TO IBR1
      ASSIGN 102 TO IBR2
      IF (KB.GE.KBVX) ASSIGN 103 TO IBR2
      KBM1 = KB - 1
      KBP1 = KB + 1
      DO 135 I=1,IVX
      ASSIGN 104 TO IBR3
      IF (I.LE.1) ASSIGN 107 TO IBR3
      ASSIGN 106 TO IBR4
      IF (I.GE.IVX) ASSIGN 107 TO IBR4
      IM1 = I - 1
      IP1 = I + 1
      NN1 = IM1*JVX
      NN3 = NN1 + JVX
      MM2 = I*JVX-1
      MM3 = (I-2)*JVX+1
      N1 = NN1
      M2 = MM2
      M3 = MM3
      DO 108 J=1,JVX
      NOE = J-(J/2)*2
      N1 = N1 + 1
      M2 = M2+1
      M3 = M3+1
      CKSS = SCATE(J,I,KB)
      GO TO IBR1, (100,101)
  100 CKSS = CKSS + P2E(N1 ,KBM1,K)*DCONBK(N1 ,KB,N)
  101 GO TO IBR2, (102,103)
  102 CKSS = CKSS + P2E(N1 ,KBP1,K)*DCONBK(N1 ,KBP1,N)
  103 CONTINUE
      IF (NOE.EQ.0) GO TO 105
      GO TO IBR3, (104,107)
  104 CKSS = CKSS+P2E(M3,KB,K)*DCONBE(N1,KB,N)
      GO TO 107
  105 GO TO IBR4, (106,107)
  106 CKSS = CKSS+P2E(M2,KB,K)*DCONBE(M2,KB,N)
  107 TSOUR(J) = CKSS
  108 CONTINUE
      NN4 = IM1*JVXP1
      N4 = NN4 + 1
      N5 = N4 + 1
      N1 = NN1 + 1
      D4 = DCONRE(N5 ,KB,N)
      IF (P2E(N1,KB,K).EQ.0.0) GO TO 109
      L = NRGNE(1,I,KB)
      BET(1) = TSOUR(1)/D4
      DEL(1) = D4/(PTSAE(N1 ,KB,N) + E1(L,K))
      IF (INRB.EQ.2) BET(1) = BET(1)+P2E(NN3,KB,K)*DCONRE(N4,KB,N)/D4
      GO TO 110
  109 DEL(1) = 0.0
  110 CONTINUE
      DO 112 J=2,JVX
      N1 = N1 + 1
      N5 = N5 + 1
      IF (P2E(N1,KB,K).EQ.0.0) GO TO 111
      L = NRGNE(J,I,KB)
      T = D4*DEL(J-1)
      D4 = DCONRE(N5 ,KB,N)
      BET(J) = ( TSOUR(J) + BET(J-1)*T)/D4
      DEL(J) = D4/(PTSAE(N1 ,KB,N) + E1(L,K) - T)
      IF (INRB.NE.3) GO TO 112
      IF (I.NE.IMAX) GO TO 112
      IF (((J/2)*2).NE.J) GO TO 112
      IF (J.EQ.JVX) GO TO 112
      NN12 = (J/2)*JVX
      MM22 = IVX*JVX+J-1
      BET(J) = BET(J)+P2E(NN12,KB,K)*DCONBE(MM22,KB,N)/D4
      GO TO 112
  111 DEL(J) = 0.0
  112 CONTINUE
      GO TO (116,113,114,115),INRB
  113 CONTINUE
      N222 = NN1+1
      BET(JVX) = BET(JVX)+P2E(N222,KB,K)
      GO TO 116
  114 CONTINUE
      IF (I.EQ.IVX) GO TO 116
      N223 = (IVX-1)*JVX+2*I
      BET(JVX) = BET(JVX)+P2E(N223,KB,K)
      GO TO 116
  115 CONTINUE
      N224 = (IVXP1-I-1)*JVX+JVX
      BET(JVX) = BET(JVX)+P2E(N224,KB,K)
  116 CONTINUE
      N6 = NN3
      TEMP=BET(JVX)*DEL(JVX)
      T=P2E(N6 ,KB,K)
      TMF=T+BETTA*(TEMP-T)
      IF (IEP) 117,121,118
  117 P2E(N6 ,KB,K)=TEMP
      GO TO 122
  118 IF (TMF-TEMP) 120,121,119
  119 TMF=AMIN1(TMF,(TEMP+T))
      GO TO 121
  120 TMF=AMAX1(TMF,0.5*TEMP)
  121 CONTINUE
      P2E(N6 ,KB,K)=TMF
  122 DO 129JJ=2,JVX
      J=JVXP1-JJ
      N1= NN1 + J
      T=P2E(N1 ,KB,K)
      TEMP=DEL(J)*(TEMP+BET(J))
      TMF=T+BETTA*(TEMP-T)
      IF (IEP) 123,127,124
  123 P2E(N1 ,KB,K)=TEMP
      GO TO 129
  124 IF (TMF-TEMP) 126,127,125
  125 TMF=AMIN1(TMF,(TEMP+T))
      GO TO 127
  126 TMF=AMAX1(TMF,0.5*TEMP)
  127 CONTINUE
  128 P2E(N1 ,KB,K)=TMF
  129 CONTINUE
      IF (NUAC(8)) 130,134,132
  130 L=IVXP1-I
      NN7= (L-1)*JVX
      DO 131J=1,JVX
      M=JVXP1-J
      N1= NN1 + J
      N14= NN7 + M
      P2E(N14,KB,K)=P2E(N1 ,KB,K)
  131 CONTINUE
      GO TO 134
  132 DO 133J=1,JVX
      N1= NN1 + J
      N15= (J-1)*JVX + I
      P2E(N15,KB,K)=P2E(N1 ,KB,K)
  133 CONTINUE
  134 CONTINUE
  135 CONTINUE
  136 CONTINUE
      RETURN
      END
CSSZU --128 ***CITATION*** UPDATE SUB-ZONE CONCENTRATIONS / CF-CALR
C                          AFTER NUCLIDE SEARCHES
      SUBROUTINE SSZU(CONC,ZONEN,NJJR,RATE,MVX,NVX,NSETVX,NVO)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     >  , XNAME(3,200)
      COMMON/AMISS/ITMIS(20),AITMIS(20)
C
      DIMENSION CONC(NVX,MVX),ZONEN(NVO),NJJR(NVX,NSETVX)
      DIMENSION RATE(NVX,MVX)
C
      IO19 = IX(86)
      REWIND IO19
      WRITE(IO19)RATE,IXPUT
      REWIND IO19
      IF (ITMIS(1).LE.0) GO TO 100
      IO29 = IX(96)
      REWIND IO29
      READ(IO29)(IXPUT(M),M=1,MVX)
      REWIND IO29
  100 CONTINUE
      NOB = NSRH(10)
      NIB = NSRH(22)
      IF (NOB.NE.(-1)) GO TO 101
      IO18 = IX(85)
      REWIND IO18
      READ(IO18) NXZ
      READ(IO18) (NXTR1(I),I=1,NXZ)
  101 CONTINUE
      IF (NIB.EQ.0) GO TO 103
      DO 102 M=1,MMAX
      DO 102 N=1,NMAX
  102 RATE(N,M) = 0.0
  103 CONTINUE
      ISZC = IX(78)
      IO12 = IX(79)
      REWIND IO12
      REWIND ISZC
      READ(IO12) I1
      WRITE(ISZC) I1
      DO 129 M=1,MMAX
      READ(IO12) I1,I2
      WRITE(ISZC) I1,I2
      NS = NXSET(M)
      NR = NXODR(NS)
      NSX = NSIG2(NR)
      NSUBZ = NZON(M)
      NL = NSX*NSUBZ
      READ(IO12) (ZONEN(L),L=1,NL)
      IF (NOB.NE.(-1)) GO TO 105
      DO 104 I=1,NXZ
      IF (M.EQ.NXTR1(I)) GO TO 107
  104 CONTINUE
      GO TO 128
  105 CONTINUE
      IF ((IX(44).EQ.0).AND.(IX(49).EQ.0)) GO TO 108
      IF (IX(49).GT.0) GO TO 106
      IF ((M.EQ.IX(44)).OR.(M.EQ.IX(45)).OR.(M.EQ.IX(46))
     > .OR.(M.EQ.IX(47)).OR.(M.EQ.IX(48))) GO TO 108
      GO TO 128
  106 IF (IX(49).NE.NCLASS(M)) GO TO 128
      GO TO 108
  107 READ(IO18) (XTR1(N),N=1,NSX)
  108 CONTINUE
      NAB = NIB
      IF ((NIB.EQ.2).AND.(ITMIS(1).LE.0)) NAB = 0
      IF (NSUBZ.LE.1) NAB = 0
      IF (NAB.NE.1) GO TO 111
      T2 = NSUBZ
      DO 110 N=1,NSX
      T1 = 0.0
      DO 109 LZ=1,NSUBZ
      NSZ = (LZ-1)*NSX + N
      T1 = T1 + ZONEN(NSZ)
  109 CONTINUE
      RATE(N,M) = T1/T2
  110 CONTINUE
      GO TO 114
  111 CONTINUE
      IF (NAB.NE.(-1)) GO TO 114
      NSUBZM = NSUBZ - 1
      DO 113 N=1,NSX
      T1 = 0.0
      DO 112 LZ=1,NSUBZM
      NSZ = (LZ-1)*NSX + N
      T1 = T1 + ZONEN(NSZ)
  112 CONTINUE
      RATE(N,M) = T1
  113 CONTINUE
  114 CONTINUE
      NSUBZT = NSUBZ
      IF (NAB.NE.2) GO TO 117
      DO 116 N = 1,NSX
      T1 = 0.0
      DO 115 LZ = 1,NSUBZ
      IF (IXPUT(M).EQ.LZ) GO TO 115
      NSZ = (LZ-1)*NSZ+N
      T1 = T1+ZONEN(NSZ)
  115 CONTINUE
      RATE(N,M) = T1
  116 CONTINUE
  117 CONTINUE
      NSZ = 0
      N1 = 1
      IF (NAB.NE.(-1)) GO TO 118
      NSZ = (NSUBZ-1)*NSX
      N1 = NSUBZ
  118 CONTINUE
      IF (NAB.NE.2) GO TO 119
      NSZ = (IXPUT(M)-1)*NSX
      N1 = IXPUT(M)
      NSUBZT = N1
  119 CONTINUE
      DO 127 LZ = N1,NSUBZT
      DO 126 N=1,NSX
      NSZ = NSZ + 1
      IF (NOB.EQ.(-1)) GO TO 121
      DO 120 INI=11,18
      IF (NJJR(N,NR).EQ.NSRH(INI)) GO TO 122
  120 CONTINUE
      GO TO 126
  121 CONTINUE
      IF (XTR1(N).EQ.0.0) GO TO 126
  122 CONTINUE
      IF (NAB.EQ.2) GO TO 123
      IF (NAB) 123,124,125
  123 ZONEN(NSZ) = NSUBZ*CONC(N,M) - RATE(N,M)
      GO TO 126
  124 ZONEN(NSZ) = CONC(N,M)
      GO TO 126
  125 ZONEN(NSZ) = ZONEN(NSZ)*CONC(N,M)/RATE(N,M)
  126 CONTINUE
  127 CONTINUE
  128 CONTINUE
      WRITE(ISZC) (ZONEN(L),L=1,NL)
  129 CONTINUE
      REWIND IO12
      REWIND ISZC
      READ(ISZC) I1
      WRITE(IO12) I1
      DO 130 M=1,MMAX
      READ(ISZC) I1,I2
      WRITE(IO12) I1,I2
      NS = NXSET(M)
      NR = NXODR(NS)
      NSX = NSIG2(NR)
      NSUBZ = NZON(M)
      NL = NSX*NSUBZ
      READ(ISZC) (ZONEN(L),L=1,NL)
      WRITE(IO12) (ZONEN(L),L=1,NL)
  130 CONTINUE
      REWIND IO12
      REWIND ISZC
      IF (NOB.EQ.(-1)) REWIND IO18
      READ(IO19) RATE,IXPUT
      REWIND IO19
      RETURN
      END
CDRIV --163    ***FUEL MANAGEMENT***   DRIVER
C     CALLED FROM/MEDT
      SUBROUTINE DRIV(A,MEMORY,IOS)
C
      DOUBLE PRECISION FLOTR
C
      COMMON/FMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
      COMMON/CMARY/MEMARY(1),IMN,MNI,IJLMN,NMLJI,IY(50),AX(50),TITL(36)
      COMMON/COOPD/FLOTR(200),INTGR(100)
      COMMON/FMADD/KAY(1),K1,K2,K3,K4,K5,K6,K7,K8,K9,K10,K11,K12,K13,
     > K14,K15,K16,K17,K18,K19,K20,K21,K22,K23,K24,K25,K26,K27,K28,K29,
     > K30,K31,K32,K33,K34,K35,K36,K37,K38,K39,K40,K41,K42,K43,K44,K45,
     > K46,K47,K48,K49,K50,K500,K501,K502,K503,K504,K505,K506,K507,K508,
     >  K509,K51,K52,K53,K54,K540,K541,K542,K543,K544,K545,K546,K547,
     > K548,K549,K550,K55,K56,K57,K58,K59,K60,K61,K62,K63, K64,K65,K66,
     > K67,K68,K69,K70,K71,K72,K73,K74,K75
      COMMON/FMIMS/IB(100),MEMVRY,NFSVX,NRSVX,NDSVX,NISVX,NPDVX,NFMVX,
     > MVX,NVX,NRLVX,I1VX,I2VX,I3VX,I4VX,I5VX,I6VX,I7VX,I8VX,I9VX,I10VX,
     >  NONNN,NSETVX
C
      DIMENSION A(MEMORY)
      DIMENSION TITLE(17)
      DIMENSION IC(9)
      DIMENSION DN(9)
      CHARACTER*8 DN
C
      DATA DN(1)/8HMANGDATA/,DN(2)/8HSCRATCH1/,DN(3)/8HHISTDATA/, DN(4)/
     >  8HCYCLHIST/,DN(5)/8HMASSDATA/,DN(6)/8HSBZNDENS/, DN(7)/
     > 8HZONEDENS/,DN(8)/8HSCRATCH2/,DN(9)/8HFUELDATA/
C*****FIXED LENTH OF 1 ST COMMON/ALSUB/
      NLSUB = 455
C*****ZERO ALL VARIABLES*****
  100 CALL INTL(A,MEMORY)
      MEMVRY = MEMORY
      IADR = 20
      IOUT = INTGR(20)
      CALL XION(DN(1),IO1,IOUT,IADR)
      REWIND IO1
      IO2 = INTGR(12)
      REWIND IO2
      NCY = INTGR(71)
      IF (INTGR(35).EQ.0) GO TO 105
      IF (INTGR(37).EQ.1) GO TO 101
      IF (INTGR(67).GT.0) GO TO 101
      IF (NCY.LE.INTGR(58)) GO TO 101
      INTGR(37) = 1
      INTGR(48) = 0
      INTGR(50) = 0
  101 CONTINUE
      IF ((INTGR(35).GT.0).AND.(NCY.EQ.1).AND.(INTGR(37).EQ.1))
     > INTGR(49) = 1
      IF ((NCY.LE.(INTGR(58)+1)).AND.(INTGR(37).EQ.1)) INTGR(49) = 1
      IF ((INTGR(35).GT.0).AND.(NCY.EQ.1).AND.(INTGR(37).EQ.1)) GO TO
     > 105
      IF ((NCY.LE.(INTGR(58)+1)).AND.(INTGR(37).EQ.1)) GO TO 105
      IF ((NCY.LE.INTGR(42)).AND.(INTGR(37).GT.1)) INTGR(49) = 1
      IF ((NCY.LE.INTGR(42)).AND.(INTGR(37).GT.1)) GO TO 105
      NRC = INTGR(46)
      T1 = FLOTR(20)
      T2 = FLOTR(21)
      IF (T1.EQ.0.0.OR.T2.EQ.0.0) GO TO 102
      T3 = (T1-T2)/T2
      GO TO 103
  102 T3=T1-T2
  103 CONTINUE
      IF (INTGR(35).GT.0) WRITE(IOUT,1002)T3
      IF (INTGR(35).LT.0) WRITE(IOUT,1001)T3
      T4 = ABS(T3)
      INTGR(47) = 1
      T5 = FLOTR(109)
      IF (T4.LT.T5) INTGR(47) = -1
      IF (T4.LT.T5) INTGR(49) = 1
      IF (INTGR(35).LT.0) INTGR(47) = -1
      IF ((INTGR(35).LT.0).AND.(INTGR(49).GT.0)) INTGR(77) = 1
      IF (INTGR(35).LT.0) GO TO 105
      IF (NRC.GE.INTGR(35)) INTGR(47) = -1
      IF (NRC.GE.INTGR(35)) INTGR(49) = 1
      IF ((INTGR(49).GT.0).OR.(NRC.GE.INTGR(35))) GO TO 105
  104 CONTINUE
      IF (INTGR(35).GT.0) WRITE(IOUT,1003)NCY,NRC
      IF ((NCY.EQ.1).AND.(INTGR(37).GT.1).AND.(NRC.EQ.1)) GO TO 105
      I1 = 1
      IRC = 0
      LNTH = NLSUB
      CALL GRIT(BLSUB(1),LNTH,IRC,IO2,I1)
      LNTH = IX(4)
      CALL GRIT(KAY(1) ,LNTH,IRC,IO2,I1)
      LNTH = IX(5)
      CALL GRIT(IB(1) ,LNTH,IRC,IO2,I1)
      NCY = INTGR(71)
      GO TO 106
  105 CONTINUE
      READ(IO1)
      READ(IO1)
      I1 = 1
      IRC = 0
      LNTH = NLSUB
      CALL GRIT(BLSUB(1),LNTH,IRC,IO1,I1)
      LNTH = IX(4)
      CALL GRIT(KAY(1) ,LNTH,IRC,IO1,I1)
      LNTH = IX(5)
      CALL GRIT(IB(1) ,LNTH,IRC,IO1,I1)
      REWIND IO1
      NCY = INTGR(71)
  106 CONTINUE
      IXI = IY(31)
C*****READ MANAGEMENT INPUT DATA FROM IO1*****
      I1 = 1
      I2 = 2
      CALL GRIT(A(K1),IX(1),I1,IO1,I1)
      CALL GRIT(A(K33),IX(2),I2,IO1,I1)
C*****READ FIXED INTERFACE DATA*****
      CALL IFCE(A,MEMORY,A(K36))
      IF (INTGR(35).LE.0) GO TO 109
      IF ((INTGR(35).GT.0).AND.(NCY.EQ.1).AND.(INTGR(37).EQ.1)) GO TO
     > 109
      IF ((NCY.LE.INTGR(42)).AND.(INTGR(37).GT.1)) GO TO 109
      IF (INTGR(49).GT.0) GO TO 107
      IF (INTGR(47).EQ.0) GO TO 109
      IF ((NCY.EQ.1).AND.(INTGR(37).GT.1).AND.(NRC.EQ.1)) GO TO 108
  107 CONTINUE
      I1 = 1
      IRC = 0
      REWIND IO1
      READ(IO1)
      READ(IO1)
      READ(IO1)
      READ(IO1)
      READ(IO1)
      READ(IO1)
      LNTH = IX(7)
      CALL GRIT(A(K501),LNTH,IRC,IO1,I1)
      LNTH = IX(8)
      CALL GRIT(A(K60) ,LNTH,IRC,IO1,I1)
      REWIND IO1
      IF (INTGR(49).GT.0) GO TO 109
  108 CONTINUE
      NCY = INTGR(71)-1
      INTGR(4) = 0
      IF (NCY.EQ.0) INTGR(4) = 1
      IF (NCY.EQ.0) NCY = 1
  109 CONTINUE
      KEND = IX(20)
      IF (NCY.GT.1) GO TO 110
      WRITE(IOUT,1005)MEMORY,KEND
  110 CONTINUE
      IF (KEND.LE.MEMORY) GO TO 111
      WRITE(IOUT,1006)
      return
  111 CONTINUE
      IOR = INTGR(13)
      NGC2 = INTGR(14)
      NGC3 = INTGR(15)
      IX(13) = IB(13)
      IF ((NCY.EQ.1).AND.(INTGR(37).GT.1).AND.(NRC.EQ.1).AND.(INTGR(4)
     > .GT.0)) GO TO 112
      IF (INTGR(47).GT.0) GO TO 114
      IF (INTGR(35).LE.0) GO TO 113
      IF (INTGR(47).LT.0) GO TO 113
  112 CONTINUE
      REWIND IO2
      I2 = 2
      IRC = 0
      LNTH = IX(3)
      CALL GRIT(BLSUB(1),LNTH,IRC,IO2,I2)
      LNTH = IX(4)
      CALL GRIT(KAY(1) ,LNTH,IRC,IO2,I2)
      LNTH = IX(5)
      CALL GRIT(IB(1) ,LNTH,IRC,IO2,I2)
  113 CONTINUE
      IF (NGC3.EQ.0) GO TO 114
C***** WRITE RESTART TAPE
      IF ((NCY.EQ.1).AND.(INTGR(19).EQ.1)) CALL INCO(A(K549),A(K49),
     > A(K50),A(K546),MVX,NVX,NSETVX,I5VX,IOR,A,MEMORY)
      M1 = IX(1)
      M2 = IX(2)
      M3 = 455
      M4 = 97
      M5 = 122
      M6 = 141
      M7 = 250
      M8 = K55-1
      WRITE(IOR)NCY,NCY,NCY,NCY,NCY
      WRITE(IOR)M1,M2,M3,M4,M5,M6,M7,M8
      WRITE(IOR)(BLSUB(I),I=1,M3)
      WRITE(IOR)(KAY(I),I=1,M4)
      WRITE(IOR)(IB(I),I=1,M5)
      WRITE(IOR)(MEMARY(I),I=1,M6)
      WRITE(IOR)(FLOTR(I),I=1,M7)
      WRITE(IOR)(A(I),I=1,M8)
  114 CONTINUE
C*****DO FUEL MANAGEMENT*****
      CALL MNGE(A,MEMORY)
  115 CONTINUE
      NDY = NCY
      IF (INTGR(4).GT.0) NDY = 0
      WRITE(IOUT,1004) NDY
  116 CONTINUE
      RETURN
 1000 FORMAT('0REPEAT CYCLE PARAMETER TO BE ADJUSTED IS ZERO - PROCEEDIN
     >G AS IF CONVERGED')
 1001 FORMAT('0NON-REPEATING CYCLE CONVERGENCE IS',1PE13.5)
 1002 FORMAT('0 REPEAT CYCLE CONVERGENCE IS',1PE13.5)
 1003 FORMAT('0REPEATING CYCLE',I4,'   ITERATION NUMBER',I4)
 1004 FORMAT('0END FUEL MANAGEMENT FOR CYCLE',I4)
 1005 FORMAT('0ARRAY STORAGE ALLOCATED FOR FUEL MANAGEMENT IS',I7/
     > ' THIS FUEL MANAGEMENT PROBLEM REQUIRES',I7)
 1006 FORMAT('0ERROR STOP 904')
      END
CIFCE --166    ***FUEL MANAGEMENT***   READ INTERFACE DATA CONTROL
C     CALLED FROM/DRIV
      SUBROUTINE IFCE(A,MEMORY,MAC13)
C
      DOUBLE PRECISION FLOTR
C
      COMMON/FMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
      COMMON/FMADD/KAY(1),K1,K2,K3,K4,K5,K6,K7,K8,K9,K10,K11,K12,K13,
     > K14,K15,K16,K17,K18,K19,K20,K21,K22,K23,K24,K25,K26,K27,K28,K29,
     > K30,K31,K32,K33,K34,K35,K36,K37,K38,K39,K40,K41,K42,K43,K44,K45,
     > K46,K47,K48,K49,K50,K500,K501,K502,K503,K504,K505,K506,K507,K508,
     >  K509,K51,K52,K53,K54,K540,K541,K542,K543,K544,K545,K546,K547,
     > K548,K549,K550,K55,K56,K57,K58,K59,K60,K61,K62,K63, K64,K65,K66,
     > K67,K68,K69,K70,K71,K72,K73,K74,K75
      COMMON/FMIMS/IB(100),MEMVRY,NFSVX,NRSVX,NDSVX,NISVX,NPDVX,NFMVX,
     > MVX,NVX,NRLVX,I1VX,I2VX,I3VX,I4VX,I5VX,I6VX,I7VX,I8VX,I9VX,I10VX,
     >  NONNN,NSETVX
      COMMON/CMARY/MEMARY(1),IMN,MNI,IJLMN,NMLJI,IY(50),AX(50),TITL(36)
      COMMON/COOPD/FLOTR(200),INTGR(100)
C
      DIMENSION A(MEMORY)
C
      NDY = NCY
      IF (INTGR(47).GT.0) NDY = INTGR(71)-1
      IF (MAC13.EQ.0) WRITE(IOUT,1000) NDY
      IF (MAC13.EQ.0) GO TO 100
      WRITE(IOUT,1001)(TITL(I),I=1,18),(TITL(I),I=19,36),NDY
  100 CONTINUE
  101 REWIND IO3
      IF ((NCY.GT.1).OR.(INTGR(19).GT.1).OR.(INTGR(46).GT.1)) GO TO 102
      READ(IO3)
      READ(IO3)(IB(I),I=1,100)
      MVX = IB(3)
      NVX = IB(4)
      NONNN = IB(5)
      I6VX = IB(6)
      I7VX = IB(13)
      NSETVX = IB(9)
      K43 = K42+2*(2*I6VX)
      K44 = K43+2*NONNN
      K45 = K44+NONNN
      K46 = K45+NONNN
      K47 = K46+NVX*NSETVX
      K48 = K47+NONNN*NSETVX
      K49 = K48+4*NONNN
      K50 = K49+7*MVX
      K500 = K50+6*NSETVX
      K501 = K500+MVX
      K502 = K501+MVX
      K503 = K502+MVX
      K504 = K503+MVX
      K505 = K504+1
      K506 = K505+1
      K507 = K506+1
      K508 = K507+1
      K509 = K508+1
      K51 = K509+1
C*****READ FIXED INTERFACE DATA
      CALL RADE(A(K42),A(K43),A(K44),A(K45),A(K46),A(K47),A(K48),A(K49),
     >  A(K50),A(K500),A(K501),A(K502),A(K503),A(K504),A(K505),A(K506),
     > A(K507),A(K508),A(K509),I6VX,NONNN,NVX,NSETVX,MVX,A(K36))
      REWIND IO3
      K52 = K51+NISVX*NDSVX*I2VX
      K53 = K52+NISVX*NRSVX*5
      K54 = K53+NISVX
      K540 = K54+MVX
      K541 = K540+NISVX
      K542 = K541+NISVX*NRSVX
      K543 = K542+MVX
      K544 = K543+MVX
      K545 = K544+MVX
C*****CALCULATE I5VX
      CALL IFVX(A(K49),A(K50), MVX,NSETVX,I5VX)
      K546 = K545+NVX*MVX
      K547 = K546+I5VX
      K548 = K547+20
      K549 = K548+20
      K550 = K549+NVX*MVX
      K55 = K550+I7VX
      NADF = NISVX*NFSVX
      NADR = NISVX*NRSVX
      NADD = NISVX*NDSVX
      K56 = K55+NADF
      K57 = K56+NADR
      K58 = K57+NADR
      K59 = K58+NADD
      K60 = K59+NADD
      K61 = K60+NADF
      K62 = K61+1
      K63 = K62+1
      K64 = K63+1
      K65 = K64+NISVX
      K66 = K65+NISVX
      K67 = K66+NISVX
      K68 = K67+NISVX
      K69 = K68+NISVX
      K70 = K69+NISVX
      K71 = K70+1
      K72 = K71+1
      K73 = K72+1
      K74 = K73+1
      K75 = K74+1
      IX(6) = K542-K42
      IX(7) = K504-K501
      IX(8) = K61-K60
      IX(20) = K75-1
C*****CALCULATE LJJR
      CALL ODER(A(K12),A(K540),A(K44),NISVX,NONNN)
      GO TO 103
  102 CONTINUE
      READ(IO1)
      READ(IO1)
      READ(IO1)
      READ(IO1)
      READ(IO1)
      I1 = 1
      IRC = 0
      LNTH = IX(6)
      CALL GRIT(A(K42) ,LNTH,IRC,IO1,I1)
      REWIND IO1
  103 CONTINUE
      RETURN
 1000 FORMAT('0START FUEL MANAGEMENT FOR CYCLE',I4)
 1001 FORMAT('1',25X,18A4/1X,25X,18A4/'0START FUEL MANAGEMENT FOR CYCLE'
     > ,I4)
      END
CMNGE --170    ***FUEL MANAGEMENT***   MANAGEMENT CONTROL
C     CALLED FROM/DRIV
      SUBROUTINE MNGE(A,MEMORY)
C
      DOUBLE PRECISION FLOTR
C
      COMMON/COOPD/FLOTR(200),INTGR(100)
      COMMON/FMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
      COMMON/FMADD/KAY(1),K1,K2,K3,K4,K5,K6,K7,K8,K9,K10,K11,K12,K13,
     > K14,K15,K16,K17,K18,K19,K20,K21,K22,K23,K24,K25,K26,K27,K28,K29,
     > K30,K31,K32,K33,K34,K35,K36,K37,K38,K39,K40,K41,K42,K43,K44,K45,
     > K46,K47,K48,K49,K50,K500,K501,K502,K503,K504,K505,K506,K507,K508,
     >  K509,K51,K52,K53,K54,K540,K541,K542,K543,K544,K545,K546,K547,
     > K548,K549,K550,K55,K56,K57,K58,K59,K60,K61,K62,K63, K64,K65,K66,
     > K67,K68,K69,K70,K71,K72,K73,K74,K75
      COMMON/FMIMS/IB(100),MEMVRY,NFSVX,NRSVX,NDSVX,NISVX,NPDVX,NFMVX,
     > MVX,NVX,NRLVX,I1VX,I2VX,I3VX,I4VX,I5VX,I6VX,I7VX,I8VX,I9VX,I10VX,
     >  NONNN,NSETVX
C
      DIMENSION A(MEMORY)
C
      IOR = INTGR(13)
      NGC2 = INTGR(14)
      NGC3 = INTGR(15)
C***********************************************************************
      JOUT = IX(10)
C***********************************************************************
C*****ZERO SOME VARIABLES
      NLAST = K60-1
      DO 100 N = K55,NLAST
      A(N) = 0.0
  100 CONTINUE
      IX(13) = IB(13)
      IF (INTGR(35).EQ.0) GO TO 102
      IF ((INTGR(47).EQ.0).OR.(INTGR(49).GT.0)) INTGR(48) = 0
      CALL I2T4(A(K545),A(K49),A(K546),A(K547),A(K548),A(K543),A(K544),
     > MVX,NVX,I5VX,A(K38))
  101 CONTINUE
      IF (INTGR(35).LT.0) GO TO 103
      IF (INTGR(47).GE.0) GO TO 103
      REWIND IO2
      I2 = 2
      IRC = 0
      LNTH = IX(3)
      CALL GRIT(BLSUB(1),LNTH,IRC,IO2,I2)
      LNTH = IX(4)
      CALL GRIT(KAY(1) ,LNTH,IRC,IO2,I2)
      LNTH = IX(5)
      CALL GRIT(IB(1) ,LNTH,IRC,IO2,I2)
      GO TO 103
  102 CONTINUE
      IF (INTGR(77).EQ.0) GO TO 103
      CALL EQTS(A(K549),A(K545),A(K36),MVX,NVX)
  103 CONTINUE
      CALL MANG(A(K11),A(K16),A(K19),A(K21),A(K22),A(K24),A(K25),A(K26),
     >  A(K41),A(K49),A(K51),A(K52),A(K54),A(K36),A(K541),A(K55),A(K56),
     >  A(K57),A,MEMORY, NFSVX,NRSVX,NDSVX, NISVX,NPDVX,NFMVX,MVX,NVX,
     > NRLVX,I1VX,I2VX, I3VX,I4VX,I5VX,I6VX, I7VX,I8VX,I9VX,I10VX,NONNN,
     >  NSETVX)
      NFR = 0
      IFR = 50
      CALL CFNT(A(K41),A(K500),A(K549),A(K545),A(K47),A(K49),A(K54),
     > A(K60),A(K12),A(K50),A(K546),A(K540),I3VX,I4VX,NVX,MVX,NRLVX,
     > NISVX,NFSVX,NDSVX,NFR,I5VX,NONNN,NSETVX,IFR,A(K501),A(K502),
     > A(K503),A(K48))
C*****WRITE ZONE AND SUBZONE CONC. ON I/O DEVICES ZONDENS AND SBZNDENS.
      CALL WCNC(A(K545),A(K546),A(K54),A(K50),A(K49), MVX,NVX,I5VX,
     > NSETVX,I7VX,A(K36))
      IF ((INTGR(37).GT.1).AND.(NCY.EQ.1).AND.(INTGR(46).EQ.1)) GO TO
     > 104
      IF (INTGR(47).GT.0) GO TO 105
  104 CONTINUE
C*****WRITE ZONE FUELING INDICATORS ON I/O DEVICE FUELDATA
      I2 = 2
      IO9 = IX(11)
      IRC = 1
      LNTH = MVX
      CALL GRIT(A(K542),LNTH,IRC,IO9,I2)
      IF (INTGR(47).GT.0) GO TO 105
C*****WRITE MASS BALANCE DATA ON I/O DEVICE.
      CALL ACCT(A(K55),A(K56),A(K57),A(K58),A(K59),A(K60),NRSVX, A(K540)
     >  ,NIND,A(K44),A(K45), NFSVX, NDSVX,NISVX,NVX,NONNN,A(K547),
     > A(K548),A(K36),A(K64),A(K65),A(K66),A(K67),A(K68),A(K69))
      IF (NGC3.EQ.0) GO TO 105
      LNTH = K542+MVX-1
      WRITE(IOR)(A(N),N=K542,LNTH)
  105 CONTINUE
C*****WRITE SAVE DATA FOR THIS CYCLE*****
      READ(IO1)
      READ(IO1)
      I2 = 2
      IRC = 0
      LNTH = IX(3)
      CALL GRIT(BLSUB(1),LNTH,IRC,IO1,I2)
      LNTH = IX(4)
      CALL GRIT(KAY(1) ,LNTH,IRC,IO1,I2)
      LNTH = IX(5)
      CALL GRIT(IB(1) ,LNTH,IRC,IO1,I2)
      LNTH = IX(6)
      CALL GRIT(A(K42) ,LNTH,IRC,IO1,I2)
      LNTH = IX(7)
      CALL GRIT(A(K501),LNTH,IRC,IO1,I2)
      LNTH = IX(8)
      CALL GRIT(A(K60) ,LNTH,IRC,IO1,I2)
      REWIND IO1
  106 CONTINUE
      IF (INTGR(47).GT.0) GO TO 107
      IF (INTGR(77).EQ.0) GO TO 107
      CALL MBED(A(K55),A(K56),A(K57),A(K58),A(K59),A(K60),NRSVX, A(K540)
     >  ,NIND,A(K44),A(K45), NFSVX, NDSVX,NISVX,NVX,NONNN,A(K547),
     > A(K548),A(K36),A(K64),A(K65),A(K66),A(K67),A(K68),A(K69))
  107 CONTINUE
      RETURN
      END
CMANG --173    ***FUEL MANAGEMENT***   MANAGEMENT DRIVER
C     CALLED FROM/MNGE
      SUBROUTINE MANG(MST,NFFFS,DLTMF,FSCON,NFRFS,DLTMR,DPQR,RCYFR, NFM,
     >  NZINF,CODC,CORC,NSUBNO,MAC,XNOT,FRFEED,REFEED,TOFEED, A,MEMORY,
     > NFSVX,NRSVX,NDSVX,NISVX,NPDVX, NFMVX,MVX,NVX,NRLVX,I1VX,I2VX,
     > I3VX,I4VX,I5VX,I6VX,I7VX,I8VX, I9VX,I10VX,NONNN,NSETVX)
C
      DOUBLE PRECISION HOLA,HAL,FLOTR
C
      COMMON/FMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
      COMMON/CMARY/MEMARY,IMN,MNI,IJLMN,NMLJI,IY(50),AX(50),TITL(36)
      COMMON/FMADD/KAY(1),K1,K2,K3,K4,K5,K6,K7,K8,K9,K10,K11,K12,K13,
     > K14,K15,K16,K17,K18,K19,K20,K21,K22,K23,K24,K25,K26,K27,K28,K29,
     > K30,K31,K32,K33,K34,K35,K36,K37,K38,K39,K40,K41,K42,K43,K44,K45,
     > K46,K47,K48,K49,K50,K500,K501,K502,K503,K504,K505,K506,K507,K508,
     >  K509,K51,K52,K53,K54,K540,K541,K542,K543,K544,K545,K546,K547,
     > K548,K549,K550,K55,K56,K57,K58,K59,K60,K61,K62,K63, K64,K65,K66,
     > K67,K68,K69,K70,K71,K72,K73,K74,K75
      COMMON/COOPD/FLOTR(200),INTGR(100)
C
      DIMENSION MST(8),NFFFS(NFSVX,12),DLTMF(NFSVX),FSCON(NISVX,NFSVX),
     > NFRFS(NRSVX,8),DLTMR(NRSVX),DPQR(NRSVX,2),RCYFR(NISVX,NRSVX),
     > NFM(I3VX,I4VX),CODC(NISVX,NDSVX,I2VX),CORC(NISVX,NRSVX,5),
     > NSUBNO(MVX),FRFEED(NISVX,NFSVX),REFEED(NISVX,NRSVX),
     > TOFEED(NISVX,NRSVX),NZINF(MVX,7),XNOT(NISVX,NRSVX),MAC(24)
      DIMENSION A(MEMORY)
C
      MAC13 = MAC(1)
C***********************************************************************
      JOUT = IX(10)
C***********************************************************************
      IF (NCY.EQ.1) IX(14) = 1
      IF (INTGR(3).GT.0) GO TO 103
C*****SET NSUBNO TO 1 OR 0 IF THERE ARE SUBZONES OR NOT
      DO 100 M = 1,MVX
      NSUBNO(M) = 0
      IF (NZINF(M,1).GT.1) NSUBNO(M) = 1
  100 CONTINUE
      IX(14) = 1
      NSPOT = IX(14)
C*****APPLY DECAY EQUATIONS TO FRESH FUEL FEED POTS
      DO 102 NFPOT = 1,NFSVX
      IF (DLTMF(NFPOT).EQ.0.0) GO TO 102
      NONE = 1
      CALL DCAX(FSCON,A(K53),DLTMF(NFPOT),NFPOT,NONE,A(K13),A(K14),
     > A(K15),A(K12),NISVX,NFSVX,NONE,NPDVX,NVX,NRLVX)
      IF (MAC13.LT.1) GO TO 101
      WRITE(IOUT,1002)NFPOT,DLTMF(NFPOT),(FSCON(N,NFPOT),N=1,NISVX)
  101 CONTINUE
  102 CONTINUE
  103 CONTINUE
      N1 = MST(7)+1
C*****IF NIND = 0, N0 RECYCLE YET - IF NIND = 1, RECYCLE
      NIND = 0
      IF (NCY.GE.N1) NIND = 1
C*****READ START AND END CONCENTRATIONS AND CALC. CONTENTS OF REACTOR
      CALL SECO(A(K549),NZINF,A(K50),A(K546),A(K44),A(K46),A(K500),
     > A(K545),A(K47),NSUBNO,A(K12),A(K540),A(K45),A(K60),A(K58),
     > A(K547),A(K548),NFM,NIND,NVX,MVX,NSETVX,I5VX,NONNN,NISVX,NFSVX,
     > NDSVX,I3VX,I4VX,NRLVX,NRSVX,A(K543),A(K544),MAC, A(K501),A(K502),
     > A(K503),A(K48))
C*****FIND DISCHARGE SUBPOT
      N1 = MST(7)+2
      IF (NCY.GE.N1) GO TO 104
      IX(14) = IX(14)+1
  104 CONTINUE
      IF (IX(14).GT.N1) IX(14) = N1
      NSPOT = IX(14)
      IF (NCY.LE.(MST(7)+1)) GO TO 109
      IF (INTGR(35).LE.0) GO TO 105
      IF (INTGR(47).EQ.-1) GO TO 105
      GO TO 109
  105 CONTINUE
C*****MOVE MATERIAL IN DISCHARGE SUBPOTS TO LEFT
      NLM = MST(7)+1
      DO 108 NDD = 1,NDSVX
      DO 107 NMV = 1,NLM
      NP2 = NMV+1
      DO 106 N = 1,NISVX
      CODC(N,NDD,NMV) = CODC(N,NDD,NP2)
  106 CONTINUE
  107 CONTINUE
  108 CONTINUE
  109 CONTINUE
      IF (INTGR(3).EQ.0) GO TO 122
      IF (INTGR(35).LE.0) GO TO 110
      IF ((INTGR(47).EQ.0).AND.(INTGR(49).EQ.1)) GO TO 110
      IF (INTGR(47).EQ.-1) GO TO 110
      GO TO 122
  110 CONTINUE
C*****CYCLE SUBZONE NUMBERS
      IF (IX(13).LE.1) GO TO 122
      DO 121 NSPEC = 1,I4VX
      N1 = NFM(11,NSPEC)
      IF (NCY.GT.NFM(10,NSPEC)) GO TO 121
      N2 = NFM(12,NSPEC)
      DO 111 I = 1,NCY
      IF (N1.EQ.NCY) GO TO 112
      IF (N1.GT.NCY) GO TO 121
      N1 = N1+N2
  111 CONTINUE
      GO TO 121
  112 CONTINUE
      DO 114 NGRS = 13,I3VX
      NRMV = NFM(NGRS,NSPEC)
      IF (NRMV.EQ.0) GO TO 115
      DO 113 M = 1,MVX
      IF (NRMV.NE.NZINF(M,7)) GO TO 113
      IF (NSUBNO(M).EQ.0) GO TO 113
      NSUBNO(M) = NSUBNO(M)+1
      IF (NSUBNO(M).GT.NZINF(M,1)) NSUBNO(M) = 1
  113 CONTINUE
  114 CONTINUE
  115 CONTINUE
      NSTRT = NGRS+1
      NNO = 0
      DO 116 NN = NSTRT,I3VX
      NZ1 = NFM(NN,NSPEC)
      NZ2 = NFM(NN+1,NSPEC)
      IF (NZ1.EQ.0) NGRS = NGRS+1
      IF (NZ1.EQ.0) GO TO 117
      NGRS = NGRS+1
      NNO = NNO+1
      NXTR1(NNO) = NZ1
  116 CONTINUE
  117 CONTINUE
      IF (NNO.NE.0) GO TO 118
      IF (NZ2.EQ.0) GO TO 120
      GO TO 115
  118 CONTINUE
      DO 119 NNN = 1,NNO
      M = NXTR1(NNN)
      IF (NSUBNO(M).EQ.0) GO TO 119
      NSUBNO(M) = NSUBNO(M)+1
      IF (NSUBNO(M).GT.NZINF(M,1)) NSUBNO(M) = 1
  119 CONTINUE
      IF (NZ2.NE.0) GO TO 115
  120 CONTINUE
  121 CONTINUE
  122 CONTINUE
      INTGR(3) = 1
C*****ZERO DISCHARGE SUBPOT CONTENTS
      DO 124 N1 = 1,NDSVX
      DO 123 N2 = 1,NISVX
      CODC(N2,N1,NSPOT) = 0.0
  123 CONTINUE
  124 CONTINUE
C*****LOAD DISCHARGE POTS FROM REACTOR
      CALL DPOT(NFM,NZINF,A(K500),NSUBNO,A(K50),A(K12),A(K545), A(K546),
     >  CODC,A(K59),A(K53),A(K29),A(K13),A(K14),A(K15),A(K47), A(K31),
     > A(K30),NSPOT,NIND,A(K540),A(K48),A(K550),I3VX,I4VX,MVX, NRLVX,
     > NVX,I5VX,NISVX,NDSVX,I2VX,NFSVX,NRSVX,NPDVX,NONNN, NSETVX,I7VX,
     > MAC)
C*****DISCHARGE POTS HAVE BEEN LOADED
C*****DISCHARGE POTS HAVE BEEN LOADED
C*****ZERO CONTENTS OF MAKEUP  RECEIVING POTS
      DO 126 N1 = 1,NRSVX
      DO 125 N2 = 1,NISVX
      CORC(N2,N1,2) = 0.0
      CORC(N2,N1,3) = 0.0
      CORC(N2,N1,4) = 0.0
  125 CONTINUE
  126 CONTINUE
C*****LOAD MAKEUP POTS
      NNSPEC = 0
      DO 134 NSPEC = 1,I4VX
      IF (NCY.GT.NFM(10,NSPEC)) GO TO 134
      N1 = NFM(11,NSPEC)
      N2 = NFM(12,NSPEC)
      DO 127 I = 1,NCY
      IF (N1.EQ.NCY) GO TO 128
      IF (N1.GT.NCY) GO TO 134
      N1 = N1+N2
  127 CONTINUE
      GO TO 134
C*****FRESH FUEL FEED POT PRIOR TO RECYCLE MATERIAL
  128 NFPOT = NFM(2,NSPEC)
      NNSPEC = 1
      IF (NFPOT.EQ.0) GO TO 134
C***** MAKEUP POT TO BE LOADED FROM DISCHARGE AND FFF POTS
      NRPOT = NFM(4,NSPEC)
C*****THREE DISCHARGE POTS - SOURCE OF RECYCLE MATERIAL
      NDPOT1 = NFRFS(NRPOT,3)
      NDPOT2 = NFRFS(NRPOT,4)
      NDPOT3 = NFRFS(NRPOT,5)
C*****FRESH FUEL FEED POT TO MIX WITH RECYCLE MATERIAL
      NFRPOT = NFRFS(NRPOT,6)
      IF (MAC13.LT.1) GO TO 129
      WRITE(IOUT,1003)NSPEC
      WRITE(IOUT,1004)NRPOT
  129 CONTINUE
      IF (NIND.GT.0) GO TO 131
      IF (MAC13.LT.1) GO TO 130
      WRITE(IOUT,1005)NFPOT
      IF (NFFFS(NFPOT,2).EQ.0) WRITE(IOUT,1006)
  130 CONTINUE
      GO TO 133
  131 CONTINUE
      IF (MAC13.LT.1) GO TO 132
      WRITE(IOUT,1007)NFRPOT,NDPOT1,NDPOT2,NDPOT3
      IF (NFFFS(NFRPOT,2).EQ.0) WRITE(IOUT,1008)
  132 CONTINUE
  133 CONTINUE
      CALL LRCY(NFM,NZINF,A(K500),NSUBNO,NFFFS,A(K550),A(K50),A(K540),
     > A(K47),CORC,A(K549),FSCON,CODC,RCYFR,NFPOT,NRPOT,NDPOT1, NDPOT2,
     > NDPOT3,NFRPOT,NIND,NSPEC,I1VX,I2VX,I3VX,I4VX,I7VX,MVX, NFSVX,
     > NSETVX,NISVX,NONNN,NRSVX,NVX,NDSVX,XNOT,A(K23),A(K38), A(K501),
     > A(K502),A(K503),A(K48))
  134 CONTINUE
      IF (NNSPEC.GT.0) GO TO 135
      WRITE(IOUT,1000)NCY
      return
  135 CONTINUE
C*****MAKEUP POTS HAVE BEEN LOADED AS FOLLOWS
C     CORC(X,X,2) = RECYCLE MATERIAL
C     CORC(X,X,3) = FRESH FUEL FEED MATERIAL
C     CORC(X,X,4) = INITIAL MATERIAL
C     CORC(X,X,5) = 0, OR CORC(X,X,3) IF RECYCLE NOT READY
C*****LOAD FINAL MAKEUP POT CORC(X,X,5)
      DO 151 NRPOT = 1,NRSVX
      NDPOT1 = NFRFS(NRPOT,3)
      NDPOT2 = NFRFS(NRPOT,4)
      NDPOT3 = NFRFS(NRPOT,5)
      NFRPOT = NFRFS(NRPOT,6)
C*****IS RECYCLE MATERIAL AVALIABLE YET
      IF (NIND.EQ.0) GO TO 145
C*****APPLY RECYCLE FRACTIONS
      DO 136 N = 1,NISVX
      CORC(N,NRPOT,2) = CORC(N,NRPOT,2)*RCYFR(N,NRPOT)
  136 CONTINUE
      IF (DPQR(NRPOT,1).EQ.0) GO TO 139
C*****APPLY DPQR1
      ARTOT = 0.0
      AXTOT = 0.0
      DO 137 N = 1,NISVX
      ARTOT = ARTOT+CORC(N,NRPOT,2)
      AXTOT = AXTOT+CORC(N,NRPOT,3)
  137 CONTINUE
      AFTOT = ARTOT*((1.0-DPQR(NRPOT,1))/DPQR(NRPOT,1))
      IF (AFTOT.EQ.0.0) GO TO 139
      IF (AXTOT.EQ.0.0) GO TO 139
      AUTOT = AFTOT/AXTOT
      DO 138 N = 1,NISVX
      CORC(N,NRPOT,3) = CORC(N,NRPOT,3)*AUTOT
  138 CONTINUE
  139 CONTINUE
      IF (NFFFS(NFRPOT,2).EQ.0) GO TO 140
      IF (MAC13.LT.1) GO TO 140
      WRITE(IOUT,1009)NRPOT,DPQR(NRPOT,1),(CORC(N,NRPOT,3),N=1,NISVX)
  140 CONTINUE
      IF ((NDPOT1.EQ.0).AND.(NDPOT2.EQ.0).AND.(NDPOT3.EQ.0)) GO TO 142
      IF (MAC13.LT.1) GO TO 141
      WRITE(IOUT,1010)NDPOT1,NDPOT2,NDPOT3,NRPOT, (CORC(N,NRPOT,2),N=1,
     > NISVX)
      WRITE(IOUT,1001)NRPOT,(XNOT(N,NRPOT),N=1,NISVX)
  141 CONTINUE
  142 CONTINUE
C*****MIX RECYCLE MATERIAL AND FRESH FUEL FEED MATERIAL
      DO 144 N = 1,NISVX
      IF (NFRFS(NRPOT,8).NE.0) GO TO 143
      CORC(N,NRPOT,5) = CORC(N,NRPOT,2)+CORC(N,NRPOT,3)
      GO TO 144
  143 CONTINUE
      CORC(N,NRPOT,5) = CORC(N,NRPOT,2)+CORC(N,NRPOT,3)
  144 CONTINUE
  145 CONTINUE
      IF (IPDVX.EQ.0) GO TO 146
C*****APPLY DECAY EQUATIONS TO MATERINL IN MAKEUP POT
      NTWO = 5
      NTRE = 5
      IF (DLTMR(NRPOT).EQ.0.0) GO TO 146
      CALL DCAX(CORC,A(K53),DLTMR(NRPOT),NRPOT,NTWO,A(K13),A(K14),
     > A(K15),A(K12),NISVX,NRSVX,NTRE,NPDVX,NVX,NRLVX)
  146 CONTINUE
      IF (DPQR(NRPOT,2).EQ.0) GO TO 149
C*****APPLY GROSS FABRICATION FRACTIONS
      DO 147 N = 1,NISVX
      CORC(N,NRPOT,5) = CORC(N,NRPOT,5)*DPQR(NRPOT,2)
  147 CONTINUE
      TZRO = 0.0
      DO 148 N = 1,NISVX
      TZRO = TZRO+CORC(N,NRPOT,5)
  148 CONTINUE
      IF (TZRO.EQ.0.0) GO TO 150
  149 CONTINUE
      IF (MAC13.LT.1) GO TO 150
      WRITE(IOUT,1011)NRPOT,DLTMR(NRPOT),DPQR(NRPOT,2),(CORC(N,NRPOT,5),
     >  N=1,NISVX)
  150 CONTINUE
  151 CONTINUE
C*****LOAD REACTOR
      DO 162 NSPEC = 1,I4VX
      N1 = NFM(11,NSPEC)
      IF (NCY.GT.NFM(10,NSPEC)) GO TO 162
      N2 = NFM(12,NSPEC)
      DO 152 I = 1,NCY
      IF (N1.EQ.NCY) GO TO 153
      IF (N1.GT.NCY) GO TO 162
      N1 = N1+N2
  152 CONTINUE
      GO TO 162
  153 CONTINUE
      IF (NFM(2,NSPEC).EQ.0) GO TO 162
      IF (MAC13.LT.1) GO TO 154
      WRITE(IOUT,1012)NSPEC
  154 CONTINUE
      NRPOT = NFM(4,NSPEC)
      NFPOT = NFM(2,NSPEC)
      NFRPOT = NFRFS(NRPOT,6)
      IF (NFPOT.EQ.0) GO TO 162
C*****IS RECYCLE MATERIAL AVALIABLE YET
      IF (NIND.GT.0) GO TO 157
      IF (MAC13.LT.1) GO TO 155
      IF (NFFFS(NFPOT,2).EQ.0) WRITE(IOUT,1013)(CORC(N,NRPOT,4),N=1,
     > NISVX)
  155 CONTINUE
C*****CALCULATE FRESH FEED FOR MASS BALANCES
      DO 156 N = 1,NISVX
      T1 = CORC(N,NRPOT,3)
      IF (NFFFS(NFPOT,2).EQ.0) T1 = CORC(N,NRPOT,4)
      FRFEED(N,NFPOT) = T1+FRFEED(N,NFPOT)
  156 CONTINUE
      GO TO 160
  157 CONTINUE
      IF (NFRPOT.EQ.0) GO TO 160
      IF (MAC13.LT.1) GO TO 158
      IF (NFFFS(NFRPOT,2).EQ.0) WRITE(IOUT,1013)(CORC(N,NRPOT,4),N=1,
     > NISVX)
  158 CONTINUE
      DO 159 N = 1,NISVX
      T1 = CORC(N,NRPOT,3)
      IF (NFFFS(NFRPOT,2).EQ.0) T1 = CORC(N,NRPOT,4)
      FRFEED(N,NFPOT) = T1+FRFEED(N,NFPOT)
  159 CONTINUE
  160 CONTINUE
C*****CALCULATE RECYCLE AND TOTAL NET FEED FOR MASS BALANCES
      DO 161 N = 1,NISVX
      REFEED(N,NRPOT) = CORC(N,NRPOT,2)+REFEED(N,NRPOT)
      TOFEED(N,NRPOT) = CORC(N,NRPOT,5)+CORC(N,NRPOT,4)+TOFEED(N,NRPOT)
  161 CONTINUE
C*****LOAD REACTOR FROM MAKEUP POT
      CALL LRTR(NFM,A(K500),NZINF,NSUBNO,A(K550),A(K50),A(K47), A(K549),
     >  A(K545),A(K546),A(K540),CORC,NSPEC,NRPOT,I3VX,I4VX,I5VX, I7VX,
     > MVX,NSETVX,NONNN,NVX,NISVX,NRSVX,A(K542),MAC)
  162 CONTINUE
C*****MOVE MATERIAL FROM RECYCLE POT 5 TO 1
      DO 164 NRPOT = 1,NRSVX
      DO 163 N = 1,NISVX
      CORC(N,NRPOT,1) = CORC(N,NRPOT,5)
  163 CONTINUE
  164 CONTINUE
C*****REACTOR ZONES HAVE BEEN LOADED
  165 CONTINUE
C*****FUEL MANAGEMENT COMPLETED
      RETURN
 1000 FORMAT('0ERROR STOP 912, CYCLE NUMBER',I5)
 1001 FORMAT('0AMOUNT OF RECYCLE MATERIAL THAT WAS NOT RECYCLED TO MAKEU
     >P STREAM',I3,/(1X,1P9E13.5))
 1002 FORMAT('0CONCENTRATIONS IN FRESH FUEL FEED STREAM',I3,
     > ' HAVE BEEN DECAYED USING',1PE13.5,' DAYS. CONTENTS FOLLOWS'/
     > (1X,1P9E13.5))
 1003 FORMAT('0'/'0LOADING MAKEUP STREAMS FOR MANAGEMENT INPUT SPECIFICA
     >TION',I3)
 1004 FORMAT('0LOADING MAKEUP STREAM',I3)
 1005 FORMAT('0RECYCLE MATERIAL NOT YET AVALIABLE - SOURCE OF MATERIAL I
     >S FRESH FUEL FEED STREAM',I3)
 1006 FORMAT('0INITIAL CONCENTRATIONS WILL BE USED FOR FRESH FUEL FEED')
 1007 FORMAT('0RECYCLE MATERIAL IS AVALIABLE - SOURCE OF MATERIAL IS FRE
     >SH FUEL MIX  STREAM',I3,' THREE DISCHARGE STREAMS',3I3)
 1008 FORMAT('0INITIAL CONCENTRATIONS WILL BE USED FOR FRESH FUEL MIX FE
     >ED')
 1009 FORMAT('0FINAL AMOUNT OF FRESH FUEL IN MAKEUP STREAM',I3,
     > ' AFTER APPLYING DPQR1 = ',1PE13.5/(1X,1P9E13.5))
 1010 FORMAT('0FINAL AMOUNT OF RECYCLE MATERIAL (SUM OF MATERIAL IN DISC
     >HARGE STREAMS',3I3,') IN MAKEUP STREAM',I3,' AFTER APPLY RECYCLE F
     >RACTIONS'/(1P9E13.5))
 1011 FORMAT('0 MAKEUP STREAM',I3,' HAS BEEN LOADED MIXING RECYCLE MATER
     >IAL (IF AVALIABLE) AND FRESH FEED (EXCEPT INITIAL CONCENTRATIONS)'
     >/' THE MATERIAL WAS DECAYED USING',1PE13.5,' DAYS AND GROSS FABRIC
     >ATION FRACTION(',0PF6.3,') APPLIED. FINAL CONTENTS'/(1X,1P9E13.5))
 1012 FORMAT('0'/'0LOADING REACTOR FOR MANAGEMENT INPUT SPECIFICATION',
     > I3)
 1013 FORMAT('0INITIAL LOADING MATERIAL WHICH WILL BE USED AS FRESH FEED
     >'/(1X,1P9E13.5))
      END
CSECO --174    ***FUEL MANAGEMENT***   READ CONC. FROM INTERFACE I/O UTS
C     CALLED FROM/MANG
      SUBROUTINE SECO(CON0,NZINF,NJM,SUBCNC,IDDN,MJJR,ZONVOL, CONC,NJJR,
     >  NSUBNO, NIS,LJJR,XMAS,FRFEEX,XLODNG, ITMIS,AITMIS,NFM,NIND, NVX,
     >  MVX,NSETVX,I5VX,NONNN,NISVX, NFSVX,NDSVX,I3VX,I4VX,NRLVX,NRSVX,
     > HMLOAD,EXPSOR,MAC,FERFS,FER,ETE,NCOO)
C
      COMMON/FMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
      COMMON/COOPD/FLOTR(200),INTGR(100)
      DOUBLE PRECISION FLOTR
C
      DIMENSION CON0(NVX,MVX),NZINF(MVX,7),NJM(6,NSETVX),SUBCNC(I5VX),
     > IDDN(NONNN),MJJR(NVX,NSETVX),ZONVOL(MVX),CONC(NVX,MVX),
     > NJJR(NONNN,NSETVX),NSUBNO(MVX), FRFEEX(NISVX,NFSVX),XLODNG(NISVX,
     >  NDSVX), NIS(30),LJJR(NISVX), XMAS(NONNN), ITMIS(20),AITMIS(20)
      DIMENSION NFM(I3VX,I4VX)
      DIMENSION HMLOAD(MVX),EXPSOR(MVX)
      DIMENSION MAC(24)
      DIMENSION FERFS(MVX),FER(MVX),ETE(MVX),NCOO(4,NONNN)
C
      INTG = 1
      IF ((INTGR(35).GT.0).AND.(INTGR(47).LE.0)) INTG = 0
      IF ((INTGR(35).GT.0).AND.(NCY.EQ.1).AND.(INTGR(37).GT.1)
     > .AND.(INTGR(46).EQ.1).AND.(INTGR(42).EQ.0).AND.(INTGR(4).GT.0))
     > INTG = 2
      MAC13 = MAC(1)
      IOR = INTGR(13)
      NGC2 = INTGR(14)
      NGC3 = INTGR(15)
      READ(IO4)((CON0(N,M),N=1,NVX),M=1,MVX)
      IF ((NGC3.GT.0).AND.(INTGR(47).LE.0)) WRITE(IOR)((CON0(N,M),N=1,
     > NVX),M=1,MVX)
      IF ((INTG.EQ.0).OR.(INTG.EQ.2)) WRITE(IO2)((CON0(N,M),N=1,NVX),M=
     > 1,MVX)
      REWIND IO8
      IF (INTGR(2).EQ.0) WRITE(IO8)((CON0(N,M),N=1, NVX),M=1,MVX)
      IF (IX(13).LE.1) GO TO 103
      NC2 = 0
      DO 102 M = 1,MVX
      NSUB = NZINF(M,1)
      IF (NSUB.GT.1) GO TO 100
      READ(IO4)
      GO TO 102
  100 CONTINUE
      NSET = NZINF(M,3)
      NN = NJM(1,NSET)
      NNT = NSUB*NN
      NC1 = NC2+1
      NC2 = NC2+NNT
      READ(IO4)(SUBCNC(N),N=NC1,NC2)
      IF (INTG.EQ.1) GO TO 101
      WRITE(IO2)M,NNT,M,M,M,M,M,M,M,M
      WRITE(IO2)(SUBCNC(N),N=NC1,NC2)
  101 CONTINUE
      IF (INTGR(2).GT.0) GO TO 102
      WRITE(IO8)M,NNT,M,M,M,M,M,M,M,M
      WRITE(IO8)(SUBCNC(N),N=NC1,NC2)
  102 CONTINUE
      NNT = -999
      IF ((INTG.EQ.0).OR.(INTG.EQ.2)) WRITE(IO2)NNT,NNT,NNT,NNT,NNT,NNT,
     > NNT,NNT,NNT, NNT
      IF (INTGR(2).EQ.0) WRITE(IO8)NNT,NNT,NNT,NNT, NNT,NNT,NNT,NNT,NNT,
     > NNT
      IF ((NGC3.GT.0).AND.(INTGR(47).LE.0)) WRITE(IOR)NC2,(SUBCNC(N),N=
     > 1,NC2)
  103 CONTINUE
      IF (INTGR(2).GT.0) GO TO 104
      REWIND IO8
  104 CONTINUE
C*****CALCULATE INITIAL FRESH FEED
      IF (MAC13.LT.5) GO TO 105
      WRITE(IOUT,1003)
      CALL CORT(NZINF,IDDN,MJJR,SUBCNC,NJM,CON0, MVX,NVX,NONNN,NSETVX,
     > I5VX)
  105 CONTINUE
      IF (INTG.NE.2) GO TO 108
      READ(IO4)
      DO 107 M = 1,MVX
      DO 106 N = 1,NVX
      CONC(N,M) = CON0(N,M)
  106 CONTINUE
  107 CONTINUE
      GO TO 109
  108 CONTINUE
      READ(IO4)((CONC(N,M),N=1,NVX),M=1,MVX)
  109 CONTINUE
      IF ((NCY.GT.1).OR.(INTGR(19).GT.1).OR.(INTGR(46).GT.1)) GO TO 110
      IFR = 1
      CALL CFNT(NFM,ZONVOL,CON0,CONC,NJJR,NZINF, NSUBNO,FRFEEX, NIS,NJM,
     >  SUBCNC,LJJR, I3VX,I4VX,NVX,MVX,NRLVX,NISVX, NFSVX,NDSVX, NIND,
     > I5VX,NONNN,NSETVX,IFR,FERFS,FER,ETE,NCOO)
  110 CONTINUE
      IF ((NGC3.GT.0).AND.(INTGR(47).LE.0)) WRITE(IOR)((CONC(N,M),N=1,
     > NVX),M=1,MVX)
      IF ((INTG.EQ.0).OR.(INTG.EQ.2)) WRITE(IO2)((CONC(N,M),N=1,NVX),M=
     > 1,MVX)
      IF ((MAC(2).EQ.0).OR.(INTGR(77).EQ.0)) GO TO 111
      WRITE(IO2)((CONC(N,M),N=1,NVX),M=1,MVX)
      REWIND IO2
      INTGR(51) = 1
  111 CONTINUE
      IF (IX(13).LE.1) GO TO 115
      IF (INTG.NE.2) GO TO 112
      REWIND IO4
      READ(IO4)
  112 CONTINUE
      NC2 = 0
      DO 113 M = 1,MVX
      NSUB = NZINF(M,1)
      IF (NSUB.EQ.1) READ(IO4)
      IF (NSUB.EQ.1) GO TO 113
      NSET = NZINF(M,3)
      NN = NJM(1,NSET)
      NNT = NSUB*NN
      NC1 = NC2+1
      NC2 = NC2+NNT
      READ(IO4)(SUBCNC(N),N=NC1,NC2)
      IF (INTG.EQ.1) GO TO 113
      WRITE(IO2)M,NNT,M,M,M,M,M,M,M,M
      WRITE(IO2)(SUBCNC(N),N=NC1,NC2)
  113 CONTINUE
      NNT = -999
      IF ((INTG.EQ.0).OR.(INTG.EQ.2)) WRITE(IO2)NNT,NNT,NNT,NNT,NNT,NNT,
     > NNT,NNT,NNT, NNT
      IF ((NGC3.GT.0).AND.(INTGR(47).LE.0)) WRITE(IOR)NC2,(SUBCNC(N),N=
     > 1,NC2)
      IF (INTG.NE.2) GO TO 115
      READ(IO4)
      DO 114 M = 1,MVX
      READ(IO4)
  114 CONTINUE
  115 CONTINUE
      IF (INTG.EQ.1) GO TO 116
      REWIND IO2
  116 CONTINUE
      READ(IO4)(ITMIS(I),I=1,20),(AITMIS(I),I=1,20)
      READ(IO4)(HMLOAD(M),M=1,MVX)
      READ(IO4)(EXPSOR(M),M=1,MVX)
      REWIND IO4
      IF ((NGC3.GT.0).AND.(INTGR(47).LE.0)) WRITE(IOR)(ITMIS(I),I=1,20),
     >  (AITMIS(I),I=1,20), (HMLOAD(M),M=1,MVX), (EXPSOR(M),M=1,MVX)
C*****CALCULATE REACTOR CONTENTS FOR END   OF CYCLE
      IF (MAC13.LT.5) GO TO 117
      WRITE(IOUT,1004)
      CALL CORT(NZINF,IDDN,MJJR,SUBCNC,NJM,CONC, MVX,NVX,NONNN,NSETVX,
     > I5VX)
  117 CONTINUE
      IFR = 2
      CALL CONT(NFM,ZONVOL,CON0,CONC,NJJR,NZINF, NSUBNO,XLODNG, NIS,NJM,
     >  SUBCNC,LJJR, I3VX,I4VX,NVX,MVX,NRLVX,NISVX, NFSVX,NDSVX, NIND,
     > I5VX,NONNN,NSETVX,IFR)
  118 CONTINUE
      READ(IO8)((CON0(N,M),N=1,NVX),M=1,MVX)
      REWIND IO8
      INTGR(2) = 1
      IF (MAC13.LT.1) GO TO 119
      WRITE(IOUT,1000)(ITMIS(I),I=1,20),(AITMIS(I),I=1,20)
      WRITE(IOUT,1001)(HMLOAD(M),M=1,MVX)
      WRITE(IOUT,1002)(EXPSOR(M),M=1,MVX)
  119 CONTINUE
      RETURN
 1000 FORMAT('0MISC DATA'/1X,20I6/(1X,1P10E12.4))
 1001 FORMAT('0INITIAL LOADING OF HEAVY METAL'/(1X,1P9E13.5))
 1002 FORMAT('0EXPOSURE OVER CYCLE'/(1X,1P9E13.5))
 1003 FORMAT('0START OF CYCLE CONCENTRATIONS')
 1004 FORMAT('0END OF CYCLE CONCENTRATIONS')
      END
CCFNT --176    ***FUEL MANAGEMENT***   CALCULATE INITIAL LOADING
C     CALLED FROM/SECO
      SUBROUTINE CFNT(NFM,ZONVOL,CON0,CONC,NJJR,NZINF, NSUBNO,FRFEEX,
     > NIS,NJM,SUBCNC,LJJR, I3VX,I4VX,NVX,MVX,NRLVX, NISVX,NFSVX,NDSVX,
     > NIND,I5VX,NONNN,NSETVX,IFR,FERFS,FER,ETE,NCOO)
C
      COMMON/FMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
C
      DIMENSION NFM(I3VX,I4VX),ZONVOL(MVX),CON0(NVX,MVX), CONC(NVX,MVX),
     >  NZINF(MVX,7), NSUBNO(MVX),FRFEEX(NISVX,NFSVX), NIS(30),NJM(6,
     > NSETVX)
      DIMENSION SUBCNC(I5VX)
      DIMENSION NJJR(NONNN,NSETVX), LJJR(NISVX)
      DIMENSION FERFS(MVX),FER(MVX),ETE(MVX),NCOO(4,NONNN)
C
      IF (IFR.EQ.50) GO TO 117
      DO 100 M = 1,MVX
      FERFS(M) = 0.0
      FER(M) = 0.0
      ETE(M) = 0.0
  100 CONTINUE
      DO 102 NI = 1,NISVX
      DO 101 NF = 1,NFSVX
      FRFEEX(NI,NF) = 0.0
  101 CONTINUE
  102 CONTINUE
      DO 116 NSPEC = 1,I4VX
      NFPOT = NFM(2,NSPEC)
      NXPOT = NFM(3,NSPEC)
      IF (NXPOT.GT.0) NFPOT = NXPOT
      IF (NFPOT.EQ.0) GO TO 116
      DO 107 NGRS = 13,I3VX
      NRMV = NFM(NGRS,NSPEC)
      IF (NRMV.EQ.0) GO TO 108
      DO 106 M = 1,MVX
      IF (NRMV.NE.NZINF(M,7)) GO TO 106
      VOL = ZONVOL(M)
      NSET = NZINF(M,3)
      NSBN = NZINF(M,1)
      NUPZ = NJM(1,NSET)
      NCI = 1
      L = M
      IF (NSBN.GT.1) CALL SADD(M,NZINF,NJM,NSUBNO,MVX,NCI,NC,NSETVX,L)
      DO 105 NNN = 1,NISVX
      N1 = LJJR(NNN)
      N = NJJR(N1,NSET)
      IF (N.EQ.0) GO TO 105
      IF (NSBN.LE.1) T1 = CON0(N,M)*VOL
      IF (NSBN.LE.1) CON0(N,M) = 0.0
      IF (NSBN.LE.1) GO TO 104
      NCU = NC+N
      T1 = 0
      DO 103 NSB = 1,NSBN
      NSU = (NSB-1)*NUPZ+NCU
      T1 = T1+SUBCNC(NSU)
      SUBCNC(NSU) = 0.0
  103 CONTINUE
      T1 = T1/FLOAT(NSBN)*VOL
  104 CONTINUE
      FRFEEX(NNN,NFPOT) = FRFEEX(NNN,NFPOT)+T1
      FERFS(M) = FERFS(M)+T1
      IF (NCOO(1,N1).EQ.2) FER(M) = FER(M)+T1
      IF (NCOO(1,N1).NE.2) ETE(M) = ETE(M)+T1
  105 CONTINUE
  106 CONTINUE
  107 CONTINUE
  108 CONTINUE
      NSTRT = NGRS+1
      NNO = 0
      DO 109 NN = NSTRT,I3VX
      NZ1 = NFM(NN,NSPEC)
      NZ2 = NFM(NN+1,NSPEC)
      IF (NZ1.EQ.0) NGRS = NGRS+1
      IF (NZ1.EQ.0) GO TO 110
      NGRS = NGRS+1
      NNO = NNO+1
      NXTR1(NNO) = NZ1
  109 CONTINUE
  110 CONTINUE
      IF (NNO.NE.0) GO TO 111
      IF (NZ2.EQ.0) GO TO 116
      GO TO 108
  111 CONTINUE
      DO 115 NNN = 1,NNO
      M = NXTR1(NNN)
      VOL = ZONVOL(M)
      NSET = NZINF(M,3)
      NSBN = NZINF(M,1)
      NUPZ = NJM(1,NSET)
      NCI = 1
      L = M
      IF (NSBN.GT.1) CALL SADD(M,NZINF,NJM,NSUBNO,MVX,NCI,NC,NSETVX,L)
      DO 114 NN = 1,NISVX
      N1 = LJJR(NN)
      N = NJJR(N1,NSET)
      IF (N.EQ.0) GO TO 114
      IF (NSBN.LE.1) T1 = CON0(N,M)*VOL
      IF (NSBN.LE.1) CON0(N,M) = 0.0
      IF (NSBN.LE.1) GO TO 113
      NCU = NC+N
      T1 = 0
      DO 112 NSB = 1,NSBN
      NSU = (NSB-1)*NUPZ+NCU
      T1 = T1+SUBCNC(NSU)
      SUBCNC(NSU) = 0.0
  112 CONTINUE
      T1 = T1/FLOAT(NSBN)*VOL
  113 CONTINUE
      FRFEEX(NN ,NFPOT) = FRFEEX(NN ,NFPOT)+T1
      FERFS(M) = FERFS(M)+T1
      IF (NCOO(1,N1).EQ.2) FER(M) = FER(M)+T1
      IF (NCOO(1,N1).NE.2) ETE(M) = ETE(M)+T1
  114 CONTINUE
  115 CONTINUE
      IF (NZ2.NE.0) GO TO 108
  116 CONTINUE
      GO TO 121
  117 CONTINUE
      DO 118 M = 1,MVX
      CON0(1,M) = 0.0
      CON0(2,M) = 0.0
      CON0(3,M) = 0.0
  118 CONTINUE
      DO 120 NN = 1,NISVX
      N1 = LJJR(NN)
      DO 119 M = 1,MVX
      NSET = NZINF(M,3)
      N = NJJR(N1,NSET)
      IF (NCOO(1,N1).EQ.1) CON0(1,M)=CON0(1,M)+CONC(N,M)*ZONVOL(M)
      IF (NCOO(1,N1).EQ.2) CON0(2,M)=CON0(2,M)+CONC(N,M)*ZONVOL(M)
      IF (NCOO(1,N1).EQ.3) CON0(3,M)=CON0(3,M)+CONC(N,M)*ZONVOL(M)
  119 CONTINUE
  120 CONTINUE
      WRITE(IOUT,1000)
      WRITE(IOUT,1001)(CON0(1,M),M=1,MVX)
      WRITE(IOUT,1001)(CON0(2,M),M=1,MVX)
      WRITE(IOUT,1001)(CON0(3,M),M=1,MVX)
  121 CONTINUE
      RETURN
 1000 FORMAT('0','THE FOLLOWING THREE LISTS ARE FISSILE, FERTILE, AND OT
     >HER (ATOM-CM**2/BARN) BY ZONE OF FUEL MANAGEMENT NUCLIDES')
 1001 FORMAT('0'/(1X,1P9E13.5))
      END
CLRCY --178    ***FUEL MANAGEMENT***   LOAD MAKEUP POTS
C     CALLED FROM/MANG
      SUBROUTINE LRCY(NFM,NZINF,ZONVOL,NSUBNO,NFFFS,SUBCN0,NJM,LJJR,
     > NJJR,CORC,CON0,FSCON,CODC,RCYFR,NFPOT,NRPOT,NDPOT1,NDPOT2,NDPOT3,
     >  NFRPOT,NIND,NSPEC,I1VX,I2VX,I3VX,I4VX,I7VX,MVX,NFSVX,NSETVX,
     > NISVX,NONNN,NRSVX,NVX,NDSVX,XNOT,QMTAR,FDM,FERFS,FER,ETE,NCOO)
C
      DOUBLE PRECISION FLOTR
C
      COMMON/FMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
      COMMON/COOPD/FLOTR(200),INTGR(100)
C
      DIMENSION NFM(I3VX,I4VX),NZINF(MVX,7),ZONVOL(MVX),NSUBNO(MVX),
     > NFFFS(NFSVX,I1VX),SUBCN0(I7VX),NJM(6,NSETVX),LJJR(NISVX),
     > NJJR(NONNN,NSETVX),CORC(NISVX,NRSVX,5),CON0(NVX,MVX),
     > FSCON(NISVX,NFSVX),CODC(NISVX,NDSVX,I2VX),RCYFR(NISVX,NRSVX)
      DIMENSION XNOT(NISVX,NRSVX),QMTAR(NRSVX),FDM(100)
      DIMENSION FERFS(MVX),FER(MVX),ETE(MVX),NCOO(4,NONNN)
C*****GROSS LOADING (ZONECLASS)
      SX(1) = FLOTR(27)
      DO 118 NGRS = 13,I3VX
      NRMV = NFM(NGRS,NSPEC)
      IF (NRMV.EQ.0) GO TO 119
      DO 117 M = 1,MVX
      NSET = NZINF(M,3)
      IF (NRMV.NE.NZINF(M,7)) GO TO 117
      VUSE = ZONVOL(M)
      IF (NSUBNO(M).GT.0) VUSE = VUSE/FLOAT(NZINF(M,1))
C*****IS RECYCLE MATERIAL AVALIABLE YET
      IF (NIND.GT.0) GO TO 108
C*****NO
C*****ARE INITIAL CONCENTRATIONS NEEDED FOR FRESH FUEL FEED
      IF (NFFFS(NFPOT,2).EQ.1) GO TO 101
      IF (IX(13).LE.1) GO TO 100
      IF (NZINF(M,1).LE.1) GO TO 100
      CALL RIO2(M,SUBCN0,I7VX,MVX,IO8)
  100 CONTINUE
      NCI = 0
      NL = 0
      L = 1
      IF (NSUBNO(M).GT.0) CALL SADD(M,NZINF,NJM,NSUBNO,MVX,NCI,NL,
     > NSETVX,L)
  101 CONTINUE
      DO 107 N = 1,NISVX
      N1 = LJJR(N)
      NUC = NJJR(N1,NSET)
      T1 = 1.0
      IF ((INTGR(35).EQ.0).OR.(INTGR(47).EQ.0).OR.(INTGR(37).LE.1)) GO
     > TO 104
      IF (INTGR(37).GT.2) GO TO 102
      T1 = SX(1)
      GO TO 104
  102 CONTINUE
      IF (INTGR(37).EQ.4) GO TO 103
      IF (NCOO(1,N1).NE.2) T1 = SX(1)
      GO TO 104
  103 CONTINUE
      T1 = SX(1)
      IF (NCOO(1,N1).EQ.2) T1 = (FERFS(M)-SX(1)*ETE(M))/FER(M)
  104 CONTINUE
C*****ARE INITIAL CONCENTRATIONS NEEDED FOR FRESH FUEL FEED
      IF (NFFFS(NFPOT,2).EQ.1) GO TO 106
      IF (NUC.EQ.0) GO TO 107
      NLU = NUC+NL
      IF (NSUBNO(M).NE.0) GO TO 105
      CORC(N,NRPOT,4) = CORC(N,NRPOT,4)+CON0(NUC,M)*VUSE*T1
      GO TO 107
  105 CONTINUE
      CORC(N,NRPOT,4) = CORC(N,NRPOT,4)+SUBCN0(NLU)*VUSE*T1
      GO TO 107
  106 CONTINUE
      CORC(N,NRPOT,3) = CORC(N,NRPOT,3)+FSCON(N, NFPOT)*VUSE*T1
  107 CONTINUE
      GO TO 117
C*****YES
  108 CONTINUE
      IF (NFRPOT.EQ.0) GO TO 117
C*****ARE INITIAL CONCENTRATIONS NEEDED FOR FRESH FUEL FEED
      IF (NFFFS(NFRPOT,2).EQ.1) GO TO 110
      IF (IX(13).LE.1) GO TO 109
      IF (NZINF(M,1).LE.1) GO TO 109
      CALL RIO2(M,SUBCN0,I7VX,MVX,IO8)
  109 CONTINUE
      NCI = 0
      NL = 0
      L = 1
      IF (NSUBNO(M).GT.0) CALL SADD(M,NZINF,NJM,NSUBNO,MVX,NCI,NL,
     > NSETVX,L)
  110 CONTINUE
      DO 116 N = 1,NISVX
      N1 = LJJR(N)
      NUC = NJJR(N1,NSET)
      T1 = 1.0
      IF ((INTGR(35).EQ.0).OR.(INTGR(47).EQ.0).OR.(INTGR(37).LE.1)) GO
     > TO 113
      IF (INTGR(37).GT.2) GO TO 111
      T1 = SX(1)
      GO TO 113
  111 CONTINUE
      IF (INTGR(37).EQ.4) GO TO 112
      IF (NCOO(1,N1).NE.2) T1 = SX(1)
      GO TO 113
  112 CONTINUE
      T1 = SX(1)
      IF (NCOO(1,N1).EQ.2) T1 = (FERFS(M)-SX(1)*ETE(M))/FER(M)
  113 CONTINUE
C*****ARE INITIAL CONCENTRATIONS NEEDED FOR FRESH FUEL FEED
      IF (NFFFS(NFRPOT,2).EQ.1) GO TO 115
      IF (NUC.EQ.0) GO TO 116
      NLU = NUC+NL
      IF (NSUBNO(M).NE.0) GO TO 114
      CORC(N,NRPOT,4) = CORC(N,NRPOT,4)+CON0(NUC,M)*VUSE*T1
      GO TO 116
  114 CONTINUE
      CORC(N,NRPOT,4) = CORC(N,NRPOT,4)+SUBCN0(NLU)*VUSE*T1
      GO TO 116
  115 CONTINUE
      CORC(N,NRPOT,3) = CORC(N,NRPOT,3)+FSCON(N,NFRPOT)*VUSE*T1
  116 CONTINUE
  117 CONTINUE
  118 CONTINUE
C*****ZONE LOADING
  119 CONTINUE
      NSTRT = NGRS+1
      NNO = 0
      DO 120 NN = NSTRT,I3VX
      NZ1 = NFM(NN,NSPEC)
      NZ2 = NFM(NN+1,NSPEC)
      IF (NZ1.EQ.0) NGRS = NGRS+1
      IF (NZ1.EQ.0) GO TO 121
      NGRS = NGRS+1
      NNO = NNO+1
      NXTR1(NNO) = NZ1
  120 CONTINUE
  121 CONTINUE
      IF (NNO.NE.0) GO TO 122
      IF (NZ2.EQ.0) GO TO 141
      GO TO 119
  122 CONTINUE
      M = NXTR1(1)
      NSET = NZINF(M,3)
      VUSE = ZONVOL(M)
      IF (NSUBNO(M).GT.0) VUSE = VUSE/FLOAT(NZINF(M,1))
C*****IS RECYCLE MATERIAL AVALIABLE YET
      IF (NIND.GT.0) GO TO 131
C*****NO
C*****ARE INITIAL CONCENTRATIONS NEEDED FOR FRESH FUEL FEED
      IF (NFFFS(NFPOT,2).EQ.1) GO TO 124
      IF (IX(13).LE.1) GO TO 123
      IF (NZINF(M,1).LE.1) GO TO 123
      CALL RIO2(M,SUBCN0,I7VX,MVX,IO8)
  123 CONTINUE
      NCI = 0
      NL = 0
      L = 1
      IF (NSUBNO(M).GT.0) CALL SADD(M,NZINF,NJM,NSUBNO,MVX,NCI,NL,
     > NSETVX,L)
  124 CONTINUE
      DO 130 N = 1,NISVX
      N1 = LJJR(N)
      NUC = NJJR(N1,NSET)
      T1 = 1.0
      IF ((INTGR(35).EQ.0).OR.(INTGR(47).EQ.0).OR.(INTGR(37).LE.1)) GO
     > TO 127
      IF (INTGR(37).GT.2) GO TO 125
      T1 = SX(1)
      GO TO 127
  125 CONTINUE
      IF (INTGR(37).EQ.4) GO TO 126
      IF (NCOO(1,N1).NE.2) T1 = SX(1)
      GO TO 127
  126 CONTINUE
      T1 = SX(1)
      IF (NCOO(1,N1).EQ.2) T1 = (FERFS(M)-SX(1)*ETE(M))/FER(M)
  127 CONTINUE
C*****ARE INITIAL CONCENTRATIONS NEEDED FOR FRESH FUEL FEED
      IF (NFFFS(NFPOT,2).EQ.1) GO TO 129
      IF (NUC.EQ.0) GO TO 130
      NLU = NUC+NL
      IF (NSUBNO(M).NE.0) GO TO 128
      CORC(N,NRPOT,4) = CORC(N,NRPOT,4)+CON0(NUC,M)*VUSE*T1
      GO TO 130
  128 CONTINUE
      CORC(N,NRPOT,4) = CORC(N,NRPOT,4)+SUBCN0(NLU)*VUSE*T1
      GO TO 130
  129 CONTINUE
      CORC(N,NRPOT,3) = CORC(N,NRPOT,3)+FSCON(N, NFPOT)*VUSE*T1
  130 CONTINUE
      GO TO 140
C*****YES
  131 CONTINUE
      IF (NFRPOT.EQ.0) GO TO 140
C*****ARE INITIAL CONCENTRATIONS NEEDED FOR FRESH FUEL FEED
      IF (NFFFS(NFRPOT,2).EQ.1) GO TO 133
      IF (IX(13).LE.1) GO TO 132
      IF (NZINF(M,1).LE.1) GO TO 132
      CALL RIO2(M,SUBCN0,I7VX,MVX,IO8)
  132 CONTINUE
      NCI = 0
      NL = 0
      L = 1
      IF (NSUBNO(M).GT.0) CALL SADD(M,NZINF,NJM,NSUBNO,MVX,NCI,NL,
     > NSETVX,L)
  133 CONTINUE
      DO 139 N = 1,NISVX
      N1 = LJJR(N)
      NUC = NJJR(N1,NSET)
      T1 = 1.0
      IF ((INTGR(35).EQ.0).OR.(INTGR(47).EQ.0).OR.(INTGR(37).LE.1)) GO
     > TO 136
      IF (INTGR(37).GT.2) GO TO 134
      T1 = SX(1)
      GO TO 136
  134 CONTINUE
      IF (INTGR(37).EQ.4) GO TO 135
      IF (NCOO(1,N1).NE.2) T1 = SX(1)
      GO TO 136
  135 CONTINUE
      T1 = SX(1)
      IF (NCOO(1,N1).EQ.2) T1 = (FERFS(M)-SX(1)*ETE(M))/FER(M)
  136 CONTINUE
C*****ARE INITIAL CONCENTRATIONS NEEDED FOR FRESH FUEL FEED
      IF (NFFFS(NFRPOT,2).EQ.1) GO TO 138
      N1 = LJJR(N)
      NUC = NJJR(N1,NSET)
      IF (NUC.EQ.0) GO TO 139
      NLU = NUC+NL
      IF (NSUBNO(M).NE.0) GO TO 137
      CORC(N,NRPOT,4) = CORC(N,NRPOT,4)+CON0(NUC,M)*VUSE*T1
      GO TO 139
  137 CONTINUE
      CORC(N,NRPOT,4) = CORC(N,NRPOT,4)+SUBCN0(NLU)*VUSE*T1
      GO TO 139
  138 CONTINUE
      CORC(N,NRPOT,3) = CORC(N,NRPOT,3)+FSCON(N,NFRPOT)*VUSE*T1
  139 CONTINUE
  140 CONTINUE
      IF (NZ2.NE.0) GO TO 119
  141 CONTINUE
      DO 144 N = 1,NISVX
C*****IS RECYCLE MATERIAL AVALIABLE YET
      IF (NIND.GT.0) GO TO 142
C*****NO
      CORC(N,NRPOT,5) = CORC(N,NRPOT,3)
      GO TO 144
C*****YES
  142 CONTINUE
      X1 = 0.0
      IF (NDPOT1.GT.0) X1 = CODC(N,NDPOT1,2)
      X2 = 0.0
      IF (NDPOT2.GT.0) X2 = CODC(N,NDPOT2,2)
      X3 = 0.0
      IF (NDPOT3.GT.0) X3 = CODC(N,NDPOT3,2)
      T1 = X1+X2+X3
      T2 = FDM(NCY)
      IF (INTGR(37).GT.1) GO TO 143
      IF (INTGR(35).EQ.0) GO TO 143
      IF (INTGR(47).EQ.0) GO TO 143
      T2 = FLOTR(27)
  143 CONTINUE
      CORC(N,NRPOT,2) = T1*QMTAR(NRPOT)*T2
      XNOT(N,NRPOT) = T1-CORC(N,NRPOT,2)
  144 CONTINUE
      RETURN
      END
CI2T4 --189 ***FUEL MANAGEMENT*** TRANSFER CONCS. FROM IO2 TO IO4 FOR
C     REPEAT CYCLE/CF-MNGE
      SUBROUTINE I2T4(CONC,NZINF,SUBCNC,ITMIS,AITMIS, HMLOAD,EXPSOR,MVX,
     >  NVX,I5VX,FDM)
C
      DOUBLE PRECISION FLOTR
C
      COMMON/FMSUB/BLSUB(1),IOIN,IOUT,IO1,IO2,IO3,IO4,IO5,IO6,IO7,IO8,
     > NXTR1(100),NXTR2(100),XTR1(100),XTR2(100),NCY,IXI,IPDVX,IFMVX,
     > IX(20),SX(20)
      COMMON/COOPD/FLOTR(200),INTGR(100)
C
      DIMENSION CONC(NVX,MVX),NZINF(MVX,7),SUBCNC(I5VX),ITMIS(20),
     > HMLOAD(MVX),EXPSOR(MVX),AITMIS(20),FDM(100)
C
      IF ((INTGR(49).GT.0).OR.(INTGR(47).EQ.0)) GO TO 118
      INTGR(48) = INTGR(48)+1
      FLOTR(24) = FLOTR(25)
      T1 = FLOTR(20)
      T2 = FLOTR(21)
      T3 = FLOTR(22)
      T4 = FLOTR(24)
      T5 = FLOTR(25)
      T6 = FLOTR(26)
      T7 = FLOTR(27)
      T8 = FLOTR(28)
      T9 = FLOTR(111)
      IF (INTGR(50).EQ.0) FLOTR(23) = FLOTR(22)
      T11 = FLOTR(23)
      TT=T1
      IF (T1.EQ.0.) TT=1.0
      T10 = ((T1-T2)/TT)*T9
      IF (INTGR(50).GT.0) GO TO 102
      FLOTR(27) = 1.0
      IF ((NCY.GT.1).AND.(INTGR(37).EQ.1)) FLOTR(27) = FDM(NCY-1)
      FLOTR(25) = 1.0
      IF (T11.EQ.1) GO TO 100
      T12 = 1.0+T10*T11
      GO TO 104
  100 IF (T10.GT.0.) GO TO 101
      T12=0.9
      GO TO 104
  101 T12=1.1
      GO TO 104
  102 CONTINUE
      T50 = T7*(T2-T8)
      IF ((T50.NE.0.0).AND.(INTGR(48).GT.1)) FLOTR(23) = TT*(T7-T6)/T50
      IF (INTGR(35).LT.0) FLOTR(23) = FLOTR(22)
      IF (FLOTR(23).NE.0.0) T11 = FLOTR(23)
      IF (T11.NE.0.0) GO TO 103
      INTGR(47) = -1
      INTGR(49) = 1
      WRITE(IOUT,1003)
      IF (INTGR(35).LT.0) GO TO 103
      WRITE(IOUT,1004)
  103 CONTINUE
      T12 = T4*(1.0+T10*T11)
  104 CONTINUE
      T13 = T12*FDM(NCY)
      IF (INTGR(37).GT.1) GO TO 105
      IF ((INTGR(38).GT.0).AND.(T13.GT.0.0)) WRITE(IOUT,1005) T13
      IF ((INTGR(38).GT.0).AND.(T13.GT.0.0)) T13 = 1.0
      T14 = T13
      IF (T14.LT.0.0) T13 = 0.5*FLOTR(27)
      IF (T14.LT.0.0) WRITE(IOUT,1000)T14,T13
      GO TO 106
  105 CONTINUE
      IF ((INTGR(38).GT.0).AND.(T12.GT.0.0)) WRITE(IOUT,1005) T12
      IF ((INTGR(38).GT.0).AND.(T12.GT.0.0)) T12 = 1.0
      T14 = T12
      IF (T14.LT.0.0) T12 = 0.5*FLOTR(27)
      IF (T14.LT.0.0) WRITE(IOUT,1000)T14,T12
  106 CONTINUE
      FLOTR(26) = FLOTR(27)
      FLOTR(25) = T12
      FLOTR(27) = T13
      IF (INTGR(37).GT.1) FLOTR(27) = T12
      IF (INTGR(35).LT.0) GO TO 117
  107 CONTINUE
      IF ((NCY.EQ.1).AND.(INTGR(46).EQ.1).AND.(INTGR(4).GT.0)) GO TO 117
  108 CONTINUE
      REWIND IO4
      READ(IO4)
      IF (IX(13).LE.1) GO TO 110
      DO 109 M = 1,MVX
      READ(IO4)
      READ(IO4)
  109 CONTINUE
  110 CONTINUE
      READ(IO4)
      READ(IO4)(ITMIS(I),I=1,20),(AITMIS(I),I=1,20)
      READ(IO4)(HMLOAD(M),M=1,MVX)
      READ(IO4)(EXPSOR(M),M=1,MVX)
      REWIND IO4
      READ(IO2)((CONC(N,M),N=1,NVX),M=1,MVX)
      WRITE(IO4)((CONC(N,M),N=1,NVX),M=1,MVX)
      IF (IX(13).LE.1) GO TO 113
      DO 112 M = 1,MVX
      NSUB = NZINF(M,1)
      IF (NSUB.GT.1) GO TO 111
      WRITE(IO4)(CONC(N,M),N=1,NVX)
      GO TO 112
  111 CONTINUE
      READ(IO2)M1,NNT
      READ(IO2)(SUBCNC(N),N=1,NNT)
      WRITE(IO4)(SUBCNC(N),N=1,NNT)
  112 CONTINUE
      READ(IO2)
  113 CONTINUE
      READ(IO2)((CONC(N,M),N=1,NVX),M=1,MVX)
      WRITE(IO4)((CONC(N,M),N=1,NVX),M=1,MVX)
      IF (IX(13).LE.1) GO TO 116
      DO 115 M = 1,MVX
      NSUB = NZINF(M,1)
      IF (NSUB.GT.1) GO TO 114
      WRITE(IO4)(CONC(N,M),N=1,NVX)
      GO TO 115
  114 CONTINUE
      READ(IO2)M1,NNT
      READ(IO2)(SUBCNC(N),N=1,NNT)
      WRITE(IO4)(SUBCNC(N),N=1,NNT)
  115 CONTINUE
  116 CONTINUE
      WRITE(IO4)(ITMIS(I),I=1,20),(AITMIS(I),I=1,20)
      WRITE(IO4)(HMLOAD(M),M=1,MVX)
      WRITE(IO4)(EXPSOR(M),M=1,MVX)
      REWIND IO2
      REWIND IO4
  117 CONTINUE
      SX(1) = T12
      IF ((INTGR(35).GT.0).AND.(INTGR(47).LT.0)) INTGR(48) = 0
      INTGR(50) = 1
  118 CONTINUE
      IF (INTGR(47).EQ.0) FLOTR(25) = 1.0
      IF (INTGR(37).GT.1) GO TO 119
      IF (INTGR(35).GT.0) WRITE(IOUT,1006)FLOTR(25)
      IF (INTGR(35).LT.0) WRITE(IOUT,1007)FLOTR(25)
      GO TO 120
  119 CONTINUE
      IF (INTGR(35).GT.0) WRITE(IOUT,1001)FLOTR(25)
      IF (INTGR(35).LT.0) WRITE(IOUT,1002)FLOTR(25)
  120 CONTINUE
      RETURN
 1000 FORMAT('0NEGATIVE ADJUSTING FACTOR IS',1PE13.5,'   USING',E13.5)
 1001 FORMAT('0THE FACTOR APPLIED TO THE FRESH FEED FOR REPEAT CYCLE IS'
     > ,1PE13.5)
 1002 FORMAT('0THE FACTOR APPLIED TO THE FERSH FEED IS',1PE13.5)
 1003 FORMAT('0ZERO DERIVATIVE CALCULATED - USING PREVIOUS VALUE')
 1004 FORMAT('0REPEAT CYCLE CALCULATION PROCEEDING AS IF CONVERGED')
 1005 FORMAT('0ADJUSTING FACTOR IS',1PE13.5,'  RESTRATING OPTION IS ON -
     > SEE MAC18')
 1006 FORMAT('0THE FACTOR APPLIED TO THE RECYCLE FRACTION FOR REPEAT CYC
     >LE IS',1PE13.5)
 1007 FORMAT('0THE FACTOR APPLIED TO RECYCLE FRACTION IS',1PE13.5)
      END
      FUNCTION ICLOCK(N)
      ICLOCK = N
      RETURN
      END
      FUNCTION SECNDS(T)
      INTEGER*4 AT
      DATA T0, TL /100000., 0./
      CALL TIMER(AT)
      T=0.01*AT
      IF(T0 .EQ. 100000.) T0=T
      IF(T. LT. TL)T0=T0-86400.
      TL=T
      SECNDS=T-T0
      RETURN
      END
CSSET --036 ***CITATION*** READS INPUT SECTION 012/ CF-IPTM
      SUBROUTINE SSET
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     > , XNAME(3,200)
      COMMON/QUEIMA/NBSTEP,NCONJU,NXCON(50),BSTEP(50),FMASS(200),
     > QACUM(200),NXSEC(200),NBUCKB,NOPBUC,BUCBUR(50)
      CHARACTER*4 XMN,XNAME,T1,T2,T3
C
      DATA XMN/'****'/
C
      IX(199) = 0
      IX(34) = 0
      DO 100 M = 1,MMAX
      NZON(M) = 1
      NXSET(M) = 1
      NCLASS(M) = 1
      IDXSET(M) = 1
      NDP(M) = 0
      NXODR(M) = 1
      XNAME(1,M) = XMN
      XNAME(2,M) = XMN
      XNAME(3,M) = XMN
  100 CONTINUE
  101 WRITE(IOUT,1000)
  102 READ(IOIN,1001)N1,N2,N3,N4,N5,N6,N7,N8,T1,T2,T3
      IF (N1) 115,115,103
  103 IF (N2) 104,104,105
  104 N2 = N1
  105 WRITE(IOUT,1002)N1,N2,N3,N4,N5,N6,N7,N8,T1,T2,T3
      IX(34) = IX(34)+1
      N = IX(34)
      N1N2R(1,N) = N1
      N1N2R(2,N) = N2
      DO 114 N = N1,N2
      IF (N3) 107,107,106
  106 CONTINUE
      NZON(N) = N3
  107 IF (N4) 109,109,108
  108 CONTINUE
      NXSET(N) = N4
  109 IF (N5) 111,111,110
  110 CONTINUE
      IDXSET(N) = N5
  111 IF (N6) 113,113,112
  112 CONTINUE
      NCLASS(N) = N6
  113 CONTINUE
      XNAME(1,N) = T1
      XNAME(2,N) = T2
      XNAME(3,N) = T3
      NDP(N) = N7
  114 CONTINUE
      GO TO 102
  115 NSETMX = 0
      NJ=0
      DO 119 M = 1,MMAX
      NN=NZON(M)
      NJ=MAX0(NJ,NN)
      N7 = NXSET(M)
      IF (M-1) 116,116,117
  116 NSETMX = NSETMX+1
      GO TO 119
  117 MM1 = M-1
      DO 118 N = 1,MM1
      NSS = NXSET(N)
      IF (N7-NSS) 118,119,118
  118 CONTINUE
      NSETMX = NSETMX+1
  119 CONTINUE
      IX(168)=NJ
      IF(NDPL(24).NE.0) GO TO 200
      DO 123 NS = 1,NSETMX
      IF (NS.NE.1) GO TO 121
      N1 = 1000
      DO 120 M = 1,MMAX
      N2 = NXSET(M)
      N1 = MIN0(N1,N2)
  120 CONTINUE
      NXODR(N1) = NS
      GO TO 123
  121 N3 = 1000
      DO 122 M = 1,MMAX
      N2 = NXSET(M)
      IF (N2.LE.N1) GO TO 122
      N3 = MIN0(N2,N3)
  122 CONTINUE
      NXODR(N3) = NS
      N1 = N3
  123 CONTINUE
      GO TO 205
  200 NCONJU=0
      NLL=IX(34)
      DO 204 N=1,NLL
      NPK=N1N2R(1,N)
      NPJ=NDP(NPK)
      NPL=NXSET(NPK)
      IF(NCONJU.EQ.0) GO TO 207
      DO 206 M=1,NCONJU
      IF(NPL.EQ.NXCON(M)) GO TO 204
  206 CONTINUE
  207 IF(NPJ.LE.0) GO TO 201
      NPU=NPL+NBSTEP-1
      GO TO 202
  201 NPU=NPL
  202 DO 203 M=NPL,NPU
      NCONJU=NCONJU+1
      NXCON(NCONJU)=M
      NXODR(M)=NCONJU
  203 CONTINUE
  204 CONTINUE
      NCONJ1=NCONJU-1
      DO 210 M=1,NCONJ1
      NU=NXCON(M)
      MM1=M+1
      DO 209 N=MM1,NCONJU
      IF(NU.LT.NXCON(N)) GO TO 209
      NXCON(M)=NXCON(N)
      NXCON(N)=NU
      NU=NXCON(M)
      NS1=NXCON(M)
      NS2=NXCON(N)
      NXODR(NS1)=M
      NXODR(NS2)=N
  209 CONTINUE
  210 CONTINUE
      NSETMX=NCONJU
      DO 208 M=1,MMAX
  208 NXSEC(M)=NXSET(M)
  205 CONTINUE
      DO 124 M=1,MMAX
      IF (NZON(M).LE.1) GO TO 124
      IX(199) = 1
      GO TO 125
  124 CONTINUE
  125 CONTINUE
      RETURN
 1000 FORMAT('0'/'0DESCRIPTION OF REACTOR ZONES'/'0 ZN TO ZN   SUB-ZNS
     >  SIGMA-SET  ID  CLASS  DPL  NEX      NAME')
 1001 FORMAT(8I3,3A4)
 1002 FORMAT(1X,I3,I6,I7,I11,I7,I5,I6,I5,3X,3A4)
      END
CRERT --151 ***CITATION*** PRINT NUCLIDE REACTION RATES/ CF-CALR,OUTC
      SUBROUTINE RERT(CONC,NJJR,RATE,SS1,SS2,SS4,SS5,B4,ZONVOL,ZONEN,
     > HOL,RATET,RATAT,NNXTRA,KVX,MVX,NVX,NSETVX,NVO,IO1X16)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     > , XNAME(3,200)
      COMMON/QUEIMA/NBSTEP,NCONJU,NXCON(50),BSTEP(50),FMASS(200),
     > QACUM(200),NXSEC(200),NBUCKB,NOPBUC,BUCBUR(50)
C
      DIMENSION CONC(NVX,MVX),NJJR(NVX,NSETVX),RATE(NVX,MVX,10),
     > SS1(KVX,NVX,NSETVX),SS2(KVX,NVX,NSETVX),SS4(KVX,NVX,NSETVX),
     > SS5(KVX,NVX,NSETVX),B4(MVX,KVX),ZONVOL(MVX),ZONEN(NVO), HOL(NVX,
     > NSETVX,10),RATET(NVX,6),RATAT(200,10),NNXTRA(NVX,NSETVX)
C
      IOC=IO1
      IF (IO1X16.GT.0) REWIND IOC
  100 DO 102 NO = 1,8
      DO 101 M = 1,MMAX
      DO 101 N = 1,NMAX
      RATE(N,M,NO) = 0.0
  101 CONTINUE
  102 CONTINUE
      IF (IX(166).LE.1) GO TO 103
      IOSZ = IX(79)
      IF (IO1X16.GT.0) IOSZ = IO3
      REWIND IOSZ
      READ(IOSZ)
  103 CONTINUE
      DO 121 M=1,MMAX
      NS = NXSET(M)
      NR = NXODR(NS)
      NSX = NSIG2(NR)
      V = ZONVOL(M)
      IF (IO1X16.GT.0) READ(IOC) (RATET(N,6),N=1,NSX)
      IF (IX(166).LE.1) GO TO 104
      NSUBZ = NZON(M)
      NL = NSX*NSUBZ
      READ(IOSZ)
      READ(IOSZ) (ZONEN(L),L=1,NL)
  104 CONTINUE
      DO 120 K=1,KMAX
      P = B4(M,K)
      DO 119 N=1,NSX
      IF (IX(166).LE.0) GO TO 113
      IF (NNXTRA(N,NR).NE.10) GO TO 113
      IF (IX(166).NE.1) GO TO 109
      IF (IO1X16.GT.0) GO TO 105
      CN = CONC(N,M)
      GO TO 106
  105 CN = RATET(N,6)
  106 CONTINUE
      IF (CN.EQ.0.0) GO TO 107
      CNS = SS5(K,N,NR)
      IF (CNS.EQ.0.0) GO TO 107
      C = CNS/CN
      IF (C.GT.200) GO TO 107
      Y = 2.0*(SQRT(C*(C+1)) - C)
      GO TO 108
  107 Y = 1.0
  108 S1 = Y*SS1(K,N,NR)
      S2 = Y*SS2(K,N,NR)
      CSS1 = CN*S1
      CSS2 = CN*S2
      GO TO 118
  109 CONTINUE
      CSS1 = 0.0
      CSS2 = 0.0
      DO 112 LZ =1,NSUBZ
      NSZ = (LZ-1)*NSX + N
      CN = ZONEN(NSZ)
      IF (CN.EQ.0.0) GO TO 110
      CNS = SS5(K,N,NR)
      IF (CNS.EQ.0.0) GO TO 110
      C = CNS/CN
      IF (C.GT.200) GO TO 110
      Y = 2.0*(SQRT(C*(C+1)) - C)
      GO TO 111
  110 Y = 1.0
  111 S1 = Y*SS1(K,N,NR)
      S2 = Y*SS2(K,N,NR)
      CSS1 = CSS1 + CN*S1
      CSS2 = CSS2 + CN*S2
  112 CONTINUE
      ZN = FLOAT(NSUBZ)
      CSS1 = CSS1/ZN
      CSS2 = CSS2/ZN
      GO TO 118
  113 CONTINUE
      IF (IO1X16.GT.0) GO TO 114
      CM = CONC(N,M)
      GO TO 115
  114 CM = RATET(N,6)
  115 CONTINUE
      IF (NNXTRA(N,NR).NE.6) GO TO 116
      CSS1 = CM*(SS1(K,N,NR) - 2.0*SS5(K,N,NR))
      GO TO 117
  116 CSS1 = CM*SS1(K,N,NR)
  117 CSS2 = CM*SS2(K,N,NR)
  118 CONTINUE
      PVC1 = P*V*CSS1
      PVC2 = P*V*CSS2
      RATE(N,M,1) = RATE(N,M,1) + PVC1
      RATE(N,M,2) = RATE(N,M,2) + (PVC1 - PVC2)
      RATE(N,M,3) = RATE(N,M,3) + PVC2*SS4(K,N,NR)
      RATE(N,M,6) = RATE(N,M,6) + PVC2*HOL(N,NR,9)*1.0E-6/XMIS(5)
      IF (K.GT.1) GO TO 119
      RATE(N,M,4) = CONC(N,M)*V*HOL(N,NR,7)*1.66043E-3/XMIS(5)
      RATE(N,M,7) = CONC(N,M)*V
  119 CONTINUE
  120 CONTINUE
  121 CONTINUE
      TOLS = SPARE(56)
      RTOLS = 1.0/TOLS
      DO 123 M=1,MMAX
      NS = NXSET(M)
      NR = NXODR(NS)
      NSX = NSIG2(NR)
      DO 122 N=1,NSX
      RATE(N,M,2) = RATE(N,M,2)*RTOLS
      RATE(N,M,3) = RATE(N,M,3)*RTOLS
      RATE(N,M,1) = RATE(N,M,1)*RTOLS
      IF (RATE(N,M,1).EQ.0.0) GO TO 122
      RATE(N,M,5) = RATE(N,M,3)/RATE(N,M,1)
  122 CONTINUE
  123 CONTINUE
      IF (IX(166).GT.1) REWIND IOSZ
      IF (IO1X16.GT.0) REWIND IOC
      IF (NGC(1).EQ.0) GO TO 124
  124 IWRT=0
      IF (IX(108).EQ.0) GO TO 143
      IF (IX(108).GT.0) GO TO 131
      IX108 = -IX(108)
      CALL RQED(IX108,IND)
      IF (IND.NE.0) GO TO 143
      IWRT = 1
      IF (IX(99).EQ.0) GO TO 125
      WRITE(IOUT,1000)IX(3),SPARE(12)
      GO TO 126
  125 CONTINUE
      WRITE(IOUT,1001) TOLS,SPARE(74),SPARE(75)
  126 CONTINUE
      WRITE(IOUT,1002)(XNAME(I,1),I=1,3)
      DO 130 M = 1,MMAX
      IF (M-1) 128,128,127
  127 WRITE(IOUT,1003)M,(XNAME(I,M),I=1,3)
  128 CONTINUE
      NACT = NXSET(M)
      NSET = NXODR(NACT)
      JM = NJM(NSET)
      T1 = 0.0
      T2 = 0.0
      T3 = 0.0
      T4 = 0.0
      DO 129 N = 1,JM
      T1 = T1+RATE(N,M,4)
      T2 = T2+RATE(N,M,1)
      T3 = T3+RATE(N,M,2)
      T4 = T4+RATE(N,M,3)
      WRITE(IOUT,1004)(HOL(N,NSET,I),I=1,6), NJJR(N,NSET),RATE(N,M,4),
     > RATE(N,M,1),RATE(N,M,2), RATE(N,M ,3),RATE(N,M,5)
  129 CONTINUE
      WRITE(IOUT,1008)T1,T2,T3,T4
  130 CONTINUE
      GO TO 132
  131 CONTINUE
      CALL RQED(IX(108),IND)
      IF (IND.NE.0) GO TO 143
      IF (IWRT.NE.0) GO TO 134
  132 CONTINUE
      IF (IX(99).EQ.0) GO TO 133
      WRITE(IOUT,1000) IX(3),SPARE(12)
      GO TO 134
  133 CONTINUE
      WRITE(IOUT,1001) TOLS,SPARE(74),SPARE(75)
  134 CONTINUE
      IF (IWRT.EQ.0) IWRT = 1
      WRITE(IOUT,1005)
      M1 = N1N2R(1,1)
      M2 = N1N2R(2,1)
      WRITE(IOUT,1006)M1,M2,(XNAME(I,M1),I=1,3)
      NNN = IX(34)
      DO 142 NN = 1,NNN
      T1 = 0.0
      T2 = 0.0
      T3 = 0.0
      T4 = 0.0
      M1 = N1N2R(1,NN)
      M2 = N1N2R(2,NN)
      NACT = NXSET(M1)
      NSET = NXODR(NACT)
      JM = NJM(NSET)
      IF (NN-1) 136,136,135
  135 WRITE(IOUT,1007)M1,M2,(XNAME(I,M1),I=1,3)
  136 CONTINUE
      DO 138 N = 1,JM
      RATET(N,1) = 0.0
      RATET(N,2) = 0.0
      RATET(N,3) = 0.0
      RATET(N,4) = 0.0
      RATET(N,5) = 0.0
      RATE(N,1,8) = 0.0
      SUMVOL = 0.0
      DO 137 M = M1,M2
      RATET(N, 1) = RATET(N, 1)+RATE(N,M,1)
      RATET(N, 2) = RATET(N, 2)+RATE(N,M,2)
      RATET(N, 3) = RATET(N, 3)+RATE(N,M,3)
      RATET(N, 4) = RATET(N, 4)+RATE(N,M,4)
      RATE(N,1,8) = RATE(N,1,8)+RATE(N,M,7)
      SUMVOL = SUMVOL+ZONVOL(M)
  137 CONTINUE
      IF (SUMVOL.EQ.0.0) GO TO 138
      RATE(N,1,8) = RATE(N,1,8)/SUMVOL
  138 CONTINUE
      DO 141 N = 1,JM
      T1 = T1+RATET(N, 4)
      T2 = T2+RATET(N, 1)
      T3 = T3+RATET(N, 2)
      T4 = T4+RATET(N, 3)
      IF (RATET(N,1)) 139,140,139
  139 RATET(N, 5) = RATET(N, 3)/RATET(N, 1)
  140 CONTINUE
      WRITE(IOUT,1004)(HOL(N,NSET,I),I=1,6),NJJR(N,NSET), RATET(N,4),
     > RATE(N,1,8),RATET(N,1),RATET(N,2),RATET(N,3), RATET(N, 5)
  141 CONTINUE
      WRITE(IOUT,1008)T1,T2,T3,T4
  142 CONTINUE
  143 CONTINUE
      IF (IWRT.GT.0) GO TO 146
      CALL RQED(IX(107),IND)
      IF (IND.NE.0) GO TO 157
      IF (IWRT.NE.0) GO TO 145
      IF (IX(99).EQ.0) GO TO 144
      WRITE(IOUT,1000) IX(3),SPARE(12)
      GO TO 145
  144 CONTINUE
      WRITE(IOUT,1001) TOLS,SPARE(74),SPARE(75)
  145 CONTINUE
  146 CONTINUE
      WRITE(IOUT,1009)
      T1 = 0.0
      T2 = 0.0
      T3 = 0.0
      T4 = 0.0
      DO 147 N = 1,200
      NXTR1(N) = 0
      RATAT(N,1) = 0.0
      RATAT(N,2) = 0.0
      RATAT(N,3) = 0.0
      RATAT(N,4) = 0.0
  147 CONTINUE
      NNN = 0
      DO 152 M = 1,MMAX
      NACT = NXSET(M)
      NSET = NXODR(NACT)
      JM = NJM(NSET)
      IF (JM.EQ.NMAX) NSTE = NSET
      DO 151 NN= 1,JM
      N = NJJR(NN,NSET)
      RATAT(N,1) = RATAT(N,1)+RATE(NN,M,4)
      RATAT(N,2) = RATAT(N,2)+RATE(NN,M,1)
      RATAT(N,3) = RATAT(N,3)+RATE(NN,M,2)
      RATAT(N,4) = RATAT(N,4)+RATE(NN,M,3)
      IF (NXTR1(1).NE.0) GO TO 148
      NXTR1(1) = N
      NNN = 1
      GO TO 150
  148 DO 149 I = 1,NNN
      IF (NXTR1(I).EQ.N) GO TO 150
  149 CONTINUE
      NNN = NNN+1
      NXTR1(NNN) = N
  150 CONTINUE
  151 CONTINUE
  152 CONTINUE
      DO 156 NN = 1,NNN
      N = NXTR1(NN)
      T1 = T1+RATAT(N,1)
      T2 = T2+RATAT(N,2)
      T3 = T3+RATAT(N,3)
      T4 = T4+RATAT(N,4)
      DO 154 NS = 1,NSETMX
      JM = NJM(NS)
      DO 153 NUC = 1,JM
      IF (N.EQ.NJJR(NUC,NS)) GO TO 155
  153 CONTINUE
  154 CONTINUE
  155 CONTINUE
      WRITE(IOUT,1010)(HOL(NUC,NS,I),I=1,6), N,RATAT(N,1),RATAT(N,2),
     > RATAT(N,3),RATAT(N,4)
  156 CONTINUE
      WRITE(IOUT,1008)T1,T2,T3,T4
      IF (NGC(22).LE.0) GO TO 157
      CALL DNFC(NJJR,RATE,HOL,RATAT,MVX,NVX,NSETVX,SS1)
  157 CONTINUE
  158 CONTINUE
      IF(NDPL(24).EQ.0) GO TO 167
      IF(SPARE(9).GT.0.0) GO TO 167
      IF(NDPL(24) .LT. 0) GO TO 167
      DO 159 N=1,MVX
  159 FMASS(N)=0.0
      IF1=IX(51)
      IF2=IX(52)
      IF3=IX(53)
      IF4=IX(54)
      IF(IXPUT(94).EQ.0) GO TO 163
      DO 162 N=IF1,IF2
      DO 161 IZ=1,MVX
      NNS=NXSET(IZ)
      NNR=NXODR(NNS)
      NSX=NJM(NNR)
      DO 160 M=1,NSX
      IF(IXPUT(N).NE.NJJR(M,NNR)) GO TO 160
      FMASS(IZ)=FMASS(IZ)+RATE(M,IZ,4)*XMIS(5)
  160 CONTINUE
  161 CONTINUE
  162 CONTINUE
  163 IF(IXPUT(95).EQ.0) GO TO 167
      DO 166 N=IF3,IF4
      DO 165 IZ=1,MVX
      NNS=NXSET(IZ)
      NNR=NXODR(NNS)
      NSX=NJM(NNR)
      DO 164 M=1,NSX
      IF(IXPUT(N).NE.NJJR(M,NNR)) GO TO 164
      FMASS(IZ)=FMASS(IZ)+RATE(M,IZ,4)*XMIS(5)
  164 CONTINUE
  165 CONTINUE
  166 CONTINUE
  167 CONTINUE
      RETURN
 1000 FORMAT('0'/' FINAL NUCLIDE REACTION RATES FOR CYCLE',I3,
     > '  TOTAL DEPLETION TIME',F8.2,' DAYS')
 1001 FORMAT('0'/'0NUCLIDE REACTION RATES NORMALIZED TO',1PE14.6,
     > '  TOTAL LOSSES'/'  THE AMOUNT(KG) IS AT DEPLETION TIME',E14.6,
     > ' DAYS, AND THE REACTION RATES ARE AT DEPLETION TIME',E14.6,
     > ' DAYS')
 1002 FORMAT('0 ZONE  1--',3A4,'                 NUC.   AMOUNT(KG)    ',
     > 'ABSORPTIONS      CAPTURES     PRODUCTIONS         ETA')
 1003 FORMAT('  ZONE',I3,'--',3A4)
 1004 FORMAT(12X,6A4,I6,1P6E14.5)
 1005 FORMAT('0'/'0NUCLIDE REACTION RATES SUMMED OVER SPECIFIED SETS OF
     >ZONES')
 1006 FORMAT('0 ZONES',I3,'-',I3,'--',3A4,'            NUC.',
     > '  AMOUNT(KG)   AVE.CONC.     ABSORPTIONS     CAPTURES',
     > '    PRODUCTIONS       ETA')
 1007 FORMAT(' ZONES',I3,'-',I3,'--',3A4)
 1008 FORMAT(39X,'SUM',1PE14.5,14X,3E14.5)
 1009 FORMAT(1H0/1H0,54X,'TOTAL NUCLIDE REACTION RATES'/
     > '0                                       NUC.  AMOUNT(KG)',
     > '                 ABSORPTIONS      CAPTURES     PRODUCTIONS')
 1010 FORMAT(12X,6A4,I6,1PE14.5,14X,3E14.5)
      END
CBIGS --077 ***CITATION*** CALC. ZONE MACRO.SIGS/ CF-EIGN,UDTE,KDTE
C     INDO=0 - NORMAL     INDO=1 - UPDATING IN DIRECT SEARCH
      SUBROUTINE BIGS(F1,CONC,SS1,SS2,SS3,SS4,SS5,SSC,SIG,HOL,ONEOV,
     > INDO,NJJR,KVX,MVX,NVX,NSETVX,BBND,XI,ZONEN,NNXTRA,NVO)
C**** ARRAY F1 IS USING THE CORE RESERVED FOR ARRAY SCAC
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     > , XNAME(3,200)
      COMMON/QUEIMA/NBSTEP,NCONJU,NXCON(50),BSTEP(50),FMASS(200),
     > QACUM(200),NXSEC(200),NBUCKB,NOPBUC,BUCBUR(50)
C
      DIMENSION F1(KVX,KVX,MVX),CONC(NVX,MVX),SS1(KVX,NVX,NSETVX),
     > SS2(KVX,NVX,NSETVX),SS3(KVX,NVX,NSETVX), SS4(KVX,NVX,NSETVX),
     > SS5(KVX,NVX,NSETVX), SSC(KVX,KVX ),SIG(KVX,MVX,10),HOL(NVX,
     > NSETVX,10), ONEOV(KVX,NSETVX),NJJR(NVX,NSETVX),BBND(KVX)
      DIMENSION XI(KVX)
      DIMENSION ZONEN(NVO),NNXTRA(NVX,NSETVX)
C
      IO14 = IX(81)
      I = 0
      IF (INDO.EQ.1) GO TO 105
      IF (NGC(19)) 100,100,148
  100 IF (MM1VX-MVX) 103,101,103
  101 IF (KM1VX-KVX) 103,102,103
  102 I = 0
      GO TO 105
  103 IF (INNO(24)) 102,104,102
  104 I = 1
  105 DO 110 M = 1,MMAX
      DO 109 K = 1,KMAX
      SIG(K,M,1) = 0.0
      SIG(K,M,2) = 0.0
      SIG(K,M,3) = 0.0
      SIG(K,M,4) = 0.0
      SIG(K,M,5) = 0.0
      IF (I) 107,107,106
  106 SIG(K,M,6) = 0.0
  107 SIG(K,M,7) = 0.0
      SIG(K,M,8) = 0.0
      DO 108 KK = 1,KMAX
      F1(KK,K,M) = 0.0
  108 CONTINUE
  109 CONTINUE
  110 CONTINUE
      IF(NOPBUC .NE. 4) GO TO 207
      IF(SPARE(9) .EQ. 0.0) GO TO 207
      NPASS=IX(2)
      IF(NPASS .GT. NBUCKB) NPASS=NBUCKB
      DO 206 M=1,MMAX
      DO 205 K=1,KMAX
      SIG(K,M,6)=BUCBUR(NPASS)
  205 CONTINUE
  206 CONTINUE
  207 CONTINUE
      IF (IX(166).LE.1) GO TO 111
      IO12 = IX(79)
      REWIND IO12
      READ(IO12)
  111 CONTINUE
      IF(NDPL(24).EQ.0) GO TO 203
      IF(SPARE(9).EQ.0.0  .AND.  NDPL(24) .GT. 0) GO TO 203
      NLL=IX(34)
      DO 202 MIX=1,NLL
      NZ1=N1N2R(1,MIX)
      NZ2=N1N2R(2,MIX)
      DO 201 M=NZ1,NZ2
      NMIN=1
      IF(NDP(M).LE.0) GO TO 204
      DMIN=ABS(QACUM(M)-BSTEP(1))
      DO 200 N=2,NBSTEP
      AUX=ABS(QACUM(M)-BSTEP(N))
      IF(DMIN.LE.AUX) GO TO 200
      DMIN=AUX
      NMIN=N
  200 CONTINUE
  204 NXSET(M)=NXSEC(M)+NMIN-1
  201 CONTINUE
  202 CONTINUE
  203 CONTINUE
      DO 134 M=1,MMAX
      NS = NXSET(M)
      NR = NXODR(NS)
      NSX = NSIG2(NR)
      IF (IX(166).LE.1) GO TO 112
      NSUBZ = NZON(M)
      NL = NSX*NSUBZ
      READ(IO12)
      READ(IO12) (ZONEN(L),L=1,NL)
  112 CONTINUE
      DO 133 K=1,KMAX
      DO 132 N=1,NSX
      IF (IX(166).LE.0) GO TO 119
      IF (NNXTRA(N,NR).NE.10) GO TO 119
      IF (IX(166).NE.1) GO TO 115
      CN = CONC(N,M)
      IF (CN.EQ.0.0) GO TO 113
      CNS = SS5(K,N,NR)
      IF (CNS.EQ.0.0) GO TO 113
      C = CNS/CN
      IF (C.GT.200) GO TO 113
      Y = 2.0*(SQRT(C*(C+1)) - C)
      GO TO 114
  113 Y = 1.0
  114 S1 = Y*SS1(K,N,NR)
      S2 = Y*SS2(K,N,NR)
      CSS1 = CN*S1
      CSS2 = CN*S2
      GO TO 122
  115 CONTINUE
      CSS1 = 0.0
      CSS2 = 0.0
      DO 118 LZ =1,NSUBZ
      NSZ = (LZ-1)*NSX + N
      CN = ZONEN(NSZ)
      IF (CN.EQ.0.0) GO TO 116
      CNS = SS5(K,N,NR)
      IF (CNS.EQ.0.0) GO TO 116
      C = CNS/CN
      IF (C.GT.200) GO TO 116
      Y = 2.0*(SQRT(C*(C+1)) - C)
      GO TO 117
  116 Y = 1.0
  117 S1 = Y*SS1(K,N,NR)
      S2 = Y*SS2(K,N,NR)
      CSS1 = CSS1 + CN*S1
      CSS2 = CSS2 + CN*S2
  118 CONTINUE
      ZN = FLOAT(NSUBZ)
      CSS1 = CSS1/ZN
      CSS2 = CSS2/ZN
      GO TO 122
  119 CONTINUE
      IF (NNXTRA(N,NR).NE.6) GO TO 120
      CSS1 = CONC(N,M)*(SS1(K,N,NR) - 2.0*SS5(K,N,NR))
      GO TO 121
  120 CSS1 = CONC(N,M)*SS1(K,N,NR)
  121 CSS2 = CONC(N,M)*SS2(K,N,NR)
  122 CONTINUE
      DTMP = 3.0*CONC(N,M)*SS3(K,N,NR)
      IF (SIG(K,M,1)) 123,124,123
  123 DTMP = DTMP+1.0/SIG(K,M,1)
  124 IF (DTMP) 125,126,125
  125 SIG(K,M,1) = 1.0/DTMP
  126 SIG(K,M,3) = SIG(K,M,3) + CSS1
      SIG(K,M,4) = SIG(K,M,4) + CSS2*SS4(K,N,NR)
      SIG(K,M,7) = SIG(K,M,7) + CSS2*HOL(N,NR,9)
  127 IF (IX(5).NE.1) GO TO 131
      IF (IX(128).GT.0) GO TO 131
      IF ((IX(44).EQ.0).AND.(IX(49).EQ.0)) GO TO 129
      IF (IX(49).GT.0) GO TO 128
      IF ((M.EQ.IX(44)).OR.(M.EQ.IX(45)).OR.(M.EQ.IX(46))
     > .OR.(M.EQ.IX(47)).OR.(M.EQ.IX(48))) GO TO 129
      GO TO 131
  128 IF (IX(49).NE.NCLASS(M)) GO TO 131
  129 DO 130 INI = 12,18
      IF (NJJR(N,NR).NE.NSRH(INI)) GO TO 130
      SIG(K,M,5) = SIG(K,M,5) + CSS1
      SIG(K,M,8) = SIG(K,M,8) + CSS2*SS4(K,N,NR)
  130 CONTINUE
  131 CONTINUE
      IF (IX(5).EQ.-1) SIG(K,M,5) = ONEOV(K,NR)
  132 CONTINUE
  133 CONTINUE
  134 CONTINUE
      IF (IX(166).GT.1) REWIND IO12
      DO 139 NR=1,NSETMX
      NSX = NSIG2(NR)
      NKC = NSIG3(NR)
      DO 138 N=1,NSX
      READ(IO4) ((SSC(KK,K),KK=1,NKC),K=1,NKC)
      DO 137 M=1,MMAX
      NS = NXSET(M)
      NRR = NXODR(NS)
      IF (NRR.NE.NR) GO TO 137
      DO 136 K=1,KMAX
      DO 135 KK=1,KMAX
      IF (K.EQ.KK) GO TO 135
      F1(KK,K,M) = F1(KK,K,M) + SSC(KK,K)*CONC(N,M)
  135 CONTINUE
  136 CONTINUE
  137 CONTINUE
  138 CONTINUE
  139 CONTINUE
      REWIND IO4
      IF (IX(128).LE.0) GO TO 143
      IO18 = IX(85)
      REWIND IO18
      READ(IO18) NXZ
      READ(IO18) (NXTR1(I),I=1,NXZ)
      DO 142 I=1,NXZ
      M = NXTR1(I)
      NS = NXSET(M)
      NR = NXODR(NS)
      NSX = NSIG2(NR)
      READ(IO18) (XTR1(N),N=1,NSX)
      DO 141 N=1,NSX
      DO 140 K=1,KMAX
      SIG(K,M,5) = SIG(K,M,5) + XTR1(N)*SS1(K,N,NR)
      SIG(K,M,8) = SIG(K,M,8) + XTR1(N)*SS2(K,N,NR)*SS4(K,N,NR)
  140 CONTINUE
  141 CONTINUE
  142 CONTINUE
      REWIND IO18
  143 CONTINUE
  144 DO 147 M = 1,MMAX
      DO 146 K = 1,KMAX
      DO 145 KK = 1,KMAX
      SIG(K,M,2) = SIG(K,M,2)+F1(KK,K,M)
  145 CONTINUE
  146 CONTINUE
  147 CONTINUE
      IF (INDO.EQ.1) GO TO 176
  148 NGSCU = 0
      NGSCD = 0
      NSIGNL = 0
      IF (NGC(19).LE.0) GO TO 153
      IF (IX(5).EQ.(-1)) GO TO 151
      DO 150 M=1,MMAX
      DO 149 K=1,KMAX
      SIG(K,M,5) = 0.0
  149 CONTINUE
  150 CONTINUE
  151 CONTINUE
      REWIND IO14
      DO 152 K=1,KMAX
      READ(IO14) ((F1(KK,K,M),KK=1,KMAX),M=1,MMAX)
  152 CONTINUE
  153 CONTINUE
      N17 = NUAC(17)
      IF (N17.EQ.0) GO TO 159
      NOTZ = 0
      DO 158 M = 1,MMAX
      IF (N17.NE.M) GO TO 158
      NOTZ = 1
      DO 157 K = 1,KMAX
      IF (XMIS(2).GE.0) GO TO 154
      IF (BBND(K).EQ.0) GO TO 157
  154 CONTINUE
      DO 155 KK = 1,KMAX
      F1(KK,K,M) = 0.0
  155 CONTINUE
      DO 156 I = 1,8
      SIG(K,M,I) = 0.0
  156 CONTINUE
  157 CONTINUE
  158 CONTINUE
      IF (NOTZ.GT.0) GO TO 159
      WRITE(IOUT,1000)
      return
  159 CONTINUE
      DO 167 M = 1,MMAX
      DO 166 K = 1,KMAX
      DO 165 KK = 1,KMAX
      IF (F1(KK,K,M).EQ.0.0) GO TO 165
      T1 = ABS(SIG(K,M,2)/F1(KK,K,M))
      IF (T1.LE.1.0E+10) GO TO 160
      F1(KK,K,M) = 0.0
      GO TO 165
  160 CONTINUE
  161 KKMK = KK-K
      KXMKK = KMAX-KK
      IF (KKMK) 164,162,163
  162 NSIGNL = 1
      F1(KK,K,M) = 0.0
      GO TO 165
  163 NGSCD = MAX0(NGSCD,KKMK)
      GO TO 165
  164 NGSCU = MAX0(NGSCU,KXMKK)
  165 CONTINUE
  166 CONTINUE
  167 CONTINUE
      IDTI = 0
      IF (NSIGNL) 169,169,168
  168 WRITE(IOUT,1001)
      IDTI = 1
  169 IF (NGSCU-IX(29)) 170,171,170
  170 WRITE(IOUT,1002)IX(29),NGSCU
      IX(29) = NGSCU
      IDTI = 1
  171 IF (NGSCD-IX(28)) 172,173,172
  172 WRITE(IOUT,1003)IX(28),NGSCD
      IX(28) = NGSCD
      IDTI = 1
C*****IDTI=0 SUPRESSES SCATTERING ARRAY OUTPUT UNLESS WANTED*****
      IDTI = 0
  173 IF (IDTI) 174,174,175
  174 IF ((IX(103).EQ.0).AND.(IX(104).EQ.0)) GO TO 176
  175 CALL XSET(SIG,F1,KVX,MVX,IDTI)
  176 CONTINUE
      IF (IX(40).GT.0) GO TO 178
      REWIND IO14
      DO 177 K=1,KMAX
      WRITE(IO14) ((F1(KK,K,M),KK=1,KMAX),M=1,MMAX)
  177 CONTINUE
      REWIND IO14
  178 CONTINUE
      IF (NUAC(20).LT.0) GO TO 180
      IF (NUAC(5).GT.10) GO TO 179
      IF ((NUAC(20).EQ.0).AND.(NGSCU.GT.0)) NUAC(20) = 1
      GO TO 180
  179 IF ((NUAC(20).EQ.0).AND.(NGSCU.GT.0)) NUAC(20) = 0
  180 CONTINUE
      IF (NUAC(23).GT.0) GO TO 182
      IF (NUAC(5).GT.10) GO TO 181
      NUAC(23) = 1
      GO TO 182
  181 NUAC(23) = 3
      IF(NUAC(20).LT.0) NUAC(23) = 1
      IF (NGSCU.GT.0) NUAC(23) = 1
  182 CONTINUE
      RETURN
 1000 FORMAT('0ERROR STOP 30')
 1001 FORMAT('0'/'0**********WARNING**********  THERE IS SCATTERING FROM
     > SOME GROUP TO ITSELF - HAS BEEN SET TO ZERO')
 1002 FORMAT('0'/'0**********WARNING**********  INPUT SPECIFIED UPSCATTE
     >R =',I3,'  HAS BEEN CHANGED TO ACTUAL UPSCATTER =',I3)
 1003 FORMAT('0'/'0**********WARNING**********  INPUT SPECIFIED DOWNSCAT
     >TER =',I3,'  HAS BEEN CHANGED TO ACTUAL DOWNSCATTER =',I3)
      END
CHIST --026 ***CITATION*** READS INPUT SECTION 002/ CF-IPTM
      SUBROUTINE HIST
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/QUEIMA/NBSTEP,NCONJU,NXCON(50),BSTEP(50),FMASS(200),
     > QACUM(200),NXSEC(200),NBUCKB,NOPBUC,BUCBUR(50)
      DIMENSION AUXQ(6)
C
  100 READ(IOIN,1000)(NDPL(I),I=1,24)
      READ(IOIN,1001)(DPLH(I),I=1,6)
      IF (DPLH(1)) 101,101,102
  101 DPLH(1) = 5000.0
  102 CONTINUE
      IF (DPLH(6).EQ.0.0) DPLH(6) = 1.0
      IF (DPLH(4).EQ.0.0) DPLH(4) = DPLH(6)
      IF (DPLH(5).EQ.0.0) DPLH(5) = 1.0E-30
      READ(IOIN,1001)(SPARE(I),I=3,8)
      READ(IOIN,1000)(IXPUT(I),I=1,24)
      IF (NGC(1)) 103,104,104
  103 WRITE(IOUT,1002)
      GO TO 105
  104 WRITE(IOUT,1003)
  105 WRITE(IOUT,1004)(NDPL(I),I=1,24)
      WRITE(IOUT,1005)(DPLH(I),I=1,6)
      DO 106 I = 3,8
      SPARE(I+17) = SPARE(I)
  106 CONTINUE
      IF (SPARE(21)) 108,107,108
  107 SPARE(21) = SPARE(20)
  108 IF (SPARE(22)) 110,109,110
  109 SPARE(22) = SPARE(21)
  110 IF (SPARE(24)) 112,111,112
  111 SPARE(24) = SPARE(23)
  112 IF (SPARE(25)) 114,113,114
  113 SPARE(25) = SPARE(24)
  114 WRITE(IOUT,1005)(SPARE(I),I=20,25)
      WRITE(IOUT,1006)(IXPUT(I),I=1,24)
      DO 115 I = 20,25
      SPARE(I) = SPARE(I)*86400.0
  115 CONTINUE
      IF (DPLH(6)) 117,116,117
  116 DPLH(6) = 1.0
  117 IX(5) = NDPL(7)
      SPARE(50) = DPLH(6)
      DO 118 I = 25,72
      IXPUT(I) = 0
  118 CONTINUE
      IF (NDPL(12).EQ.0) GO TO 126
      READ(IOIN,1000)(IXPUT(I),I=25,48)
      IF ((IXPUT(47).EQ.0).AND.(IXPUT(48).EQ.0)) GO TO 119
      READ(IOIN,1000)(IXPUT(I),I=49,72)
      IF ((IXPUT(71).EQ.0).AND.(IXPUT(72).EQ.0)) GO TO 119
      N1 = 72
      GO TO 124
  119 CONTINUE
      N1 = 28
  120 CONTINUE
      N1 = N1+1
      IF (IXPUT(N1).EQ.0) GO TO 125
  121 CONTINUE
      N2 = N1-1
  122 CONTINUE
      N2 = N2+2
      N3 = N2+1
      IF ((IXPUT(N2).GT.0).AND.(IXPUT(N3).GT.0)) GO TO 123
      N1 = 72
      GO TO 124
  123 CONTINUE
      IF (IXPUT(N3+1).GT.0) GO TO 122
      N1 = N3+1
      GO TO 120
  124 CONTINUE
      NER(36) = 36
  125 CONTINUE
      WRITE(IOUT,1006)(IXPUT(I),I=25,N1)
  126 CONTINUE
      IF(NDPL(24).EQ.0) GO TO 131
      NBSTEP=0
  127 READ(IOIN,1001)(AUXQ(I),I=1,6)
      DO 129 I=1,6
      IF(NBSTEP.EQ.0) GO TO 128
      IF(AUXQ(I).LE.0.0) GO TO 130
  128 NBSTEP=NBSTEP+1
      BSTEP(NBSTEP)=AUXQ(I)
  129 CONTINUE
      GO TO 127
  130 WRITE(IOUT,1005)(BSTEP(I),I=1,NBSTEP)
      IF(NDPL(24) .GE. 0) GO TO 131
      READ(IOIN,1000) NZONAS
      READ(IOIN,1001) (FMASS(I),I=1,NZONAS)
      READ(IOIN,1001) (QACUM(I),I=1,NZONAS)
      WRITE(IOUT,1006) NZONAS
      WRITE(IOUT,1005) (FMASS(I),I=1,NZONAS)
      WRITE(IOUT,1005) (QACUM(I),I=1,NZONAS)
  131 CONTINUE
      RETURN
 1000 FORMAT(24I3)
 1001 FORMAT(6E12.0)
 1002 FORMAT('0'/'0DYNAMICS HISTORY INPUT - SECTION 022')
 1003 FORMAT('0'/'0DEPLETION HISTORY INPUT - SECTION 002')
 1004 FORMAT('0',24I4)
 1005 FORMAT(1X,1P6E14.6)
 1006 FORMAT(1X,24I4)
      END
CSETV --024 ***CITATION*** ZEROS CERTAIN VARIABLES/ CF-IPTM
      SUBROUTINE SETV
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AMESH/BMESH(30),NREGI,NREGJ,NREGKB,XSHI(100),XSHJ(100),
     > XSHKB(100), MSHI(100),MSHJ(100),MSHKB(100),Y(211),YY(211), X(211)
     >  ,XX(211),Z(211),ZZ(211), ZONVOL(200),AVZPD(200),PDI(211),
     > PDJ(211) , PDK(211)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,200),
     >  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     >  NZON(200),NXSET(200),NXODR(200),IDXSET(200),NCLASS(200),NDP(200)
     >  , XNAME(3,200)
      COMMON/ASRCH/ BSRCH(30),XK1,XK2,XK3,XN1,XN2,XN3, DELK1,DELK2,
     > DELK3,BATTY,DRV,TBF,GWC,EK2,RCCM,DNDK(5), NSC(5),NSCN,NXZ,NXN,
     > NXM,NXS,INIL,INIU,INID
      COMMON/CMARY/MEMARY,IMN,MNI,IJLMN,NMLJI,IY(50),AX(50),TITL(36)
      COMMON/QUEIMA/NBSTEP,NCONJU,NXCON(50),BSTEP(50),FMASS(200),
     > QACUM(200),NXSEC(200),NBUCKB,NOPBUC,BUCBUR(50)
      CHARACTER*4 BLK,XNAME
C
	DATA BLK /'    '/
C
      OPEN(1,FILE='FORT.1',FORM='UNFORMATTED',STATUS='SCRATCH')
      OPEN(2,FILE='FORT.2',FORM='UNFORMATTED',STATUS='SCRATCH')
      OPEN(3,FILE='FORT.3',FORM='UNFORMATTED',STATUS='SCRATCH')
      OPEN(4,FILE='FORT.4',FORM='UNFORMATTED',STATUS='SCRATCH')
      OPEN(5,FILE='INP2BCITATION.dat')
      OPEN(6,FILE='out2bcit.out')
      OPEN(7)
      OPEN(8,FILE='FORT.8',FORM='UNFORMATTED')
      OPEN(9,FILE='FORT.9',FORM='UNFORMATTED')
      OPEN(10,FILE='FORT.10',FORM='UNFORMATTED',STATUS='SCRATCH')
      OPEN(11,FILE='FORT.11',FORM='UNFORMATTED',STATUS='SCRATCH')
      OPEN(12,FILE='FORT.12',FORM='UNFORMATTED',STATUS='SCRATCH')
      OPEN(13,FILE='FORT.13',FORM='UNFORMATTED')
      OPEN(14,FILE='FORT.14',FORM='UNFORMATTED',STATUS='SCRATCH')
      OPEN(15,FILE='FORT.15',FORM='UNFORMATTED',STATUS='SCRATCH')
      OPEN(16,FILE='FORT.16',FORM='UNFORMATTED',STATUS='SCRATCH')
      OPEN(17,FILE='FORT.17',FORM='UNFORMATTED',STATUS='SCRATCH')
      OPEN(18,FILE='FORT.18',FORM='UNFORMATTED',STATUS='SCRATCH')
      OPEN(19,FILE='FORT.19',FORM='UNFORMATTED',STATUS='SCRATCH')
      OPEN(20,FILE='FORT.20',FORM='UNFORMATTED',STATUS='SCRATCH')
      OPEN(21,FILE='FORT.21',FORM='UNFORMATTED',STATUS='SCRATCH')
      OPEN(22,FILE='FORT.22',FORM='UNFORMATTED',STATUS='SCRATCH')
      OPEN(23,FILE='FORT.23',FORM='UNFORMATTED',STATUS='SCRATCH')
      OPEN(24,FILE='FORT.24',FORM='UNFORMATTED',STATUS='SCRATCH')
      OPEN(25,FILE='FORT.25',FORM='UNFORMATTED',STATUS='SCRATCH')
      OPEN(26,FILE='FORT.26',FORM='UNFORMATTED',STATUS='SCRATCH')
      OPEN(27,FILE='FORT.27',FORM='UNFORMATTED',STATUS='SCRATCH')
      OPEN(28,FILE='FORT.28',FORM='UNFORMATTED',STATUS='SCRATCH')
      OPEN(29,FILE='FORT.29',FORM='UNFORMATTED',STATUS='SCRATCH')
      OPEN(30,FILE='FORT.30',FORM='UNFORMATTED',STATUS='SCRATCH')
      OPEN(31,FILE='FORT.31')
      OPEN(32,FILE='FORT.32',FORM='UNFORMATTED')
      OPEN(33,FILE='FORT.33',FORM='UNFORMATTED',STATUS='SCRATCH')
      OPEN(34,FILE='FORT.34',FORM='UNFORMATTED',STATUS='SCRATCH')
      OPEN(35,FILE='FORT.35',FORM='UNFORMATTED',STATUS='SCRATCH')
      OPEN(36,FILE='FORT.36',FORM='UNFORMATTED')
      OPEN(37,FILE='FORT.37',FORM='UNFORMATTED')
      OPEN(38,FILE='FORT.38')
      OPEN(51,FILE='FORT.51')
C
  100 DO 101 N = 1,1741
      BLSUB(N) = 0.0
  101 CONTINUE
      DO 102 N = 1,2932
      BMESH(N) = 0.0
  102 CONTINUE
      DO 103 N = 1,498
      BFLUX(N) = 0.0
  103 CONTINUE
      DO 104 N = 1,2730
      BBURN(N) = 0.0
  104 CONTINUE
      DO 105 N=1,63
      BSRCH(N) = 0.0
  105 CONTINUE
      MEMARY = 0
      IMN = 0
      MNI = 0
      IJLMN = 0
      NMLJI = 0
      DO 106 N = 1,136
      IY(N) = 0
  106 CONTINUE
      IF(NDPL(24) .LT. 0) GO TO 108
      DO 107 N=1,200
      FMASS(N)=0.0
  107 QACUM(N)=0.0
  108 CONTINUE
 	DO 109 N=1,200
	XNAME(1,N)=BLK
	XNAME(2,N)=BLK
  109	XNAME(3,N)=BLK
      IOIN = 5
      IOUT = 51
      IOSIG = 8
      IOFLX = 9
      IO1 = 1
      IO2 = 2
      IO3 = 3
      IO4 = 4
      IO7 = 7
      IX(77) = 10
      IO10 = IX(77)
      IX(78) = 11
      IO11 = IX(78)
      IX(79) = 12
      IO12 = IX(79)
      IX(80) = 13
      IO13 = IX(80)
      IX(81) = 14
      IX(82) =15
      IX(83) = 16
      IX(84) = 17
      IX(85) = 18
      IX(86) = 19
      IX(87) = 20
      IX(88) = 21
      IX(89) = 22
      IX(90) = 23
      IX(91) = 24
      IX(92) = 25
      IX(93) = 26
      IX(94) = 27
      IX(95) = 28
      IX(96) = 29
      IX(97) = 30
      IX(137) = 31
      IX(138) = 32
      IX(139) = 33
      IX(140) = 34
      IX(141) = 35
      N1 = 1000
      N2 = 0
      REWIND IO10
      WRITE(IO10) N1,N2,N2,N2,N2
      REWIND IO10
      WRITE(IOUT,1000)
      WRITE(IOUT,1001)
      RETURN
 1000 FORMAT('1',22X,'**********CITATION - REVISION 2 (JULY 1971) - SUPP
     >LEMENT 3 (JULY 1972)**********')
 1001 FORMAT('0',36X,'************ VERSAO IPEN (SETEMBRO 1994) *********
     >**')
      END
CTSCL --132 ***CITATION*** TIME STEP CONTROL/ CF-CALR
      SUBROUTINE TSCL(A,KVX,MVX,NVX,NSETVX,NVO,IVO)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AMESH/BMESH(30),NREGI,NREGJ,NREGKB,XSHI(100),XSHJ(100),
     > XSHKB(100), MSHI(100),MSHJ(100),MSHKB(100),Y(211),YY(211), X(211)
     >  ,XX(211),Z(211),ZZ(211), ZONVOL(200),AVZPD(200),PDI(211),
     > PDJ(211) , PDK(211)
      COMMON/AKADD/KAY(1),K1,K2,K3,K4,K5,K6,K7,K8,K9,K10,K11, K12,K13,
     > K131,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23,K24, K25,K26,K27,
     > K28,K29,K30,K31,K32,K33,K34,K35,K36,K37, K38,K39,K40,K41,K42,K43,
     >  K44,K45,K46,K47,K48,K49, K50,K51,K52,K53,K54,K55,K56,K57,K58,
     > K59, K60,K61,K62, K63,K64,K65,K66,K67,K68,K69,K70,K71,K72,K73,
     > K74,K75, K76,K77,K78,K79,K80,K81,K82,K83,K84,K85,K86,K87, K88,
     > K89,K90, K91,K92,K93,K94,K95,K96,K97,K98, K99,K100,NDATA,KNRGN,
     > KNCOMP, KPVOL,KRVOL,MEMVRY, MEMX
      COMMON/QUEIMA/NBSTEP,NCONJU,NXCON(50),BSTEP(50),FMASS(200),
     > QACUM(200),NXSEC(200),NBUCKB,NOPBUC,BUCBUR(50)
C
      DIMENSION A(1)
C
      IF (NGC(19).GT.0) GO TO 102
  100 IF (NGC(1).GT.0) GO TO 101
C     CALL DYNM
      GO TO 102
  101 CONTINUE
      CALL BCIT(A(K1),A(K2),A(K4),A(K5),A(K8),A(K9),A(K10),A(K13),A(K17)
     >  ,A(K18),A(K30),A(K31),A(K32),A(K33),A(K34),A(K38),A(K39), A(K54)
     > ,A(K55),A(K56),A(K57),A(K58),A(K59),A(K60),A(K61), KVX,MVX,NVX,
     > NSETVX,NVO,IVO,ZONVOL)
      IF(NDPL(24).EQ.0.AND.IXPUT(24).EQ.0) GO TO 205
      DO 204 N=1,MMAX
      IF(FMASS(N).EQ.0) GO TO 204
      AUX=ZONVOL(N)*AVZPD(N)*SPARE(9)/FMASS(N)
      QACUM(N)=QACUM(N)+AUX*1.1574074E-8
  204 CONTINUE
  205 CONTINUE
  102 CONTINUE
      RETURN
      END
CPOUT --137 ***CITATION*** PRINT 1,2-D FLUXES/ CF-OUTC
C     IND = 0---FOWARD FLUX OUTPUT
C     IND = 1---POINT POWER OUTPUT
C     IND = 2---POINT NEUTRON DENSITY OUTPUT
C     IND = 3---POINT NEUTRON ABSORPTION RATE IN A NUCLIDE OUTPUT
C     IND = 4---ADJOINT FLUX OUTPUT
C     IND = 5---IMPORTANCE MAP OF UNIT CHANGE IN NUCLIDE
C     IND = 6---RELATIVE IMPORTANCE MAP FOR NUCLIDE
C     IND = 7---IMPORTANCE MAP OF 1/V CROSS SECTION
C     IND = 8---CUMULATIVE HEAT GENERATION RATE
C     IND = 9---TEMPERATURE OR POWER COEFFICIENT
C     IND = 10--DAMAGE RATE
C     IND = 11--GRAVAR FLUXOS PONTUAIS NO FILE 36
C     IND = 12--GRAVAR DENSIDADES DE POTENCIA PONTUAIS NO FILE 37
      SUBROUTINE POUT(P2 ,UTIL ,IND,SOURE,IVX,JVX,KBVX,KVX)
C
      DOUBLE PRECISION P2
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
      COMMON/AMESH/BMESH(30),NREGI,NREGJ,NREGKB,XSHI(100),XSHJ(100),
     > XSHKB(100), MSHI(100),MSHJ(100),MSHKB(100),Y(211),YY(211), X(211)
     >  ,XX(211),Z(211),ZZ(211), ZONVOL(200),AVZPD(200),PDI(211),
     > PDJ(211) , PDK(211)
C
      DIMENSION P2(JVX,IVX,KVX),UTIL(JVX,IVX,KBVX)
      DIMENSION SOURE(JVX,IVX,KBVX)
C
      IF(IND.EQ.11) GO TO 401
      IF(IND.EQ.12) GO TO 403
  100 IS1 = 0
      IS2 = 0
      IPG = 0
      IF (IND.EQ.9) GO TO 104
      IX50 = 0
      N3 = 3
      IF ((IND.EQ.0).OR.(IND.EQ.4)) GO TO 101
      N = IMAX*JMAX
      IF ((IMAX.GT.25).OR.(N.GT.550)) GO TO 101
      IX50 = 1
      IF ((IMAX.LE.15).AND.(JMAX.LE.11)) N3 = 4
      IF (IX(50).GT.0) GO TO 102
  101 CONTINUE
      WRITE(IOUT,1001)(TITL1(I),I=1,18)
      WRITE(IOUT,1002)(TITL2(I),I=1,18)
      IF (IX50.EQ.0) GO TO 103
  102 CONTINUE
      IX(50) = IX(50)+1
      IF (IX(50).EQ.N3) GO TO 101
  103 CONTINUE
      IF (IX(50).EQ.N3) IPG = 1
      IF (IX(50).EQ.N3) IX(50) = 0
      KLAX = KMAX
      IF ((IND.EQ.0).OR.(IND.EQ.4)) GO TO 105
  104 CONTINUE
      KLAX = 1
  105 DO 136 K = 1,KLAX
      IF (IND.EQ.9) GO TO 106
      WRITE(IOUT,1003)
  106 CONTINUE
      IF (IND.NE.8) GO TO 113
      NGO = NGC(21)
      IF (NGO.EQ.0) NGO = 1
      GO TO (107,108,109,110,111,112),NGO
  107 WRITE(IOUT,1004)
      GO TO 122
  108 WRITE(IOUT,1005)
      GO TO 122
  109 WRITE(IOUT,1006)
      GO TO 122
  110 WRITE(IOUT,1007)
      GO TO 122
  111 WRITE(IOUT,1008)
      GO TO 122
  112 WRITE(IOUT,1009)
      GO TO 122
  113 CONTINUE
      IF (IND.EQ.9) GO TO 122
      IF (IND.EQ.7) GO TO 115
      IF (IND.EQ.6) GO TO 114
      IF (IND.NE.5) GO TO 116
      WRITE(IOUT,1010)IXPUT(34),SPARE(91)
      GO TO 122
  114 WRITE(IOUT,1011)IXPUT(35)
      GO TO 122
  115 WRITE(IOUT,1012)
      GO TO 122
  116 CONTINUE
      IF (IND.NE.4) GO TO 117
      WRITE(IOUT,1013)K
      GO TO 122
  117 CONTINUE
      NUD = IX(165)
      IF (IND.EQ.10) WRITE(IOUT,1000)NUD
      IF (IND.EQ.10) GO TO 122
      IF (IND.LT.3) GO TO 118
      WRITE(IOUT,1014)IX(117)
      GO TO 122
  118 CONTINUE
      IF (IND-1) 120,121,119
  119 WRITE(IOUT,1015)
      GO TO 122
  120 WRITE(IOUT,1016)K
      GO TO 122
  121 WRITE(IOUT,1017)
  122 CONTINUE
      N1J = JMAX
      N2J = 0
  123 N1I = IMAX
      N2I = 0
      IF (N1J-11) 124,124,125
  124 N1L = N2J+1
      N2J = JMAX
      IS1 = 1
      GO TO 126
  125 N1L = N2J+1
      N2J = N2J+11
      N1J = N1J-11
  126 CONTINUE
      IF (N1I-50) 127,127,128
  127 N2L = N2I+1
      N2I = IMAX
      IS2 = 1
      GO TO 129
  128 N2L = N2I+1
      N2I = N2I+50
      N1I = N1I-50
  129 WRITE(IOUT,1018)(J,J=N1L,N2J)
      DO 133 I = N2L,N2I
      IF (IND.EQ.9) GO TO 132
      IF ((IND.EQ.5).OR.(IND.EQ.6).OR.(IND.EQ.7).OR.(IND.EQ.8)) GO TO
     > 132
      IF ((IND.EQ.0).OR.(IND.EQ.4)) GO TO 131
  130 WRITE(IOUT,1019)I,(UTIL(J,I,1),J=N1L,N2J)
      GO TO 133
  131 WRITE(IOUT,1019)I,(P2 (J,I, K),J=N1L,N2J)
      GO TO 133
  132 CONTINUE
      WRITE(IOUT,1019)I,(SOURE(J,I,1 ),J=N1L,N2J)
  133 CONTINUE
      IF (IS2) 126,126,134
  134 IS2 = 0
      IF (IS1) 123,123,135
  135 IS1 = 0
  136 CONTINUE
      IF (IPG.EQ.0) GO TO 137
      WRITE(IOUT,1001)(TITL1(I),I=1,18)
      WRITE(IOUT,1002)(TITL2(I),I=1,18)
  137 CONTINUE
C     NOTE SEQUENCING 2000 - 2200 FOLLOWING
      IF(NGC(7).EQ.0) GO TO 400
      IF((IND.EQ.1).OR.(IND.EQ.8)) GO TO 150
      GO TO 400
  150 CONTINUE
      IF((NGC(7).EQ.1).AND.(IND.EQ.8)) GO TO 400
      IO32 = IX(138)
      READ(IO32)
      IJDG14 = IEDG(14)+IXPUT(14)
      IF((NGC(7).GT.1).AND.(IND.EQ.8)) GO TO 200
      WRITE(IO32) SPARE(12),SPARE(100),XKEF1
      WRITE(IO32)(((UTIL (J,I,KB),J=1,JMAX),I=1,IMAX),KB=1,KBMAX)
      REWIND IO32
      GO TO 400
  200 CONTINUE
      IF(IJDG14.EQ.0) WRITE(IO32) SPARE(12),SPARE(100),XKEF1
      IF(IJDG14.EQ.0) GO TO 300
      READ(IO32)
      READ(IO32)
  300 CONTINUE
      WRITE(IO32)(((SOURE(J,I,KB),J=1,JMAX),I=1,IMAX),KB=1,KBMAX)
      REWIND IO32
      GO TO 400
  401 CONTINUE
C     IF(SPARE(12).EQ.0.0) REWIND 36
      WRITE(36)(TITL1(I),I=1,18),(TITL2(I),I=1,18),NUAC(5),
     1 JMAX,IMAX,KBMAX,KMAX,NGC(21),NGC(7),(X(J),J=1,JMAX),
     2 (Y(I),I=1,IMAX),(Z(KB),KB=1,KBMAX)
      WRITE(36) SPARE(12),SPARE(100),XKEF1
      DO 402 K=1,KMAX
      WRITE(36)((P2(J,I,K),J=1,JMAX),I=1,IMAX)
  402 CONTINUE
      GO TO 400
  403 CONTINUE
C     IF(SPARE(12).EQ.0.0) REWIND 37
      WRITE(37)(TITL1(I),I=1,18),(TITL2(I),I=1,18),NUAC(5),JMAX,
     1 IMAX,KBMAX,NGC(21),NGC(7),(X(J),J=1,JMAX),(Y(I),I=1,IMAX),
     2 (Z(KB),KB=1,KBMAX)
      WRITE(37) SPARE(12), SPARE(100), XKEF1
      WRITE(37) (((UTIL(J,I,KB),J=1,JMAX),I=1,IMAX),KB=1,KBMAX)
  400 CONTINUE
      RETURN
 1000 FORMAT('0POINT DAMAGE RATE (DISPLACEMENT/CC-SEC) FOR NUCLIDE',
     * I5)
 1001 FORMAT('1',18A4)
 1002 FORMAT(1X,18A4)
 1003 FORMAT('0')
 1004 FORMAT('0CUMULATIVE HEAT GENERATION RATE(MWT/CM**2) - FLOW FROM LE
     >FT TO RIGHT')
 1005 FORMAT('0CUMULATIVE HEAT GENERATION RATE(MWT/CM**2) - FLOW FROM RI
     >GHT TO LEFT')
 1006 FORMAT('0CUMULATIVE HEAT GENERATION RATE(MWT/CM**2) - FLOW FROM TO
     >P TO BOTTOM')
 1007 FORMAT('0CUMULATIVE HEAT GENERATION RATE(MWT/CM**2) - FLOW FROM BO
     >TTOM TO TOP')
 1008 FORMAT('0CUMULATIVE HEAT GENERATION RATE(MWT/CM**2) - FLOW FROM FR
     >ONT TO BACK')
 1009 FORMAT('0CUMULATIVE HEAT GENERATION RATE(MWT/CM**2) - FLOW FROM BA
     >CK TO FRONT')
 1010 FORMAT('0IMPORTANCE MAP FOR UNIT CHANGE (DELTA-K/K DELTA-N) IN NUC
     >LIDE',I3,'  VOLUME INTEGRAL IS',1PE13.5)
 1011 FORMAT('0RELATIVE IMPORTANCE MAP(N DELTA-K/K DELTA-N) FOR NUCLIDE'
     > ,I3)
 1012 FORMAT('0IMPORTANCE MAP OF 1/V CROSS SECTION')
 1013 FORMAT('0 GROUP',I3,' ADJOINT FLUX')
 1014 FORMAT('0POINT NEUTRON ABSORPTION RATE(N/CC-SEC) IN NUCLIDE',I4)
 1015 FORMAT('0 POINT NEUTRON DENSITY (N/CC)')
 1016 FORMAT('0 GROUP',I3,' FLUX')
 1017 FORMAT('0 POINT POWER DISTRIBUTION (WATTS/CC)')
 1018 FORMAT('0',I10,10I11)
 1019 FORMAT(1X,I3,1PE12.3,10E11.3)
      END
CKOUT --138 ***CITATION*** PRINT 3-D FLUXES/ CF-OUTC
C     IND = 0---FOWARD FLUX OUTPUT
C     IND = 1---POINT POWER OUTPUT
C     IND = 2---POINT NEUTRON DENSITY OUTPUT
C     IND = 3---POINT NEUTRON ABSORPTION RATE IN A NUCLIDE
C     IND = 4---ADJOINT FLUX OUTPUT
C     IND = 5---IMPORTANCE MAP OF UNIT CHANGE IN NUCLIDE
C     IND = 6---RELATIVE IMPORTANCE MAP FOR NUCLIDE
C     IND = 7---IMPORTANCE MAP OF 1/V CROSS SECTION
C     IND = 8---CUMULATIVE HEAT GENERATION RATE
C     IND = 9---TEMPERATURE OR POWER COEFFICIENT
C     IND = 10--DAMAGE RATE
C     IND = 11--GRAVAR FLUXOS PONTUAIS NO FILE 36
C     IND = 12--GRAVAR DENSIDADES DE POTENCIA PONTUAIS NO FILE 37
      SUBROUTINE KOUT(P2E,UTILE,IND,SOURE,IVX,JVX,KBVX,KVX,JIVX)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     > ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     > XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     > IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     >  KB,K,ITMAX,ITIME, BET(211),DEL(211)
      COMMON/AMESH/BMESH(30),NREGI,NREGJ,NREGKB,XSHI(100),XSHJ(100),
     > XSHKB(100), MSHI(100),MSHJ(100),MSHKB(100),Y(211),YY(211), X(211)
     >  ,XX(211),Z(211),ZZ(211), ZONVOL(200),AVZPD(200),PDI(211),
     > PDJ(211) , PDK(211)
C
      DIMENSION P2E(JIVX ,KBVX,KVX),UTILE(JVX,IVX,KBVX )
      DIMENSION SOURE(JVX,IVX,KBVX)
C
      IF(IND.EQ.11) GO TO 401
      IF(IND.EQ.12) GO TO 403
  100 IS1 = 0
      IS2 = 0
      IF (IND.EQ.9) GO TO 101
      WRITE(IOUT,1001)(TITL1(I),I=1,18)
      WRITE(IOUT,1002)(TITL2(I),I=1,18)
      KLAX = KMAX
      IF ((IND.EQ.0).OR.(IND.EQ.4)) GO TO 102
  101 CONTINUE
      KLAX = 1
  102 DO 134 K = 1,KLAX
      IF (IND.EQ.9) GO TO 103
      WRITE(IOUT,1003)
  103 CONTINUE
      IF (IND.NE.8) GO TO 110
      NGO = NGC(21)
      IF (NGO.EQ.0) NGO = 1
      GO TO (104,105,106,107,108,109),NGO
  104 WRITE(IOUT,1004)
      GO TO 119
  105 WRITE(IOUT,1005)
      GO TO 119
  106 WRITE(IOUT,1006)
      GO TO 119
  107 WRITE(IOUT,1007)
      GO TO 119
  108 WRITE(IOUT,1008)
      GO TO 119
  109 WRITE(IOUT,1009)
      GO TO 119
  110 CONTINUE
      IF (IND.EQ.9) GO TO 119
      IF (IND.EQ.7) GO TO 112
      IF (IND.EQ.6) GO TO 111
      IF (IND.NE.5) GO TO 113
      WRITE(IOUT,1010)IXPUT(34),SPARE(91)
      GO TO 119
  111 WRITE(IOUT,1011)IXPUT(35)
      GO TO 119
  112 WRITE(IOUT,1012)
      GO TO 119
  113 CONTINUE
      IF (IND.NE.4) GO TO 114
      WRITE(IOUT,1013)K
      GO TO 119
  114 CONTINUE
      NUD = IX(165)
      IF (IND.EQ.10) WRITE(IOUT,1000)NUD
      IF (IND.EQ.10) GO TO 119
      IF (IND.LT.3) GO TO 115
      WRITE(IOUT,1014)IX(117)
      GO TO 119
  115 CONTINUE
      IF (IND-1) 117,118,116
  116 WRITE(IOUT,1015)
      GO TO 119
  117 WRITE(IOUT,1016)K
      GO TO 119
  118 WRITE(IOUT,1017)
  119 CONTINUE
      DO 133 KB = 1,KBMAX
      WRITE(IOUT,1018)KB
      N1J = JMAX
      N2J = 0
  120 N1I = IMAX
      N2I = 0
      IF (N1J-11) 121,121,122
  121 N1L = N2J+1
      N2J = JMAX
      IS1 = 1
      GO TO 123
  122 N1L = N2J+1
      N2J = N2J+11
      N1J = N1J-11
  123 CONTINUE
      IF (N1I-50) 124,124,125
  124 N2L = N2I+1
      N2I = IMAX
      IS2 = 1
      GO TO 126
  125 N2L = N2I+1
      N2I = N2I+50
      N1I = N1I-50
  126 WRITE(IOUT,1019)(J,J=N1L,N2J)
      DO 130 I = N2L,N2I
      N1 = (I-1)*JVX
      IF (IND.EQ.9) GO TO 129
      IF ((IND.EQ.5).OR.(IND.EQ.6).OR.(IND.EQ.7).OR.(IND.EQ.8)) GO TO
     > 129
      IF ((IND.EQ.0).OR.(IND.EQ.4)) GO TO 128
  127 WRITE(IOUT,1020)I,(UTILE(J,I,KB ),J=N1L,N2J)
      GO TO 130
  128 WRITE(IOUT,1020)I,(P2E(N1+J,KB,K),J=N1L,N2J)
      GO TO 130
  129 CONTINUE
      WRITE(IOUT,1020)I,(SOURE(J,I,KB),J=N1L,N2J)
  130 CONTINUE
      IF (IS2) 123,123,131
  131 IS2 = 0
      IF (IS1) 120,120,132
  132 IS1 = 0
  133 CONTINUE
  134 CONTINUE
C     NOTE SEQUENCING 2000 - 2200 FOLLOWING
      IF(NGC(7).EQ.0) GO TO 400
      IF((IND.EQ.1).OR.(IND.EQ.8)) GO TO 150
      GO TO 400
  150 CONTINUE
      IF((NGC(7).EQ.1).AND.(IND.EQ.8)) GO TO 400
      IO32 = IX(138)
      READ(IO32)
      IJDG14 = IEDG(14)+IXPUT(14)
      IF((NGC(7).GT.1).AND.(IND.EQ.8)) GO TO 200
      WRITE(IO32) SPARE(12),SPARE(100),XKEF1
      WRITE(IO32)(((UTILE(J,I,KB),J=1,JMAX),I=1,IMAX),KB=1,KBMAX)
      REWIND IO32
      GO TO 400
  200 CONTINUE
      IF(IJDG14.EQ.0) WRITE(IO32) SPARE(12),SPARE(100),XKEF1
      IF(IJDG14.EQ.0) GO TO 300
      READ(IO32)
      READ(IO32)
  300 CONTINUE
      WRITE(IO32)(((SOURE(J,I,KB),J=1,JMAX),I=1,IMAX),KB=1,KBMAX)
      REWIND IO32
      GO TO 400
  401 CONTINUE
C     IF(SPARE(12).EQ.0.0) REWIND 36
      WRITE(36)(TITL1(I),I=1,18),(TITL2(I),I=1,18),NUAC(5),
     1 JMAX,IMAX,KBMAX,KMAX,NGC(21),NGC(7),(X(J),J=1,JMAX),
     2 (Y(I),I=1,IMAX),(Z(KB),KB=1,KBMAX)
      WRITE(36) SPARE(12),SPARE(100),XKEF1
      DO 402 K=1,KMAX
      WRITE(36)((P2E(I,KB,K),I=1,JIVX),KB=1,KBMAX)
  402 CONTINUE
      GO TO 400
  403 CONTINUE
C     IF(SPARE(12).EQ.0.0) REWIND 37
      WRITE(37) (TITL1(I),I=1,18), (TITL2(I),I=1,18), NUAC(5),
     1 JMAX, IMAX, KBMAX, NGC(21), NGC(7), (X(J),J=1,JMAX),
     2 (Y(I),I=1,IMAX), (Z(KB),KB=1,KBMAX)
      WRITE(37) SPARE(12), SPARE(100), XKEF1
      WRITE(37) (((UTILE(J,I,KB),J=1,JMAX),I=1,IMAX),KB=1,KBMAX)
  400 CONTINUE
      RETURN
 1000 FORMAT('0POINT DAMAGE RATE (DISPLACEMENT/CC-SEC) FOR NUCLIDE',I5)
 1001 FORMAT('1',18A4)
 1002 FORMAT(1X,18A4)
 1003 FORMAT('0')
 1004 FORMAT('0CUMULATIVE HEAT GENERATION RATE(MWT/CM**2) - FLOW FROM LE
     >FT TO RIGHT')
 1005 FORMAT('0CUMULATIVE HEAT GENERATION RATE(MWT/CM**2) - FLOW FROM RI
     >GHT TO LEFT')
 1006 FORMAT('0CUMULATIVE HEAT GENERATION RATE(MWT/CM**2) - FLOW FROM TO
     >P TO BOTTOM')
 1007 FORMAT('0CUMULATIVE HEAT GENERATION RATE(MWT/CM**2) - FLOW FROM BO
     >TTOM TO TOP')
 1008 FORMAT('0CUMULATIVE HEAT GENERATION RATE(MWT/CM**2) - FLOW FROM FR
     >ONT TO BACK')
 1009 FORMAT('0CUMULATIVE HEAT GENERATION RATE(MWT/CM**2) - FLOW FROM BA
     >CK TO FRONT')
 1010 FORMAT('0IMPORTANCE MAP FOR UNIT CHANGE (DELTA-K/K DELTA-N) IN NUC
     >LIDE',I3,'  VOLUME INTEGRAL IS',1PE13.5)
 1011 FORMAT('0RELATIVE IMPORTANCE MAP(N DELTA-K/K DELTA-N) FOR NUCLIDE'
     > ,I3)
 1012 FORMAT('0IMPORTANCE MAP OF 1/V CROSS SECTION')
 1013 FORMAT('0 GROUP',I3,' ADJOINT FLUX')
 1014 FORMAT('0POINT NEUTRON ABSORPTION RATE(N/CC-SEC) IN NUCLIDE',I4)
 1015 FORMAT('0 POINT NEUTRON DENSITY (N/CC)')
 1016 FORMAT('0 GROUP',I3,' FLUX')
 1017 FORMAT('0 POINT POWER DISTRIBUTION (WATTS/CC)')
 1018 FORMAT('0 PLANE NUMBER',I3)
 1019 FORMAT('0',I10,10I11)
 1020 FORMAT(1X,I3,1PE12.3,10E11.3)
      END
CCMXS 152.1 ***CITATION*** COLLAPSE AND PUNCH MACRO X-SECT  / CF-OUTC
      SUBROUTINE CMXS(SIG,SCAC,XI,BAL,SSC,B4,ZONVOL,KVX,MVX)
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     > LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     > IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     >  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     > IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     > XSRH1(6), XTR1(100),XTR2(100),NXTR1(100),NXTR2(100),SPARE(200),
     > IXPUT(200),XPUT(200)
      COMMON/SECT38/ KN(100),MN(150),NKB,NMB,NM1,NM2,NM3
C
      DIMENSION SIG(KVX,MVX,10),SCAC(KVX,MVX,KVX),XI(KVX), BAL(KVX,MVX,
     > 8),SSC(KVX,KVX),B4(MVX,KVX),ZONVOL(MVX)
      DIMENSION SUM(7),SUMT(7)
C
      IX5 = IX(5)
      IF (IX(24).GT.0) IX5 = IX(17)
      IF (NGC(5)) 101,100,102
  100 CONTINUE
      WRITE(IOUT,1000)
      return
  101 IOXS = 7
      GO TO 103
  102 IO31 = IX(137)
      IOXS = IO31
      REWIND IOXS
  103 CONTINUE
      IF (IX(151).LE.0) GO TO 132
      NZB = 0
      IF (NM1.GT.1) GO TO 106
      DO 105 M=1,MMAX
      DO 104 K=1,KMAX
      IF (SIG(K,M,6).EQ.0.0) GO TO 106
  104 CONTINUE
  105 CONTINUE
      GO TO 107
  106 NZB = 1
  107 CONTINUE
      KNEW = NKB
      MNEW = NMB
      IF (NMB.LE.0) MNEW = MMAX
      WRITE(IOXS,1001)
      NERO = 0
      WRITE(IOXS,1002) KNEW,NERO,NERO
      DO 127 MM=1,MNEW
      IF (MNEW.NE.MMAX) GO TO 108
      M1 = MM
      M2 = MM
      GO TO 111
  108 CONTINUE
      IF (MM.GT.1) GO TO 109
      M1 = 1
      GO TO 110
  109 M1 = MN(MM-1) + 1
  110 M2 = MN(MM)
  111 CONTINUE
      DO 125 KK=1,KNEW
      IF (KK.GT.1) GO TO 112
      K1 = 1
      GO TO 113
  112 K1 = KN(KK-1) + 1
  113 K2 = KN(KK)
      DO 114 I=1,7
      SUMT(I) = 0.0
  114 CONTINUE
      DO 118 M=M1,M2
      ZV = ZONVOL(M)
      DO 115 I=1,7
      SUM(I) = 0.0
  115 CONTINUE
      DO 116 K=K1,K2
      PHIBAR = B4(M,K)
      D = SIG(K,M,1)
      B = 1.0
      IF (NZB.EQ.0) B = SIG(K,M,6)
      SUM(1) = SUM(1) + D*B*PHIBAR
      SUM(2) = SUM(2) + B*PHIBAR
      SUM(3) = SUM(3) + SIG(K,M,3)*PHIBAR
      SUM(4) = SUM(4) + SIG(K,M,4)*PHIBAR
      IF (IX5.EQ.(-1)) SUM(5) = SUM(5) + SIG(K,M,5)*PHIBAR
      SUM(6) = SUM(6) + SIG(K,M,7)*PHIBAR
      SUM(7) = SUM(7) + PHIBAR
  116 CONTINUE
      DO 117 I=1,7
      SUMT(I) = SUMT(I) + SUM(I)*ZV
  117 CONTINUE
  118 CONTINUE
      S7 = SUMT(7)
      IF (S7.EQ.0.0) S7 = 1.0
      IF (SUMT(2).EQ.0.0) SUMT(2) = 1.0
      BAL(KK,MM,2) = SUMT(1)/SUMT(2)
      BAL(KK,MM,3) = SUMT(3)/S7
      BAL(KK,MM,4) = SUMT(4)/S7
      BAL(KK,MM,5) = SUMT(5)/S7
      BAL(KK,MM,6) = SUMT(6)/S7
      DO 124 KKP=1,KNEW
      IF (KKP.GT.1) GO TO 119
      KP1 = 1
      GO TO 120
  119 KP1 = KN(KKP-1) + 1
  120 KP2 = KN(KKP)
      S3 = 0.0
      DO 123 M=M1,M2
      ZV = ZONVOL(M)
      S2 = 0.0
      DO 122 K=K1,K2
      S1 = 0.0
      DO 121 KP=KP1,KP2
      S1 = S1 + SCAC(K,M,KP)
  121 CONTINUE
      S2 = S2 + S1*B4(M,K)
  122 CONTINUE
      S3 = S3 + S2*ZV
  123 CONTINUE
      SSC(KK,KKP) = S3/S7
      IF(KK.EQ.KKP)  SSC(KK,KKP) = 0.0
  124 CONTINUE
  125 CONTINUE
      DO 126 KK=1,KNEW
      WRITE(IOXS,1003) MM,KK,(BAL(KK,MM,I),I=2,6)
      WRITE(IOXS,1004) (SSC(KK,KKP),KKP=1,KNEW)
  126 CONTINUE
  127 CONTINUE
      MM = 0
      KK = 0
      WRITE(IOXS,1003) MM,KK
      DO 131 KK=1,KNEW
      IF (KK.GT.1) GO TO 128
      K1 = 1
      GO TO 129
  128 K1 = KN(KK-1) + 1
  129 K2 = KN(KK)
      S1 = 0.0
      DO 130 K=K1,K2
      S1 = S1 + XI(K)
  130 CONTINUE
      BAL(KK,1,1) = S1
  131 CONTINUE
      WRITE(IOXS,1004) (BAL(KK,1,1),KK=1,KNEW)
      WRITE(IOUT,1005) IOXS
      GO TO 135
  132 CONTINUE
      WRITE(IOXS,1001)
      WRITE(IOXS,1002) KMAX,IX(28),IX(29)
      DO 134 M=1,MMAX
      DO 133 K=1,KMAX
      S5 = SIG(K,M,5)
      IF (IX5.NE.(-1)) S5 = 0.0
      WRITE(IOXS,1003) M,K,SIG(K,M,1),SIG(K,M,3),SIG(K,M,4), S5,SIG(K,M,
     > 7)
      WRITE(IOXS,1004) (SCAC(K,M,KK),KK=1,KMAX)
  133 CONTINUE
  134 CONTINUE
      M = 0
      WRITE(IOXS,1003) M
      WRITE(IOXS,1004) (XI(K),K=1,KMAX)
      WRITE(IOUT,1006) IOXS
  135 CONTINUE
      IF(NM2 .LE. 0) GO TO 138
      REWIND IOXS
      READ(IOXS,1002)
      WRITE(IOUT,1007)
      READ(IOXS,1002) KNEW,NERO,NERO
      WRITE(IOUT,1008) KNEW,NERO,NERO
      DO 137 MM=1,MNEW
      DO 136 KK=1,KNEW
      READ(IOXS,1003)  MMM, KKK, (BAL(KK,MM,I),I=2,6)
      WRITE(IOUT,1009) MMM, KKK, (BAL(KK,MM,I),I=2,6)
      READ(IOXS,1004)  (SSC(KK,KKP),KKP=1,KNEW)
      WRITE(IOUT,1010) (SSC(KK,KKP),KKP=1,KNEW)
  136 CONTINUE
  137 CONTINUE
      READ(IOXS,1003) MM, KK
      WRITE(IOUT,1009) MM, KK
      READ(IOXS,1004) (BAL(KK,1,1),KK=1,KNEW)
      WRITE(IOUT,1010) (BAL(KK,1,1),KK=1,KNEW)
  138 CONTINUE
      IF (NGC(5).GT.0) REWIND IOXS
      RETURN
 1000 FORMAT('0ERROR STOP 7777(CMXS)')
 1001 FORMAT('008')
 1002 FORMAT(3I3)
 1003 FORMAT(2I6,1P5E12.5)
 1004 FORMAT(1P6E12.5)
 1005 FORMAT('0MACROSCOPIC CROSS SECTIONS HAVE BEEN COLLAPSED AND WRITTE
     >N ON LOGICAL',I4)
 1006 FORMAT('0MACROSCOPIC CROSS SECTIONS HAVE BEEN WRITTEN ON LOGICAL',
     > I4)
 1007 FORMAT(' 008')
 1008 FORMAT(1X,3I3)
 1009 FORMAT(1X,2I6,1P5E12.5)
 1010 FORMAT(1X,1P6E12.5)
      END
      
            subroutine DENS_BE
C     VERSAO ADAPTADO PARA MICRO 386 - NOV/92 - GTO
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C *                     -----------                       *
C *                     I E A - R 1                       *
C *                     -----------                       *
C *    DISTRIUICAO DE DENSIDADE DE POTENCIA NORMALIZADA   *
C *    EM GEOMETRIA TRI-DIMENSIONAL, 6x6 MESHS POR ELE-   *
C *    MENTO, IRRADIADOR DE BERILIO NO CENTRO.            *
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C
      DIMENSION TITL1(18), TITL2(18), DX(200), DY(200), DZ(200),
     * DELTX(200), DELTY(200), DELTZ(200), PD(200,200,200)
      DIMENSION JI(75), JF(75), II(75), IF(75), PREC(75),
     * PR(200,200), PZM(200), PZQ(200), PZECQ(200), PZCQ(200)
C
      DATA NEL /75 /
C
      DATA JI /
     1  45, 55, 65, 75, 85,  45, 55, 65, 75, 85,  45, 55, 65, 75, 85,
     2  45, 55, 65, 75, 85,  45, 55, 65, 75, 85,  45, 55, 65, 75, 85,
     3  45, 55, 65, 75, 85,  45, 55, 65, 75, 85,  45, 55, 65, 75, 85,
     4  45, 55, 65, 75, 85,  45, 55, 65, 75, 85,  45, 55, 65, 75, 85,
     5  45, 55, 65, 75, 85,  45, 55, 65, 75, 85,  45, 55, 65, 75, 85/
C
      DATA JF /
     1  54, 64, 74, 84, 94,  54, 64, 74, 84, 94,  54, 64, 74, 84, 94,
     2  54, 64, 74, 84, 94,  54, 64, 74, 84, 94,  54, 64, 74, 84, 94,
     3  54, 64, 74, 84, 94,  54, 64, 74, 84, 94,  54, 64, 74, 84, 94,
     4  54, 64, 74, 84, 94,  54, 64, 74, 84, 94,  54, 64, 74, 84, 94,
     5  54, 64, 74, 84, 94,  54, 64, 74, 84, 94,  54, 64, 74, 84, 94/
C
      DATA II /
     1  65, 65, 65, 65, 65,  66, 66, 66, 66, 66,   74, 74, 74, 74, 74,
     2  75, 75, 75, 75, 75,  76, 76, 76, 76, 76,   84, 84, 84, 84, 84,
     3  85, 85, 85, 85, 85,  86, 86, 86, 86, 86,   94, 94, 94, 94, 94,
     4  95, 95, 95, 95, 95,  96, 96, 96, 96, 96,  104,104,104,104,104,
     5 105,105,105,105,105, 106,106,106,106,106,  114,114,114,114,114/
C
      DATA IF /
     1  65, 65, 65, 65, 65,  73, 73, 73, 73, 73,   74, 74, 74, 74, 74,
     2  75, 75, 75, 75, 75,  83, 83, 83, 83, 83,   84, 84, 84, 84, 84,
     3  85, 85, 85, 85, 85,  93, 93, 93, 93, 93,   94, 94, 94, 94, 94,
     4  95, 95, 95, 95, 95, 103,103,103,103,103,  104,104,104,104,104,
     5 105,105,105,105,105, 113,113,113,113,113,  114,114,114,114,114/
C
C     LEITURA DAS DENSIDADES DE POTENCIA DO CITATION
C
      OPEN (1,FILE='FORT.37',STATUS='OLD',FORM='UNFORMATTED')
      OPEN (2,FILE='DENS.OUT')
C
  998 READ(1,END=999) (TITL1(I),I=1,18), (TITL2(I),I=1,18),
     1 NUAC5, JMAX, IMAX, KBMAX, NGC21, NGC7, (DX(J),J=1,JMAX),
     2 (DY(I),I=1,IMAX), (DZ(KB),KB=1,KBMAX)
      READ(1) TTT, PPP, XXX
      READ(1) (((PD(J,I,KB),J=1,JMAX),I=1,IMAX),KB=1,KBMAX)
C
      WRITE(2,1010) (TITL1(I),I=1,18)
 1010 FORMAT( 1X, 18A4 )
      WRITE(2,1020) (TITL2(I),I=1,18)
 1020 FORMAT( 1X, 18A4 / )
      WRITE(2,1021) XXX
 1021 FORMAT( 1X, 'K-EFETIVO =', F9.6 )
      WRITE(2,1022) JMAX, IMAX, KBMAX
 1022 FORMAT( 1X, 'JMAX  IMAX  KBMAX  ', 3I4 )
C
      SX = 0.0
      SY = 0.0
      SZ = 0.0
      DO 20 J=1,JMAX
         DELTX(J) = 2. * ( DX(J) - SX )
         SX = SX + DELTX(J)
   20 CONTINUE
      DO 30 I=1,IMAX
         DELTY(I) = 2. * ( DY(I) - SY )
         SY = SY + DELTY(I)
   30 CONTINUE
      DO 40 KB=1,KBMAX
         DELTZ(KB) = 2. * ( DZ(KB) - SZ )
         SZ = SZ + DELTZ(KB)
   40 CONTINUE
C
C     DENSIDADE DE POTENCIA MEDIA DO NUCLEO
C
      VOL = 0.0
      PT = 0.0
      DO 53 KB=1,KBMAX
         DO 52 I=1,IMAX
            DO 51 J=1,JMAX
               IF ( PD(J,I,KB) .EQ. 0.0 ) GO TO 51
               VL = DELTX(J) * DELTY(I) * DELTZ(KB)
               VOL = VOL + VL
               PT = PT + PD(J,I,KB) * VL
   51       CONTINUE
   52    CONTINUE
   53 CONTINUE
      DPM = PT / VOL
      WRITE(2,1030) DPM, PT, VOL
 1030 FORMAT( 1X, 'DENSIDADE MEDIA DE POTENCIA = ', F10.3,'  W/CM3'/
     1        1X, 'POTENCIA TOTAL              = ', 1PE12.5, ' W'/
     2        1X, 'VOLUME ATIVO                = ', 1PE12.5, ' CM3' /)
C
C     VALOR MAXIMO DA DENSIDADE DE POTENCIA
C
      IM = 1
      JM = 1
      KM = 1
      PM = 0.0
      DO 70 KB=1,KBMAX
      DO 70 I=1,IMAX
      DO 70 J=1,JMAX
         IF( PD(J,I,KB) .LE. PM ) GO TO 70
         IM = I
         JM = J
         KM = KB
         PM = PD(J,I,KB)
   70 CONTINUE
C
C     DISTRIBUICAO AXIAL DE DENSIDADE DE POTENCIA NORMALIZADA
C     DO CANAL ONDE OCORRE O FATOR DE PICO
C
      DO 72 KB=1,KBMAX
         IF ( PD(JM,IM,KB) .EQ. 0.0 ) GO TO 72
         PZQ(KB) = PD(JM,IM,KB) / DPM
   72 CONTINUE
C
      DO 73 KB=1,KBMAX
         IF ( PD(JM,IM,KB) .EQ. 0.0 ) GO TO 73
         KBI = KB
         GO TO 74
   73 CONTINUE
   74 DO 75 KB=KBI,KBMAX
         IF ( PD(JM,IM,KB) .NE. 0.0 ) GO TO 75
         KBF = KB - 1
         GO TO 76
   75 CONTINUE
C
C     DISTRIBUICAO RADIAL NORMALIZADA DE DENSIDADE DE POTENCIA
C     POR ELEMENTO COMBUSTIVEL
C
   76 DO 90 NEC=1,NEL
         JJI = JI(NEC)
         JJF = JF(NEC)
         III = II(NEC)
         IIF = IF(NEC)
         PREC(NEC) = 0.0
         VN = 0.0
         DO 80 KB=1,KBMAX
         DO 80 I=III,IIF
         DO 80 J=JJI,JJF
            IF( PD(J,I,KB) .EQ. 0.0 ) GO TO 80
            VL = DELTX(J) * DELTY(I) * DELTZ(KB)
            VN = VN + VL
            PREC(NEC) = PREC(NEC) + PD(J,I,KB) * VL
   80    CONTINUE
         IF ( PREC(NEC) .EQ. 0.0 ) GO TO 90
         PREC(NEC) = PREC(NEC) / ( VN * DPM )
   90 CONTINUE
C
C     DISTRIBUICAO AXIAL DO ELEMENTO MAIS QUENTE
C
      NECM = 1
      PRECM = 0.0
      DO 91 NEC=1,NEL
         IF( PREC(NEC) .LE. PRECM ) GO TO 91
         NECM = NEC
         PRECM = PREC(NEC)
   91 CONTINUE
C
      JJI = JI(NECM)
      JJF = JF(NECM)
      III = II(NECM)
      IIF = IF(NECM)
      DO 93 KB=1,KBMAX
         PZECQ(KB) = 0.0
         VN = 0.0
         DO 92 I=III,IIF
         DO 92 J=JJI,JJF
            IF( PD(J,I,KB) .EQ. 0.0 ) GO TO 92
            VL = DELTX(J) * DELTY(I) * DELTZ(KB)
            VN = VN + VL
            PZECQ(KB) = PZECQ(KB) + PD(J,I,KB) * VL
   92    CONTINUE
         IF ( PZECQ(KB) .EQ. 0.0 ) GO TO 93
         PZECQ(KB) = PZECQ(KB) / ( VN * DPM )
   93 CONTINUE
C
C     DISTRIBUICAO RADIAL NORMALIZADA DE DENSIDADE DE POTENCIA
C
      DO 96 I=1,IMAX
      DO 96 J=1,JMAX
         PR(J,I) = 0.0
         VR = 0.0
         DO 95 KB=1,KBMAX
            IF ( PD(J,I,KB) .EQ. 0.0 ) GO TO 95
            VL = DELTX(J) * DELTY(I) * DELTZ(KB)
            VR = VR + VL
            PR(J,I) = PR(J,I) + PD(J,I,KB) * VL
   95    CONTINUE
         IF ( PR(J,I) .EQ. 0.0 ) GO TO 96
         PR(J,I) = PR(J,I) / ( VR * DPM )
   96 CONTINUE
C
C     DISTRIBUICAO AXIAL DO CANAL MAIS QUENTE
C
      ICM = 1
      JCM = 1
      PCQM = 0.0
      DO 97 I=1,IMAX
      DO 97 J=1,JMAX
         IF( PR(J,I) .LE. PCQM ) GO TO 97
         ICM = I
         JCM = J
         PCQM = PR(J,I)
   97 CONTINUE
C
      DO 98 KB=1,KBMAX
         IF ( PD(JCM,ICM,KB) .EQ. 0.0 ) GO TO 98
         PZCQ(KB) = PD(JCM,ICM,KB) / DPM
   98 CONTINUE
C
C     DENSIDADE DE POTENCIA MEDIA AXIAL NORMALIZADA
C
      DO 110 KB=1,KBMAX
         PZM(KB) = 0.0
         VZ = 0.0
         DO 100 I=1,IMAX
         DO 100 J=1,JMAX
            IF ( PD(J,I,KB) .EQ. 0.0 ) GO TO 100
            VL = DELTX(J) * DELTY(I) * DELTZ(KB)
            VZ = VZ + VL
            PZM(KB) = PZM(KB) + PD(J,I,KB) * VL
  100    CONTINUE
         IF ( PZM(KB) .EQ. 0.0 ) GO TO 110
         PZM(KB) = PZM(KB) / ( VZ * DPM )
  110 CONTINUE
C
      WRITE(2,1060)
 1060 FORMAT( / 1X, 'DENSIDADE DE POTENCIA AXIAL NORMALIZADA '/
     1 8X,'MESH (CM)',3X,'  CFP ',6X,' CQ  ',6X,' ECQ  ',5X,'MEDIA'/)
      DO 120 KB=KBI,KBF
      WRITE(2,1065)KB,DELTZ(KB),PZQ(KB),PZCQ(KB),PZECQ(KB),PZM(KB)
  120 CONTINUE
 1065 FORMAT(1X,I3,6X,F5.3,6X,F5.3,6X,F5.3,6X,F5.3,6X,F5.3)
C
      WRITE(2,1041)
 1041 FORMAT( / 1X, 'DENSIDADE DE POTENCIA RADIAL NORMALIZADA POR',
     1 ' ELEMENTO' / )
      WRITE(2,1050) ( PREC(NEC),NEC=1,NEL )
 1050 FORMAT( 5( 2X, F5.3) / )
C
      JII = JI(1)
      JFF = JF(75)
      III = II(1)
      IFF = IF(75)
C
      WRITE(2,1042)
 1042 FORMAT( / 1X, 'DENSIDADE DE POTENCIA RADIAL NORMALIZADA' /)
      DO 130 I=III,IFF
         WRITE(2,1051) ( PR(J,I),J=JII,JFF )
  130 CONTINUE
 1051 FORMAT( 50( 1X, F5.3 ) / )
C
      GO TO 998
C
  999 Return
C
      END
C     Programa usado para abrir sequencialmente os arquivos de entrada
C     usados pelo LEOPARD.
      subroutine Elemleo (nf)
      character*5 Passo,i
      Character*2 SEQ(11)
      Data SEQ /'01','02','03','04','05','06','07','08','09','10','11'/
      Passo='input'
      OPEN(5,file=Passo//SEQ(nf)//'.leo')
      continue
      end
      subroutine elemen2db (leo)
C
C
C

      CHARACTER*4 C1,C2
      Character*15 I1
      Character*68 C3,C4
      Character*13 C5
      Real R1,R2,R3,R4,R5,R6,R7
      integer I2,I3,I4,I5,n,f,g,h
C
      OPEN(UNIT=1,FILE='TWOLIB.DAT',STATUS='OLD',FORM='FORMATTED')

C
      REWIND(1)
C     Associa o valor 0 ao contador de elementos
C     Lˆ o come‡o do TWOLIB.DAT e do INP2A2DB.DAT
C     Grava os dados
      h=0
777   g=0
      h=h+1
      READ(1,1000)C1,C3
      write(leo,1000)C1,C3
      Read(1,1001) C5
      Write(leo,1001)C5
      Read(1,1002)I1
      Write(leo,1002)I1
      Read(1,1003)R1
      Write(leo,1003)R1
125   f=0
124   Read(1,1004) R1,R2,R3,R4,R5,R6
      Write(leo,1004) R1,R2,R3,R4,R5,R6
      f=f+1
      if(f.lt.6)go to 124
      read(1,1005)R1,R2,R3,R4
      write(leo,1005)R1,R2,R3,R4
      g=g+1
      if(g.lt.26)go to 125
      if(h.lt.3) go to 777

C

1000  FORMAT(A4,A68)
1001  FORMAT(A13)
1002  FORMAT(A15)
1003  FORMAT(1P,(1x,E11.5))
1004  FORMAT(6(1P,(1x,E11.5)))
1005  FORMAT(4(1P,(1x,E11.5)))

      CLOSE(1)
      return
      END
      
      subroutine Elemham (nf)
      character*7 Passo,i
      Character*2 SEQ(16)
      Data SEQ /'01','02','03','04','05','06','07','08','09','10','11',
     +'12','13','14','15','16'/
      Passo='naocomb'
      OPEN(5,file=Passo//SEQ(nf)//'.ham')
      return
      end
      
      subroutine Elemhamsai (nf)
      character*6 Passo,i
      Character*2 SEQ(16)
      Data SEQ /'01','02','03','04','05','06','07','08','09','10','11',
     +'12','13','14','15','16'/
      Passo='hamout'
      OPEN(6,file=Passo//SEQ(nf)//'.sai')
      return
      end
      subroutine hamtec
C *********************************************************************
C
C     ******  HAMMER - TECHNION WITH  BURN-UP CAPABILITY  *************
C
C ************************* AUG/1984 - HN *****************************
      COMMON /HN/ INDBU
      INDBU= 0
C      PRINT 10

CE10  FORMAT('1', 27(/), 120('*'), ///, 40X,
CE   X'HAMMER- TECHNION WITH BURN-UP CAPABILITY -  NDP/93'//, 40X,
CE   X'      IPEN/CNEN-SP - AUG1984 - BY H.N.    ' /// 120('*') )
  10  FORMAT(        / , 120('*'), ///, 40X,
     X'HAMMER- TECHNION WITH BURN-UP CAPABILITY -  RISC/94'//, 40X,
     X'      IPEN/CNEN-SP - AUG1984 - BY H.N.    ' /// 120('*') )
C   ----------- OPEN FILES ----------------------------
      OPEN(1,FILE='FORT.1')
      OPEN(2,FILE='FORT.2',FORM='UNFORMATTED',STATUS='SCRATCH')
      OPEN(3,FILE='FORT.3',FORM='UNFORMATTED',STATUS='SCRATCH')
      OPEN(7,FILE='FORT.7')
      OPEN(8,FILE='FORT.8',FORM='UNFORMATTED',STATUS='SCRATCH')
      OPEN(11,FILE='FORT.11',FORM='UNFORMATTED')
      OPEN(12,FILE='FORT.12',FORM='UNFORMATTED',STATUS='SCRATCH')
      OPEN(13,FILE='CITHAM.BU',STATUS='OLD')
      OPEN(16,FILE='FORT.16',FORM='UNFORMATTED',STATUS='SCRATCH')
      OPEN(18,FILE='THLIB.BIN',STATUS='OLD',FORM='UNFORMATTED')
      OPEN(19,FILE='EPLIB.BIN',STATUS='OLD',FORM='UNFORMATTED')
      OPEN(20,FILE='FORT.20',FORM='UNFORMATTED')
      OPEN(55,FILE='FORT.55',STATUS='SCRATCH')
      OPEN(60,FILE='FORT.60')
      OPEN(61,FILE='FORT.61')
      Write(6,10)
      CALL LERDATH
      CALL  SELECT
      return
      END
C
      SUBROUTINE LERDATH
C
      DIMENSION AA(80)
   10 READ(5,20,END=30)(AA(I),I=1,80)
   20 FORMAT(80A1)
      WRITE(55,20)(AA(I),I=1,80)
      WRITE(6,40)(AA(I),I=1,80)
   40 FORMAT(9X,80A1)
      GO TO 10
   30 REWIND 55
      RETURN
      END
C
C *********************************************************************
C
C  **********************  SUBROUTINE  BURNUP  ************************
C
C ************************** AUG/1984 - HN ****************************
C
      SUBROUTINE  BURNUP
      COMMON /HN/ INDBU
      DATA NTIME/0/
      CALL CITHAM(NTIME)
      INDBU= 0
      CALL  SELECT
      RETURN
      END
C
C *********************** SUBROUTINE ISONBR *************************
C
C ************************** AUG/1984 - HN **************************
      SUBROUTINE ISONBR(I,IS)
      REAL*4 LI006,LI007,NP237,NP239,NSFP2
      DIMENSION XNAME(70)
      COMMON  /ISO/   TH232,PA233,U233 ,U234 ,U235 ,U236 ,U238 ,NP237,
     X    NP239,PU238,PU239,PU240,PU241,PU242,AM243,CM244,BE009,LI006,
     X    LI007,XE135,SM149,NSFP2,SSFP3,XNAME
      IF(I.GE.26) GOTO 24
      GOTO  (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,
     X 21,22,23,24,25),I
  24  RETURN
    1 TH232=XNAME(IS)
      RETURN
    2 PA233=XNAME(IS)
      RETURN
    3 U233 =XNAME(IS)
      RETURN
    4 U234 =XNAME(IS)
      RETURN
    5 U235 =XNAME(IS)
      RETURN
    6 U236 =XNAME(IS)
      RETURN
    7 U238 =XNAME(IS)
      RETURN
    8 NP237=XNAME(IS)
      RETURN
    9 NP239=XNAME(IS)
      RETURN
   10 PU238=XNAME(IS)
      RETURN
   11 PU239=XNAME(IS)
      RETURN
   12 PU240=XNAME(IS)
      RETURN
   13 PU241=XNAME(IS)
      RETURN
   14 PU242=XNAME(IS)
      RETURN
   15 AM243=XNAME(IS)
      RETURN
   16 CM244=XNAME(IS)
      RETURN
   17 BE009=XNAME(IS)
      RETURN
   18 LI006=XNAME(IS)
      RETURN
   19 LI007=XNAME(IS)
      RETURN
   20 XE135=XNAME(IS)
      RETURN
   21 SM149=XNAME(IS)
      RETURN
   22 NSFP2=XNAME(IS)
      RETURN
   23 SSFP3=XNAME(IS)
      RETURN
   25 TH232=90232.
      PA233=91233.
      U233 =92233.
      U234 =92234.
      U235 =92235.
      U236 =92236.
      U238 =92238.
      NP237=93237.
      NP239=93239.
      PU238=94238.
      PU239=94239.
      PU240=94240.
      PU241=94241.
      PU242=94242.
      AM243=95243.
      CM244=96244.
      BE009= 4009.
      LI006= 3006.
      LI007= 3007.
      XE135=54135.
      SM149=62149.
      NSFP2=    2.
      SSFP3=    3.
      RETURN
      END
C**********************************************************************
C
C            SUBROUTINE LINK1 WITH  BURN-UP CAPABILITY
C
C ************************** AUG/1984 - HN ****************************
C
      SUBROUTINE  LINK1
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* LINK1  * HAMMER   VERSION /JB-1077/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      DIMENSION LT(12,6),LMP(600)
      COMMON /CNTRL/ IDBCH,NCASE,NFLOG,BTTL(9),NTIN,NTOUT,NTPUN,
     1NCHAIN,LIB1,LIB2,LIB3,INT1,INT2,NSC1,LNK(10),NTHCS,NEPCS,KLIB1,
     2KLIB2,KLIB3,DUM1(32),NTHGP,IBNDRY(12),EPCUT,DUM2(45),NCPRN,NCPPT,
     3DUM3(10),NTHRN,NTHPT,NTHPN,DUM4(9),NEPRN,NEPPT,NEPPN,NEPSG,NEPAG,
     4DUM5(19),NEDRN,NEDPT,NEDPN,NEDNB,NEDFW,NEDRB,NEDAX,NEDNU,DUM6(16)
      COMMON /LIMP/ IDENT,NX,MX,NRX,ISOX,ISOXE,NGEOM,NP1B1,NBCT,NXP,
     1BSQD,HOL(9),NPT(20),THT(20),MXAS(20),ILHI(20),NRBP(20),DEGC(20),
     2WSTBA(18),WSTBB(18),CONCTA(18,10),LIMT(10),RIN(20),RAD(20),
     3ROUT(20),VOL(20),MTBL(20),REGV(20),FISD(20),HOLID(3,18),DUM7(40)
      EQUIVALENCE (NCPRN,LT(1,1)),(IDENT,LMP(1))
C     HAMMER CONTROL PROGRAM -CAPN-
C     ===READ CONTROL DATA===
      COMMON /HN/ INDBU
      CALL TIMEX(1)
C *********************** BURNUP CAPABILITY ***************************
      IF(INDBU.EQ.1) CALL BURNUP
CE 10 READ(5,20,END=2)((LT(N,I),N=1,12),I=1,6)
   10 READ(55,20,END=2)((LT(N,I),N=1,12),I=1,6)
      IF(NCPRN-2) 9, 8, 8
    8 NCPRN= 1
      NEDPN= 0
      INDBU= 1
    9 CONTINUE
C *********************** BURNUP CAPABILITY ***************************
      GO TO 4
C   2 STOP
    2 return
    4 CONTINUE
      CALL TAPEH
      CALL LINK
C *********** BURNUP CAPABILITY ****** NCPRN=2 & NCPRN= 1 ***********
      IF(INDBU.EQ.1) NCPRN=2
      WRITE(NTOUT,120)((LT(N,I),N=1,12),I=1,3),(LT(N,5),N=1,12)
      IF(INDBU.EQ.1) NCPRN=1
      IF(LT(4,2)) 11,11,12
   12 READ(NTIN,13) NTHGP,(IBNDRY(I),I=1,11)
      NTHGP1 = NTHGP + 1
      WRITE (NTOUT,101) NTHGP,(IBNDRY(I),I=1,NTHGP1)
   11 CONTINUE
      IF(LT(5,2)) 14,14,15
   15 READ(NTIN,16) IBNDRY(12),EPCUT
      WRITE(NTOUT,102)   IBNDRY(12),EPCUT
   14 CONTINUE
C     ===READ BATCH INPUT DATA===
  100 READ(NTIN,110)
     1         NSTH,NSEP,   IDBCH,NCASE,NFLOG,NLLT,BTTL
      WRITE(NTOUT,130)IDBCH,NCASE,BTTL
      ZERO=0.0
      IF(NSTH)135,135,500
  135 NTHCS=NCASE
      IF(NSEP)140,140,600
  140 NEPCS=NCASE
      IF(NCASE)400,400,150
C     ===CASE INPUT DATA===
  150 DO 190 N=1,NCASE
      CALL STOPIT(0)
      DO 160 I=1,600
  160 LMP(I)=0
      CALL INPA(N)
      NERR=1
      CALL STOPIT(NERR)
      IF(2-NERR)190,190,165
  165 CONTINUE
      IF(NTHRN)170,170,180
  170 IF(NEPRN)190,190,175
  175 WRITE(INT2)(LMP(I),I=1,600),(ZERO,J=1,1100)
      GOTO190
  180 WRITE(INT1)(LMP(I),I=1,600)
  190 CONTINUE
C     ===POSITION TAPES===
  200 IF(NTHRN)210,210,220
  210 ENDFILE INT2
      REWIND INT2
      GOTO260
  220 ENDFILE INT1
      REWIND INT1
  225 IF(NLLT)230,230,260
  230 IF(NEPRN*NTHRN)260,260,240
  240 READ(LIB3) ID
      IF(ID)250,250,240
  250 BACKSPACELIB3
  260 CONTINUE
  400 CALL TIMEX(2)
      RETURN
  500 NTHCS=NSTH
      NEPCS=NCASE
      NREAD=NCASE-NSTH
      REWINDINT1
      DO510N=1,NREAD
  510 READ(INT1)
      GOTO225
  600 NEPCS=NSEP
      NREAD=NCASE-NSEP
      REWINDINT2
      DO610N=1,NREAD
  610 READ(INT2)
      LNK(1)=LNK(2)
      GOTO225
   13 FORMAT(12I6)
   16 FORMAT(I6,F12.5)
   20 FORMAT(72I1)
  101 FORMAT(1H0,'  THERMOS WILL PRODUCE A ',I2,' GROUP EDIT WITH',
     1/'   BREAKPOINTS AT SUBGROUPS ',11I3)
  102 FORMAT('0','  UPPER GROUP FOR USUAL THERMOS EDIT - ',I2,
     1'   EPITHERMAL ENERGY CUTOFF = ',F8.4,' EV')
  110 FORMAT(5X,2I2,I5,2I2,I1,1X,9A4   )
  120 FORMAT(1H1,130(1H=),/,2X,'*** H A M M E R ***',7X,'B.N.L.-S.R.L.-T
     *ECHNION(ISRAEL INSTITUTE OF TECHNOLOGY)   LATTICE ANALYSIS CODE',
     1 7X,'VERSION /JB-1077/',/,1X,130(1H=),/,
     2/8H0OPTIONS/11H   CAPN    12I2/11H   THERMOS 12I2/
     311H   HAMLET  12I2/11H   DIED    12I2)
  130 FORMAT(6H0BATCH,I5,I8,9H LATTICES,3X,9A4   )
      END
      SUBROUTINE EDIT12
CE
CE     ROTINAS  EDIT12 , CITHAM     MODIFICADAS P/ GERAR SAIDA
CE      DE INTERESSE DO USUARIO NO FT66
CE     P/  MAI    -   JUL/88
CE     P/  MITSUO -   AGO/89
CE
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* EDIT12 *   HAMMER   VERSION /04-77/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
CE
CE   EDIT12 VEM DE HAMTEC.FORT
CE
      COMMON /CNTRL/ IDBCH,NCASE,NFLOG,BTTL(9),NTIN,NTOUT,NTPUN,
     1NCHAIN,LIB1,LIB2,LIB3,INT1,INT2,NSC1,LNK(10),NTHCS,NEPCS,KLIB1,
     2KLIB2,KLIB3,DUM1(32),NTHGP,IBNDRY(12),EPCUT,DUM2(45),NCPRN,NCPPT,
     3DUM3(10),NTHRN,NTHPT,NTHPN,DUM4(9),NEPRN,NEPPT,NEPPN,NEPSG,NEPAG,
     4DUM5(19),NEDRN,NEDPT,NEDPN,NEDNB,NEDFW,NEDRB,NEDAX,NEDNU,DUM6(16)
      COMMON /LIMP/ IDENT,NX,MX,NRX,ISOX,ISOXE,NGEOM,NP1B1,NBCT,NXP,
     1BSQD,HOL(9),NPT(20),THT(20),MXAS(20),ILHI(20),NRBP(20),DEGC(20),
     2WSTBA(18),WSTBB(18),CONCTA(18,10),LIMT(10),RIN(20),RAD(20),
     3ROUT(20),VOL(20),MTBL(20),REGV(20),FISD(20),HOLID(3,18),DUM7(40)
      COMMON ID,HOLA(9),BALT(18,4,5),FOIL(20,4,5),FOGX(4,6),
     1FOX(20,4),DUMB(20),OTGC(5),OTGA(30,6),DUM20(21)
      COMMONGNRFP(18,54),GNFRCP(18,54),SIGA(54),T(54),S(54),PA(54),PF(54
     1),F(54),GAMMA(54),Q(54),AMBDA(54),ETA(54),RHO(54),A(54),NGR(3),
     2DUM31(20),NED(1),BETTA(20),AMB(20),XY(20),UPSLN(20),SA(20),SX(20),
     3GNUSX(20),P(20),TAU(20),GAMM(20,3),D(20,3),SR(20,3),ALPH(20),
     4DUM32(300),B(20),DUM33(124),NBP(20,3)
      COMMONIX,ES(18,54),TEE(18,54),BA(18,54),RCP(18,54),RFCP(18,54),FX(
     120,54),DEL(54),X(54),DUM40(3648),NLIB
      DIMENSION CT(18,10),DELTA(54)
      EQUIVALENCE (DEL,DELTA),(CT,CONCTA)
      COMMON/VDAT/ VINV(54),VAV(3)
      COMMON/CEDIT/N1,N2,N3
      COMMON/ABFG/FF(54),AA(54),GG(54),BB(54),EE(54),RR(54),QQ(54),
     1GAMMX(20,3)
      DIMENSION FT(54),AT(54),GT(54),BT(54),ET(54),RT(54),QT(54)
      NED(1)=3
      NGR(1)=1
      NGR(2)=2
      NGR(3)=3
      NBP(1,1)=54
      IF(N1.LE.0.OR.N1.GE.54) N1=25
      NBP(1,2)=N1
      NBP(2,2) = 54
      IF(N2.LE.0.OR.N2.GE.54) N2=10
      NBP(1,3) =N2
      IF(N3.LE.N2.OR.N3.GE.54) N3=25
      NBP(2,3)=N3
      NBP(3,3)=54
      DO 65 IT=1,2
      IF(IT.EQ.2)GO TO 2
      BSQDT=BSQD
      BSQD=1.0E-10
      DO 1 N=1,54
      FT(N)=F(N)
      AT(N)=A(N)
      GT(N)=GAMMA(N)
      BT(N)=AMBDA(N)
      ET(N)=ETA(N)
      RT(N)=RHO(N)
      QT(N)=Q(N)
      F(N)=FF(N)
      A(N)=AA(N)
      GAMMA(N)=GG(N)
      AMBDA(N)=BB(N)
      ETA(N)=EE(N)
      RHO(N)=RR(N)
      Q(N)=QQ(N)
    1 CONTINUE
      GO TO 4
    2 BSQD=BSQDT
      DO 3 N=1,54
      F(N)=FT(N)
      A(N)=AT(N)
      GAMMA(N)=GT(N)
      AMBDA(N)=BT(N)
      ETA(N)=ET(N)
      RHO(N)=RT(N)
      Q(N)=QT(N)
    3 CONTINUE
    4 CONTINUE
      BEE=SQRT(ABS(BSQD))
      DO 49 NEDIT=1,3
      ATEMP=0
      BTEMP=0
      GTEMP=0
      AMTEMP=0
      XTEMP=0
      UTEMP=0
      VTEMP=0.0
      VG=VINV(1)*GAMMA(1)
      ALP=T(1)*GAMMA(1)
      BET=S(1)*GAMMA(1)
      GAM=GAMMA(1)
       AM= AMBDA(1)
      XI=SIGA(1)*GAMMA(1)
      UPSLON=X(1)*DELTA(1)
      NUPPER=NGR(NEDIT)
      DO 47 NSPLIT=1,NUPPER
      IF(NSPLIT-1)8,8,9
    8 III=2
      GO TO 10
    9 III=NBP(NSPLIT-1,NEDIT)+1
   10 IF(NSPLIT-NGR(NEDIT))11,12,12
   11 JJJ=NBP(NSPLIT,NEDIT)
      GO TO 13
   12 JJJ=IX
   13 DO 17 N=III,JJJ
      ALP=ALP+T(N)*GAMMA(N)
      BET=BET+S(N)*GAMMA(N)
      GAM=GAM+GAMMA(N)
      AM=AM+AMBDA(N)
      XI=XI+SIGA(N)*GAMMA(N)
      VG=VG+VINV(N)*GAMMA(N)
   17 UPSLON=UPSLON+X(N)*DELTA(N)
      ALPH(NSPLIT)=ALP-ATEMP
      BETTA(NSPLIT)=BET-BTEMP
      GAMM(NSPLIT,NEDIT)=GAM-GTEMP
      IF(IT.EQ.1)GAMMX(NSPLIT,NEDIT)=GAMM(NSPLIT,NEDIT)
      AMB(NSPLIT)=AM-AMTEMP
      XY(NSPLIT)=XI-XTEMP
      UPSLN(NSPLIT)=UPSLON-UTEMP
      VAV(NSPLIT)=VG-VTEMP
      VTEMP=VTEMP+VAV(NSPLIT)
      ATEMP=ATEMP+ALPH(NSPLIT)
      BTEMP=BTEMP+BETTA(NSPLIT)
      GTEMP=GTEMP+GAMM(NSPLIT,NEDIT)
      AMTEMP=AMTEMP+AMB(NSPLIT)
      XTEMP=XTEMP+XY(NSPLIT)
      UTEMP=UTEMP+UPSLN(NSPLIT)
   32 IF(BSQD  )33,34,33
   34 D(NSPLIT,NEDIT)=0.0
      GO TO 50
   33 D(NSPLIT,NEDIT)=AMB(NSPLIT)/(GAMM(NSPLIT,NEDIT)*BEE)
   50 SA(NSPLIT)=XY(NSPLIT)/GAMM(NSPLIT,NEDIT)
      SX(NSPLIT)=BETTA(NSPLIT)/GAMM(NSPLIT,NEDIT)
      GNUSX(NSPLIT)=ALPH(NSPLIT)/GAMM(NSPLIT,NEDIT)
      IF(NSPLIT-1)37,37,39
   37 SR(1,NEDIT)=UPSLN(1)/GAMM(1,NEDIT)-D(1,NEDIT)*BSQD  -SA(1)
      GO TO 40
   39 SR(NSPLIT,NEDIT)=(UPSLN(NSPLIT)+SR(NSPLIT-1,NEDIT)*GAMM(NSPLIT-1,N
     1EDIT))/GAMM(NSPLIT,NEDIT)-D(NSPLIT,NEDIT)*BSQD  -SA(NSPLIT)
   40 P(NSPLIT)=SR(NSPLIT,NEDIT)/(SA(NSPLIT)+SR(NSPLIT,NEDIT) )
      B(NSPLIT)=D(NSPLIT,NEDIT)/(SA(NSPLIT)+SR(NSPLIT,NEDIT))
      VAV(NSPLIT)=VAV(NSPLIT)/GAMM(NSPLIT,NEDIT)
      TAU(NSPLIT)=0.0
      DO 47 N=1,NSPLIT
      TEMP=0.0
      DO 46 J=N,NSPLIT
   46 TEMP=TEMP+B(J)
   47 TAU(NSPLIT)=TAU(NSPLIT)+TEMP*UPSLN(N)
      CALL ED12P (NEDIT,IT)
      GOTO(61,62,63),NEDIT
   61 DUMB(4)=P(1)
      DUMB(6)=TAU(1)
      DUMB(5)=GNUSX(1)/SA(1)*(1.-P(1))
      GOTO62
   63 DO 64 N=1,3
      FOGX(N,1)=D(N,3)
      FOGX(N,2)=SA(N)
      FOGX(N,3)=GNUSX(N)
      FOGX(N,5)=SX(N)
      FOGX(N,6)=UPSLN(N)
   64 FOGX(N,4)=SR(N,3)
   62 CONTINUE
   49 CONTINUE
   65 CONTINUE
       IF(NTHRN)105,200,105
  105 CONTINUE
      CALLKEFC(FOGX,DUMB(7),DUMB(8),BSQD,DUMB(9),DUMB(10))
       GOTO7
 200   DO210N=1,3
 210   DUMB(N+9)=GAMM(N,3)
    7 DO30I=1,IX
      DO19N=1,NX
   19 FX(N,I)=FX(N,I)*F(I)/VOL(N)
       X(I)=0.
      DO20N=1,NX
 20    X(I)=(FX(N,I)*VOL(N))/F(I)+X(I)
   30 CONTINUE
      WRITE(NTOUT,31)IDENT,HOL
      WRITE(NTOUT,5)(DUMB(I),I=4,13)
CE
CE       COMANDOS INSERIDOS
CE     WRITE(66,31) IDENT,HOL
CE     WRITE(66,5)  (DUMB(I),I=4,13)
       WRITE(60,31) IDENT,HOL
       WRITE(60,5)  (DUMB(I),I=4,13)
CE
      NL=1
      DO120NE=1,3
      NU=NBP(NE,3)
      DO100NR=1,NX
      FOX(NR,NE)=0.
      DO100I=NL,NU
  100 FOX(NR,NE)=FOX(NR,NE)+FX(NR,I)*DELTA(I) /X(I)
  120 NL=NU+1
      IF(NEPPN)145,145,125
  125 DO140NE=1,4
      AA1=0.
      DO130N=1,NX
  130 AA1=AA1+FOX(N,NE)*VOL(N)
      DO140N=1,NX
  140 FOX(N,NE)=FOX(N,NE)*DUMB(NE+9)/AA1
  150 RETURN
  145 DO 160 N=1,NX
  160 FOX(N,4)=FOX(N,4)*FOGX(3,4)*GAMM(3,3)
      GO TO 150
    5 FORMAT(5H0 P =,1PE13.6,11H NU(1-PF) =,E13.6,6H TAU =,E13.6/20H MAT
     1ERIAL BUCKLING =,E13.6,13H K-INFINITY =,E13.6,32H K-EFFECTIVE AT I
     2NPUT BUCKLING =,E13.6/29H ASYMPTOTIC FOUR GROUP FLUXES,4(1H,,E13.6
     3))
   31 FORMAT(5H1CASE,I6,7X,9A4   )
      END
C *** PROGRAM CITHAM  ADAPTED  FOR  HAMMER-TECHNION *****************
CE
CE    VEM  DE CITTEC.FORT
CE
      SUBROUTINE CITHAM(NTIME)
C      REAL*8 ISON(70),NCHK(40),NISON(30),NOCIT
      REAL*4 LI006,LI007,NP237,NP239,NSFP2
      COMMON  /ISO/   TH232,PA233,U233 ,U234 ,U235 ,U236 ,U238 ,NP237,
     X    NP239,PU238,PU239,PU240,PU241,PU242,AM243,CM244,BE009,LI006,
     X    LI007,XE135,SM149,NSFP2,SSFP3,XNAME
      DIMENSION LIMP(600),LOUT(1100),DFLX(1764),IL(500),WSO(50),CO(18),
     X    STRA(4,4),BLK(4)
      EQUIVALENCE(LIMP(1),IDENT),(LIMP(2),NX),(LIMP(3),MX),
     X    (LIMP(4),NRX),(LIMP(5),ISOX),(LIMP(6),ISOXE),(LIMP(7),NGEOM),
     X    (LIMP(11),BSQD),(LIMP(12),HOL(1)),(LIMP(21),NPT(1)),
     X    (LIMP(41),THT(1)),(LIMP(61),MXAS(1)),(LIMP(81),ILHI(1)),
     X    (LIMP(121),DEGC(1)),(LIMP(141),WSTBA(1)),(LIMP(159),WSTBB(1)),
     X    (LIMP(177),CONCTA(1,1)),(LIMP(357),LIMT(1)),(LIMP(367),RIN(1))
     X    ,(LIMP(387),RAD(1)),(LIMP(407),ROUT(1)), (LIMP(427),VOL(1)),
     X    (MTBL(1),LIMP(447)),(LIMP(467),REGV(1)),(LIMP(487),FISD(1))
      EQUIVALENCE(LOUT(1),ID),(LOUT(2),HOLA(1)),(LOUT(11),BALT(1,1,1)),
     X    (LOUT(371),FOIL(1,1,1)),(LOUT(771),FOGX(1,1)),
     X    (LOUT(795),FLX(1,1)),
     X    (LOUT(875),DUMB(1)),(LOUT(895),OTGC(1)),(LOUT(900),OTGA(1,1))
      EQUIVALENCE(DFLX(1),FT(1,1)),(DFLX(601),FTB(1)),
     X    (DFLX(631),FH(1,1)),
     X    (DFLX(1711),FHB(1))
      DIMENSION HOL(9),NPT(20),THT(20),MXAS(20),ILHI(20),NRBP(20),
     X    DEGC(20),WSTBA(18),WSTBB(18),CONCTA(18,10),LIMT(10),RIN(20),
     X    RAD(20),ROUT(20),VOL(20),MTBL(20),REGV(20),FISD(20),HOLA(9),
     X    BALT(18,4,5),FOIL(20,5,4),FOGX(4,6),FLX(20,4),DUMB(20),
     X    OTGC(5),OTGA(20,6),FT(20,30),FTB(30),FH(20,54),FHB(54)
      DIMENSION NC1(20),XC1(20),NC2(20),XC2(20)
      DIMENSION ISOT(70),AMASS(70),XLAMBD(70),XNAME(70),NY(6),YFP(20,6)
      DIMENSION NISOT(30),CHAIN(40)
      DIMENSION XI(18),PHI(4)
      DIMENSION PHIR(4)
      DIMENSION NFIELD(80)
      DIMENSION NAME(5),IA(10),XA(10),A(20)
      DIMENSION FOGXX(4)
      DIMENSION XTRAA(5),XTRAB(5)
C
CE
      DIMENSION SIGAX(4), SIGFX(4), SNUX(4)
CE
      DIMENSION ISON(70),NISON(30),NCHK(40)
      CHARACTER*4 NBL,NBURN,NFIELD
      CHARACTER*8 NOCIT,NCHK,ISON,NISON
      DATA XTRAA/5*0.0/,XTRAB/5*0.0/
      DATA NC1/20*0/
      DATA ONE/1.0/
      DATA NY/6*0/,YFP/120*0.0/
      DATA XI/18*0.0/,PHI/4*0.0/
CE    DATA NAME/100,101,102,103/
      DATA NAME/100,101,102,103,0/
      DATA Y135 /.0661/,Y149 /.0113/,Y002/1.000/,Y003/1.000/,
     X     XL135/1.82 /,XL233/.9743/,XL241/.999853/
      DATA TIME/1./,KTIME/100/,POWER/ 1.0/
      DATA NBL/'    '/,NG/4/,NT/0/,X0/0./
C ************* ADDITION FOR  CITTEC *******************************
      DATA NBURN/'BURN'/, NOCIT/'NOCITISO'/
      DATA NCHK/'*TH232* ','*PA233* ','*U233*  ','*U234*  ','*U235*  ',
     X          '*U236*  ','*U238*  ','*NP237* ','*NP239* ','*PU238* ',
     X          '*PU239* ','*PU240* ','*PU241* ','*PU242* ','*AM243* ',
     X          '*CM244* ','*BE009* ','*LI006* ','*LI007* ','*XE135* ',
     X          '*SM149* ','*NSFP2* ','*SSFP3* ','        ','        ',
     X          '        ','        ','        ','        ','        ',
     X          '        ','        ','        ','        ','        ',
     X          '        ','        ','        ','        ','        '/
C
      DATA CHAIN/40*0.0/
C
      NCIT=11
CE    REWIND 5
      REWIND 55
CE 16 READ(5,361,END=1111) NFIELD(1)
   16 READ(55,361,END=1111) NFIELD(1)
      IF(NFIELD(1).EQ.NBURN) GOTO 18
      GOTO 16
CE 18 READ(5,10,END=1111) NLIB,NFILE,NLAT,NGIN, NDEF
   18 READ(55,10,END=1111) NLIB,NFILE,NLAT,NGIN, NDEF
   10 FORMAT(10I3)
      IF(NLIB.EQ.0) GOTO 1111
      IF(NGIN.EQ.0) NGIN=4
C      PRINT 4
      write(6,4)
    4 FORMAT(1H1,' ***  BURN-UP CALCULATION AND INPUT FOR NEXT TIME-',
     X 'STEP ***')
      REWIND NLIB
      DO 1118 NNFIL=1,999
      READ(NLIB,END=1119 )
 1118 CONTINUE
 1119 NNFIL=(NNFIL-2) - 1
      IF(NFILE.NE.NNFIL) PRINT 1117,NLIB,NNFIL,NFILE,NLAT
 1117 FORMAT(//,' LATTICE TAPE ON UNIT NO.',I3/' NO. OF LATTICES(PRIOR
     X TO PRESENT CASE)=',I3,'  *** CAUTION *** (INPUT VALUE =',I3,')'/
     X ,' NO. OF LATTICES TO BE EDITED=',I3///)
C
      IF(NFILE.EQ.NNFIL) PRINT 1200,NLIB,NFILE,NLAT
 1200 FORMAT(//,' LATTICE TAPE ON UNIT NO.',I3/' NO. OF LATTICES(PRIOR
     X TO PRESENT CASE)=',I3/' NO. OF LATTICES TO BE EDITED=',I3///)
      NFILE= NNFIL
C
C***  NLIB=UNIT NO. OF LATTICE TAPE ***********************************
C***  NFILE= NUMBER OF LATTICES ALREADY ON TAPE************************
C***  NLAT = NUMBER OF LATTICES TO BE EDITED(CITATION TAPE)************
C*** NGIN =NUMBER OF GROUPS FOR CITATION CROSS SECTIONS PREPARATION****
C  IF NGIN=2 ,GR1=1,2,3  ,GR2=4
C  IF NGIN=3  ,GR1=1,2  ,GR2=3  ,GR3=4
      NFILE=NFILE+1
CE    IF(NDEF.GT.0) READ(5, 211,END=1112)( ISOT(IS),ISON(IS),XNAME(IS),
      IF(NDEF.GT.0) READ(55,211,END=1112)( ISOT(IS),ISON(IS),XNAME(IS),
     X AMASS(IS),XLAMBD(IS), IS=1,NDEF)
      IF(NDEF.GT.0) PRINT 1303
 1303 FORMAT(' FOLLOWING CITATION ISOTOPES WERE DEFINED (OVERRIDING ',
     X'TAPE 13)'  )
      IF(NDEF.GT.0) PRINT  1301,      ( ISOT(IS),ISON(IS),AMASS(IS),
     X XLAMBD(IS),XNAME(IS), IS=1,NDEF)
 1301 FORMAT(' *DEFINITION* CITATION ISO.NO.',I3,' ,',A8,1X,
     X ' , MASS',F8.2 ,', DECAY ',E12.4,
     X ' /SEC   =  HAMMER ISO.NO.',F10.0)
      IF(NLAT.EQ.0) GOTO 1201
      DO 13 I=1,NLAT
CE    READ(5, 9,END=1112) IL(I),WSO(I)
      READ(55,9,END=1112)  IL(I),WSO(I)
    9 FORMAT(I3,F9.0)
   13 CONTINUE
      PRINT 1302
 1302 FORMAT(' '//)
      PRINT 1300,(IL(J),WSO(J),J=1,NLAT)
 1300 FORMAT(' LATTICE TO BE EDITED= NO.',I3,' ,WITH SCAT.MATRIX ASSIGNE
     XD TO THE ISOTOPE NO.',F9.0)
C
C***  IL(I) = I-TH LATTICE TO BE EDITED
C***  WSO(I) = ISOTOPE NUMBER IN I-TH LATTICE TO HAVE SCAT. MATRIX
C
C *** INPUT NCASE  ONLY IF  NTIMX=0  ******************
C
CE1201 READ(5,11,END=1112) NTIMX,POWER,NCASE
CE     MODIF   MAR/91
CE1201 READ(5,11111,END=1112) NTIMX,POWER,NCASE,POTENC,XMASSA,BUINIT
 1201 READ(55,11111,END=1112) NTIMX,POWER,NCASE,POTENC,XMASSA,BUINIT
11111 FORMAT(I3,F9.0,I3,3E10.0)
CE
   11 FORMAT(6(I3,F9.0))
      IF(NTIMX.EQ.0.AND.NCASE.EQ.0) GOTO 1112
      IF(POWER.EQ.0.0) POWER=1.0
      IF(NTIMX.NE.0) PRINT 14,POWER,NTIMX
   14 FORMAT(//' POWER DENSITY(WATTS/CC) = ',F9.3/
     X ' NO. OF TIME-STEPS (TOTAL) = ',I3)
      IF(NTIMX.EQ.0) PRINT 1444, NCASE
 1444 FORMAT(' '//'  NO BURNUP CALCULATION, ONLY ',I3,'  CASES')
      IF(NTIMX.EQ.0) NFILE=NFILE - 1 + NCASE
      NC=1
      IF(NTIMX.EQ.0) GOTO 1804
CE    READ(5,10,END=1112) KTIME0,KTIME
CE   MAR/91
CE    READ(5,11110,END=1112) KTIME0,KTIME,TEMPF,TEMPC,TEMPM,TEMPRE,
      READ(55,11110,END=1112) KTIME0,KTIME,TEMPF,TEMPC,TEMPM,TEMPRE,
     *                      RHOMOD
11110 FORMAT(2I3,4X,5E10.0)
CE
CE
CE   INSERIDO   AGO/89
CE
CE     WRITE(20) KTIME0,KTIME,POWER
CE    MODIF MAR/91
       WRITE(20) POWER,POTENC,XMASSA,KTIME0,KTIME,BUINIT,TEMPF,TEMPC,
     *           TEMPM,TEMPRE,RHOMOD
CE
      PRINT 1409,KTIME0,KTIME
 1409 FORMAT(' LENGTH OF FIRST TIME-STEP= ',I3,' DAYS'/
     X ' LENGTH OF 2ND AND REMAINING TIME-STEPS= ',I3,' DAYS')
C
C***  POWER= POWER DENSITY IN WATTS PER CC
C***  NTIMX= NO. OF TIME-STEPS (TOTAL)
C***  KTIMEO= NO. OF DAYS OF FIRST TIME-STEP
C***  KTIME= NO.OF DAYS FOR SECOND AND THE REST OF TIME-STEPS
C
      NC=1
CE 1005 READ(5,11,END=1010) NC1(NC),XC1(NC),NC2(NC),XC2(NC)
 1005 READ(55,11,END=1010) NC1(NC),XC1(NC),NC2(NC),XC2(NC)
      IF(NC1(NC).EQ.0) GOTO 1010
      NC=NC + 1
      GOTO 1005
 1010 CONTINUE
      IF(NC.EQ.1) PRINT 1600
 1600 FORMAT(//'  **** NO CONCENTRATION CHANGE CALCULATION ****')
CE    IF(NC.EQ.1) GOTO 1803
CE         MODIFICADO
      IF(NC.EQ.1) GOTO 1893
CE         FIM
      PRINT 1500
 1500 FORMAT(///,' OPTIONAL CALCULATIONS'/' ')
      DO 1803 J=1,NC
      IF(NC1(J).EQ.1) PRINT 1800,XC1(J),XC2(J),NC2(J)
 1800 FORMAT(  ' MULTIPLICATION OF NUCLIDE',F9.0,' WITH FACTOR',
     X E12.5,' EVERY',I3,' CYCLES')
      IF(NC1(J).EQ.2) PRINT 1801, XC1(J),XC2(J),NC2(J)
 1801 FORMAT(  ' ADDITION OF NUCLIDE',F9.0,' WITH',E12.5,
     X ' (AT./CM/BARN) EVERY',I3,' CYCLES')
      IF(NC1(J).EQ.3) PRINT 1802,XC1(J)
 1802 FORMAT(  ' NUCLIDE',F9.0,' TREATED AS BURNABLE POISON')
 1803 CONTINUE
CE       INCLUIDO
 1893 CONTINUE
CE       FIM
 1804 CONTINUE
C
C *************   READ  TAPE  13  (CITHAM.BU) ************************
C
      REWIND 13
      REWIND 3
      IS= NDEF
  200 IS= IS + 1
      READ(13,211) ISOT(IS),ISON(IS),XNAME(IS),AMASS(IS),XLAMBD(IS)
  211 FORMAT(I3,1X,A8,3E12.4)
      IF(ISOT(IS).EQ.0) GOTO 218
      IF(NDEF.EQ.0) GOTO 200
      DO 216 ISS=1,NDEF
      IF( XNAME(IS).EQ.XNAME(ISS) ) GOTO 217
      IF(  ISOT(IS).EQ.ISOT(ISS)  ) GOTO 217
      IF(  ISON(IS).EQ.ISON(ISS)  ) GOTO 217
  216 CONTINUE
      GOTO 200
  217 IS=IS - 1
      GOTO 200
  218 NIS= IS - 1
      DO 215 K=1,5
      READ(13,211) NY(K)
      IF(NY(K).EQ.0) GOTO 220
      READ(13,212)(YFP(L,K),L=1,20)
  212 FORMAT(6E12.4)
  215 CONTINUE
  220 CONTINUE
C
C ********** CALL  *CHAIN* ISOTOPE  RENUMBERING SUBROUTINE ***********
C
      CALL ISONBR(25,1)
      IF(NDEF.EQ.0) GOTO 222
      DO 221 IS=1,NDEF
      DO 221 I =1,40
      IF( ISON(IS).EQ.NCHK(I) ) CALL ISONBR(I,IS)
  221 CONTINUE
  222 CONTINUE
C
C **********************  CHAIN  DEFINITION  *************************
      CHAIN( 1)= TH232
      CHAIN( 2)= PA233
      CHAIN( 3)= U234
      CHAIN( 4)= U235
      CHAIN( 5)= U236
      CHAIN( 6)= NP237
      CHAIN( 7)= PU238
      CHAIN( 8)= 0.0
      CHAIN( 9)= U238
      CHAIN(10)= NP239
      CHAIN(11)= PU239
      CHAIN(12)= PU240
      CHAIN(13)= PU241
      CHAIN(14)= PU242
      CHAIN(15)= AM243
      CHAIN(16)= CM244
      CHAIN(17)= 0.0
      CHAIN(18)= BE009
      CHAIN(19)= LI006
      CHAIN(20)= LI007
      CHAIN(21)= 0.0
      CHAIN(30)= XE135
      CHAIN(31)= SM149
      CHAIN(32)= NSFP2
      CHAIN(33)= SSFP3
      CHAIN(34)= PU241
      CHAIN(35)= PA233
      CHAIN(36)= U233
C **********************  CHAIN  DEFINITION  *************************
C
C ****** CHECK FOR XC1(NC)  AND  XC2(NC) ****************************
C
      NC=NC-1
      IF(NC.EQ.0) GOTO 1810
C
      ITEST=0
      DO 1805 N=1,NC
      DO 1806 NN=1,NIS
      IF(XC1(N).EQ.XNAME(NN)) GOTO 1808
 1806 CONTINUE
      ITEST= 1
      PRINT 1807, XC1(N)
 1807 FORMAT('  ****************** PROGRAM STOP ******************'///
     X '  NUCLIDE ',F10.0, '  CANNOT BE USED FOR OPTIONAL CALCULATION')
 1808 IF(NC1(N).EQ.3) GOTO 1805
      DO 1809 NNN=1,NIS
      IF(XC2(N).EQ.XNAME(NNN)) GOTO 1805
 1809 CONTINUE
      ITEST= 1
      PRINT 1807, XC2(N)
 1805 CONTINUE

      IF(ITEST.NE.0)  go to 666
 1810 CONTINUE
C*****NC1(NC).EQ.1 MULTIPLICATION OF CONCENTRATION WITH XC2
C*****NC1(NC).EQ.2 ADDITION OF CONCENTRATION WITH XC2
C*****NC1(NC).EQ.3 BURNABLE POISON CALCULATION
C****XC1 NUCLIDE IDENTIFICATION
C****XNC2 NUBBER OF CYCLES BETWEEN MODIFICATIONS
C****XXC2 CONCENTRATION CHANGE
C
C **********************************************************************
C ******       NLAT      ITERATIONS                               ******
C **********************************************************************
C
      MLAT=NLAT
      IF(NLAT.EQ.0) MLAT=1
      DO 1000 ILT=1,MLAT
      REWIND NLIB
      IF(NTIME.LT.NTIMX) II=NFILE
      IF(NTIME.LT.NTIMX) GOTO 20
70010 CONTINUE
      IF(NLAT.EQ.0) GOTO 1012
      PRINT 5
    5 FORMAT(1H1,' ***CROSS SECTION PREPARATION FOR CITATION***')
      IF(NGIN.NE.4) PRINT 70011,NGIN
70011 FORMAT(' *** CROSS SECTIONS COLLAPSED TO ',I3,' GROUPS ***'//)
      IF(NDEF.EQ.0) GOTO 70009
      PRINT 1303
      PRINT  1301,         ( ISOT(IS),ISON(IS),AMASS(IS),
     X XLAMBD(IS),XNAME(IS), IS=1,NDEF)
      PRINT 1302
70009 REWIND NLIB
      DO 15 II=1,NFILE
      IF(II.EQ.IL(ILT))GO TO 20
   15 CONTINUE
      PRINT 6, IL(ILT),NFILE
    6 FORMAT(//,' LATTICE FILE',I4,' NOT ON TAPE OF ONLY',I4,' FILES',//
     X    ,' ***PROGRAM STOP***')
      STOP
   20 I=II-1
      IF(I.LT.1)GO TO 30
      DO 25 J=1,I
   25 READ(NLIB)
   30 READ(NLIB) (LIMP(I),I=1,600),(LOUT(I),I=1,1100),(DFLX(I),I=1,1764)
      PRINT 35,II,NFILE,IDENT
   35 FORMAT(' LATTICE NO.',I4,' OF',I4,' TOTAL - CASE NO.=',I6)
CE
CE    WRITE(99,9991) II
 9991 FORMAT(I6,'     8')
      WRITE(61,9991) II
CE
CE    PUNCH 40,II,NFILE,IDENT
      WRITE(7,40) II,NFILE,IDENT
   40 FORMAT(' LATTICE NO.',I4,' OF',I4,' TOTAL - CASE NO.=',I6)
      PRINT 45, (HOL(I),I=1,9)
   45 FORMAT(//,' TITLE--',9A4)
CE    PUNCH 50,(HOL(I),I=1,9)
      WRITE(7,50) (HOL(I),I=1,9)
   50 FORMAT(' TITLE--',9A4)
C
C --------- MAX ISON   ASSUMED IS 30 -----------------------------
C ------------ HAMMER MAX  ISON =  20 ----------------------------
      DO 70014 IX=1,ISOX
      DO 70013 IS=1,NIS
      IF(WSTBA(IX).EQ.XNAME(IS)) GOTO 70015
70013 CONTINUE
      NISOT(IX)= 99999
      NISON(IX)= NOCIT
      GOTO 70014
70015 NISOT(IX)= ISOT(IS)
      NISON(IX)= ISON(IS)
70014 CONTINUE
      DO 70012 IG=1,4
      FOGXX(IG)=FOGX(IG,6)
70012 CONTINUE
      IF(NGIN.EQ.1) FOGXX(1)=1.0
      IF(NGIN.EQ.2) FOGXX(1)=1.0-FOGXX(4)
      IF(NGIN.EQ.2) FOGXX(2)=FOGXX(4)
      IF(NGIN.EQ.3) FOGXX(1)=FOGXX(1)+FOGXX(2)
      IF(NGIN.EQ.3) FOGXX(2)=FOGXX(3)
      IF(NGIN.EQ.3) FOGXX(3)=FOGXX(4)
      IF(NTIME.GE.NTIMX) PRINT 5500,NGIN,(FOGXX(I),I=1,NGIN)
 5500 FORMAT(//,' FISSION SPECTRUM IN',I3,' GROUPS'//' ',1P4E11.4)
      IF(NTIME.LT.NTIMX) PRINT 55,(FOGX(I,6),I=1,4)
   55 FORMAT(//,' FISSION SPECTRUM, GR=1,2,3,4'//' ',1P4E11.4)
      DO 75 K=1,4
      DO 70 I=1,ISOX
      IF(BALT(I,K,2).LE.0.0)GO TO 70
      BALT(I,K,3)=BALT(I,K,3)/BALT(I,K,2)
   70 CONTINUE
   75 CONTINUE
      VR=0.0
      DO 80 I=1,NRX
   80 VR=VR+REGV(I)
      DO 85 I=1,ISOX
      CO(I)=0.0
      DO 90 J=1,NRX
      M=MXAS(J)
   90 CO(I)=CO(I)+CONCTA(I,M)*REGV(J)
   85 CO(I)=CO(I)/VR
      IF(NTIME.GE.NTIMX) PRINT 193
  193 FORMAT(//,' AVERAGE CONCENTRATION OF ISOTOPES AT BEGINNING OF TIME
     X-STEP'//
     X  ' CITATION ID.' ,' ISOTOPE',6X,'T/M',5X,'CONCENTRATION',/)
      NDAYS=(NTIME-1)*KTIME+KTIME0
      IF(NTIME.EQ.0) NDAYS=0
      IF(NTIME.LT.NTIMX)PRINT 195,NDAYS
  195 FORMAT(//' AVERAGE CONCENTRATION OF ISOTOPES AT ',I5,' DAYS (USED
     XAS INPUT IN THE PREVIOUS CASE)'//
     X  ' CITATION ID.' ,' ISOTOPE',6X,'T/M',5X,'CONCENTRATION',/)
      DO 96 I=1,ISOX
CE 96 PRINT 95,NISOT(I),NISON(I),WSTBA(I),WSTBB(I),CO(I)
CE
CE  INSERIDO
CE
CE    WRITE(66,95) NISOT(I),NISON(I),WSTBA(I),WSTBB(I),CO(I)
      WRITE(60,95) NISOT(I),NISON(I),WSTBA(I),WSTBB(I),CO(I)
   96 PRINT 95,NISOT(I),NISON(I),WSTBA(I),WSTBB(I),CO(I)
   95 FORMAT( I4,1X,A8,2F9.0,6X,1PE11.4)
CE
CE  INSERIDO    AGO/89
CE
       WRITE(20) ISOX,(NISOT(I),CO(I),I=1,ISOX)
CE
      DO 300 I=1,ISOX
  300 XI(I)=CO(I)
      PHI(1)=DUMB(10)
      PHI(2)=DUMB(11)
      PHI(3)=DUMB(12)
      PHI(4)=DUMB(13)
      IF(NTIME.GE.NTIMX) GOTO 415
      POW=0.
      DO 310 I=1,ISOX
      DO 310 IG=1,NG
  310 POW=POW+PHI(IG)*BALT(I,IG,2)
      DO 315 IG=1,NG
  315 PHI(IG)=PHI(IG)*(POWER/(POW *.3205E-10))*1.E-24
      DO 3109 IG=1,NG
      PHIR(IG)=PHI(IG)*1.E+24
 3109 CONTINUE
      PRINT 213,(PHIR(IG),IG=1,4)
  213 FORMAT(//,' ASYMPTOTIC FLUXES, GR=1,2,3,4'//' ',1P4E11.4)
      MAXT=KTIME
      DT  = 86400.*TIME
      IF(NTIME.EQ.0) MAXT=KTIME0
C
C *********************  BURNUP CALCULATION  **************************
      DO 345 NTIM=1,MAXT
      DO 345 I=1,ISOX
      IF(XI(I).LT.1.E-38) GOTO 345
      WI= WSTBA(I)
      COI= 1.0/CO(I)
      IF(NC.EQ.0) GOTO 3452
      DO 3451 N=1,NC
      IF(NC1(N).NE.3) GOTO 3451
      IF(WI .NE.XC1(N)) GOTO 3451
      DO 1345 IG=1,NG
      XI(I)=XI(I)/( 1.0 + DT*PHI(IG)*BALT(I,IG,1)*COI )
 1345 CONTINUE
 3451 CONTINUE
 3452 CONTINUE
      IF( WI.EQ. U233 ) GOTO 331
      DO 330 ICHN1= 1,20
      IF( WI .EQ. CHAIN(ICHN1) ) GOTO 332
  330 CONTINUE
      GOTO 335
  331 ICHN1= 2
  332 CHAIN2= CHAIN(ICHN1+1)
      DO 333  II= 1,ISOX
      IF( WSTBA(II).EQ.CHAIN2 ) GOTO 3332
  333 CONTINUE
      IF(CHAIN2.EQ.NP237 .OR. CHAIN2.EQ.NP239) CHAIN2= CHAIN(ICHN1+2)
      DO 3331 II= 1,ISOX
      IF( WSTBA(II) .EQ.CHAIN2 ) GOTO 3332
 3331 CONTINUE
      II= 0
 3332 DO 334 IG=1,NG
      XI(I)=XI(I)/( 1.0 + DT*PHI(IG)*BALT(I,IG,1)*COI )
      IF( II.EQ.0) GOTO 334
      XI(II)=XI(II)+DT*PHI(IG)*(BALT(I,IG,1)-BALT(I,IG,2) )*COI*XI(I)
  334 CONTINUE
  335 DO 336 ICHN1= 30,40
      IF( WI.EQ.CHAIN(ICHN1)  )  GOTO 337
  336 CONTINUE
      GOTO 345
  337 SUM= 0.0
      SUM1=0.0
      DO 338 IG=1,NG
      IF( WI.NE.XE135 .AND. WI.NE.SM149 ) GOTO 3381
      SUM1=SUM1+BALT(I,IG,1)*PHI(IG)*DT
      SUM=SUM+FOGX(IG,5)*PHI(IG)*DT
 3381 IF( WI .EQ.NSFP2 )XI(I)=XI(I)+(FOGX(IG,5)*Y002-BALT(I,IG,1)
     1*XI(I)*COI   )*PHI(IG)*DT
      IF( WI .EQ.SSFP3 )XI(I)=XI(I)+(FOGX(IG,5)*Y003-BALT(I,IG,1)
     1*XI(I)*COI   )*PHI(IG)*DT
  338 CONTINUE
      IF( WI .EQ. PU241 ) XI(I)=XI(I)*XL241
      IF( WI .EQ. XE135 ) XI(I)=SUM*Y135/(XL135+SUM1*COI  )
      IF( WI .EQ. SM149 ) XI(I)=SUM*Y149/SUM1*CO(I)
      IF( WI .NE. PA233 ) GOTO 345
      XI(I)=XI(I)*XL233
      DO 339 II=1,ISOX
      IF( WSTBA(II) .EQ.U233 )   XI(II)=XI(II)+(1.-XL233)*XI(I)
  339 CONTINUE
  345 CONTINUE
C ****************  END OF  BURNUP CALCULATION  *********************
C
      KOUT=KTIME
      IF(NTIME.EQ.0) KOUT=KTIME0
      PRINT 194,NTIME,KOUT,POWER
  194 FORMAT(1H1' TIME-STEP NO.',I5,'  OF',I5,'  DAYS AT A POWER OF ',
     X F9.3,' WATTS/CC'//)
      NDAYS=NDAYS+KTIME
      IF(NTIME.EQ.0) NDAYS=KTIME0
      PRINT 196,NDAYS
  196 FORMAT(//' AVERAGE CONCENTRATION OF ISOTOPES AT ',I5,' DAYS, TO BE
     X USED IN THE NEXT TIME-STEP'//
     X  ' CITATION ID.' ,' ISOTOPE',6X,'T/M',5X,'CONCENTRATION',/)
      IF(NC.EQ.0) GOTO 3501
      DO 350 I=1,ISOX
      DO 350 N=1,NC
      IF(NC1(N).EQ.3) GOTO 350
      IF(NC2(N).EQ.0) NC2(N)=1
      IF((NTIME+1)-NC2(N)*((NTIME+1)/NC2(N)).NE.0) GOTO 350
      IF(XC1(N).NE.WSTBA(I)) GOTO 350
      IF(NC1(N).EQ.1) XI(I)=XI(I)*XC2(N)
      IF(NC1(N).EQ.2) XI(I)=XI(I)+XC2(N)
  350 CONTINUE
 3501 CONTINUE
      DO 3508 I=1,ISOX
      PRINT 95,NISOT(I),NISON(I),WSTBA(I),WSTBB(I),XI(I)
 3508 CONTINUE
CE
CE    INSERIDO     AGO/89
CE
       WRITE(20) ISOX,(NISOT(I),XI(I),I=1,ISOX)
CE
CE    REWIND 5
      REWIND 55
CE    REWIND 8
      REWIND 1
CE    READ(5,349)(NFIELD(K),K=1,80)
      READ(55,349)(NFIELD(K),K=1,80)
CE    WRITE(8,349)(NFIELD(K),K=1,80)
      WRITE(1,349)(NFIELD(K),K=1,80)
  349 FORMAT(80A1)
CE    READ(5,351)(NFIELD(K),K=1,80)
CE    READ(55,351)(NFIELD(K),K=1,80)
      READ(55,349)(NFIELD(K),K=1,80)
  351 FORMAT(18A1,I1,61A1)
      NFIELD(19)='0'
CE    WRITE(8,351)(NFIELD(K),K=1,80)
      WRITE(1,349)(NFIELD(K),K=1,80)
CE 3509 READ(5,352,END=400) IA(1),IA(2),IA(3),IA(4)
 3509 READ(55,352,END=400) IA(1),IA(2),IA(3),IA(4)
  352 FORMAT(I1,I1,I2,1X,I2)
      IF(IA(3).GT.2) GOTO 3521
CE    BACKSPACE 5
      BACKSPACE 55
CE    READ(5,361) (NFIELD(K),K=1,20)
      READ(55,361) (NFIELD(K),K=1,20)
CE    WRITE(8,361)(NFIELD(K),K=1,20)
      WRITE(1,361)(NFIELD(K),K=1,20)
      GOTO 3509
CE 3521 BACKSPACE 5
 3521 BACKSPACE 55
CE    READ(5,353) IA(5),XA(1)
      READ(55,353) IA(5),XA(1)
  353 FORMAT(9X,I5,6X,E10.0)
      DO 354 K=1,4
      KK=K
      IF(IA(5).EQ.NAME(K).AND.IA(4).NE.0) GOTO 356
  354 CONTINUE
      KK=0
      DO 355 K=1,NIS
      IF(XA(1).EQ.XNAME(K).AND.IA(4).EQ.0) GOTO 376
  355 CONTINUE
CE    BACKSPACE 5
      BACKSPACE 55
CE    READ(5,361) (NFIELD(K),K=1,20)
      READ(55,361) (NFIELD(K),K=1,20)
CE    WRITE(8,361)(NFIELD(K),K=1,20)
      WRITE(1,361)(NFIELD(K),K=1,20)
      IF(IA(1).EQ.1) GOTO 3601
      GOTO 3509
CE356 BACKSPACE 5
  356 BACKSPACE 55
CE    READ(5,357)(NFIELD(K),K=1,30),XA(1),XA(2),(NFIELD(K),K=51,80)
      READ(55,357)(NFIELD(K),K=1,30),XA(1),XA(2),(NFIELD(K),K=51,80)
  357 FORMAT(30A1,2E10.0,30A1)
      P1=1.0
      P2=1.0
      DO 375 I=1,ISOX
      IF(KK.EQ.3.OR.KK.EQ.4) GOTO 3759
      IF(WSTBA(I).EQ. U235 ) FIS0=CO(I)
      IF(WSTBA(I).EQ. U235 ) FIS=XI(I)
      IF(WSTBA(I).EQ. U238 ) FER0=CO(I)
      IF(WSTBA(I).EQ. U238 ) FER=XI(I)
      IF(KK.EQ.2) P1=267./235.
      IF(KK.EQ.2) P2=270./238.
      GOTO 375
 3759 CONTINUE
      IF(WSTBA(I).EQ. U233 ) FIS0=CO(I)
      IF(WSTBA(I).EQ. U233 ) FIS=XI(I)
      IF(WSTBA(I).EQ.TH232 ) FER0=CO(I)
      IF(WSTBA(I).EQ.TH232  )FER=XI(I)
      IF(KK.EQ.4) P1=265./233.
      IF(KK.EQ.4) P2=264./232.
  375 CONTINUE
      XA(1)=XA(1)*(P1*FIS+P2*FER)/(P1*FIS0+P2*FER0)
      XA(2)=FIS/(FIS+FER)*100.
CE    WRITE(8,358)(NFIELD(K),K=1,30),XA(1),XA(2),(NFIELD(K),K=51,80)
      WRITE(1,358)(NFIELD(K),K=1,30),XA(1),XA(2),(NFIELD(K),K=51,80)
  358 FORMAT(30A1,2F10.7,30A1)
      IF(IA(1).EQ.1) GOTO 3601
      GOTO 3509
CE  376 BACKSPACE 5
  376 BACKSPACE 55
CE    READ(5,359)(NFIELD(K),K=1,60),XA(3),(NFIELD(K),K=71,80)
      READ(55,359)(NFIELD(K),K=1,60),XA(3),(NFIELD(K),K=71,80)
  359 FORMAT(60A1,E10.0,10A1)
      DO 385 I=1,ISOX
      IF(XA(1).EQ.WSTBA(I))XA(3)=XA(3)*XI(I)/CO(I)
  385 CONTINUE
      IF(XA(3).LT.1.E-38) XA(3)=1.E-20
CE    IF(XA(3).LT..00001) WRITE(8,3600)(NFIELD(K),K=1,60),XA(3),
      IF(XA(3).LT..00001) WRITE(1,3600)(NFIELD(K),K=1,60),XA(3),
     X  (NFIELD(K),K=71,80)
CE    IF( XA(3).LT.1.0000 .AND. XA(3).GE..00001) WRITE(8,360)
      IF( XA(3).LT.1.0000 .AND. XA(3).GE..00001) WRITE(1,360)
     X (NFIELD(K),K=1,60),XA(3),(NFIELD(K),K=71,80)
  360 FORMAT(60A1,F10.9,10A1)
CE    IF(XA(3).GE.1.0000) WRITE(8,3600)(NFIELD(K),K=1,60),XA(3),
      IF(XA(3).GE.1.0000) WRITE(1,3600)(NFIELD(K),K=1,60),XA(3),
     X  (NFIELD(K),K=71,80)
 3600 FORMAT(60A1,E10.5,10A1)
      IF(IA(1).EQ.1) GOTO 3601
      GOTO 3509
CE 3601 READ(5,361,END=1113)(NFIELD(K),K=1,20)
 3601 READ(55,361,END=1113)(NFIELD(K),K=1,20)
CE    WRITE(8,361)(NFIELD(K),K=1,20)
      WRITE(1,361)(NFIELD(K),K=1,20)
      IF(NFIELD(1).EQ.NBURN)GOTO 3603
      GOTO 3601
 3603 CONTINUE
CE    READ(5,391,END=1113)NLIB,NFILE,NLAT,NGIN0,NDEF,
      READ(55,391,END=1113)NLIB,NFILE,NLAT,NGIN0,NDEF,
     X (NFIELD(K),K=1,5)
  391 FORMAT(5I3, 60X , 5A1)
      NFILE=NNFIL
      NFILE=NFILE+1
CE    WRITE(8,391) NLIB,NFILE,NLAT,NGIN,NDEF,(NFIELD(K),K=1,5)
      WRITE(1,391) NLIB,NFILE,NLAT,NGIN,NDEF,(NFIELD(K),K=1,5)
CE 3602 READ(5,361,END=400)(NFIELD(K),K=1,20)
 3602 READ(55,361,END=400)(NFIELD(K),K=1,20)
CE    WRITE(8,361)(NFIELD(K),K=1,20)
      WRITE(1,361)(NFIELD(K),K=1,20)
  361 FORMAT(20A4)
      GOTO 3602
CE400 REWIND 5
  400 REWIND 55
CE    ENDFILE 8
CE    REWIND 8
      ENDFILE 1
      REWIND 1
      PRINT 362
  362 FORMAT( '1'/// )
CE405 READ(8,361,END=410)(A(L),L=1,20)
  405 READ(1,361,END=410)(A(L),L=1,20)
CE    WRITE(5,361)(A(L),L=1,20)
      WRITE(55,361)(A(L),L=1,20)
      PRINT 363, (A(L),L=1,20)
  363 FORMAT(' ',20A4)
      GOTO 405
CE410 ENDFILE 5
  410 ENDFILE 55
CE    REWIND 5
      REWIND 55
      NTIME=NTIME+1
      IF(NTIME.LT.NTIMX) REWIND NCIT
      IF(NTIME.LT.NTIMX) RETURN
      IF(NTIME.GE.NTIMX) GOTO 70010
  415 CONTINUE
      DO 100 I=1,ISOX
      IF(CO(I).LE.0.)GO TO 100
      DO 105 K=1,4
      BALT(I,K,2)=BALT(I,K,2)/CO(I)
  105 BALT(I,K,1)=BALT(I,K,1)/CO(I)
  100 CONTINUE
      DO 110 K=1,4
  110 BLK(K)=0.0
      DO 115 I=1,ISOX
      IF(WSTBA(I).EQ.WSO(ILT))GO TO 125
  115 CONTINUE
      PRINT 120, WSO(ILT)
  120 FORMAT(//,' ISOTOPE NO.',F9.0,' DOES NOT EXIST IN LATTICE',//,
     X    ' ***PROGRAM STOP***')
      STOP
  125 DO 130 K=1,4
      FOGX(K,1)=1.0/(3.0*FOGX(K,1)*CO(I))
  130 FOGX(K,4)=FOGX(K,4)/CO(I)
      DO 135 K=1,4
      DO 135 L=1,4
  135 STRA(K,L)=0.0
      STRA(1,2)=FOGX(1,4)
      STRA(2,3)=FOGX(2,4)
      STRA(3,4)=FOGX(3,4)
C ******* COLLAPSING SCHEME ***************
      IF(NGIN.EQ.4) GOTO 7701
      DO 7700 K=1,NGIN
      N1=1
      N2=4+K-NGIN
      IF(K.NE.1) N1=N2
      SUM1=0.0
      SUM2=0.0
      DO 7705 KK=N1,N2
      SUM1=SUM1+PHI(KK)/FOGX(KK,1)
      SUM2=SUM2+PHI(KK)
 7705 CONTINUE
      FOGX(K,1)=SUM2/SUM1
      DO 7700 I=1,ISOX
      SUM1=0.0
      SUM2=0.0
      DO 7702 KK=N1,N2
      SUM1=SUM1+PHI(KK)*BALT(I,KK,3)*BALT(I,KK,2)
      SUM2=SUM2+PHI(KK)*BALT(I,KK,2)
 7702 CONTINUE
      IF(SUM2.GT.0.0) BALT(I,K,3)=SUM1/SUM2
      DO 7703 L=1,2
      SUM1=0.0
      SUM2=0.0
      DO 7704 KK=N1,N2
      SUM1=SUM1+PHI(KK)*BALT(I,KK,L)
      SUM2=SUM2+PHI(KK)
 7704 CONTINUE
      BALT(I,K,L)=SUM1/SUM2
 7703 CONTINUE
 7700 CONTINUE
      IF(NGIN.EQ.1) GOTO 7701
      NK=3
      IF(NGIN.EQ.3) NK=2
      SUM2=0.0
      DO 6991 KK=1,NK
      SUM2=SUM2+PHI(KK)
 6991 CONTINUE
      STRA(1,2)=PHI(NK)/SUM2*FOGX(NK,4)
      IF(NGIN.EQ.3) STRA(2,3)=STRA(3,4)
 7701 CONTINUE
C*****  END OF COLLAPSING SCHEME ************
      DO 7706 ISCTTR=1,ISOX
      IF(WSTBA(ISCTTR).EQ.WSO(ILT)) GOTO 7707
 7706 CONTINUE
 7707 CONTINUE
      NP9=0
      NP7=0
      DO 7708 IS=1,ISOX
      IF(WSTBA(IS).EQ. U238 ) NP9= NP9 + 1
      IF(WSTBA(IS).EQ.NP239 ) NP9= NP9 - 1
      IF(WSTBA(IS).EQ. U235 ) NP7= NP7 + 1
      IF(WSTBA(IS).EQ.NP237 ) NP7= NP7 - 1
 7708 CONTINUE
      ISMAX=0
      IF(NP9.EQ.1) ISMAX= ISMAX + 1
      IF(NP7.EQ.1) ISMAX= ISMAX + 1
      ISOXOU=ISOX + ISMAX
      WRITE(NCIT)(HOL(I),I=1,9),(NBL,I=1,9)
      WRITE(NCIT) NT,ISOXOU,NGIN,NGIN,NGIN,NGIN
      WRITE(NCIT) (FOGXX(I),I=1,NGIN),((X0,I=1,NGIN),K=1,3),(X0,K=1,20)
      PRINT 175, WSTBA(ISCTTR),WSTBB(ISCTTR)
  175 FORMAT(//' SCATTERING MATRIX IS ASSIGNED TO ISOTOPE NO.',F9.0,
     X    2X,'T/M=',F7.0,//)
      DO 150 IS=1,ISOX
CE
      IF (.NOT. (WSTBA(IS).EQ.92235. .OR. WSTBA(IS) .EQ. 92238. .OR.
     1           WSTBA(IS).EQ.94239. .OR. WSTBA(IS) .EQ. 94240. .OR.
     2           WSTBA(IS).EQ.94241. .OR. WSTBA(IS) .EQ. 94242. .OR.
     3       WSTBA(IS).EQ.92234. .OR. WSTBA(IS) .EQ. 92236.)) GO TO 144
      IWSTBA = AINT(WSTBA(IS)*10)
CE    WRITE(99,9993) IWSTBA
      WRITE(61,9993) IWSTBA
 9993 FORMAT(8X,I6)
  144 CONTINUE
CE
      PRINT 140,WSTBA(IS),WSTBB(IS)
  140 FORMAT(/,' ISOTOPE NO.',F9.0,2X,'T/M=',F7.0)
      PRINT 145
  145 FORMAT(/,' ***(((SIGA(K),SIGF(K),STR(K),SNU(K),K=1,NG),((SITR(K,L)
     X,L=1,NG),K=1,NG)***'/)
      DO 205 IX=1,NIS
      IF(XNAME(IX).EQ.WSTBA(IS)) GOTO 210
  205 CONTINUE
      IX=9999
      PRINT 2059,WSTBA(IS)
 2059 FORMAT(' ***CAUTION***CAUTION***CAUTION***CAUTION***CAUTION***',
     X '***CAUTION***CAUTION***CAUTION***CAUTION***'/
     X  ' *** NUCLIDE NO. ',F9.0,'  IS NOT DEFINED IN THE CITATION',
     X  ' NUCLIDE IDENTIFICATION(SEE TAPE 13)'/'   AND IT WILL NOT',
     X  ' BE INCLUDED IN THE CITATION TAPE(TAPE 12) ***')
  210 CONTINUE
      DO 230 L=1,5
      IF(NY(L).EQ.ISOT(IX)) GOTO 235
  230 CONTINUE
  235 CONTINUE
      X1=.3205E-10
      IF(IX.GT.888) GOTO 2058
      WRITE(NCIT)ISOT(IX),ISOT(IX),NT,NT,NT,ISON(IX),(NBL,K=1,4)
     1,AMASS(IX),X0,X1,XLAMBD (IX),(X0,K=5,19),(YFP (K,L),K=1,20)
     1,(X0,K=40,60)
 2058 CONTINUE
      IF(IS.EQ.ISCTTR)GO TO 500
      DO 165 K=1,NGIN
CE    PUNCH 160,BALT(IS,K,1),BALT(IS,K,2),BLK(K),BALT(IS,K,3)
      WRITE(7,160) BALT(IS,K,1),BALT(IS,K,2),BLK(K),BALT(IS,K,3)
  165 PRINT 160,BALT(IS,K,1),BALT(IS,K,2),BLK(K),BALT(IS,K,3)
  160 FORMAT(1P6E12.4)
CE
      IF (.NOT. (WSTBA(IS).EQ.92235. .OR. WSTBA(IS) .EQ. 92238. .OR.
     1          WSTBA(IS).EQ.94239. .OR. WSTBA(IS) .EQ. 94240. .OR.
     2           WSTBA(IS).EQ.94241. .OR. WSTBA(IS) .EQ. 94242. .OR.
     3       WSTBA(IS).EQ.92234. .OR. WSTBA(IS) .EQ. 92236.)) GO TO 161
      DO 203 K= 1,4
         SIGAX(K)= BALT(IS,K,1)
         SIGFX(K)= BALT(IS,K,2)
         SNUX (K)= 0.
 203  CONTINUE
      SIGAX(4)= SIGAX(4)/.554078
      SIGFX(4)= SIGFX(4)/.554078
      IF (WSTBA(IS) .EQ. 92238.)  SNUX(1)= 1.4805E-02
      IF (WSTBA(IS) .EQ. 94239.)  SNUX(1)= 3.1810E-03
CE    WRITE(99,9995) (SIGAX(K),K=1,4),(SIGFX(K),K=1,4),(SNUX(K),K=1,4)
      WRITE(61,9995) (SIGAX(K),K=1,4),(SIGFX(K),K=1,4),(SNUX(K),K=1,4)
 9995 FORMAT(2(1P4E12.5,/),1P4E12.5)
  161 CONTINUE
CE
      IF(IX.GT.888) GOTO 2057
      WRITE(NCIT)(BALT(IS,K,1),BALT(IS,K,2),BLK(K),BALT(IS,K,3),X0,
     X K=1,NGIN),((BLK(K),K=1,NGIN),L=1,NGIN)
 2057 CONTINUE
CE    PUNCH 160,((BLK(K),K=1,NGIN),L=1,NGIN)
      WRITE(6,160) ((BLK(K),K=1,NGIN),L=1,NGIN)
      PRINT 160,((BLK(K),K=1,NGIN),L=1,NGIN)
      GO TO 150
  500 DO 170 K=1,NGIN
      PRINT 160,BALT(IS,K,1),BALT(IS,K,2),FOGX(K,1),BALT(IS,K,3)
CE  170 PUNCH 160,BALT(IS,K,1),BALT(IS,K,2),FOGX(K,1),BALT(IS,K,3)
  170 WRITE(7,160) BALT(IS,K,1),BALT(IS,K,2),FOGX(K,1),BALT(IS,K,3)
      IF(IX.GT.888) GOTO 2056
      WRITE(NCIT)(BALT(IS,K,1),BALT(IS,K,2),FOGX(K,1)
     X ,BALT(IS,K,3),X0,K=1,NGIN),((STRA(K,L),L=1,NGIN),K=1,NGIN)
 2056 CONTINUE
      PRINT 160,((STRA(K,L),L=1,NGIN),K=1,NGIN)
CE    PUNCH 160,((STRA(K,L),L=1,NGIN),K=1,NGIN)
      WRITE(7,160) ((STRA(K,L),L=1,NGIN),K=1,NGIN)
  150 CONTINUE
C
C **********************************************************************
C   NP239 AND/OR NP237  DUMMY CROSS-SECTIONS FOR CITATION SETS
C***********************************************************************
C
      IF(ISMAX.EQ.0) GOTO 157
      NGIN1 = NGIN - 1
      XTRAA(1)= NP239
      XTRAA(2)= NP237
      IF(NP9.EQ.0) XTRAA(1)= NP237
      DO 151 IS=1,ISMAX
      PRINT 140,XTRAA(IS),XTRAB(IS)
      PRINT 141
  141 FORMAT(' '/' ********* C A U T I O N ************* DUMMY CROSS-',
     1 'SECTIONS FOR CITATION TAPE ONLY ******** C A U T I O N *******')
      PRINT 145
      DO 152 IX=1,NIS
      IF(XNAME(IX).EQ.XTRAA(IS)) GOTO 153
  152 CONTINUE
  153 CONTINUE
      DO 154 L=1,5
      IF(NY(L).EQ.ISOT(IX)) GOTO 155
  154 CONTINUE
  155 CONTINUE
      X1=.3205E-10
      WRITE(NCIT)ISOT(IX),ISOT(IX),NT,NT,NT,ISON(IX),(NBL,K=1,4)
     1,AMASS(IX),X0,X1,XLAMBD (IX),(X0,K=5,19),(YFP (K,L),K=1,20)
     1,(X0,K=40,60)
      DO 156 K=1,NGIN1
CE    PUNCH 160,BLK(K),BLK(K),BLK(K),BLK(K)
      WRITE(7,160) BLK(K),BLK(K),BLK(K),BLK(K)
  156 PRINT 160,BLK(K),BLK(K),BLK(K),BLK(K)
CE    PUNCH 160, ONE  ,BLK(NGIN),BLK(NGIN),BLK(NGIN)
      WRITE(7,160) ONE  ,BLK(NGIN),BLK(NGIN),BLK(NGIN)
      PRINT 160, ONE  ,BLK(NGIN),BLK(NGIN),BLK(NGIN)
      WRITE(NCIT)(BLK(K),BLK(K),BLK(K),BLK(K),X0,
     X K=1,NGIN1), ONE,BLK(NGIN),BLK(NGIN),BLK(NGIN),X0,
     X ((BLK(K),K=1,NGIN),L=1,NGIN)
CE    PUNCH 160,((BLK(K),K=1,NGIN),L=1,NGIN)
      WRITE(7,160) ((BLK(K),K=1,NGIN),L=1,NGIN)
      PRINT 160,((BLK(K),K=1,NGIN),L=1,NGIN)
  151 CONTINUE
C
C ******************END OF NEPTUNIUM CROSS-SECTIONS ***************
C
  157 CONTINUE
      NEGNO=-1
      WRITE(NCIT)NEGNO,(K,K=2,20)
 1000 CONTINUE
C
C **********************************************************************
C *******         END   OF    NLAT   ITERATIONS                 ********
C **********************************************************************
C
      ENDFILE NCIT
      rewind (NCIT)
      PRINT 1018
 1018 FORMAT('1*******   CITATION  ISOTOPE  DEFINITION *******'//
     X '  ID ISOTOPE    HAMMER ID',T32,'MASS',T40,'DECAY(/SEC)'//)
      MNIS= 1
      IF(NDEF.EQ.0) GOTO 1021
      PRINT 1019, (ISOT(IS),ISON(IS),XNAME(IS),AMASS(IS),XLAMBD(IS),
     X  IS=1,NDEF)
      PRINT 1020
 1020 FORMAT(' ************ END OF NEW DEFINITIONS ************')
      MNIS= NDEF + 1
 1021 PRINT 1019, (ISOT(IS),ISON(IS),XNAME(IS),AMASS(IS),XLAMBD(IS),
     X  IS= MNIS,NIS )
 1019 FORMAT(' ',I3,1X,A8, F12.0, F12.2,  E12.4)
      Return
C      STOP
 1111 WRITE(6,1011)
 1011 FORMAT(1H1,' ******  NO INPUT CARDS FOR CITHAM CALCULATIONS ******
     X  '// ' *******************************************************')
      STOP
 1012 REWIND NLIB
      DO 1016 I=1,999
      READ(NLIB,END=1017)
 1016 CONTINUE
 1017 I=I-2
      WRITE(6,1013) NTIMX,I
 1013 FORMAT(1H1,' ****** ',I3,' TIME-STEPS BURN-UP CALCULATIONS, ',
     X ' WITHOUT CITATION TAPE EDIT(OR UPDATE) ****** ' //' ****** ',
     X 'THERE ARE',I3,' LATTICES IN THE LATTICE LYBRARY TAPE(NLIB)',
     X '*****')
      STOP
 1112 WRITE(6,1014)
 1014 FORMAT(1H1, ' *****  INPUT ERROR  IN   BURN-UP CALCULATIONS ****')
      STOP
 1113 WRITE(6,1015)
 1015 FORMAT(1H1, ' **** READ ERROR DURING BURN-UP CALCULATIONS ***')
      STOP
 666  STOP
      END
      SUBROUTINE SELECT
CE        HAMNDP1.FOR
C===============================================
CE        CV014.HAMNDP.FORT            AGO/93
CE  MAIN   VEM DE CITNDP.FORT
CE  VERSAO MODIFICADA                                         MAR/86
CE
CE  1. O ELEMENTO 92238 VEM DA BIBLIOTECA DO HAMMER VELHO  (ROT RESC)
CE     A MANIPULACAO DO ELEMENTO 92238 E' FEITA DE ACORDO COM AS
CE       EQUACOES DO HAMMER VELHO                          (ROT TUZ)
C
C  EPRI-HAMMER MAIN
C
C===============================================
C     CALL FTNCMD('DEFAULT 2=-HAMMER2;')
C     CALL FTNCMD('DEFAULT 3=-HAMMER3;')
C     CALL FTNCMD('DEFAULT 7=-HAMMER7;')
C     CALL FTNCMD('DEFAULT 8=-HAMMER8;')
C     CALL FTNCMD('DEFAULT 12=-HAMMER12;')
C     CALL FTNCMD('DEFAULT 16=-HAMMER16;')
C     CALL FTNCMD('ASSIGN 6=*PRINT*;')
C     CALL FTNCMD('DEFAULT 18=SK2E:HAMMER.THLIB;')
C     CALL FTNCMD('DEFAULT 19=SK2E:HAMMER.EPLIB;')
C***
C  CROSS-SECTIONS IN 2DB FORMAT ARE PUNCHED
C       FOR EACH "SUPER-REGION" ON UNIT#1, WHICH
C       DEFAULTS TO FILE  -HAMMER1
C     CALL FTNCMD('DEFAULT 1=-HAMMER1;')
CE    CALL SELECT
CE    STOP
CE    END
CE    SUBROUTINE SELECT
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C * *
C * *
C * * H A M M E R   B.N.L.- S.R.L.- TECHNION   LATTICE ANALYSIS PROGRAM
C * *
C * *
C * * VERSION / T-04-77/ DEVELOPPED BY 0
C * *
C * *            J.BARHEN   -   W.ROTHENSTEIN   -  E.TAVIV
C * *            DEPARTMENT OF     NUCLEAR     ENGINEERING
C * *            TECHNION - ISRAEL INSTITUTE OF TECHNOLOGY
C * *
C * *
C * * FOR THE    ELECTRIC POWER RESEARCH INSTITUTE ( E.P.R.I. )
C * *            PALO-ALTO  CALIFORNIA  U.S.A.
C * *            UNDER CONTRACT  RP-709-1
C * *
C * *
C * * VERSION /JB-10-77/ EXTENSIONS    0
C * *
C * *            J.BARHEN (17.10.77)  AN ADDITIONAL OPTION WAS INCLUDED
C * *            ALLOWING TO BYPASS RESC R.R.R. COMPUTATIONS 0 HAMMER
C * *            ACCEPTS NOW RESONANCE REACTION FRACTIONS PRODUCED BY
C * *            THE  O Z M A - 1  OR  R E P C  CODES
C * *
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C
C * * PROGRAM CONTROL
      COMMON /CNTRL/ DUM1(13),NTOUT,DUM2(8),LNK(10),DUM3(168)
C * * LATTICE INPUT
      COMMON /LIMP/ LM(600)
C * * NITPRO-RABPRO0 RESONANCE PROFILE TABULATIONS
C*******************************************************
C*****RESONANCE PROFILE STORAGE DELETED 5/16/79 FBB*****
C*            (ORIGINALLY,  DPR(20200) )               *
C*******************************************************
      COMMON / PROFIL / RDUM(5), JDUM(13), DPR(    1)
C * * RABPRO0 MULTIREGION RESONANCE PROFILE TREATMENT
      COMMON/RABLOC/ IDUM(55),ISIZ
C**********************************************
C*****RABSTO STORAGE DELETED, 5/16/79,  FBB****
C*            (ORIGINALLY,   BC(20000)  )     *
C**********************************************
C     Foi acrescentado um contador CONT ao programa para evitar LOOP
C     infinito!
      COMMON/RABSTO/ BC(    1)
C
      COMMON/ITDAT/ITHMAX
      COMMON DUMMY(22161)
      DIMENSION LC(200)
      EQUIVALENCE (DUM1(1),LC(1))
      DATA LINK /1/
      integer cont
      cont=0
C
C*******************************************
C*ISIZ WAS ORIGINALLY SET EQUAL TO 20000   *
C* CHANGED TO 1 WHEN RESONANCE PROFILE     *
C* TREATMENT DELETED--FBB, 5/17/79         *
C*******************************************
      ISIZ=    1
      DO 200 I=1,200
  200 LC(I)=0
      DO 201 I=1,600
  201 LM(I)=0
      DO 203 I=1,22161
  203 DUMMY(I)=0.
   99 DO 204 I=1,ISIZ
  204 BC(I)=0.
  100 GO TO (1,2,3,4,5,6,7,8,9,10,11,12,13),LINK
      cont=cont+1
      if(cont.gt.10) go to 66
    1 CALL LINK1
      LINK=LNK(1)
      GO TO 100
    2 CALL LINK2
      LINK=LNK(2)
      GO TO 100
C     DISCRETE INTEGRAL TRANSPORT (CARLVIK'S ALGORITHM)
    3 CALL LINK2
      LINK=LNK(2)
      GOTO 100
    4 GO TO 20
    5 GO TO 20
    6 CALL LINK6
      LINK=LNK(3)
      GO TO 100
    7 GO TO 20
    8 GO TO 20
    9 GO TO 20
   10 GO TO 20
   11 GO TO 20
   12 CALL LINK12
      LINK=1
      GOTO 99
   13 GO TO 20
   20 WRITE(NTOUT,1010) LINK
   66 RETURN
 1010 FORMAT(1H1,2X,16(1H*),' LINK=',I2,'  ERROR: END OF SELECT REACHED
     1 ',10(1H*))
      END
      SUBROUTINE TAPEH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* TAPE   *   HAMMER   VERSION /04-77/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      COMMON /CNTRL/ IDBCH,NCASE,NFLOG,BTTL(9),NTIN,NTOUT,NTPUN,
     1NCHAIN,LIB1,LIB2,LIB3,INT1,INT2,NSC1,LNK(10),NTHCS,NEPCS,KLIB1,
     2KLIB2,KLIB3,DUM1(32),NTHGP,IBNDRY(12),EPCUT,DUM2(45),NCPRN,NCPPT,
     3DUM3(10),NTHRN,NTHPT,NTHPN,DUM4(9),NEPRN,NEPPT,NEPPN,NEPSG,NEPAG,
     4DUM5(19),NEDRN,NEDPT,NEDPN,NEDNB,NEDFW,NEDRB,NEDAX,NEDNU,DUM6(16)
CE 10 NTIN=5
   10 NTIN=55
      NTOUT=6
      NTPUN=7
      INT1=3
      INT2=2
      LIB1=18
      LIB2=19
      LIB3=16
      NSC1=8
      IF(NCPRN-1)200,20,200
   20 IF(NTHRN*NEPRN)50,50,40
   40 NTHCS=1
      REWIND INT1
      NEPCS=1
      REWIND INT2
      KLIB1=1
      REWIND LIB1
      KLIB2=1
      REWIND LIB2
      KLIB3=1
      REWIND LIB3
      GOTO150
   50 IF(NTHRN)70,70,60
   60 NTHCS=1
      REWIND INT1
      KLIB1=1
      REWIND LIB1
      GOTO90
   70 IF(NEPRN)90,90,80
   80 NEPCS=1
      REWIND INT1
      REWIND INT2
      KLIB2=1
      REWIND LIB2
   90 IF(NEDRN) 140,140,130
  130 KLIB3=1
      REWIND LIB3
  140 CONTINUE
  150 RETURN
  200 STOP
      STOP
      END
      SUBROUTINE LINK
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* LINK   *   HAMMER   VERSION /04-77/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      COMMON /CNTRL/ IDBCH,NCASE,NFLOG,BTTL(9),NTIN,NTOUT,NTPUN,
     1NCHAIN,LIB1,LIB2,LIB3,INT1,INT2,NSC1,LNK(10),NTHCS,NEPCS,KLIB1,
     2KLIB2,KLIB3,DUM1(32),NTHGP,IBNDRY(12),EPCUT,DUM2(45),NCPRN,NCPPT,
     3DUM3(10),NTHRN,NTHPT,NTHPN,DUM4(9),NEPRN,NEPPT,NEPPN,NEPSG,NEPAG,
     4DUM5(19),NEDRN,NEDPT,NEDPN,NEDNB,NEDFW,NEDRB,NEDAX,NEDNU,DUM6(16)
C
C     LINKS0 1,2,6,12  ARE IN HAMMER  VERSION /JB-1077/  (J.B.-1.10.77)
C
C        LINK  1 = CAPN
C        LINK  2 = THERMOS (COSINE CURRENTS OR CARLVIK P-IJ)
C        LINK  6 = HAMLET (NIT-NITPRO-RABPRO)
C        LINK 12 = LATTICE LIBRARY EDIT
C
C     SET UP TAPE ASSIGNMENTS AND LINKAGE
C
C     ===CAPN EXIT, LNK(1)===
 1000 IF(NTHRN)1040,1040,1010
 1010 IF(NTHRN-3)1030,1030,1020
 1020 CALL STOPIT(113)
      GO TO 1160
 1030 LNK(1)=1+NTHRN
      GOTO2000
 1040 IF(NEPRN)1080,1080,1050
 1050 IF(NEPRN-3)1070,1070,1060
 1060 CALL STOPIT(114)
      GO TO 1160
 1070 LNK(1)=4+NEPRN
      GOTO3000
 1080 IF(NEDRN) 1160,1160,1130
 1130 IF(NEDRN-3)1150,1150,1140
 1140 CALL STOPIT(116)
      GO TO 1160
 1150 LNK(1)=10+NEDRN
      GOTO5000
 1160 LNK(1)=1
      GOTO6000
C     ===THERMOS EXIT, LNK(2)===
 2000 IF(NEPRN)2030,2030,2010
 2010 IF(NEPRN-3)2020,2020,1060
 2020 LNK(2)=4+NEPRN
      GOTO3000
 2030 LNK(2)=1
      GOTO6000
C     ===HAMLET EXIT, LNK(3)===
 3000 IF(NEDRN) 3060,3060,3040
 3040 IF(NEDRN-3)3050,3050,1140
 3050 LNK(3)=10+NEDRN
      GOTO5000
 3060 LNK(3)=1
      GOTO6000
C     ===DIED EXIT, LNK(5)===
 5000 LNK(5)=1
 6000 RETURN
      END
      SUBROUTINE INPA(NFST)
CINPA  ======HAMMER===BNL-SRL LATTICE ANALYSIS PROGRAM==============CAPN
CINPA INPUT SUBROUTINE
      COMMON /CNTRL/ IDBCH,NCASE,NFLOG,BTTL(9),NTIN,NTOUT,NTPUN,
     1NCHAIN,LIB1,LIB2,LIB3,INT1,INT2,NSC1,LNK(10),NTHCS,NEPCS,KLIB1,
     2KLIB2,KLIB3,DUM1(32),NTHGP,IBNDRY(12),EPCUT,DUM2(45),NCPRN,NCPPT,
     3DUM3(10),NTHRN,NTHPT,NTHPN,DUM4(9),NEPRN,NEPPT,NEPPN,NEPSG,NEPAG,
     4DUM5(19),NEDRN,NEDPT,NEDPN,NEDNB,NEDFW,NEDRB,NEDAX,NEDNU,DUM6(16)
      COMMON /LIMP/ IDENT,NX,MX,NRX,ISOX,ISOXE,NGEOM,NP1B1,NBCT,NXP,
     1BSQD,HOL(9),NPT(20),THT(20),MXAS(20),ILHI(20),NRBP(20),DEGC(20),
     2WSTBA(18),WSTBB(18),CONCTA(18,10),LIMT(10),RIN(20),RAD(20),
     3ROUT(20),VOL(20),MTBL(20),REGV(20),FISD(20),HOLID(3,18),DUM7(40)
      COMMON INAP(6),INA(6,100),FINAP(5),FINA(5,100),LRC(20),FISP(20)
      COMMON/ITDAT/ITHMAX
      COMMON/FBEDIT/SDISTR(20),DUMMY(2537)
      EQUIVALENCE (DUM5(8),NDISTR)
   11 FORMAT(I1,1XI2,1XI2,I2,I5,I5,1X9A4   )
   10 FORMAT(I1,1XI2,1XI2,I2,I5,2I2,I1,1X9A4   )
   20 FORMAT(I1,1XI2,1XI2,I2,I5,2I2,I1,1X5E10.0)
      IF(NCPPT)50,50,30
   30 WRITE(NTOUT,40)
   40 FORMAT(1H1)
   50 CONTINUE
  100 READ(NTIN,11) LCT,NC,J,J,IDENT,ITHMAX,HOL
      WRITE(NTOUT,380)IDENT,HOL
  380 FORMAT(5H0CASE,I6,5X,9A4   )
      IF(NC-1)110,120,110
  110 CALL STOPIT(100)
  120 IF(NFST-1)130,130,170
  130 NCT=1
  140 NCT=NCT+1
CE    READ(NTIN,20) LCT,(N,(INA(I,N),I=1,6),(FINA(J,N),J=1,5))
      READ(NTIN,20) LCT, N,(INA(I,N),I=1,6),(FINA(J,N),J=1,5)
      IF(NCT-N)150,160,150
  150 CALL STOPIT(101)
  160 IF(LCT)140,140,200
CE170 READ(NTIN,20) LCT,(N,(INA(I,N),I=1,6),(FINA(J,N),J=1,5))
  170 READ(NTIN,20) LCT, N,(INA(I,N),I=1,6),(FINA(J,N),J=1,5)
      IF(N-NCT)190,190,180
  180 NCT=N
  190 IF(LCT)170,170,200
  200 IF(NDISTR) 205,205,201
  201 READ(NTIN,202) SDISTR
  202 FORMAT(5E12.7)
  205 IF(NCPPT)521,521,390
  390 WRITE(NTOUT,405)
  405 FORMAT(12H0INPUT CARDS)
      WRITE(NTOUT,410)
  410 FORMAT(103H CARD   GEOM  REGS   MIX  P1-B1  BCT  FOILS  BUCKLING
     1   FOIL 1       FOIL 2       FOIL 3       FOIL 4)
      N=2
      WRITE(NTOUT,440)N,(INA(I,2),I=1,6),(FINA(J,2),J=1,5)
  440 FORMAT(I4,I7,5I6,1P5E13.5)
      DO 520 N=3,NCT
      IF(INA(1,N))500,500,510
  500 WRITE(NTOUT,430)
  430 FORMAT(1H0,45X,3HIDA,10X,3HIDB,9X,9HWGT FRACT,3X,8HATOM WGT,4X,
     19HATOM/B-CM)
      WRITE(NTOUT,515)N,(FINA(J,N),J=1,5)
  515 FORMAT(I4,37X,1P5E13.5)
      GOTO520
  510 WRITE(NTOUT,420)
  420 FORMAT(103H0        REG   MIX  MAT   ADD I MESH   H-L   REG OD
     1  DENSITY     WGT PCNT    TEMPERATURE    FISS/CC)
      WRITE(NTOUT,440)N,(INA(I,N),I=1,6),(FINA(J,N),J=1,5)
  520 CONTINUE
  521 CONTINUE
      NGEOM=INA(1,2)
      NP1B1=INA(4,2)
      NBCT=INA(5,2)
      BSQD=FINA(1,2)*1.E-4
      NRX=0
      DO 220 N=3,NCT
      IF(INA(1,N))220,220,210
  210 NR=INA(1,N)
      LRC(NR)=N
      NRX=NRX+1
  220 CONTINUE
      R=0.0
      NX=0
      IF(NRX-20)225,225,650
  225 DO 350 NR=1,NRX
      M=LRC(NR)
      IF(M)250,250,260
  250 CALL STOPIT(102)
      GO TO 600
  260 NPT(NR)=INA(5,M)
      MXAS(NR)=INA(2,M)
      ILHI(NR)=INA(6,M)
      DEGC(NR)=FINA(4,M)
      FISD(NR)=FINA(5,M)
      OD=FINA(1,M)
      IF(NGEOM-2)270,280,280
  270 THT(NR)=2.54*OD
      GOTO340
  280 IF(NR-NRX)290,300,300
  290 THT(NR)=1.27*OD-R
      GOTO340
  300 IF(OD)310,290,290
  310 IF(NGEOM-2)320,320,330
  320 THT(NR)=-1.333595*OD-R
      GOTO340
  330 THT(NR)=-1.4330417*OD-R
  340 R=R+THT(NR)
      NX=NX+NPT(NR)
  350 CONTINUE
      CALL MATC
      IF(ISOX-18)351,351,670
  351 ISOXE=INA(6,2)
      IF(ISOXE)373,373,371
  371 IF(ISOX+ISOXE-18)376,376,375
  375 CALL STOPIT(109)
      ISOXE=0
      GOTO373
  376 DO 372 I=1,ISOXE
      J=ISOX+I
      WSTBA(J)=FINA(I+1,2)
  372 WSTBB(J)=0
  373 CONTINUE
      IF(NX-20)361,361,630
  361 IF(MX-10)360,360,610
  360 CALL MESHH
  370 CALL INPBH
      IF(NCPPT)530,530,445
  445 WRITE(NTOUT,450)
  450 FORMAT(14H0ISOTOPE TABLE)
      WRITE(NTOUT,460)
CE460 FORMAT(4X107HIDA   T/M   MIX 1     MIX 2     MIX 3     MIX 4     M
CE   1IX 5     MIX 6     MIX 7     MIX 8     MIX 9    MIX 10)
  460 FORMAT(4X,'HIDA   T/M   MIX 1     MIX 2     MIX 3     MIX 4     M'
     1  'IX 5     MIX 6     MIX 7     MIX 8     MIX 9    MIX 10')
      WRITE(NTOUT,470)(WSTBA(I),WSTBB(I),(CONCTA(I,J),J=1,10),
     1I=1,ISOX)
  470 FORMAT(F9.0,F5.0,10F10.7)
      IF(ISOXE)474,474,472
  472 LI=ISOX+1
      LF=ISOX+ISOXE
      WRITE(NTOUT,473)(WSTBA(L),WSTBB(L),L=LI,LF)
  473 FORMAT(F8.0,F5.0,5H FOIL)
  474 CONTINUE
      WRITE(NTOUT,480)
  480 FORMAT(14H0REGION TABLES)
      WRITE(NTOUT,485)
  485 FORMAT( 54H REG PTS   THICK    VOLUME    DEG C  MIX  H-L  FISS/CC)
      WRITE(NTOUT,490)(N,NPT(N),THT(N),REGV(N),DEGC(N),MXAS(N),
     1ILHI(N),FISD(N),N=1,NRX)
  490 FORMAT(I3,I4,F10.5,1PE11.4,0PF7.2,I4,I5,F10.5)
      IF(NDISTR)530,530,491
  491 WRITE(NTOUT,492)SDISTR
  492 FORMAT('0POINTWISE SLOWING-DOWN DISTRIBUTION (UNNORMALIZED)'/
     $    (5X,1P10E12.5))
  530 CONTINUE
  600 IF(MX-10)620,620,610
  610 CALL STOPIT(106)
      GOTO760
  620 IF(NX-20)640,640,630
  630 CALL STOPIT(107)
      GOTO760
  640 IF(NRX-20)660,660,650
  650 CALL STOPIT(108)
      GOTO760
  660 IF(ISOX+ISOXE-18)680,680,670
  670 CALL STOPIT(109)
      GOTO760
  680 DO 710 M=1,MX
      A=0.0
      DO 690 I=1,ISOX
  690 A=A+CONCTA(I,M)
      IF(A)710,700,710
  700 CALL STOPIT(110)
      GOTO760
  710 CONTINUE
      A=0.
      K=1
      N=1
  720 FISP(N)=FISD(K)
      A=A+FISP(N)*VOL(N)
      N=N+1
      IF(N-1-NRBP(K))720,730,730
  730 K=K+1
      IF(N-NX)720,720,740
  740 IF(A.EQ.0.0) GO TO 760
      DO 750 N=1,NX
  750 FISD(N)=FISP(N)/A
  760 RETURN
      END
      SUBROUTINE MATC
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* MATC   *   HAMMER   VERSION /04-77/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      COMMON /CNTRL/ IDBCH,NCASE,NFLOG,BTTL(9),NTIN,NTOUT,NTPUN,
     1NCHAIN,LIB1,LIB2,LIB3,INT1,INT2,NSC1,LNK(10),NTHCS,NEPCS,KLIB1,
     2KLIB2,KLIB3,DUM1(32),NTHGP,IBNDRY(12),EPCUT,DUM2(45),NCPRN,NCPPT,
     3DUM3(10),NTHRN,NTHPT,NTHPN,DUM4(9),NEPRN,NEPPT,NEPPN,NEPSG,NEPAG,
     4DUM5(19),NEDRN,NEDPT,NEDPN,NEDNB,NEDFW,NEDRB,NEDAX,NEDNU,DUM6(16)
      COMMON /LIMP/ IDENT,NX,MX,NRX,ISOX,ISOXE,NGEOM,NP1B1,NBCT,NXP,
     1BSQD,HOL(9),NPT(20),THT(20),MXAS(20),ILHI(20),NRBP(20),DEGC(20),
     2WSTBA(18),WSTBB(18),CONCTA(18,10),LIMT(10),RIN(20),RAD(20),
     3ROUT(20),VOL(20),MTBL(20),REGV(20),FISD(20),HOLID(3,18),DUM7(40)
      COMMON INAP(6),INA(6,100),FINAP(5),FINA(5,100),LRC(20),FISP(20)
      DIMENSION WA(20),WB(20),C(20),MDR(10)
C
C     CONVERTS MATERIAL CODE TO ISOTOPE LIST
C
      DO 1 MIX=1,10
      MDR(MIX) = 0
    1 CONTINUE
      ISOX = 0
      MX = 0
      DO 9000 NR=1,NRX
      DO 2 I=1,20
      WB(I) = 0.0
    2 CONTINUE
      M = LRC(NR)
      D = 0.60220*FINA(2,M)
      P = 0.01   *FINA(3,M)
      T = 273.15 +FINA(4,M)
      MIX = INA(2,M)
      L   = INA(3,M)
      LP = L
      NRP = MDR(MIX)
      IF(NRP.LE.0) GO TO 3
      ILHI(NR) = ILHI(NRP)
      DEGC(NR) = DEGC(NRP)
      MXAS(NR) = MXAS(NRP)
      GO TO 9000
    3 MDR(MIX) = NR
      MX = MX+1
      IF(MX.GT.10) RETURN
      MXAS(NR) = MX
      MIX = MX
      NAIS = INA(4,M)
      IF((NAIS+L).LE.0) GO TO 9000
      IF(NAIS.LE.0) GO TO 5
      A = 1.0
      DO 4 J=1,NAIS
      JP = M+J
      A = A-FINA(3,JP)
    4 CONTINUE
      D = D*A
      IF(L.GT.0) GO TO 5
      IF(NAIS.LE.0) GO TO 9999
      N = 0
      GO TO 1000
C
C     * * * * * * * * * * * * * * * * * * * * * * * * *
C     * * * M A T E R I A L   C A T E G O R I E S * * *
C     *                                               *
C 100 = FUELS                                         *
C 200 = MODERATORS AND COOLANTS                       *
C 300 = CLADDING MATERIALS                            *
C 400 = BURNABLE POISONS                              *
C 500 = CONTROL ROD MATERIALS                         *
C
    5 IF(L.LE.100)  GO TO 9999
      LMAT = L/100
      L = L-LMAT*100
      IF(L.GT.10)   GO TO 9999
      GO TO (100,200,300,400,500,600,700,800,900),LMAT
  100 GO TO (101,102,103,104,105,106,107,108,109,110),L
  200 GO TO (201,202,203,204,205,206,207,208,209,210),L
  300 GO TO (301,302,303,304,305,306,307,308,309,310),L
  400 GO TO (401,402,403,404,405,406,407,408,409,410),L
  500 GO TO (501,502,503,504,505,506,507,508,509,510),L
C     *** UNASSIGNED STRUCTURE ***
  600 GO TO 9999
  700 GO TO 9999
  800 GO TO 9999
  900 GO TO 9999
C     ***                      ***
C
C     * * * F U E L S * * *
C     == U238-U235 METAL ==
  101 C(1) = D*P/235.044
      C(2) = D*(1.-P)/238.051
      WA(1) = 92235.
      WA(2) = 92238.
      N = 2
      GO TO 1000
C
C     == U238-U235 OXIDE ==
  102 ANUMER = 1./(P/235.044+(1.-P)/238.051)
      DENOMI = ANUMER+2.*15.999
      WFMETL = ANUMER/DENOMI
      C(1) = D*P*WFMETL/235.044
      C(2) = D*(1.-P)*WFMETL/238.051
      C(3) = 2.*(C(1)+C(2))
      WA(1) = 92235.
      WA(2) = 92238.
      WA(3) =  8016.
      WB(3) =  2053.
      N = 3
      GO TO 1000
C
C     == TH232-U233 METAL ==
  103 C(1) = D*P/233.039
      C(2) = D*(1.-P)/232.038
      WA(1) = 92233.
      WA(2) = 90232.
      N = 2
      GO TO 1000
C
C     == TH232-U233 OXIDE ==
  104 ANUMER = 1./(P/233.039+(1.-P)/232.038)
      DENOMI = ANUMER+2.*15.999
      WFMETL = ANUMER/DENOMI
      C(1) = D*P*WFMETL/233.039
      C(2) = D*(1.-P)*WFMETL/232.038
      C(3) = 2.*(C(1)+C(2))
      WA(1) = 92233.
      WA(2) = 90232.
      WA(3) =  8016.
      WB(3) =  2053.
      N = 3
      GO TO 1000
C
C     == 93.15 0/0 U235 ENRICHED U-AL ALLOY ==
  105 E25=.9315
      E28=.0685
      GO TO 1111
C--45 W/O U235 ENRICHED U-AL ALLOY (FBB,4/12/79)
  106 E25=.45
      E28=.55
      GO TO 1111
C--20 W/O U235 ENRICHED U-AL ALLOY (FBB,4/12/79)
  107 E25=.20
      E28=.80
 1111 C(1) = D*P*E25/235.044
      C(2) = D*P*E28/238.051
      C(3) = D*(1.-P)/26.981
      WA(1) = 92235.
      WA(2) = 92238.
      WA(3) = 13027.
      N = 3
      GO TO 1000
C
C     *** UNASSIGNED FUELS ***
  108 GO TO 9999
  109 GO TO 9999
  110 GO TO 9999
C     ***                  ***
C
C     * * * M O D E R A T O R S AND C O O L A N T S * * *
C     == H2O-H3BO3 ==
  201 CB = D*(P/10.)/61.832
      C(1) = CB*10.811*0.198/10.013
      C(2) = CB*10.811*0.802/11.009
      CW = D*(1.-P/10.)/18.015
      C(3) = 2.*CW+3.*CB
      C(4) = 1.*CW+3.*CB
      WA(1) = 5010.
      WA(2) = 5011.
      WA(3) = 1001.
      WA(4) = 8016.
      IB = 4000.+0.1*T+0.5
      WB(3) = IB
      WB(4) = 2053.
      N = 4
      GO TO 1000
C
C     == H2O-B == (PPM)
  202 CB = D*(P/10000.)/10.811
      C(1) = CB*10.811*0.198/10.013
      C(2) = CB*10.811*0.802/11.009
      CW = D*(1.-P/10000.)/18.015
      C(3) = 2.*CW
      C(4) = 1.*CW
      WA(1) = 5010.
      WA(2) = 5011.
      WA(3) = 1001.
      WA(4) = 8016.
      IB = 4000.+0.1*T+0.5
      WB(3) = IB
      WB(4) = 2053.
      N = 4
      GO TO 1000
C
C     == D2O-H2O == (W/0,KERNELS AT ROOM TEMPERATURE)
  203 C(1) = 2.*D*P/18.015
      C(2) = 2.*D*(1.-P)/20.027
      C(3) = 0.5*(C(1)+C(2))
      WA(1) = 1001.
      WA(2) = 1002.
      WA(3) = 8016.
      IB = 4030
      WB(1) = IB
      WB(2) = WB(1)
      WB(3) = 2053.
      N = 3
      GO TO 1000
C
C     == H2O-D2O == (MOLE/0,KERNELS AT ROOM TEMPERATURE)
  204 C(3) = 0.033361/(1.+0.004037*P)
      C(1) = 2.*P*C(3)
      C(2) = 2.*(1.-P)*C(3)
      WA(1) = 1002.
      WA(2) = 1001.
      WA(3) = 8016.
      IB = 4030
      WB(1) = IB
      WB(2) = WB(1)
      WB(3) = 2053.
      N = 3
      GO TO 1000
C
C     == GRAPHITE ==(KERNEL AT OPERATING TEMP - T=285C=545F=558K)
  205 C(1) = D/12.011
      WA(1) = 6012.
      IB = 4056
      WB(1) = IB
      N = 1
      GO TO 1000
C
C     == HEAVY SCATTERER ==
  206 C(1) = 200.
      WA(1) = 2.
      N = 1
      GO TO 1000
C
C     *** UNASSIGNED MODERATORS ***
  207 GO TO 9999
  208 GO TO 9999
  209 GO TO 9999
  210 GO TO 9999
C     ***                       ***
C
C     * * * C L A D D I N G   M A T E R I A L S * * *
C     == ALUMINUM ==
  301 C(1) = D/26.981
      WA(1) = 13027.
      N = 1
      GO TO 1000
C
C     == ZIRCALOY 2 ==
  302 C(1) = D/91.22
      WA(1) = 302.
      N = 1
      GO TO 1000
C
C     == UNASSIGNED MATERIAL ==
  303 GO TO 9999
C
C     == STAINLESS STEEL TYPE 304(FE,CR,NI) ==
  304 C(1) = D*0.70/55.847
      C(2) = D*0.20/51.996
      C(3) = D*0.10/58.710
      WA(1) = 26000.
      WA(2) = 24000.
      WA(3) = 28000.
      N = 3
      GO TO 1000
C
C     *** UNASSIGNED CLADDING MATERIALS ***
  305 GO TO 9999
  306 GO TO 9999
  307 GO TO 9999
  308 GO TO 9999
  309 GO TO 9999
  310 GO TO 9999
C     ***                               ***
C
C     * * * B U R N A B L E   P O I S O N S * * *
C     == AL2O3-B4C ==
  401 C(3) = D*P/55.255
C                55.255=4*10.811+12.011
      C(1) = 4.*10.811*0.198/10.013*C(3)
      C(2) = 4.*10.811*0.802/11.009*C(3)
      CAL2O3 = D*(1.-P)/101.959
C                       101.959=2*26.981+3*15.999
      C(4) = 2.*CAL2O3
      C(5) = 3.*CAL2O3
      WA(1) = 5010.
      WA(2) = 5011.
      WA(3) = 6012.
      WA(4) = 13027.
      WA(5) = 8016.
C   * KERNEL AT 285DEGC=545DEGF
      WB(3) = 4056.
      WB(5) = 2053.
      N = 5
      GO TO 1000
C
C     == GLASS-B2O3 (BOROSILICATE)
  402 CB2O3  = D*P/69.619
C                  69.619=2*10.811+3*15.999
      C(1) = 2.*10.811*0.198/10.013*CB2O3
      C(2) = 2.*10.811*0.802/11.009*CB2O3
      C(3) = 3.*CB2O3
C   * GLASS NEGLECTED
      WA(1) = 5010.
      WA(2) = 5011.
      WA(3) = 8016.
      WB(3) = 2053.
      N = 3
      GO TO 1000
C
C     *** UNASSIGNED BURNABLE POISONS ***
  403 GO TO 9999
  404 GO TO 9999
  405 GO TO 9999
  406 GO TO 9999
  407 GO TO 9999
  408 GO TO 9999
  409 GO TO 9999
  410 GO TO 9999
C     ***                             ***
C
C     * * * C O N T R O L   R O D   M A T E R I A L S * * *
C     == AG-IN-CD (80-15-5) ==
  501 C(1) = D*0.5183*0.80/106.905
      C(2) = D*0.4817*0.80/108.905
      C(3) = D*0.9570*0.15/114.904
      C(4) =        D*0.05/112.400
      WA(1) = 47107.
      WA(2) = 47109.
      WA(3) = 49115.
      WA(4) = 48000.
      N = 4
      GO TO 1000
C
C     == B4C ==
  502 C(3) = D/55.255
C              55.255=4*10.811+12.011
      C(1) = 4.*10.811*0.198/10.013*C(3)
      C(2) = 4.*10.811*0.802/11.009*C(3)
      WA(1) = 5010.
      WA(2) = 5011.
      WA(3) = 6012.
C   * KERNEL AT 285DEGC=545DEGF
      WB(3) = 4056.
      N = 3
      GO TO 1000
C
C     *** UNASSIGNED CONTROL ROD MATERIALS ***
  503 GO TO 9999
  504 GO TO 9999
  505 GO TO 9999
  506 GO TO 9999
  507 GO TO 9999
  508 GO TO 9999
  509 GO TO 9999
  510 GO TO 9999
C     ***                                  ***
C
 1000 IF(NAIS.LE.0) GO TO 2000
      DO 1020 J=1,NAIS
      JP = M+J
      NP = N+J
      IF(INA(1,JP).NE.0) CALL STOPIT(111)
      WA(NP) = FINA(1,JP)
      WB(NP) = FINA(2,JP)
      IF(FINA(4,JP).GT.0.0) GO TO 1010
      C(NP) = FINA(5,JP)
      GO TO 1020
 1010 C(NP) = 0.60220*FINA(2,M)*FINA(3,JP)/FINA(4,JP)
 1020 CONTINUE
      N = N+NAIS
 2000 DO 2040 J=1,N
      IF(ISOX.LE.0) GO TO 2020
      DO 2010 K=1,ISOX
      KK = K
      IF((WA(J)-WSTBA(K)).NE.0.0) GO TO 2010
      IF((WB(J)-WSTBB(K)).EQ.0.0) GO TO 2030
 2010 CONTINUE
 2020 IF(C(J).EQ.0.0) GO TO 2040
      ISOX = ISOX+1
      WSTBA(ISOX) = WA(J)
      WSTBB(ISOX) = WB(J)
      CONCTA(ISOX,MIX) = C(J)
      GO TO 2040
 2030 CONCTA(KK,MIX) = CONCTA(KK,MIX)+C(J)
 2040 CONTINUE
      GO TO 9000
 9999 CALL STOPIT(112)
 9000 CONTINUE
      RETURN
      END
      SUBROUTINE MESHH
      DIMENSION LT(12,6)
      COMMON /CNTRL/ IDBCH,NCASE,NFLOG,BTTL(9),NTIN,NTOUT,NTPUN,
     1NCHAIN,LIB1,LIB2,LIB3,INT1,INT2,NSC1,LNK(10),NTHCS,NEPCS,KLIB1,
     2KLIB2,KLIB3,DUM1(32),NTHGP,IBNDRY(12),EPCUT,DUM2(45),NCPRN,NCPPT,
     3DUM3(10),NTHRN,NTHPT,NTHPN,DUM4(9),NEPRN,NEPPT,NEPPN,NEPSG,NEPAG,
     4DUM5(19),NEDRN,NEDPT,NEDPN,NEDNB,NEDFW,NEDRB,NEDAX,NEDNU,DUM6(16)
      COMMON /LIMP/ IDENT,NX,MX,NRX,ISOX,ISOXE,NGEOM,NP1B1,NBCT,NXP,
     1BSQD,HOL(9),NPT(20),THT(20),MXAS(20),ILHI(20),NRBP(20),DEGC(20),
     2WSTBA(18),WSTBB(18),CONCTA(18,10),LIMT(10),RIN(20),RAD(20),
     3ROUT(20),VOL(20),MTBL(20),REGV(20),FISD(20),HOLID(3,18),DUM7(40)
      EQUIVALENCE (NCPRN,LT(1,1))
C-------XPREP STORAGE BLOCK---------------------------------------------
      DIMENSION PP(30,30), XA(30), XF(30), SP(30), XST(18,30),
     1HOLT(3),HOLC(3),XS(30)   ,V(30),DV(30)
      DIMENSION HOLX(12)
      DIMENSION NPTP(20)
      DIMENSION ISA(18)
      EQUIVALENCE (ISA,WSTBA)
      DIMENSION DATA(165),DEL(54),EBK(54)
      IF(NTHRN)200,481,200
  200 REWIND LIB1
      READ(LIB1)IX,HOLT,V,DV
      WRITE(NTOUT,210)HOLT
  210 FORMAT(24H0LIBRARY TAPE LABELED   , 3A4)
      ISOC=0
      ISOXT=ISOX+ISOXE
  220 READ(LIB1)WA,WB,HOLC,NKERN,VNU,XA,XS,XF,SP
      IF(WA)230,230,240
  230 CALL STOPIT(118)
      GO TO 480
  240 DO 260 J=1,ISOXT
      L=J
      IF(WSTBA(J)-WA)260,250,260
  250 IF(WSTBB(J)-WB)260,290,260
  260 CONTINUE
  265 IF(NKERN)220,220,270
  270 DO 280 J=1,NKERN
  280 READ(LIB1) SKIPIT
      GOTO220
  290 ISOC=ISOC+1
      DO 310 I=1,IX
  310 XST(L,I)=XA(I)+XS(I)
      IF(L-ISOX)320,320,312
  312 IF(NKERN)470,470,314
  314 DO 316 L=1,NKERN
  316 READ(LIB1) SKIPIT
      GOTO470
  320 IF(NKERN)470,470,330
  330 READ(LIB1)PP
      IF(NKERN-1)470,470,370
  370 READ(LIB1)PP
      DO 390 J=1,IX
      XS(J)=0.0
      DO 380 I=1,IX
  380 XS(J)=XS(J)+PP(I,J)*DV(I)
  390 XS(J)=XS(J)/(V(J)*DV(J))
      DO 400 I=1,IX
  400 XST(L,I)=XST(L,I)-XS(I)
      L=NKERN-2
      IF(L)470,470,450
  450 DO 460 J=1,L
  460 READ(LIB1) SKIPIT
  470 IF(ISOC-ISOXT)220,480,480
  480 REWIND LIB1
      IF(NEPRN)500,500,490
  481 IF(NEPRN)520,520,482
  482 DO491N=1,NRX
  491 NPT(N)=MAX0(NPT(N),1)
  490 READ(LIB2)IX,NLIB,(DEL(I),I=1,IX),(EBK(I),I=1,IX),EB
     1,HOLX
      READ(LIB2) SKIPIT
      WRITE(NTOUT,1000) HOLX
 1000 FORMAT(33H0EPITHERMAL LIBRARY TAPE LABELED   ,12A4)
      ISOX=ISOX+ISOXE
      IFOUND=0
      NRED=0
   10 NRED=NRED+1
      READ(LIB2)IFL,IDX,NIN,NR ,(DATA(I),I=1,IFL)
      IF(IDX)140,140,20
  140 CALLSTOPIT(119)
      GO TO 120
   20 DO110I=1,ISOX
      IF(ISA(I)-IDX)110,100,110
  100 CONTINUE
      IFOUND=IFOUND+1
      IF(ISOX-IFOUND)120,120,110
  110 CONTINUE
      GOTO10
  120 REWIND LIB2
  150 ISOX=ISOX-ISOXE
  500 IF(NRX-20)530,530,510
  510 CALL STOPIT(108)
  520 RETURN
  530 NTRY=1
  540 NXP=0
      DO570N=1,NRX
      IF(NPT(N))550,560,550
  550 NPTP(N)=NPT(N)
      GOTO570
  560 M1=MXAS(N)
      A=0.
      DO561I=1,ISOX
  561 A=A+XST(I,10)*CONCTA(I,M1)
      IF(A)565,565,566
  565 CALL STOPIT(110)
      GO TO 520
  566 CONTINUE
      NPTP(N)=2.*(A*THT(N)+0.5)
      NPTP(N)=MAX0(NPTP(N),1)
  570 NXP=NXP+NPTP(N)
      IF(NXP-20)590,590,580
  580 IF(NTRY-2)610,920,950
  590 NX=NXP
      DO600N=1,NRX
  600 NPT(N)=NPTP(N)
      GOTO520
  610 NRXP=NRX
      N=1
      NTRY=2
  615 IF(N-NRXP)620,900,900
  620 IF(NPT(N))630,630,660
  630 IF(ILHI(N))660,640,660
  640 IF(NPT(N+1))650,650,660
  650 IF(ILHI(N+1))660,670,660
  660 N=N+1
      GO TO 615
  670 VOLWT=THT(N)/(THT(N)+THT(N+1))
      IF(NGEOM-1)790,790,780
  780 RI=0.
      DO785M=1,N
  785 RI=RI+THT(M)
      VOLWT=VOLWT*(2.*RI-THT(N))/(2.*RI+THT(N+1)-THT(N))
  790 N1=MXAS(N)
      N2=MXAS(N+1)
      BIG1=0
      BIG2=0
      DO730I=1,ISOX
      WID=AMOD(WSTBA(I),100000.)
      IF(CONCTA(I,N1))680,700,680
  680 IF(BIG1-WID)690,690,700
  690 BIG1=WID
  700 IF(CONCTA(I,N2))710,730,710
  710 IF(BIG2-WID)720,720,730
  720 BIG2=WID
  730 CONTINUE
      IF(BIG1-BIG2)740,760,750
  740 HIT=DEGC(N+1)
      GO TO 770
  750 HIT=DEGC(N)
      GOTO770
  760 HIT=DEGC(N)*VOLWT+DEGC(N+1)*(1.-VOLWT)
  770 N11=0
      N12=0
      DO820M=1,NRXP
      IF(MXAS(M)-N1)800,781,800
  781 N11=N11+1
  800 IF(MXAS(M)-N2)820,810,820
  810 N12=N12+1
  820 CONTINUE
      IF(N11-1)830,830,840
  830 M1=N1
      GO TO 870
  840 IF(N12-1)850,850,860
  850 M1=N2
      GO TO 870
  860 IF(MX-9)865,865,900
  865 M1=MX+1
      MX=M1
  870 DO880I=1,ISOX
  880 CONCTA(I,M1)=CONCTA(I,N1)*VOLWT+CONCTA(I,N2)*(1.-VOLWT)
      THT(N)=THT(N)+THT(N+1)
      MXAS(N)=M1
      DEGC(N)=HIT
      N1=N+1
      N2=NRXP-1
      DO890M=N1,N2
      THT(M)=THT(M+1)
      MXAS(M)=MXAS(M+1)
      ILHI(M)=ILHI(M+1)
      DEGC(M)=DEGC(M+1)
  890 NPT(M)=NPT(M+1)
      NRXP=NRXP-1
      IF(NRXP-N)900,640,640
  900 IF(NRXP-NRX)910,920,910
  910 NRX=NRXP
      GOTO540
  920 NTRY=3
      DO940N=1,NRX
      M=NRX+1-N
      IF(NPT(M))930,930,940
  930 NEW=NPTP(M)-(NPTP(M)+1)/2
      NXP=NXP-NEW
      NPTP(M)=NPTP(M)-NEW
      IF(NXP-20)590,590,940
  940 CONTINUE
  950 N1=NXP
      NXP=0
      DO 980N=1,NRX
      IF(NPT(N))980,960,980
  960 NPTP(N)=NPTP(N)*20/N1
      IF(NPTP(N))980,970,980
  970 NPTP(N)=1
  980 NXP=NXP+NPTP(N)
      IF(NXP-20)590,590,990
  990 CALLSTOPIT(117)
      RETURN
      END
      SUBROUTINE INPBH
CINPB  ======HAMMER===BNL-SRL LATTICE ANALYSIS PROGRAM==============CAPN
CINPB    DETAILED INPUT SUBROUTINE B
      COMMON /CNTRL/ IDBCH,NCASE,NFLOG,BTTL(9),NTIN,NTOUT,NTPUN,
     1NCHAIN,LIB1,LIB2,LIB3,INT1,INT2,NSC1,LNK(10),NTHCS,NEPCS,KLIB1,
     2KLIB2,KLIB3,DUM1(32),NTHGP,IBNDRY(12),EPCUT,DUM2(45),NCPRN,NCPPT,
     3DUM3(10),NTHRN,NTHPT,NTHPN,DUM4(9),NEPRN,NEPPT,NEPPN,NEPSG,NEPAG,
     4DUM5(19),NEDRN,NEDPT,NEDPN,NEDNB,NEDFW,NEDRB,NEDAX,NEDNU,DUM6(16)
      COMMON /LIMP/ IDENT,NX,MX,NRX,ISOX,ISOXE,NGEOM,NP1B1,NBCT,NXP,
     1BSQD,HOL(9),NPT(20),THT(20),MXAS(20),ILHI(20),NRBP(20),DEGC(20),
     2WSTBA(18),WSTBB(18),CONCTA(18,10),LIMT(10),RIN(20),RAD(20),
     3ROUT(20),VOL(20),MTBL(20),REGV(20),FISD(20),HOLID(3,18),DUM7(40)
      N=1
      X=0.0
      IF(NRX-20)150,150,140
  140 CALL STOPIT(108)
      GO TO 340
  150 CONTINUE
      IF(NGEOM-1)175,175,200
C     ===SLAB GEOMETRY===
  175 DO185NR=1,NRX
      NP=NPT(NR)
      IF(NP)190,190,176
  176 CONTINUE
      NRBP(NR)=N+NP-1
      DX=THT(NR)/FLOAT(NP)
      REGV(NR)=THT(NR)
      MIX=MXAS(NR)
      LIMT(MIX)=ILHI(NR)
      DO180M=1,NP
      MTBL(N)=MIX
      VOL(N)=DX
      RIN(N)=X
      RAD(N)=X+0.5*DX
      X=X+DX
      ROUT(N)=X
  180 N=N+1
  185 CONTINUE
      IF(N-1-NX)190,300,190
  190 CALL STOPIT(103)
      GO TO 300
C     ===CYLINDER GEOMETRY===
  200 DO245NR=1,NRX
      NP=NPT(NR)
      IF(NP)250,250,205
  205 CONTINUE
      NRBP(NR)=N+NP-1
      MIX=MXAS(NR)
      LIMT(MIX)=ILHI(NR)
      REGV(NR)=3.1415927*((X+THT(NR))**2-X**2)
      IF(NR-1)210,210,220
  210 DR=THT(NR)/(FLOAT(NP)-0.5)
      RN=0.
      GOTO230
  220 DR=THT(NR)/FLOAT(NP)
      RN=X+0.5*DR
  230 DO240M=1,NP
      MTBL(N)=MIX
      RIN(N)=X
      RAD(N)=RN
      VOL(N)=3.1415927*((RN+0.5*DR)**2-X**2)
      X=RN+0.5*DR
      ROUT(N)=X
      RN=X+0.5*DR
  240 N=N+1
  245 CONTINUE
      IF(N-1-NX)250,300,250
  250 CALL STOPIT(104)
  300 NL=1
      DO320M=1,MX
      IF(LIMT(M))320,320,310
  310 LIMT(M)=NL
      NL=NL+1
  320 CONTINUE
      IF(NL-4)340,340,330
  330 CALL STOPIT(105)
  340 RETURN
      END
      SUBROUTINE STOPIT(N)
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* STOPIT *   HAMMER   VERSION /04-77/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      DIMENSION LT(12,6)
      COMMON /CNTRL/ IDBCH,NCASE,NFLOG,BTTL(9),NTIN,NTOUT,NTPUN,
     1NCHAIN,LIB1,LIB2,LIB3,INT1,INT2,NSC1,LNK(10),NTHCS,NEPCS,KLIB1,
     2KLIB2,KLIB3,DUM1(32),NTHGP,IBNDRY(12),EPCUT,DUM2(45),NCPRN,NCPPT,
     3DUM3(10),NTHRN,NTHPT,NTHPN,DUM4(9),NEPRN,NEPPT,NEPPN,NEPSG,NEPAG,
     4DUM5(19),NEDRN,NEDPT,NEDPN,NEDNB,NEDFW,NEDRB,NEDAX,NEDNU,DUM6(16)
      EQUIVALENCE (NCPRN,LT(1,1))
      CHARACTER*8 CRD1,ABS,SEQ,REG,UND,MES,BAD,UPS,OVE,
     *            MIX,VER,MESH,REV,RGS,ISO,OEV,XIM,
     *            VOI,SOC,MAT,TPM,EPP,FGM,EDP,THL,EPL,
     *            DUM,DUMM,TYPE,ERR
      DATA CRD1 /'CARD 1'/, ABS / 'ABSENT' /, SEQ / 'SEQ NO' /,
     1 REG/'REGION'/, UND/'UNDEF.'/, MES/'MESH'/, BAD/'BAD'/,
     2 UPS/'UPSCAT'/, OVE/'OVER3'/, MIX/'MIXES'/, VER/'OVER10'/,
     3 MESH/'MESH'/, REV/'OVER20'/, RGS/'REG.S'/, ISO/'ISO.S'/,
     4 OEV/'OVER18'/, XIM/'A MIX.'/, VOI/'VOID'/, SOC/'ISO CD'/, MAT/'MA
     5TL'/, TPM/'TH.PGM'/, EPP/'EP.PGM'/, FGM/'FG.PGM'/, EDP/'ED.PGM'/,
     6 THL/'TH.LIB'/, EPL/'EP.LIB'/, DUM/'    '/, DUMM/'    '/
C
      IF(N-1)10,20,80
   10 NERR=0
   15 RETURN
   20 IF(NERR)30,15,30
   30 NCASE=NCASE-1
      NTHCS=NTHCS-1
      NEPCS=NEPCS-1
      N=2
      WRITE(NTOUT,40)
      IF(NCASE)60,60,15
   60 LNK(1)=-1
      RETURN
   80 NERR=1
      IF(N.GE.120) GO TO 150
      L=N-99
      GOTO(100,101,102,103,103,105,106,107,108,109,110,111,112,113,114,
     1115,116,103,118,119),L
  100 ERR= CRD1
      TYPE= ABS
      GOTO200
  101 ERR= SEQ
      GOTO1103
  102 ERR= REG
      TYPE= UND
      GOTO200
  103 ERR= MES
 1103 TYPE= BAD
      GOTO200
  105 ERR= UPS
 1105 TYPE= OVE
      GOTO200
  106 ERR= MIX
      TYPE= VER
      GOTO200
  107 ERR= MESH
      TYPE= REV
      GOTO200
  108 ERR= RGS
      TYPE= REV
      GOTO200
  109 ERR= ISO
      TYPE= OEV
      GOTO200
  110 ERR= XIM
      TYPE= VOI
      GO TO 200
  111 ERR= SOC
      TYPE= ABS
      GOTO200
  112 ERR= MAT
      TYPE= UND
      GOTO200
  113 ERR= TPM
      GOTO1105
  114 ERR= EPP
      GOTO1105
  115 ERR= FGM
      GOTO1105
  116 ERR= EDP
      GOTO1105
  118 ERR= THL
      GOTO1103
  119 ERR= EPL
      GOTO1103
  150 ERR= DUM
      TYPE= DUMM
  200 WRITE(NTOUT,210)N,ERR,TYPE
      RETURN
   40 FORMAT(66H0....AND THEN HE LAID DOWN HIS HAMMER AND HE DIED, LAWD,
     1 LAWD.....// 13H CASE DELETED)
  210 FORMAT(12H0***STOP NO.I4,3X,A8,3H IS,3X,A8)
      END
      SUBROUTINE TIMEX(N)
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* TIMEX  *   HAMMER   VERSION /04-77/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      COMMON /CNTRL/ DUM1(13),NTOUT,DUM2(186)
C     N=1, INITIALIZE CLOCK
C     N=2, PRINT DATE AND ELAPSED TIME
      CHARACTER*8 D,H
CE
      DATA D/'        '/,H/'        '/
CE
   10 IF(N-1)20,20,30
CE 20 ITIK = ZA02AS(DUMMY)
   20 ITIK = 0
      GOTO50
CE 30 ITAK = ZA02AS(DUMMY)
   30 ITAK = 0
      TIKTAK=(ITAK-ITIK)
CE    CALL ZA09AS(D)
CE    CALL ZA08AS(H)
      WRITE(NTOUT,1010) D,H,TIKTAK
   50 RETURN
 1010 FORMAT(//,1X,'RUN ON ',A8,'  AT ',A8 ,'ELAPSED TIME =',F7.3,
     1 '  SECONDS',//)
      END
      SUBROUTINE LINK2
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* LINK2  *   HAMMER   VERSION /04-77/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C---------CONTROL DATA BLOCK, CNTRL------------------ ------------------
      COMMON /CNTRL/ IDBCH,NCASE,NFLOG,BTTL(9),NTIN,NTOUT,NTPUN,
     1NCHAIN,LIB1,LIB2,LIB3,INT1,INT2,NSC1,LNK(10),NTHCS,NEPCS,KLIB1,
     2KLIB2,KLIB3,DUM1(32),NTHGP,IBNDRY(12),EPCUT,DUM2(45),NCPRN,NCPPT,
     3DUM3(10),NTHRN,NTHPT,NTHPN,LUM4(9),NEPRN,NEPPT,NEPPN,NEPSG,NEPAG,
     4DUM5(19),NEDRN,NEDPT,NEDPN,NEDNB,NEDFW,NEDRB,NEDAX,NEDNU,DUM6(16)
C-------LATTICE INPUT DATA BLOCK, LIMP----------------------------------
      COMMON /LIMP/ IDENT,NX,MX,NRX,ISOX,ISOXE,NGEOM,NP1B1,NBCT,NXP,
     1BSQD,HOL(9),NPT(20),THT(20),MXAS(20),ILHI(20),NRBP(20),DEGC(20),
     2WSTBA(18),WSTBB(18),CONCTA(18,10),LIMT(10),RIN(20),RAD(20),
     3ROUT(20),VOL(20),MTBL(20),REGV(20),FISD(20),HOLID(3,18),DUM7(40)
C-------THERMOS STORAGE BLOCK------------------------------------------
      DIMENSION T(20,20,30),F(20,30),H(20,30),R(20,30),P(30,30,6),
     1DV(30),V(30),XTM(20,30),XAM(20,30),XAT(18,30),S(20,30),
     2XFT(18,30),VNUT(18)
      COMMON T,F,H,R,P,DV,V,XTM,XAM,XAT,S,XFT,VNUT,IX,IXP
C-------XPREP STORAGE BLOCK---------------------------------------------
      DIMENSION PP(30,30),XA(30),XF(30),SP(30),SPT(18,30),XST(18,30),
     1HOLT(3),HOLC(3),XS(30)
      EQUIVALENCE
     1 (T(1,1,1),PP(1,1)),(T(1,6,3),XA(1)),(T(11,7,3),XF(1)),
     2 (T(1,9,3),SP(1)),
     2 (T(11,10,3),SPT(1,1)),(T(11,17,4),XST(1,1)),(T(11,4,6),XS(1)),
     3 (T(1,6,6),HOLC(1))
C-------LATTICE OUTPUT DATA BLOCK, LOUT---------------------------------
      DIMENSION LOUT(1100),HOLA(9) ,FO(30)
      EQUIVALENCE (T(20,20,10),LOUT(1)),(T(1,1,11),HOLA(1)),
     1 (T(1,20,3),FO(1))
      COMMON/CREG3/OXST(18,30)
     1 , XFF(20,30)
      DIMENSION LMP(600)
      EQUIVALENCE (IDENT,LMP(1))
C-------END OF COMMON STORAGE-------------------------------------------
      COMMON LAST
      COMMON/FBEDIT/SDISTR(20),DUMMY(2537)
      EQUIVALENCE (NDISTR,DUM5(8))
      REWIND INT2
      NCS=0
   10 NCS=NCS+1
      CALL TIMEX(1)
      IF(NCS-NTHCS)30,30,20
   20 ENDFILE INT2
      REWIND INT2
      END FILE 12
      REWIND 12
      RETURN
   30 READ(INT1)(LMP(I),I=1,600)
  120 WRITE(NTOUT,130)HOL,IDENT
      DO 140 I=1,22161
  140 T(I,1,1)=0.0
  200 REWIND LIB1
      READ(LIB1)IX,HOLT,V,DV
      WRITE(NTOUT,210)HOLT
      IXP = 29
      IF(LUM4(2).GT.0) IXP=IBNDRY(12)
      ISOC=0
      ISOXT=ISOX+ISOXE
  220 READ(LIB1)WA,WB,HOLC,NKERN,VNU,XA,XS,XF,SP
      IF(WA)230,230,240
  230 CALL STOPIT(200)
  240 DO 260 J=1,ISOXT
      L=J
      IF(WSTBA(J)-WA)260,250,260
  250 IF(WSTBB(J)-WB)260,290,260
  260 CONTINUE
  265 IF(NKERN)220,220,270
  270 DO 280 J=1,NKERN
  280 READ(LIB1) SKIPIT
      GOTO220
  290 ISOC=ISOC+1
      DO 300 J=1,3
  300 HOLID(J,L)=HOLC(J)
      VNUT(L)=VNU
      DO 310 I=1,IX
      XAT(L,I)=XA(I)
      XST(L,I)=XS(I)
      OXST(L,I)=XS(I)
      XFT(L,I)=XF(I)
  310 SPT(L,I)=SP(I)
      IF(L-ISOX)320,320,312
  312 IF(NKERN)470,470,314
  314 DO 316 L=1,NKERN
  316 READ(LIB1) SKIPIT
      GOTO470
  320 IF(NKERN)490,490,330
  490 DO 520 M=1,MX
      NL=LIMT(M)
      IF(NL)520,520,500
  500 DO 510 J=1,IX
  510 P(J,J,NL)=P(J,J,NL)+CONCTA(L,M)*XS(J)
  520 CONTINUE
      GOTO470
  330 READ(LIB1)PP
      DO 360 M=1,MX
      NL=LIMT(M)
      IF(NL)360,360,340
  340 DO 350 J=1,IX
      DO 350 I=1,IX
  350 P(I,J,NL)=P(I,J,NL)+CONCTA(L,M)*PP(I,J)/V(I)
  360 CONTINUE
      IF(NKERN-1)470,470,370
  370 READ(LIB1)PP
      DO 390 J=1,IX
      XS(J)=0.0
      DO 380 I=1,IX
  380 XS(J)=XS(J)+PP(I,J)*DV(I)
  390 XS(J)=XS(J)/(V(J)*DV(J))
      DO 400 I=1,IX
      OXST(L,I)=XST(L,I)-XS(I)
  400 XST(L,I)=XST(L,I)-XS(I)
      DO 440 M=1,MX
      NL=LIMT(M)
      IF(NL)440,440,410
  410 DO 430 J=1,IX
      DO 420 I=1,IX
  420 P(I,J,NL+3)=P(I,J,NL+3)+CONCTA(L,M)*PP(I,J)/V(I)
  430 P(J,J,NL)=P(J,J,NL)-CONCTA(L,M)*XS(J)
  440 CONTINUE
      L=NKERN-2
      IF(L)470,470,450
  450 DO 460 J=1,L
  460 READ(LIB1) SKIPIT
  470 IF(ISOC-ISOXT)220,480,480
  480 REWIND LIB1
  550 DO 560 I=1,IX
      DO 560 N=1,NX
      M=MTBL(N)
      XFF(N,I) = 0.0
      DO 560 J=1,ISOX
      XFF(N,I) = XFF(N,I) + CONCTA(J,M)*XFT(J,I)
      XAM(N,I)=XAM(N,I)+CONCTA(J,M)*XAT(J,I)
      S(N,I)=S(N,I)+CONCTA(J,M)*SPT(J,I)/V(I)
  560 XTM(N,I)=XTM(N,I)+CONCTA(J,M)*(XAT(J,I)+XST(J,I))
      IF(NDISTR)569,569,561
  561 DO 562 N=1,NX
      DO 562 I=1,IX
  562 S(N,I)=S(N,I)*SDISTR(N)
  569 IF(NGEOM-1)570,570,580
  570 CALL GEOX
      GOTO590
  580 IF(NTHRN.NE.2) GOTO 581
      CALL GEORC(NX,IX,XTM,VOL,T)
      GOTO 590
  581 CALL GEOR
  590 CALL ITER
      CALL EDIT
      CALL THEFT
      DO 650 N=1,3
  650 HOLA(N+2) = HOLT(N)
      WRITE(INT2)(LMP (I),I=1,600),(LOUT(I),I=1,1100) ,R,FO
      CALL TIMEX(2)
      GOTO10
  130 FORMAT(1H1,9A4   ,7H   CASE,I5,12H     THERMOS)
  210 FORMAT(24H0LIBRARY TAPE LABELED   , 3A4)
      END
      SUBROUTINE GEOX
CGEOX  ======HAMMER===BNL-SRL LATTICE ANALYSIS PROGRAM===========THERMOS
CGEOX     SLAB TRANSPORT KERNEL
C-------CONTROL DATA BLOCK, CNTRL---------------------------------------
      COMMON /CNTRL/ IDBCH,NCASE,NFLOG,BTTL(9),NTIN,NTOUT,NTPUN,
     1NCHAIN,LIB1,LIB2,LIB3,INT1,INT2,NSC1,LNK(10),NTHCS,NEPCS,KLIB1,
     2KLIB2,KLIB3,DUM1(32),NTHGP,IBNDRY(12),EPCUT,DUM2(45),NCPRN,NCPPT,
     3DUM3(10),NTHRN,NTHPT,NTHPN,DUM4(9),NEPRN,NEPPT,NEPPN,NEPSG,NEPAG,
     4DUM5(19),NEDRN,NEDPT,NEDPN,NEDNB,NEDFW,NEDRB,NEDAX,NEDNU,DUM6(16)
C-------LATTICE INPUT DATA BLOCK, LIMP----------------------------------
      COMMON /LIMP/ IDENT,NX,MX,NRX,ISOX,ISOXE,NGEOM,NP1B1,NBCT,NXP,
     1BSQD,HOL(9),NPT(20),THT(20),MXAS(20),ILHI(20),NRBP(20),DEGC(20),
     2WSTBA(18),WSTBB(18),CONCTA(18,10),LIMT(10),RIN(20),RAD(20),
     3ROUT(20),VOL(20),MTBL(20),REGV(20),FISD(20),HOLID(3,18),DUM7(40)
C-------THERMOS STORAGE BLOCK-------------------------------------------
      DIMENSION T(20,20,30),F(20,30),H(20,30),R(20,30),P(30,30,6),
     1DV(30),V(30),XTM(20,30),XAM(20,30),XAT(18,30),S(20,30),
     2XFT(18,30),VNUT(18)
      COMMON T,F,H,R,P,DV,V,XTM,XAM,XAT,S,XFT,VNUT,IX,IXP
C-------GEOX STORAGE BLOCK----------------------------------------------
      DIMENSION ENX(3),DX(20),XT(21)
      EQUIVALENCE(R(1,1),ENX(1)),(R(4,1),DX(1)),(R(4,2),XT(1))
C-------END OF COMMON STORAGE-------------------------------------------
      MAX=3
      LTST=1
   55 WRITE(NTOUT,60)
   60 FORMAT(14H SLAB GEOMETRY)
   75 DO80K=1,IX
      DO80J=1,NX
      DO80I=1,NX
   80 T(I,J,K)=0.
      NFT=0
      CALLSLABK(X,X,X,X,NFT)
      NFT=1
      DO1000K=1,IX
      DO100I=1,NX
  100 DX(I)=VOL(I)*XTM(I,K)
      XT(1)=0.
      DO110I=1,NX
  110 XT(I+1)=XT(I)+DX(I)
      NXX=NX+1
      ALAM=2.*XT(NXX)
      DO260I=1,NX
      DO260J=I,NX
      DI=DX(I)
      DJ=DX(J)
      X=XT(J)-XT(I)
      IF(X)120,130,120
  120 CALL SLABK(X,DI,DJ,A,NFT)
      T(I,J,K)=T(I,J,K)+A
  130 IF(LTST)250,150,140
  140 X=X+ALAM
      IF(X-6.)120,150,150
  150 X=XT(J)+XT(I+1)
  160 CALL SLABK(X,DI,DJ,A,NFT)
      T(I,J,K)=T(I,J,K)+A
  170 IF(LTST)250,250,180
  180 X=X+ALAM
      IF(X-6.)160,190,190
  190 X=ALAM-XT(J+1)+XT(I+1)
  200 CALL SLABK(X,DI,DJ,A,NFT)
      T(I,J,K)=T(I,J,K)+A
  210 X=X+ALAM
      IF(X-6.)200,220,220
  220 X=ALAM-XT(J+1)-XT(I)
  230 CALL SLABK(X,DI,DJ,A,NFT)
      T(I,J,K)=T(I,J,K)+A
  240 X=X+ALAM
      IF(X-6.)230,250,250
  250 CONTINUE
  260 CONTINUE
      DO270I=1,NX
      X=DX(I)
      CALLEI(X,MAX,ENX)
  270 T(I,I,K)=T(I,I,K)+2.*(X-0.5+ENX(3))
      DO280I=1,NX
      DO280J=I,NX
  280 T(J,I,K)=T(I,J,K)
      DO300I=1,NX
      DO300J=1,NX
  300 T(I,J,K)=T(I,J,K)*VOL(J)/(2.*DX(I)*DX(J))
 1000 CONTINUE
 1010 DO1110K=1,IX
      DO1110J=1,NX
      F(J,K)=0.
      DO1100I=1,NX
 1100 F(J,K)=F(J,K)+XTM(I,K)*VOL(I)*T(I,J,K)
 1110 F(J,K)=F(J,K)/VOL(J)
      DO1150K=1,IX
      DO1150J=1,NX
      DO1150I=1,NX
 1150 T(I,J,K)=T(I,J,K)/F(J,K)
 1160 CONTINUE
      RETURN
      END
      SUBROUTINE SLABK(X,DI,DJ,E,NFT)
      COMMONDUM,CA,CB,CC,CD
C****ERROR CORRECTION--DIMENSION OF DUM CHANGED FROM 12800 TO 12000
      DIMENSIONCA(300),CB(300),CC(300),CD(300),ENX(10),DUM(12000)
   10 IF(NFT)100,20,100
  100 E=0.
      XP=X-DI
      N=1.+50.*XP
      IF(N)120,120,130
  120 N=1
  130 IF(N-300)140,140,240
  140 E=CA(N)+(XP-CD(N))*(CB(N)+(XP-CD(N))*CC(N))
  150 XP=X+DJ
      N=1.+50.*XP
      IF(N-300)160,160,165
  160 E=E+CA(N)+(XP-CD(N))*(CB(N)+(XP-CD(N))*CC(N))
      GOTO170
  165 CALL EI(XP,MAX,ENX)
      E=E+ENX(3)
  170 XP=XP-DI
      N=1.+50.*XP
      IF(N-300)180,180,185
  180 E=E-CA(N)-(XP-CD(N))*(CB(N)+(XP-CD(N))*CC(N))
      GO TO 190
  185 CALL EI(XP,MAX,ENX)
      E=E-ENX(3)
  190 N=1.+50.*X
      IF(N-300)200,200,210
  200 E=E-CA(N)-(X-CD(N))*(CB(N)+(X-CD(N))*CC(N))
      GOTO220
  210 ZZ=X
      CALL EI(ZZ,MAX,ENX)
      E=E-ENX(3)
  220 IF(E-.000001)230,230,240
  230 XP=X+0.5*(DJ-DI)
      CALLEI(XP,MAX,ENX)
      E=DI*DJ*ENX(1)
  240 RETURN
   20 MAX=3
      H=0.01
      TH=0.02
      THS=.0002
      XA=0.
      FA=0.5
      X = 0.0
      DI = 0.0
      DJ = 0.0
      DO30N=1,300
      XB=XA+H
      XC=XA+TH
      CALLEI(XB,MAX,ENX)
      FB=ENX(3)
      CALLEI(XC,MAX,ENX)
      FC=ENX(3)
      CA(N)=FA
      CB(N)=(4.*(FB-FA)-FC+FA)/TH
      CC(N)=(FC+FA-FB-FB)/THS
      CD(N)=XA
      XA=XC
   30 FA=FC
      GO TO 100
      END
      SUBROUTINE EI(X,NX,ENX)
CEI    ======HAMMER===BNL-SRL LATTICE ANALYSIS PROGRAM===========THERMOS
CEI       EXPONENTIAL INTEGRAL
      DIMENSIONENX(10)
    5 IF(NX)6,6,10
    6 NX=1
   10 IF(X)30,30,50
   30 ENX(1)=1.0E+30
      IF(NX-1)150,150,35
   35 DO40I=2,NX
      A=FLOAT(I)
   40 ENX(I)=1./(A-1.)
      GOTO150
   50 IF(X-75.)80,60,60
   60 DO70I=1,10
   70 ENX(I)=0.
      GOTO150
   80 A=EXP(-X)
      IF(X-1.0)90,120,120
   90 B=ALOG(X)
      IF(X-0.001)100,100,110
  100 ENX(1)=X-B-0.577215665
      GOTO130
  110 ENX(1)=-.577215665-B+X*(1.+X*(-.25+X*(.055555555+X*(-.010416666+X*
     1(.16666666E-2+X*(-.23148147E-3+X*(.28344669E-4+X*(-.31001981E-5+X*
     2.30619240E-6))))))))
      GOTO130
  120 B=.2372905+X*(4.53079235+X*(5.1266902+X))
      C=2.4766331+X*(8.6660126+X*(6.1265272+X))
      ENX(1)=((A/X)*B)/C
  130 IF(NX-1)150,150,135
  135 DO140I=2,NX
      B=FLOAT(I)-1.
  140 ENX(I)=(A-X*ENX(I-1))/B
  150 CONTINUE
      RETURN
      END
      SUBROUTINE GEOR
CGEOR  ======HAMMER===BNL-SRL LATTICE ANALYSIS PROGRAM===========THERMOS
CGEOR     CYLINDER TRANSPORT KERNEL
C-------CONTROL DATA BLOCK, CNTRL---------------------------------------
      COMMON /CNTRL/ IDBCH,NCASE,NFLOG,BTTL(9),NTIN,NTOUT,NTPUN,
     1NCHAIN,LIB1,LIB2,LIB3,INT1,INT2,NSC1,LNK(10),NTHCS,NEPCS,KLIB1,
     2KLIB2,KLIB3,DUM1(32),NTHGP,IBNDRY(12),EPCUT,DUM2(45),NCPRN,NCPPT,
     3DUM3(10),NTHRN,NTHPT,NTHPN,DUM4(9),NEPRN,NEPPT,NEPPN,NEPSG,NEPAG,
     4DUM5(19),NEDRN,NEDPT,NEDPN,NEDNB,NEDFW,NEDRB,NEDAX,NEDNU,DUM6(16)
C-------LATTICE INPUT DATA BLOCK, LIMP----------------------------------
      COMMON /LIMP/ IDENT,NX,MX,NRX,ISOX,ISOXE,NGEOM,NP1B1,NBCT,NXP,
     1BSQD,HOL(9),NPT(20),THT(20),MXAS(20),ILHI(20),NRBP(20),DEGC(20),
     2WSTBA(18),WSTBB(18),CONCTA(18,10),LIMT(10),RIN(20),RAD(20),
     3ROUT(20),VOL(20),MTBL(20),REGV(20),FISD(20),HOLID(3,18),DUM7(40)
C-------THERMOS STORAGE BLOCK-------------------------------------------
      DIMENSION T(20,20,30),F(20,30),H(20,30),R(20,30),P(30,30,6),
     1DV(30),V(30),XTM(20,30),XAM(20,30),XAT(18,30),S(20,30),
     2XFT(18,30),VNUT(18)
      COMMON T,F,H,R,P,DV,V,XTM,XAM,XAT,S,XFT,VNUT,IX,IXP
C-------GEOR STORAGE BLOCK----------------------------------------------
      DIMENSION RN(20),RI(20),BETA(21),DX(20),DL(20),FNA(100),
     1FNB(100),RO(20)
      EQUIVALENCE (RN(1),F(1,1)),(RI(1),F(1,2)),(BETA(1),F(1,3)),
     1 (DX(1),F(2,4)),(DL(1),F(2,5)),(FNA(1),F(2,6)),(FNB(1),F(2,11)),
     2 (RO(1),F(2,16))
C-------END OF COMMON STORAGE-------------------------------------------
  110 WRITE(NTOUT,120)
  120 FORMAT(34H0CYLINDRICAL GEOMETRY - NO LEAKAGE)
      DO130N=1,NX
      RI(N)=RIN(N)
      RN(N)=RAD(N)
  130 RO(N)=ROUT(N)
  240 DO250I=1,NX
      DO250J=1,NX
      DO250K=1,IX
  250 T(I,J,K)=0.
      DH=.05
      CA=1.0
      X=0.
      DO260L=1,100
      X=X+DH
      CB=EXP(-X)/(1.+X*(.454891+X*(-.155068+X*(.05191562+X*(-.009179453
     1+X*.0006300736)))))
      FNB(L)=(CB-CA)/DH
      FNA(L)=CA-FNB(L)*(X-DH)
  260 CA=CB
      BETA(1)=0.
      BETA(2)=3.14159
      BETA(3)=.1570795
      DO270L=4,21
  270 BETA(L)=BETA(L-1)+BETA(3)
      DO800K=1,NX
      DO800L=1,21
  500 RCA=RN(K)*SIN(BETA(L))
      RCAS=RCA*RCA
      NMIN=1
      A=0
      DO600N=1,NX
      IF(RO(N)-RCA)520,520,530
  520 NMIN=NMIN+1
      DX(N)=0.
      GOTO600
  530 B=SQRT(RO(N)*RO(N)-RCAS)
      DX(N)=B-A
      A=B
  600 CONTINUE
      DO760I=1,IX
      DO620N=NMIN,NX
  620 DL(N)=XTM(N,I)*DX(N)
      IF(RN(K))635,630,635
  630 X=DL(K)
      GOTO636
  635 X=0.5*DL(K)
  636 LP=1.+X/DH
      IF(LP-100)638,638,637
  637 CA=0.
      GOTO639
  638 CA=FNA(LP)+X*FNB(LP)
  639 T(K,K,I)=T(K,K,I)+1.-CA
      IF(BETA(L)-1.570795)640,640,660
  640 IF(K-NX)650,680,680
  650 N=K+1
      GOTO700
  660 IF(K-NMIN)690,690,670
  670 N=K-1
      GOTO730
  680 N=NX
      GOTO720
  690 IF(K-1)650,650,695
  695 N=NMIN
      GOTO700
  700 X=X+DL(N)
      IF(X-5.)705,705,702
  702 T(N,K,I)=T(N,K,I)+CA
      GOTO760
  705 LP=1.+X/DH
      CB=FNA(LP)+X*FNB(LP)
      T(N,K,I)=T(N,K,I)+CA-CB
      CA=CB
      IF(N-NX)710,720,720
  710 N=N+1
      GOTO700
  720 CONTINUE
  730 X=X+DL(N)
      IF(X-5.)735,735,732
  732 T(N,K,I)=T(N,K,I)+CA
      GOTO760
  735 LP=1.+X/DH
      CB=FNA(LP)+X*FNB(LP)
      T(N,K,I)=T(N,K,I)+CA-CB
      CA=CB
      IF(N-NMIN)700,700,740
  740 N=N-1
      GOTO730
  760 CONTINUE
      IF(L-2)790,770,790
  770 DO780N=1,NX
      DO780I=1,IX
  780 T(N,K,I)=0.5*T(N,K,I)
  790 CONTINUE
  800 CONTINUE
      DO820I=1,IX
      DO820K=1,NX
      DO820N=K,NX
      T(N,K,I)=T(N,K,I)*0.05*VOL(K)/XTM(N,I)
      T(K,N,I)=T(N,K,I)
      T(N,K,I)=T(N,K,I)/VOL(N)
      IF(K-N)810,820,810
  810 T(K,N,I)=T(K,N,I)/VOL(K)
  820 CONTINUE
  830 DO860I=1,IX
      DO860K=1,NX
      F(K,I)=0.
      DO840N=1,NX
  840 F(K,I)=F(K,I)+VOL(N)*XTM(N,I)*T(N,K,I)
       F(K,I)=F(K,I)/VOL(K)
      DO850N=1,NX
  850 T(N,K,I)=T(N,K,I)/F(K,I)
  860 CONTINUE
  870 CONTINUE
      RETURN
      END
      SUBROUTINE GEORC(NX,IX,XTM,VOL,T)
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* GEORC  *   HAMMER   VERSION /04-77/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      DIMENSION T(20,20,30),XTM(20,30),VOL(20),S(20,20),FNA1(20)
C
      WRITE(6,120)
      DO 250 I=1,NX
      DO 250 J=1,NX
      DO 250 K=1,IX
  250 T(I,J,K)=0.
      DO 801 I=1,IX
      DO 802 N=1,NX
  802 FNA1(N)=XTM(N,I)
      CALL CECPAN(NX,VOL,FNA1,S)
      DO 800 K=1,NX
      DO 800 N=1,NX
  800 T(N,K,I)=S(N,K)
  801 CONTINUE
      RETURN
  120 FORMAT(////,4X,10(1H+),'CARLVIK PIJ',10(1H+))
      END
      SUBROUTINE CECPAN(N,V1,SIG,S)
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* CECPAN *   HAMMER   VERSION /04-77/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      DIMENSION R(20),SIG(20),S(20,20),V1(20)
      DIMENSION TAU(20),TAU0(21),R2(20),V(20)
      EQUIVALENCE(TAU(1),TAU0(2))
      DIMENSION ROW(20)
      EQUIVALENCE(ROW(1),TAU(1))
      DIMENSION SIGV(20)
      EQUIVALENCE(V(1),SIGV(1))
      DIMENSION GJP(6,6),GJW(6,6)
      EQUIVALENCE(GJP(1,1),GJW(1,1))
      DIMENSION GJC(36)
      EQUIVALENCE(GJP(1,1),GJC(1))
C
C    CONSTANTS FOR GAUSS JACOBI INTEGRATION.
C    ABRAMOWITZ-STEGUN PAGE 921, K=1
C    X(I)=1.0-X(I)**2, W(I)=2.0*W(I)
      DATA GJC
     1 /.00000000,.55555556,.87393877,.95491150,.98046718,.99029084,
     2 1.00000000,.00000000,.28606124,.65127016,.82660307,.90725799,
     3  .36391724,.63608276,.00000000,.16932809,.47704397,.68412769,
     4  .13965396,.45848221,.40186383,.00000000,.11094751,.35681753,
     5  .06236194,.25969509,.40692914,.27101382,.00000000,.07803490,
     6  .03149583,.14781774,.29277397,.33434928,.19356318,.00000000/
C
      IG=5
      DO 7 I=1,N
    7 V(I)=V1(I)
      SUM = V(1)
      DO 6 I=2,N
      SUM = SUM+V(I)
      R2(I)=SUM/3.1415927
    6 R(I)=SQRT(R2(I))
      R(1)=SQRT(V(1)/3.1415927)
      R2(1)=R(1)*R(1)
      DO 8 I=1,N
      SIGV(I)=SIG(I)*V(I)
      DO 8 J=1,N
    8 S(I,J)=0.
      DO 10 I=1,N
      RSTART=0.
      IF(I.GT.1) RSTART=R(I-1)
      DO 10 K=1,IG
      Y=RSTART+GJP(IG+1,K)*(R(I)-RSTART)
      Y2=Y**2
      FAC=2.0*GJW(K,IG+1)*(R(I)-RSTART)
      TP=0.
      TAU(I-1)=0.
      DO 10 J=I,N
      TM=TP
      TP=SQRT(R2(J)-Y2)
      TAU(J)=TAU(J-1)+SIG(J)*(TP-TM)
      DO 10 L=I,J
   10 S(L,J)=S(L,J)+FAC*(BIC3(TAU(J)+TAU(L))-BIC3(TAU(J)-TAU(L)))
      DO 20 I=1,N
      J=N-I+1
      DO 15 K=J,N
      L=J+N-K
      IF(L.EQ.1) GO TO 15
      IF(L.EQ.J) S(J,L-1)=S(L-1,J)
      S(J,L)=S(J,L)-S(J,L-1)
      IF(J.EQ.1) GO TO 15
      S(J,L)=S(J,L)-S(J-1,L)+S(J-1,L-1)
   15 S(L,J)=S(J,L)
   20 S(J,J)=S(J,J)+SIGV(J)
C    CALCULATION OF BOUNDARY ESCAPES AND TRANSPORT MATRIX T(I,J),JTOI.
      ESS=6.28318*R(N)
      RSUM=0.
      DO 30 I=1,N
      ROW(I)=SIGV(I)
      DO 28 J=1,N
   28 ROW(I)=ROW(I)-S(I,J)
   30 RSUM=RSUM+ROW(I)
      PBB=1.-(4./ESS)*RSUM
      PBB=1.-PBB
      DO 61 I=1,N
      DO 60 J=1,N
   60 S(I,J)=S(I,J)/SIGV(J)/SIGV(I)
   61 CONTINUE
      DO 62 I=1,N
      DO 62 J=1,N
      S(I,J)=S(I,J)*SIGV(J)+ 4.*ROW(I)*ROW(J)/(ESS*SIGV(I)*PBB)
   62 S(I,J)=S(I,J)/SIG(J)
      RETURN
      END
      FUNCTION BIC3(Z)
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* BIC3   *   HAMMER   VERSION /04-77/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      X=Z
      IF (X.GE.1.) GO TO 100
      BIC3=X*(X*(X*(X*(X*(X*(4.16451871E-2)-1.73373703E-1)+3.42922057E-1
     1)-5.08802394E-1)+7.48517345E-1)-9.98434740E-1)+7.85379789E-1
      RETURN
100   IF (X.GE.2.) GO TO 110
      BIC3=X*(X*(X*(X*(+1.18935064E-2)-1.07972858E-1)+4.13393240E-1)-8.2
     13631468E-1)+7.44150729E-1
      RETURN
110   IF (X.GE.4.0) GO TO 120
      BIC3=X*(X*(X*(X*(X*(-4.29476343E-4)+8.23936987E-3)-6.59959218E-2)+
     12.80376616E-1)-6.44209963E-1)+6.5375752725E-1
      RETURN
120   IF (X.GE.8.0) GO TO 130
      BIC3=X*(X*(X*(X*(X*(-1.50015616E-5)+5.20057758E-4)-7.28247429E-3)+
     15.17164358E-2)-1.87305576E-1)+2.78751756E-1
      RETURN
  130 IF (X.GE.10.0) GO TO 140
      BIC3=-5.65E-5*(X-10.0)
140   BIC3=0.
      RETURN
      END
      SUBROUTINE ITER
CITER     ITERATION PROGRAM
C-------CONTROL DATA BLOCK, CNTRL---------------------------------------
      COMMON /CNTRL/ IDBCH,NCASE,NFLOG,BTTL(9),NTIN,NTOUT,NTPUN,
     1NCHAIN,LIB1,LIB2,LIB3,INT1,INT2,NSC1,LNK(10),NTHCS,NEPCS,KLIB1,
     2KLIB2,KLIB3,DUM1(32),NTHGP,IBNDRY(12),EPCUT,DUM2(45),NCPRN,NCPPT,
     3DUM3(10),NTHRN,NTHPT,NTHPN,LUM4(9),NEPRN,NEPPT,NEPPN,NEPSG,NEPAG,
     4DUM5(19),NEDRN,NEDPT,NEDPN,NEDNB,NEDFW,NEDRB,NEDAX,NEDNU,DUM6(16)
C-------LATTICE INPUT DATA BLOCK, LIMP----------------------------------
      COMMON /LIMP/ IDENT,NX,MX,NRX,ISOX,ISOXE,NGEOM,NP1B1,NBCT,NXP,
     1BSQD,HOL(9),NPT(20),THT(20),MXAS(20),ILHI(20),NRBP(20),DEGC(20),
     2WSTBA(18),WSTBB(18),CONCTA(18,10),LIMT(10),RIN(20),RAD(20),
     3ROUT(20),VOL(20),MTBL(20),REGV(20),FISD(20),HOLID(3,18),DUM7(40)
C-------THERMOS STORAGE BLOCK-------------------------------------------
CE    DIMENSION T(20,20,30),F(20,30),H(20,30),R(20,30),P(30,30,6),
CE   1DV(30),V(30),XTM(20,30),XAM(20,30),XAT(18,30),S(20,30),
CE   2XFT(18,30),VNUT(18)
      COMMON T,F,H,R,P,DV,V,XTM,XAM,XAT,S,XFT,VNUT,IX,IXP
      DIMENSION T(20,20,30),F(20,30),H(20,30),R(20,30),P(30,30,6),
     1DV(30),V(30),XTM(20,30),XAM(20,30),XAT(18,30),S(20,30),
     2XFT(18,30),VNUT(18)
      COMMON/ITDAT/ITHMAX
      COMMON/SGSFZ/ GSF(30)
C-------END OF COMMON STORAGE-------------------------------------------
CE    NTIM1 = ZA02AS(DUMMY)
      NTIM1 = 0
  160 A=0.
      DO170I=1,IX
      DO170N=1,NX
  170 A=A+V(I)*S(N,I)*VOL(N)*DV(I)
      IF(A)175,240,175
  175 A=1./A
      DO180I=1,IX
      DO180N=1,NX
  180 S(N,I)=S(N,I)*A
  240 A=0.
      DO250I=1,IX
      B=V(I)*V(I)
      B=B*EXP(-B)
      DO250N=1,NX
      F(N,I)=B
  250 A=A+B*V(I)*XAM(N,I)*DV(I)*VOL(N)
      A=1./A
      DO260I=1,IX
      DO260N=1,NX
  260 F(N,I)=A*F(N,I)
      WRITE(NTOUT,400)
  400 FORMAT(//3X,4H IT.,4X,7HNEUTRON,6X,4HFLUX/3X,4H NO.,4X,7HBALANCE,
     1 4X,8HRESIDUAL/3X,4H ---,4X,7H-------,3X,10H----------)
      EPSZ=1.0E-4
      IF(LUM4(4).NE.0) EPSZ=1.0E-5
      EPSA=EPSZ*F(1,10)
      ITCNT=0
      ITMAX=150
      IF(ITHMAX.GT.0) ITMAX=ITHMAX
      OVER=1.2
  280 IF(ITCNT-ITMAX)300,360,360
  300 DO310I=1,IX
      DO310K=1,NX
      M=MTBL(K)
      H(K,I)=S(K,I)
      NL=LIMT(M)
      IF(NL)303,303,305
  303 H(K,I)=H(K,I)+F(K,I)*(XTM(K,I)-XAM(K,I))
      GOTO310
  305 DO307J=1,IX
  307 H(K,I)=H(K,I)+P(I,J,NL)*F(K,J)
  310 CONTINUE
      A=0.
      DO330I=1,IX
      DO330N=1,NX
      R(N,I)=0.
      DO320K=1,NX
  320 R(N,I)=R(N,I)+H(K,I)*T(N,K,I)
  330 A=A+R(N,I)*V(I)*XAM(N,I)*DV(I)*VOL(N)
      RENORM=1./A
      DO340I=1,IX
      DO340N=1,NX
  340 R(N,I)=RENORM*R(N,I)-F(N,I)
      ITCNT=ITCNT+1
 3110 DO3120I=1,IX
      DO3120N=1,NX
 3120 F(N,I)=F(N,I)+OVER*R(N,I)
      ROLD=0.0
      DO350I=1,IX
      DO350N=1,NX
      ROLD=AMAX1(ROLD,ABS(R(N,I)))
  350 CONTINUE
      IF(ROLD.LE.EPSA) GO TO 360
      IF(LUM4(3).NE.0) GOTO 12
      IF(ITCNT.LT.6) GO TO 10
      NGSF=ITCNT-(ITCNT/2)*2
      IF(NGSF.NE.0) GO TO 12
   10 CALL GBSF(F,P,MTBL,LIMT,XTM,XAM,S,GSF,V,DV,VOL,IX,NX,NTOUT)
   12 WRITE(NTOUT,410) ITCNT,RENORM,ROLD
  410 FORMAT(3X,I3,F12.5,1PE13.4)
      GO TO 280
  360 CONTINUE
CE    NTIM2 = ZA02AS(DUMMY)
      NTIM2 = 0
      PUX=(NTIM2-NTIM1)
      WRITE(NTOUT,420) ITCNT,RENORM,EPSA,ROLD,PUX
  420 FORMAT(4H0IT=,I4,8H   NORM=,F8.4,8H   CRIT=,1PE12.4,7H   RES=,
     1 E12.4, 12H   CP TIME =,0PF8.3,9H SECONDS.)
 1050 RETURN
      END
      SUBROUTINE GBSF(F,P,MTBL,LIMT,XTM,XAM,S,GSF,V,DV,VOL,IX,NX,NTOUT)
C     THIS ROUTINE COMPUTES GROUPWISE SCALING FACTORS
C     FOR GROUP FLUXES AND SCALE THEM ACCORDINGLY.
      DIMENSION F(20,30),P(30,30,6),SLGG(30,30),BB(80)
      DIMENSION S(20,30),XTM(20,30),XAM(20,30),MTBL(20),LIMT(10)
      DIMENSION SUMA(30),FSS(30),GSF(30)
      DIMENSION V(30),DV(30),VOL(20)
      DATA D1/1.0/
C     INITIALIZE
      DO 52 K=1,IX
   52 GSF(K)=0.0
C     COMPUTE COEF. MATRIX
      DO 290 K=1,IX
      SUMA(K)=0.0
       FSS(K)=0.0
      DO 53 N=1,NX
      SUMA(K)=SUMA(K)+F(N,K)*XTM(N,K)*V(K)*DV(K)*VOL(N)
       FSS(K)= FSS(K)+S(N,K)*V(K)*DV(K)*VOL(N)
   53 CONTINUE
      DO 22 L=1,IX
   22 SLGG(L,K)=0.0
  290 CONTINUE
      DO 150 N=1,NX
      M=MTBL(N)
      NL=LIMT(M)
      IF(NL) 120,120,130
  120 DO 140 K=1,IX
  140 SLGG(K,K)=SLGG(K,K)+F(N,K)*(XTM(N,K)-XAM(N,K))*V(K)*DV(K)*VOL(N)
      GO TO 150
  130 DO 26 L=1,IX
      DO 26 K=1,IX
      SLGG(L,K)=SLGG(L,K)+F(N,K)*P(L,K,NL)*V(L)*DV(L)*VOL(N)
   26 CONTINUE
  150 CONTINUE
      DO 37 K=1,IX
      DO 38 L=1,IX
      IF(L.EQ.K) GO TO 39
      SLGG(L,K)=-SLGG(L,K)
      GO TO 38
   39 SLGG(K,K)=SUMA(K)-SLGG(K,K)
   38 CONTINUE
   37 CONTINUE
C     INVERT THE COEF. MATRIX, SLGG(L,K)
      CALL LINV3F(SLGG,SUMA,1,IX,IX,D1,D2,BB,IER)
      IF(IER.EQ.130) WRITE(NTOUT,101)
  101 FORMAT( 3X,' MATRIX INVERSION ERROR,SINGULARITY')
C     COMPUTE GROUP SCALING FACTORS
      DO 76 K=1,IX
      DO 76 L=1,IX
   76 GSF(K)=GSF(K)+SLGG(K,L)*FSS(L)
C     SCALE GROUP FLUXES
      DO 86 K=1,IX
      DO 86 N=1,NX
   86 F(N,K)=F(N,K)*GSF(K)
      RETURN
      END
      SUBROUTINE EDIT
CEDIT     THERMOS III EDIT
C-------CONTROL DATA BLOCK, CNTRL---------------------------------------
      COMMON /CNTRL/ IDBCH,NCASE,NFLOG,BTTL(9),NTIN,NTOUT,NTPUN,
     1NCHAIN,LIB1,LIB2,LIB3,INT1,INT2,NSC1,LNK(10),NTHCS,NEPCS,KLIB1,
     2KLIB2,KLIB3,DUM1(32),NTHGP,IBNDRY(12),EPCUT,DUM2(45),NCPRN,NCPPT,
     3DUM3(10),NTHRN,NTHPT,NTHPN,DUM4(9),NEPRN,NEPPT,NEPPN,NEPSG,NEPAG,
     4DUM5(19),NEDRN,NEDPT,NEDPN,NEDNB,NEDFW,NEDRB,NEDAX,NEDNU,DUM6(16)
C-------LATTICE INPUT DATA BLOCK, LIMP----------------------------------
      COMMON /LIMP/ IDENT,NX,MX,NRX,ISOX,ISOXE,NGEOM,NP1B1,NBCT,NXP,
     1BSQD,HOL(9),NPT(20),THT(20),MXAS(20),ILHI(20),NRBP(20),DEGC(20),
     2WSTBA(18),WSTBB(18),CONCTA(18,10),LIMT(10),RIN(20),RAD(20),
     3ROUT(20),VOL(20),MTBL(20),REGV(20),FISD(20),HOLID(3,18),DUM7(40)
C-------THERMOS STORAGE BLOCK-------------------------------------------
      DIMENSION T(20,20,30),F(20,30),H(20,30),R(20,30),P(30,30,6),
     1DV(30),V(30),XTM(20,30),XAM(20,30),XAT(18,30),S(20,30),
     2XFT(18,30),VNUT(18)
      COMMON T,F,H,R,P,DV,V,XTM,XAM,XAT,S,XFT,VNUT,IX,IXP
C-------LATTICE OUTPUT BLOCK, LOUT--------------------------------------
      DIMENSION LOUT(1100),HOLA(9),BALT(18,4,5),FOIL(20,4,5),FOGX(4,6),
     1FLX(20,4),DUMB(20),OTGC(5),OTGA(30,6)
      EQUIVALENCE (T(20,20,10),LOUT(1),ID),(LOUT(2),HOLA(1)),
     1(LOUT(11),BALT(1,1,1)),(LOUT(371),FOIL(1,1,1)),
     2(LOUT(771),FOGX(1,1)),(LOUT(795),FLX(1,1)),(LOUT(875),DUMB(1)),
     3(LOUT(895),OTGC(1)),(LOUT(900),OTGA(1,1))
      EQUIVALENCE (ETA,DUMB(1)),(THU,DUMB(2)),(AMF,DUMB(3)),
     1 (XABAR,FOGX(4,2)),(GNUXF,FOGX(4,3)),(DBAR,FOGX(4,1)),
     2 (XFBAR,FOGX(4,5))
C-------EDIT STORAGE BLOCK----------------------------------------------
      DIMENSION XFM(20,30),TEMA(20),TEMB(20),TEMC(20)
      EQUIVALENCE (T(1,1,1),XFM(1,1)),(T(1,11,2),TEMA(1)),
     1 (T(1,12,2),TEMB(1)),(T(1,13,2),TEMC(1))
C-------END OF COMMON STORAGE-------------------------------------------
      IF(NBCT)5,5,6
    6 NX=NX-NPT(NRX)
      NRX=NRX-1
    5 NXP=NX
   10 DO20I=1,1100
   20 LOUT(I)=0
      DO 30 I=1,IX
      DO 30 N=1,NX
      XFM(N,I)=0.0
      M=MTBL(N)
      DO 30 J=1,ISOX
   30 XFM(N,I)=XFM(N,I)+CONCTA(J,M)*XFT(J,I)*VNUT(J)
  100 A=0.0
      B=0.0
      C=0.0
      DO140N=1,NXP
      DO105I=1,IX
  105 F(N,I)=F(N,I)*V(I)*DV(I)*VOL(N)
      DO110I=1,IXP
      A=A+XAM(N,I)*F(N,I)
  110 B=B+XFM(N,I)*F(N,I)
      IF(XFM(N,1))140,140,120
  120 DO130I=1,IXP
  130 C=C+XAM(N,I)*F(N,I)
  140 CONTINUE
      IF(C)141,141,142
  141 ETA=0.0
      GOTO143
  142 ETA=B/C
  143 THU=C/A
      ETAF=B/A
      B=0.0
      DO150N=1,NXP
      DO145I=1,IXP
  145 B=B+F(N,I)
      DO150I=1,IX
  150 F(N,I)=F(N,I)/A
      XABAR=A/B
      GNUXF=XABAR*ETAF
      AMF=0.0
      N=NXP
  205 DO210I=1,IXP
  210 AMF=AMF+XAM(N,I)*F(N,I)
      N=N-1
      IF(MTBL(N)-MTBL(N+1))220,205,220
  220 CONTINUE
      WRITE(NTOUT,230)ETA,THU,ETAF,XABAR,GNUXF,AMF
  230 FORMAT(5H0ETA=,F8.5,5H   F=,F8.5,9H   ETA*F=,F8.5,6H   XA=,E13.6/
     17H NU*XF=,E13.6,17H   MOD.ABS.FRACT=,F8.5)
      WRITE(NTOUT,240)
  240 FORMAT(48H0ABSORPTION AND PRODUCTION BY ISOTOPE AND REGION)
      WRITE(NTOUT,245)(N,N=1,NRX)
  245 FORMAT(21H ISOTOPE   T/M   TYPE,10(6H   REG,I2,1X)/21X,10(6H   REG
     1,I2,1X))
      DO330L=1,ISOX
      K=1
      N=1
  250 TEMA(K)=0.0
      TEMB(K)=0.0
      M=MTBL(N)
  260 DO270I=1,IXP
      TEMA(K)=TEMA(K)+CONCTA(L,M)*XAT(L,I)*F(N,I)
  270 TEMB(K)=TEMB(K)+CONCTA(L,M)*XFT(L,I)*F(N,I)*VNUT(L)
      N=N+1
      IF(N-NXP)280,280,300
  280 IF(N-1-NRBP(K))260,290,290
  290 K=K+1
      IF(N-NXP)250,250,300
  300 WRITE(NTOUT,310)WSTBA(L),WSTBB(L),(TEMA(J),J=1,K)
  310 FORMAT(F9.0,F7.0,5H  ABS,10F9.5/21X,10F9.5)
      WRITE(NTOUT,320)(TEMB(J),J=1,K)
  320 FORMAT(16X,5H PROD,10F9.5/21X,10F9.5)
  330 CONTINUE
      LI=ISOX+1
      LF=LI+ISOXE-1
      N=1
      WRITE(NTOUT,340)
  340 FORMAT(43H0NEUTRON DENSITY, VBAR, AND FOIL ACTIVATION)
      WRITE(NTOUT,350)(WSTBA(L),L=LI,LF)
  350 FORMAT(28H0 N   R    DENSITY    VBAR  ,5F10.0)
      K=1
  360 TFLX=0.0
      TDEN=0.0
      TVOL=0.0
      DO370L=1,18
  370 TEMB(L)=0.0
  380 F1X=0.0
      DEN=0.0
      DO390L=LI,LF
  390 TEMC(L)=0.0
      DO400I=1,IXP
      DEN=DEN+F(N,I)/V(I)
      F1X=F1X+F(N,I)
      DO400L=LI,LF
  400 TEMC(L)=TEMC(L)+F(N,I)*XAT (L,I)
      DO410L=LI,LF
  410 TEMB(L)=TEMB(L)+TEMC(L)
      TDEN=TDEN+DEN
      TFLX=TFLX+F1X
      IF(N-1)420,420,460
  420 DO430L=LI,LF
  430 TEMA(L)=TEMC(L)/VOL(1)
  460 DO 470 L=LI,LF
      J=L-ISOX
      FOIL(N,4,J)=TEMC(L)/F1X
      IF(TEMA(L).EQ.0.0) GO TO 470
      TEMC(L) = TEMC(L)/(VOL(N)*TEMA(L))
  470 CONTINUE
      VBAR=F1X/DEN
      TVOL=TVOL+VOL(N)
      DEN=DEN/VOL(N)
      WRITE(NTOUT,480)N,RAD(N),DEN,VBAR,(TEMC(L),L=LI,LF)
  480 FORMAT(I3,F6.3,1PE11.4,0PF7.4,  5F10.4)
      N=N+1
      IF(N-NXP)490,490,500
  490 IF(N-1-NRBP(K))380,500,380
  500 VBAR=TFLX/TDEN
      DEN=TDEN/TVOL
      DO510L=LI,LF
      IF(TEMA(L).EQ.0.0) GO TO 510
      TEMB(L) = TEMB(L)/(TEMA(L)*TVOL)
  510 CONTINUE
      WRITE(NTOUT,520)DEN,VBAR,(TEMB(L),L=LI,LF)
  520 FORMAT(9H0 AVERAGE,1PE11.4,0PF7.4,  5F10.4)
      WRITE(NTOUT,521)
  521 FORMAT(1H )
      K=K+1
      IF(N-NXP)360,360,530
  530 CONTINUE
      WRITE(NTOUT,535)(WSTBA(L),L=LI,LF)
  535 FORMAT(28H0ABSOLUTE ACTIVATION AT R=0 ,5F10.0)
      WRITE(NTOUT,536)(TEMA(L),L=LI,LF)
  536 FORMAT(28X,1P5E10.3)
      XFBAR=0.0
  550 DO 565 L=1,ISOX
      DO560N=1,NXP
      M=MTBL(N)
      DO560I=1,IXP
      BALT(L,4,1)=BALT(L,4,1)+CONCTA(L,M)*XAT(L,I)*F(N,I)*XABAR
      A=CONCTA(L,M)*XFT(L,I)*F(N,I)*XABAR
      BALT(L,4,3)=BALT(L,4,3)+A*VNUT(L)
  560 BALT(L,4,2)=BALT(L,4,2)+A
  565 XFBAR=XFBAR+BALT(L,4,2)
      DO580N=1,NXP
      DO570I=1,IXP
  570 FLX(N,4)=FLX(N,4)+F(N,I)
  580 FLX(N,4)=FLX(N,4)/VOL(N)
      DO 600 N=1,NXP
      FISD(N)=0.0
      DO 590 I=1,IXP
  590 FISD(N)=FISD(N)+XFM(N,I)*F(N,I)
      IF(FISD(N))600,600,1600
 1600 FISD(N)=FISD(N)/VOL(N)/ETAF
  600 CONTINUE
  601 WRITE(NTOUT,610)
  610 FORMAT(30H0AVERAGE CROSS SECTIONS (1/CM)/47H0ISOTOPE   ABSORPTION
     1    FISSION    NU*FISSION)
      WRITE(NTOUT,620)(WSTBA(L),BALT(L,4,1),BALT(L,4,2),
     1BALT(L,4,3),L=1,ISOX)
  620 FORMAT(0PF9.0,1P3E13.5)
      DO 670 I=1,IX
      DO 670 N=1,NX
  670 R(N,I)=F(N,I)/(DV(I)*VOL(N))
      IF(NTHPT)730,730,630
  630 WRITE(NTOUT,640)(WSTBA(L),L=LI,LF)
  640 FORMAT(31H0MESH    THERMAL      FISSION  ,5(13H  FOIL ACT XA)/32H
     1POINT    FLUX      DISTRIBUTION,F11.0,4F13.0)
      DO 650 N=1,NXP
  650 WRITE(NTOUT,660)N,FLX(N,4),FISD(N),(FOIL(N,4,L),
     1L=1,ISOXE)
  660 FORMAT(I4,1X,1P7E13.5)
      DO 720 N=1,NX,10
      NUP=MIN0(NX,N+9)
      WRITE(NTOUT,680)IDENT,HOL
  680 FORMAT(5H1CASE,I6,7X,9A4   ,5X,7HTHERMOS/21H0THERMAL FLUX, V*N(V))
      WRITE(NTOUT,690)(N1,N1=N,NUP)
  690 FORMAT(6H GROUP,10(5H   PT,I3,3X))
      DO 700 I=1,IX
  700 WRITE(NTOUT,710)I,(R(N1,I),N1=N,NUP)
  710 FORMAT(I5,1P10E11.4)
  720 CONTINUE
  730 CONTINUE
      RETURN
      END
      SUBROUTINE THEFT
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* THEFT  *   HAMMER   VERSION /04-77/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C-------CONTROL DATA BLOCK, CNTRL---------------------------------------
      COMMON /CNTRL/ IDBCH,NCASE,NFLOG,BTTL(9),NTIN,NTOUT,NTPUN,
     1NCHAIN,LIB1,LIB2,LIB3,INT1,INT2,NSC1,LNK(10),NTHCS,NEPCS,KLIB1,
     2KLIB2,KLIB3,DUM1(32),NTHGP,IBNDRY(12),EPCUT,DUM2(45),NCPRN,NCPPT,
     3DUM3(10),NTHRN,NTHPT,NTHPN,LUM4(9),NEPRN,NEPPT,NEPPN,NEPSG,NEPAG,
     4DUM5(19),NEDRN,NEDPT,NEDPN,NEDNB,NEDFW,NEDRB,NEDAX,NEDNU,DUM6(16)
C-------LATTICE INPUT DATA BLOCK, LIMP----------------------------------
      COMMON /LIMP/ IDENT,NX,MX,NRX,ISOX,ISOXE,NGEOM,NP1B1,NBCT,NXP,
     1BSQD,HOL(9),NPT(20),THT(20),MXAS(20),ILHI(20),NRBP(20),DEGC(20),
     2WSTBA(18),WSTBB(18),CONCTA(18,10),LIMT(10),RIN(20),RAD(20),
     3ROUT(20),VOL(20),MTBL(20),REGV(20),FISD(20),HOLID(3,18),DUM7(40)
C-------THERMOS STORAGE BLOCK-------------------------------------------
      DIMENSION T(20,20,30),F(20,30),H(20,30),R(20,30),P(30,30,6),
     1DV(30),V(30),XTM(20,30),XAM(20,30),XAT(18,30),S(20,30),
     2XFT(18,30),VNUT(18)
      COMMON T,F,H,R,P,DV,V,XTM,XAM,XAT,S,XFT,VNUT,IX,IXP
C-------LATTICE OUTPUT BLOCK, LOUT--------------------------------------
      DIMENSION LOUT(1100),HOLA(9),BALT(18,4,5),FOIL(20,4,5),FOGX(4,6),
     1FLX(20,4),DUMB(20),OTGC(5),OTGA(30,6)
      EQUIVALENCE (T(20,20,10),LOUT(1),ID),(LOUT(2),HOLA(1)),
     1(LOUT(11),BALT(1,1,1)),(LOUT(371),FOIL(1,1,1)),
     2(LOUT(771),FOGX(1,1)),(LOUT(795),FLX(1,1)),(LOUT(875),DUMB(1)),
     3(LOUT(895),OTGC(1)),(LOUT(900),OTGA(1,1))
      EQUIVALENCE (ETA,DUMB(1)),(THU,DUMB(2)),(AMF,DUMB(3)),
     1(XABAR,FOGX(4,2)),(GNUXF,FOGX(4,3)),(DBAR,FOGX(4,1)),
     2 (XFBAR,FOGX(4,5))
C-------THEFT STORAGE BLOCK---------------------------------------------
      DIMENSION XA(30),XT(30),TP0(30),TP1(30),S0(30),S1(30),F0(30),
     1F1(30),Q00(30),Q01(30),Q10(30),Q11(30),H0(30),H1(30),F0P(30),
     2F1P(30),R0(30),R1(30),P0(30,30),P1(30,30),XFM(20,30)
      DIMENSION LT(10),MT(10),ABSC(10),AFLUX(10),BNU(10),DELTV(10),
     1RHO(10),AFLUX1(10),TR0(10,10),DC(10),XTR(10),XS(10)
      EQUIVALENCE (T(1,1,1),XFM(1,1)),(T(1,11,3),XA(1)),
     1 (T(11,12,3),XT(1)),(T(1,14,3),TP0(1)),(T(11,15,3),TP1(1)),
     2 (T(1,17,3),S0(1)),(T(11,18,3),S1(1)),(T(1,20,3),F0(1)),
     3 (T(11,1,4),F1(1)),(T(1,3,4),Q00(1)),(T(11,4,4),Q01(1)),
     4 (T(1,6,4),Q10(1)),(T(11,7,4),Q11(1)),(T(1,9,4),H0(1)),
     5 (T(11,10,4),H1(1)),(T(1,12,4),F0P(1)),(T(11,13,4),F1P(1)),
     6 (T(1,15,4),R0(1)),(T(11,16,4),R1(1)),(T(1,18,4),P0(1,1)),
     7 (T(1,3,7),P1(1,1))
      COMMON/CREG3/OXST(18,30)
     1 , XFF(20,30)
      DIMENSION XF(30),FISS(10),SUM(20),DATA(20),PSTG(10)
      DIMENSION   RGFS(20,10),RGAB(20,10),RGNF(20,10),RGDF(20,10),
     1RGTR(20,10),RGOX(20,10),RGFV(20,10),RGSC(10,10,20)
      EQUIVALENCE (NTHGP,NTG)
      COMMON/FBEDIT/FBFS(20,4),FBNF(20,4),FBAB(20,4),FBDF(20,4),
     $              FBS0(20,4),FBS1(20,4),FBXS(20,4),FBTR(20,4),
     $              FBIN(20,4),FBRV(20,4),FBFV(20,4),FBVOL(20)
C-------END OF COMMON STORAGE-------------------------------------------
C
C        THERMAL FOURIER TRANSFORM
C
      ZERO = 0.0
      EPS=1.0E-4
      ALAM=1.2
      DO 3015 IT=1,2
      IF(IT.EQ.2)GO TO 3
      BSQDT=BSQD
      BSQD=1.0E-10
      GO TO 4
    3 BSQD=BSQDT
    4 CONTINUE
   10 DO 70 I=1,IX
      TV=0.0
      TFV=0.0
      TS=0.0
      TXA=0.0
      TXT=0.0
      TXF=0.0
      TXFF = 0.0
      DO 20 J=1,IX
      TP0(J)=0.0
   20 TP1(J)=0.0
      DO 50 N=1,NXP
      M=MTBL(N)
      NL=LIMT(M)
      TV=TV+VOL(N)
      TFV=TFV+F(N,I)
      TS=TS+S(N,I)*VOL(N)
      TXA=TXA+XAM(N,I)*F(N,I)
      TXT=TXT+XTM(N,I)*F(N,I)
      TXF=TXF+XFM(N,I)*F(N,I)
      TXFF = TXFF + XFF(N,I)*F(N,I)
      IF(NL)50,50,30
   30 DO 40 J=1,IX
      TP0(J)=TP0(J)+F(N,I)*P(J,I,NL)
   40 TP1(J)=TP1(J)+F(N,I)*P(J,I,NL+3)
   50 CONTINUE
      S0(I)=TS
      XA(I)=TXA/TFV
      XF(I) = TXFF/TFV
      XT(I)=TXT/TFV
      OTGA(I,5)=TXF/TFV
      DO 60 J=1,IX
      P0(J,I)=TP0(J)/TFV
   60 P1(J,I)=TP1(J)/TFV
   70 CONTINUE
      DO 90 J=1,IX
      A=0.0
      B=0.0
      DO 80 I=1,IX
      A=A+V(I)*P0(I,J)*DV(I)/DV(J)
   80 B=B+V(I)*P1(I,J)*DV(I)/DV(J)
      XT(J)=XT(J)+B/V(J)
   90 P0(J,J)=P0(J,J)+XT(J)-XA(J)-A/V(J)
      IF(NP1B1)225,225,210
  210 IF(BSQD)1211,1211,1212
 1211 EPSLON=-1.
      GOTO1213
 1212 EPSLON=1.
 1213 B=SQRT(ABS(BSQD))
      DO220I=1,IX
      X=B/XT(I)
      X2=X*X*EPSLON
      IF(X-0.2)212,212,214
  212 A0=1.0+X2*(-0.33333333+X2*(0.2-X2*0.14285714))
      A2=0.33333333+X2*(-0.2+X2*(0.14285714-X2*0.11111111))
      GOTO216
  214 IF(BSQD)1215,1215,1214
 1214 A0=ATAN(X)/X
      GOTO1216
 1215 A0=0.5*ALOG((1.+X)/(1.-X))/X
 1216 A2=(1.-A0)/X2
  216 Q00(I)=A0/XT(I)
      Q01(I)=3.0*A2*X2
      Q10(I)=-A2/XT(I)**2
  220 Q11(I)=3.0*A2/XT(I)
  225 TS=0.0
      A=0.0
      DO230I=1,IX
      TS=TS+V(I)*S0(I)*DV(I)
      F1(I)=0.0
      F0(I)=V(I)*V(I)*EXP(-V(I)*V(I))
  230 A=A+V(I)*F0(I)*DV(I)*XA(I)
      A=TS/A
      DO240I=1,IX
  240 F0(I)=F0(I)*A
      ITC=0
  250 DO260I=1,IX
      H0(I)=S0(I)
      H1(I)=0.0
      DO260J=1,IX
      H0(I)=H0(I)+P0(I,J)*F0(J)
  260 H1(I)=H1(I)+P1(I,J)*F1(J)
      IF(NP1B1)270,270,290
  270 DO280I=1,IX
      F0P(I)=(H0(I)+BSQD*F1(I))/XT(I)
  280 F1P(I)=(H1(I)-F0(I)/3.0)/XT(I)
      GOTO310
  290 DO300I=1,IX
      F0P(I)=Q00(I)*H0(I)+Q01(I)*H1(I)
  300 F1P(I)=Q10(I)*H0(I)+Q11(I)*H1(I)
  310 A=0.0
      DO320I=1,IX
  320 A=A+(XA(I)*F0P(I)-BSQD*F1P(I))*V(I)*DV(I)
      A=TS/A
      DO330I=1,IX
      R0(I)=A*F0P(I)-F0(I)
      R1(I)=A*F1P(I)-F1(I)
      F0(I)=F0(I)+ALAM*R0(I)
  330 F1(I)=F1(I)+ALAM*R1(I)
      ITC=ITC+1
      IF(ITC-200)335,355,355
  335 DO350I=1,IX
      IF(ABS(R0(I)/F0(I))-EPS)340,340,250
  340 IF(ABS(R1(I)/F1(I))-EPS)350,350,250
  350 CONTINUE
  355 A=0.0
      B=0.0
      AA=0.0
      DO360I=1,IXP
      A=A+V(I)*XA(I)*F0(I)*DV(I)
      B=B+V(I)*F1(I)*DV(I)
  360 AA=AA+V(I)*F0(I)*DV(I)
      VLSQ=-B/A
      XABRP=A/AA
      DBAR=VLSQ*XABRP
      TS=0.0
      TOTFLX=0.0
      DO1980I=1,IXP
      S0(I)=S0(I)+P0(I,IX)*F0(IX)
      TOTFLX=TOTFLX+F0(I)*V(I)*DV(I)
 1980 TS=TS+S0(I)*DV(I)*V(I)
      Y=(DBAR*BSQD+XABRP)*TOTFLX
      DO 1990 I=1,IXP
      F0(I)=F0(I)/Y
      F1(I)=F1(I)/Y
 1990 S0(I)=S0(I)/TS
      IF(NP1B1)370,370,390
  370 IF(IT.EQ.1) WRITE(NTOUT,380)VLSQ,XABRP,DBAR,BSQD,ITC
      IF(IT.EQ.2) WRITE(NTOUT,381)VLSQ,XABRP,DBAR,BSQD,ITC
      GOTO 411
  390 IF(IT.EQ.1) WRITE(NTOUT,400)VLSQ,XABRP,DBAR,BSQD,ITC
      IF(IT.EQ.2) WRITE(NTOUT,401)VLSQ,XABRP,DBAR,BSQD,ITC
  411 CONTINUE
      TOTFLX=0.
      TOTDEN=0.
      DO500I=1,IXP
      TOTFLX=TOTFLX+F0(I)*V(I)*DV(I)
  500 TOTDEN=TOTDEN+F0(I)*DV(I)
      CVBAR=TOTFLX/TOTDEN
      VINV=1./(CVBAR*2200.)
      WRITE(NTOUT,501) CVBAR,VINV
      DO425I=1,IX
      PHIZB=0.
      DO426N=1,NXP
  426 PHIZB=PHIZB+R(N,I)*VOL(N)
      DO427N=1,NX
  427 R(N,I)=R(N,I)*F0(I)*V(I)/PHIZB
  425 CONTINUE
      IF(NEPPN)4000,4000,4020
 4000 DO4010N=1,NXP
      FLX(N,4)=0.
      DO4010I=1,IXP
      FLX(N,4)=FLX(N,4)+R(N,I)*DV(I)
 4010 CONTINUE
      LI=ISOX+1
      LF=LI+ISOXE-1
      DO 4008 L=LI,LF
      J=L-ISOX
      DO 4008 N=1,NXP
      Z=0.
      DO 4005 I=1,IXP
 4005 Z=Z+R(N,I)*DV(I)*XAT(L,I)
 4008 FOIL(N,4,J)=Z/FLX(N,4)
      FOGX(4,2)=0.
      FOGX(4,3)=0.
      FOGX(4,5)=0.
      DO 4026 L=1,ISOX
      BALT(L,4,1)=0.
      BALT(L,4,2)=0.
      BALT(L,4,3)=0.
      DO 4025 N=1,NXP
      M=MTBL(N)
      DO 4025 I=1,IXP
      Z=XABRP*R(N,I)*DV(I)*VOL(N)*(1.+VLSQ*BSQD)
      BALT(L,4,1)=BALT(L,4,1)+XAT(L,I)*CONCTA(L,M)*Z
      BALT(L,4,2)=BALT(L,4,2)+XFT(L,I)*CONCTA(L,M)*Z
 4025 BALT(L,4,3)=BALT(L,4,3)+XFT(L,I)*CONCTA(L,M)*VNUT(L)*Z
      FOGX(4,2)=FOGX(4,2)+BALT(L,4,1)
      FOGX(4,3)=FOGX(4,3)+BALT(L,4,3)
 4026 FOGX(4,5)=FOGX(4,5)+BALT(L,4,2)
 4020 DO4030N=1,NXP
      DO4030I=1,IX
 4030 R(N,I)=R(N,I)*V(I)/2.0
 2000 IF(LUM4(1).EQ.0) GO TO 2001
      DO 2002 I=1,NTG
 2002 LT(I)=IBNDRY(I)
      IF(NTG.EQ.1) GO TO 2003
      NTG1 = NTG-1
      DO 2010 I=1,NTG1
 2010 MT(I) = LT(I+1) - 1
 2003 MT(NTG)=IBNDRY(NTG+1)
      GO TO 2004
C  DEFAULT (ONE THERMAL GROUP) VALUES
 2001 NTG = 1
      LT(1) = 1
      MT(1) = 29
 2004 CONTINUE
C  CALCULATION OF PROBABILITY PSTG(JG) OF SCATTERING FROM EPITHERMAL
C  GROUP 3 INTO THERMAL GROUP (3+JG), JG=1,NTG
      DELTE = 0.0
      DO 1 JJ=1,NTG
      JG = NTG + 1 - JJ
      PSTG(JG) = 0.0
      JL = LT(JJ)
      JU = MT(JJ)
      DO 1 J=JL,JU
      PSTG(JG) = PSTG(JG) + V(J)*DV(J)
      DELTE = DELTE + V(J)*DV(J)
    1 CONTINUE
      DO 2 JG=1,NTG
    2 PSTG(JG) = PSTG(JG)/DELTE
      WRITE(12) (PSTG(JG),JG=1,NTG)
      DO 2030 K=1,NTG
      ABSC(K)=0.0
      FISS(K) = 0.0
      AFLUX(K)=0.0
      BNU (K)=0.0
      DELTV(K)=0.0
      RHO(K)=0.0
      AFLUX1(K)=0.0
      IH=MT(K)
      IL=LT(K)
      DO 2020 I=IL,IH
      DELTV(K)=DELTV(K)+DV(I)
      AFLUX(K)=AFLUX(K)+V(I)*F0(I)*DV(I)
      AFLUX1(K)=AFLUX1(K)+V(I)*F1(I)*DV(I)
      ABSC(K)=ABSC(K)+V(I)*F0(I)*DV(I)*XA(I)
      FISS(K) = FISS(K) + V(I)*F0(I)*DV(I)*XF(I)
      BNU (K)=BNU (K)+V(I)*F0(I)*DV(I)*OTGA(I,5)
 2020 RHO(K)=RHO(K)+S0(I)*V(I)*DV(I)
      ABSC(K)=ABSC(K)/AFLUX(K)
      FISS(K) = FISS(K)/AFLUX(K)
      BNU (K)=BNU (K)/AFLUX(K)
      DC(K)=-AFLUX1(K)/AFLUX(K)
      XTR(K)=1.0/(3.0*DC(K))
 2030 CONTINUE
      DO 2050 M=1,NTG
      JL=LT(M)
      JH=MT(M)
      DO 2050 K=1,NTG
      IL=LT(K)
      IH=MT(K)
      TR0(M,K)=0.0
      DO 2040 J=JL,JH
      DO 2040 I=IL,IH
 2040 TR0(M,K)=TR0(M,K)+V(I)*DV(I)*P0(I,J)*F0(J)
 2050 TR0(M,K)=TR0(M,K)/AFLUX(M)
      DO 2065 M=1,NTG
      XS(M)=0.
C   CORRECTION OF IN GROUP SCATTERING TO GIVE CORRECT SIGMA-TRANSPORT
      TRCORR = XTR(M) - ABSC(M)
      DO 2064 K=1,NTG
      TRCORR = TRCORR - TR0(M,K)
 2064 XS(M) = XS(M) + TR0(M,K)
      TR0(M,M) = TR0(M,M) + TRCORR
 2065 XS(M) = XS(M) + TRCORR
      WRITE(NTOUT,2066)
      DO 2075 K=1,NTG
 2075 WRITE(6,2080)K,DELTV(K),FISS(K),ABSC(K),
     1BNU(K),DC(K),RHO(K),AFLUX(K),AFLUX1(K),XTR(K),XS(K)
      WRITE(6,2096)
      DO 2091 K=1,NTG
 2091 WRITE(6,2090) (M,K,TR0(M,K),M=1,NTG)
      IF(NTHPN.EQ.0) GO TO 2095
      NTGM = 2*NTG
      DO 2092 L=1,NTG
      K = NTG + 1 - L
      DO 2093 N=1,NTGM
      M = K - NTG + N
      DATA(N) = 0.0
      IF(M.GT.0.AND.M.LE.NTG) DATA(N) = TR0(M,K)
 2093 CONTINUE
      WRITE(12) FISS(K),ZERO,XTR(K),ABSC(K),BNU(K),XTR(K),
     1(DATA(N),N=1,NTGM)
 2092 CONTINUE
 2095 CONTINUE
      SUMDV=0.
      SUMFLX=0.
      SIGA=0.
      DNU=0.
      DIFC=0.
      DO 3000 K=1,NTG
      SIGA=SIGA+AFLUX(K)*ABSC(K)
      DNU=DNU+AFLUX(K)*BNU(K)
      DIFC=DIFC+AFLUX1(K)
      SUMFLX=SUMFLX+AFLUX(K)
      SUMDV=SUMDV+DELTV(K)
 3000 CONTINUE
      SIGA=SIGA/SUMFLX
      DNU=DNU/SUMFLX
      DIFC=-DIFC/SUMFLX
      AVGFLX=SUMFLX/SUMDV
      STR = 1.0/(3.0*DIFC)
      SSG = STR - SIGA
      WRITE(6,3010)SIGA,DNU,DIFC,AVGFLX,STR,SSG
      IF(IT.EQ.2)GO TO 3012
      DO 3011 N=1,NXP
      DO 3011 I=1,IX
 3011 R(N,I)=R(N,I)*2.0/V(I)
 3012 CONTINUE
 3015 CONTINUE
  410 OTGC(2)=0.0
      OTGC(3)=0.0
      OTGC(1)=IXP
      DO 430 I=1,IXP
      B=S0(I)*V(I)*DV(I)
      OTGC(2)=OTGC(2)+B
      OTGC(3)=OTGC(3)+B*V(I)
      OTGA(I,1)=V(I)
      OTGA(I,2)=V(I)*F0(I)*DV(I)
      OTGA(I,3)=XA(I)
      OTGA(I,4)=-F1(I)/F0(I)
      OTGA(I,6)=V(I)*XT(I)
      DO 430 J=1,IXP
  430 OTGA(I,6)=OTGA(I,6)-V(J)*V(J)*P0(J,I)*DV(J)/(V(I)*DV(I))
C
C*********REGIONWISE QUANTITIES*********
C  RGOX IS P0 - P1 SCATTERING, RGSC(I,J,K) IS SCATTERING FROM I TO J
C  IN SCATTERER K, FOR DEFINITIONS OF OTHER CROSS SECTIONS SEE EDIT 4
C
C**LOOP OVER MACROGROUPS NG
      DO 110 NG=1,NTG
      DO 1110 NREG=1,NRX
      RGFS(NREG,NG) = 0.0
      RGAB(NREG,NG) = 0.0
      RGNF(NREG,NG) = 0.0
      RGDF(NREG,NG) = 0.0
      RGTR(NREG,NG) = 0.0
      RGOX(NREG,NG) = 0.0
      RGFV(NREG,NG) = 0.0
 1110 CONTINUE
      DO 1111 NGP=1,NTG
      DO 1111 NSR=1,20
 1111 RGSC(NG,NGP,NSR) = 0.0
      N= 0
      NSR = 0
      NEND = 0
      NL = LT(NG)
      NU = MT(NG)
C
C**LOOP OVER REGIONS NREG
      DO 120 NREG=1,NRX
      NPRG = NPT(NREG)
      NEND = NEND + NPRG
      M = MTBL(NEND)
      NS = LIMT(M)
      IF(NS.NE.0) NSR = NSR+1
C
C**LOOP OVER SPACE POINTS NN IN REGION
      DO 130 NN=1,NPRG
      N = N+1
C
C**LOOP OVER MICROGROUPS K IN MACROGROUP
      DO 140 K=NL,NU
      FVD = VOL(N)*R(N,K)*DV(K)*2.0/V(K)
      RGFV(NREG,NG) = RGFV(NREG,NG) + FVD
      IF(NS.EQ.0) GO TO 141
C
C**LOOP OVER GROUPS INTO WHICH SCATTERING OCCURS
      DO 142 NGP=1,NTG
      NLP = LT(NGP)
      NUP = MT(NGP)
      DO 142 KP=NLP,NUP
      RGSC(NG,NGP,NSR) = RGSC(NG,NGP,NSR) +
     1 FVD*P(KP,K,NS)*V(KP)*DV(KP)/(V(K)*DV(K))
  142 CONTINUE
  141 CONTINUE
C
C**LOOP OVER ISOTOPES I
      DO 150 I=1,ISOX
      IF(CONCTA(I,M).EQ.0.0) GO TO 150
      C = CONCTA(I,M)
      RGFS(NREG,NG) = RGFS(NREG,NG) + C*XFT(I,K)*FVD
      RGAB(NREG,NG) = RGAB(NREG,NG) + C*XAT(I,K)*FVD
      RGNF(NREG,NG) = RGNF(NREG,NG) + C*VNUT(I)*XFT(I,K)*FVD
      RGOX(NREG,NG) = RGOX(NREG,NG) + C*OXST(I,K)*FVD
      RGTR(NREG,NG) = RGTR(NREG,NG) + C*(XAT(I,K)+OXST(I,K))*FVD
  150 CONTINUE
  140 CONTINUE
  130 CONTINUE
C
      RGFS(NREG,NG) = RGFS(NREG,NG)/RGFV(NREG,NG)
      RGAB(NREG,NG) = RGAB(NREG,NG)/RGFV(NREG,NG)
      RGNF(NREG,NG) = RGNF(NREG,NG)/RGFV(NREG,NG)
      RGOX(NREG,NG) = RGOX(NREG,NG)/RGFV(NREG,NG)
      RGTR(NREG,NG) = RGTR(NREG,NG)/RGFV(NREG,NG)
      IF(NS.EQ.0) GO TO 131
      SUM(NSR) = 0.0
      DO 132 NGP=1,NTG
      RGSC(NG,NGP,NSR) = RGSC(NG,NGP,NSR)/RGFV(NREG,NG)
  132 SUM(NSR) = SUM(NSR) + RGSC(NG,NGP,NSR)
  131 CONTINUE
  120 CONTINUE
C
C**NORMALIZING TRANSPORT SIGMA TO CELL VALUE
      TTR = 0.0
      TFV = 0.0
      DO 118 NREG=1,NRX
      TFV = TFV + RGFV(NREG,NG)
      TTR = TTR + RGTR(NREG,NG)*RGFV(NREG,NG)
  118 CONTINUE
      TRNORM = (1.0/(3.0*DC(NG)))/(TTR/TFV)
      DO 119 NREG=1,NRX
      RGTR(NREG,NG) = TRNORM*RGTR(NREG,NG)
  119 RGDF(NREG,NG) = 1.0/(3.0*RGTR(NREG,NG))
C
C**CORRECTION OF IN-GROUP SCATTERING TO GIVE ABOVE TRANSPORT SIGMA
      N = 0
      NSR = 0
      DO 1065 NREG=1,NRX
      N = N + NPT(NREG)
      M = MTBL(N)
      NS = LIMT(M)
      IF(NS.EQ.0) GO TO 1065
      NSR = NSR+1
      TRCORR = RGTR(NREG,NG) - RGAB(NREG,NG) - SUM(NSR)
      RGSC(NG,NG,NSR) = RGSC(NG,NG,NSR) + TRCORR
 1065 CONTINUE
C
  110 CONTINUE
C
C**WRITING OF RESULTS
      WRITE(NTOUT,750)
      NEND = 0
      NSR = 0
      DO 751 NREG=1,NRX
      NEND = NEND + NPT(NREG)
      MIXN = MTBL(NEND)
      NS = LIMT(MIXN)
      WRITE(NTOUT,752) NREG
      WRITE(NTOUT,753) (NG,RGFV(NREG,NG),RGFS(NREG,NG),RGAB(NREG,NG),
     1RGNF(NREG,NG),RGOX(NREG,NG),RGDF(NREG,NG),RGTR(NREG,NG),NG=1,NTG)
      IF(NS.EQ.0) GO TO 757
      NSR = NSR + 1
      WRITE(NTOUT,754)
      DO 755 NGP=1,NTG
  755 WRITE(NTOUT,756) (NG,NGP,RGSC(NG,NGP,NSR),NG=1,NTG)
  757 CONTINUE
      IF(NTHPN.EQ.0) GO TO 800
      DO 758 L=1,NTG
      K = NTG + 1 - L
      DO 759 N=1,NTGM
      M = K - NTG + N
      DATA(N) = 0.0
      IF(NS.GT.0) GO TO 760
      IF(M.EQ.K) DATA(N)=RGTR(NREG,K)-RGAB(NREG,K)
      GO TO 759
  760 IF(M.GT.0.AND.M.LE.NTG) DATA(N)=RGSC(M,K,NSR)
  759 CONTINUE
      WRITE(12) RGFS(NREG,K),ZERO,RGTR(NREG,K),RGAB(NREG,K),
     1RGNF(NREG,K),RGTR(NREG,K),(DATA(N),N=1,NTGM)
  758 CONTINUE
C***NEW REGION EDIT IS ONLY APPLICABLE (FOR NOW) IF THERE
C   IS ONLY ONE THERMAL GROUP ******
  800 IF(NTG.GT.1) GO TO 751
      FBFS(NREG,4)= RGFS(NREG,1)
      FBNF(NREG,4)= RGNF(NREG,1)
      FBAB(NREG,4)= RGAB(NREG,1)
      FBDF(NREG,4)= RGDF(NREG,1)
      FBXS(NREG,4)= RGOX(NREG,1)
      FBTR(NREG,4)= RGTR(NREG,1)
      FBRV(NREG,4)= 0.
      FBFV(NREG,4)= RGFV(NREG,1)
      IF(NS.LE.0) FBIN(NREG,4)= RGTR(NREG,1) - RGAB(NREG,1)
      IF(NS.GT.0) FBIN(NREG,4)= RGSC(1,1,NSR)
      FBS0(NREG,4)= RGOX(NREG,1)
      FBS1(NREG,4)= FBAB(NREG,4) + FBS0(NREG,4) - FBTR(NREG,4)
      FBVOL(NREG)= REGV(NREG)
  751 CONTINUE
      RETURN
  380 FORMAT(35H0P1 APPROX. AT BUCKLING 1.0E-10 L2=,1PE12.5,6H   XA=,
     1E12.5,5H   D=,E12.5,8H   BSQD=,E12.5,6H   IT=,I4)
  381 FORMAT(33H0P1 APPROX. AT INPUT BUCKLING L2=,1PE12.5,6H   XA=,
     1E12.5,5H   D=,E12.5,8H   BSQD=,E12.5,6H   IT=,I4)
  400 FORMAT(35H0B1 APPROX. AT BUCKLING 1.0E-10 L2=,1PE12.5,6H   XA=,
     1E12.5,5H   D=,E12.5,8H   BSQD=,E12.5,6H   IT=,I4)
  401 FORMAT(33H0B1 APPROX. AT INPUT BUCKLING L2=,1PE12.5,6H   XA=,
     1E12.5,5H   D=,E12.5,8H   BSQD=,E12.5,6H   IT=,I4)
  501 FORMAT(10H0   CVBAR=,1PE12.5,11H  INV.VEL.=,E12.5,7H(SEC/M))
  750 FORMAT(1H1,30X,'------ REGIONWISE DATA ------')
  752 FORMAT(/'0 REGION NO.',I2//' GROUP',5X,'FLUX',10X,'XF',11X,'XA',
     19X,'NU-XF',10X,'XS',11X,'D',11X,'XTR')
  753 FORMAT(I4,1X,1P7E13.5)
  754 FORMAT('0  SIGMA(M,K)')
  756 FORMAT(5(I4,I3,1PE15.5))
 2066 FORMAT(3H0 K,4X,'DV',7X,'XF',10X,'XA',9X,'NUXF',10X,'D',8X,
     1'SOURCE',7X,'FLUX0',6X,'FLUX1',9X,'XTR',10X,'XS')
 2080 FORMAT(I3,F7.3,1P9E12.4)
 2090 FORMAT(5(I4,I3,1PE15.5))
 2096 FORMAT(11H0  TR0(M,K))
 3010 FORMAT(6H0  XA=,1PE12.5,8H   NUXF=,E12.5,5H   D=,E12.5,
     19H   AFLUX=,E12.5,8H   1/3D=,E12.5,8H   SSGG=,E12.5)
      END
      SUBROUTINE LINK6
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* LINK6  * HAMMER   VERSION /JB-1077/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      COMMON /CNTRL/ IDBCH,NCASE,NFLOG,BTTL(9),NTIN,NTOUT,NTPUN,
     1NCHAIN,LIB1,LIB2,LIB3,INT1,INT2,NSC1,LNK(10),NTHCS,NEPCS,KLIB1,
     2KLIB2,KLIB3,DUM1(32),NTHGP,IBNDRY(12),EPCUT,DUM2(45),NCPRN,NCPPT,
     3DUM3(10),NTHRN,NTHPT,NTHPN,LUM4(9),NEPRN,NEPPT,NEPPN,NEPSG,NEPAG,
     4DUM5(19),NEDRN,NEDPT,NEDPN,NEDNB,NEDFW,NEDRB,NEDAX,NEDNU,DUM6(15),
     5LNKXX
      COMMON /LIMP/ IDENT,NX,MX,NRX,ISOX,ISOXE,NGEOM,NP1B1,NBCT,NXP,
     1BSQD,HOL(9),NPT(20),THT(20),MXAS(20),ILHI(20),NRBP(20),DEGC(20),
     2WSTBA(18),WSTBB(18),CONCTA(18,10),LIMT(10),RIN(20),RAD(20),
     3ROUT(20),VOL(20),MTBL(20),REGV(20),FISD(20),HOLID(3,18),DUM7(40)
      COMMON ID,HOLA(9),BALT(18,4,5),FOIL(20,4,5),FOGX(4,6),
     1FOX(20,4),DUMB(20),OTGC(5),OTGA(30,6),DUM20(21)
      COMMON GRP(20),SOR(20),T(20,20),XT(20),V1(20),V2(20),V3(20)
     1,V4(20),V5(20),CP(20),CN(20),CP2(20),CN2(20),Y(21),DUM21(2839)
      COMMON IX,SIGY(18,54),GNU(18,54),SIGA(18,54),P(18,54),PF(18,54),
     1F(20,54),DEL(54),FS(54),SSC(10),S1(10),SIGABS(10),SIGIN(10),
     2SIGX(10),C(10),AN(10),SD(10),PROB(25,10),NRIG(18),
     3ER(200),GMN(200),GMGM(200),GMF(200),SPIN(200),AMASS(18),
     4SIGP(18),JONE(18),JTWO(18),DZERO(18),DONE(18),DTWO(18),ETA(20),
     5Q(20),ESC,MDONE(18),KEY,MCURR,PZ(1001),PZ1(1001),DELSIG,A1(18),
     6EBK(55),TEMP(18),SIGEFY(18),NDONE,NLIB,DUMMY(7863)
      COMMON / NITRAB / INO, FAKER(29)
      COMMON / RABLOC / DUMMI(56)
      COMMON / PROHAM / DUMME(3098)
      COMMON / NITDAT / DUMMO(12)
      COMMON/DAVE/RXREM(20,3)
      COMMON/DJD/EPILL,RESLL
C
C     EPITHERMAL MASTER OF CEREMONIES
C
      DO 20 I=1,3098
      DUMME(I) = 0.0
   20 CONTINUE
      DO 21 I=1,12
      DUMMO(I) = 0.0
   21 CONTINUE
      EPILL = 0.625
      IF(LUM4(2).GT.0) EPILL=EPCUT
      ICASE=0
      INO=0
      REWIND 12
   10 CALL TIMEX(1)
      CALL INPUTH(ICASE)
      IF(LNKXX.NE.100) RETURN
      REWINDNSC1
      REWINDLIB2
      CALLLIB
      IGRES=0
      DO120I=1,IX
      CALLRTBLIB(I)
      IF(I-1)40,40,50
   40 CALLZUTIN
C     TWO ITERATIONS FOR RESONANCE GROUPS ONLY.
   50 DO 60 IT=1,2
      IF(IT.EQ.2)ESC=-ESC
      CALL SORE(I)
      ESC=IT
      IF(IGRES.EQ.0) ESC=0.0
      CALL GEOMH(I)
      CALL FLUXH(I)
      CALL RESC(I)
      IF(IGRES.EQ.0.AND.ESC.LT.1.0) IGRES=1
      IF(IGRES.EQ.0) GOTO 120
   60 CONTINUE
  120 CALLCLAPS(I)
      CALL SORE(55)
      REWINDLIB2
      CALLSLODON
      CALLFLOUT
      CALL TIMEX(2)
      GOTO10
      END
      SUBROUTINE INPUTH(ICASE)
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* INPUT  *   HAMMER   VERSION /04-77/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      COMMON /CNTRL/ IDBCH,NCASE,NFLOG,BTTL(9),NTIN,NTOUT,NTPUN,
     1NCHAIN,LIB1,LIB2,LIB3,INT1,INT2,NSC1,LNK(10),NTHCS,NEPCS,KLIB1,
     2KLIB2,KLIB3,DUM1(32),NTHGP,IBNDRY(12),EPCUT,DUM2(45),NCPRN,NCPPT,
     3DUM3(10),NTHRN,NTHPT,NTHPN,DUM4(9),NEPRN,NEPPT,NEPPN,NEPSG,NEPAG,
     4DUM5(19),NEDRN,NEDPT,NEDPN,NEDNB,NEDFW,NEDRB,NEDAX,NEDNU,DUM6(15),
     5LNKXX
      COMMON /LIMP/ IDENT,NX,MX,NRX,ISOX,ISOXE,NGEOM,NP1B1,NBCT,NXP,
     1BSQD,HOL(9),NPT(20),THT(20),MXAS(20),ILHI(20),NRBP(20),DEGC(20),
     2WSTBA(18),WSTBB(18),CONCTA(18,10),LIMT(10),RIN(20),RAD(20),
     3ROUT(20),VOL(20),MTBL(20),REGV(20),FISD(20),HOLID(3,18),DUM7(40)
      COMMON ID,HOLA(9),BALT(18,4,5),FOIL(20,4,5),FOGX(4,6),
     1FOX(20,4),DUMB(20),OTGC(5),OTGA(30,6),DUM20(21)
      COMMON GRP(20),SOR(20),T(20,20),XT(20),V1(20),V2(20),V3(20)
     1,V4(20),V5(20),CP(20),CN(20),CP2(20),CN2(20),Y(21),DUM21(2839)
      DIMENSION ERASE(3500)
      EQUIVALENCE (GRP(1),ERASE(1))
      COMMON IX,SIGY(18,54),GNU(18,54),SIGA(18,54),P(18,54),PF(18,54),
     1F(20,54),DEL(54),FS(54),SSC(10),S1(10),SIGABS(10),SIGIN(10),
     2SIGX(10),C(10),AN(10),SD(10),PROB(25,10),NRIG(18),
     3ER(200),GMN(200),GMGM(200),GMF(200),SPIN(200),AMASS(18),
     4SIGP(18),JONE(18),JTWO(18),DZERO(18),DONE(18),DTWO(18),ETA(20),
     5Q(20),ESC,MDONE(18),KEY,MCURR,PZ(1001),PZ1(1001),DELSIG,A1(18),
     6EBK(55),TEMP(18),SIGEFY(18),NDONE,NLIB,DUMMY(7863)
      IF(NEPCS-ICASE)20,20,10
   10 ICASE=ICASE+1
      N1=13206
      DO100N=1,N1
  100 ERASE(N)=0.
      LNKXX=100
      RETURN
   20 REWIND  LIB2
      REWIND INT2
      REWIND NSC1
      IF(NTHRN)40,50,40
   40 IF(NEDRN)50,60,50
   60 REWIND LIB3
   50 LNKXX=LNK(3)
      RETURN
      END
      SUBROUTINE LIB
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* LIB    *   HAMMER   VERSION /04-77/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      COMMON /CNTRL/ IDBCH,NCASE,NFLOG,BTTL(9),NTIN,NTOUT,NTPUN,
     1NCHAIN,LIB1,LIB2,LIB3,INT1,INT2,NSC1,LNK(10),NTHCS,NEPCS,KLIB1,
     2KLIB2,KLIB3,DUM1(32),NTHGP,IBNDRY(12),EPCUT,DUM2(45),NCPRN,NCPPT,
     3DUM3(10),NTHRN,NTHPT,NTHPN,DUM4(9),NEPRN,NEPPT,NEPPN,NEPSG,NEPAG,
     4DUM5(19),NEDRN,NEDPT,NEDPN,NEDNB,NEDFW,NEDRB,NEDAX,NEDNU,DUM6(16)
      COMMON /LIMP/ IDENT,NX,MX,NRX,ISOX,ISOXE,NGEOM,NP1B1,NBCT,NXP,
     1BSQD,HOL(9),NPT(20),THT(20),MXAS(20),ILHI(20),NRBP(20),DEGC(20),
     2WSTBA(18),WSTBB(18),CONCTA(18,10),LIMT(10),RIN(20),RAD(20),
     3ROUT(20),VOL(20),MTBL(20),REGV(20),FISD(20),HOLID(3,18),DUM7(40)
      COMMON ID,HOLA(9),BALT(18,4,5),FOIL(20,4,5),FOGX(4,6),
     1FOX(20,4),DUMB(20),OTGC(5),OTGA(30,6),DUM20(21)
      DIMENSION LOUT(1100),LMP(600)
      EQUIVALENCE  (ID,LOUT(1)),(IDENT,LMP(1))
      COMMON GRP(20),SOR(20),T(20,20),XT(20),V1(20),V2(20),V3(20)
     1,V4(20),V5(20),CP(20),CN(20),CP2(20),CN2(20),Y(21),DUM21(2839)
      COMMON IX,SIGY(18,54),GNU(18,54),SIGA(18,54),P(18,54),PF(18,54),
     1F(20,54),DEL(54),FS(54),SSC(10),S1(10),SIGABS(10),SIGIN(10),
     2SIGX(10),C(10),AN(10),SD(10),PROB(25,10),NRIG(18),
     3ER(200),GMN(200),GMGM(200),GMF(200),SPIN(200),AMASS(18),
     4SIGP(18),JONE(18),JTWO(18),DZERO(18),DONE(18),DTWO(18),ETA(20),
     5Q(20),ESC,MDONE(18),KEY,MCURR,PZ(1001),PZ1(1001),DELSIG,A1(18),
     6EBK(55),TEMP(18),SIGEFY(18),NDONE,NLIB,THFLX(630)
      DIMENSION HOLT(12)
      COMMON/VDAT/ VINV(54),VAV(3)
      IF(NTHRN.GT.0) GO TO 3
      READ(INT2)(LMP(I),I=1,600),(LOUT(I),I=1,1100)
      DO 5 I=1,630
    5 THFLX(I)=0.0
      GO TO 2
    3 READ(INT2)(LMP(I),I=1,600),(LOUT(I),I=1,1100),THFLX
    2 CONTINUE
      READ(LIB2)IX,NLIB,(DEL(I),I=1,IX),(EBK(I),I=1,IX),EB
     1,HOLT
      EBK(IX+1)=EB
C   *** GENERATE INVERSE VELOCITY
      VV2=SQRT(EBK(1)/.0253)*2200.
      DO 300 K=1,54
      VV1=VV2
      VV2=SQRT(EBK(K+1)/.0253)*2200.
  300 VINV(K)=2./(VV1+VV2)
      WRITE(NTOUT,1010)
      READ(LIB2)(FS(I),I=1,IX)
  190 WRITE(NTOUT,31)IDENT,HOL
      WRITE(NTOUT,1000)HOLT
CE    CALL ZA09AS(HOLA(1))
      DO 200 N=1,4
  200 HOLA(N+5) = HOLT(N)
      RETURN
   31 FORMAT(1H1,/,1X,'CASE ',I5,4X,9A4   )
 1000 FORMAT(47H0HAMEX         EPITHERMAL LIBRARY TAPE LABELED ,12A4)
 1010 FORMAT(1H1)
      END
      SUBROUTINE RTBLIB(IG)
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* RTBLIB * HAMMER   VERSION /JB-1077/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      COMMON/PROFIL/ EBY(2),WDXPR(3),JPR(3),LPR(3),KPR(3),NPR(3),
     1 ICAL,DPR(1)
      COMMON /CNTRL/ IDBCH,NCASE,NFLOG,BTTL(9),NTIN,NTOUT,NTPUN,
     1NCHAIN,LIB1,LIB2,LIB3,INT1,INT2,NSC1,LNK(10),NTHCS,NEPCS,KLIB1,
     2KLIB2,KLIB3,DUM1(32),NTHGP,IBNDRY(12),EPCUT,DUM2(45),NCPRN,NCPPT,
     3DUM3(10),NTHRN,NTHPT,NTHPN,DUM4(9),NEPRN,NEPPT,NEPPN,NEPSG,NEPAG,
     4LUM5(19),NEDRN,NEDPT,NEDPN,NEDNB,NEDFW,NEDRB,NEDAX,NEDNU,DUM6(16)
      COMMON /LIMP/ IDENT,NX,MX,NRX,ISOX,ISOXE,NGEOM,NP1B1,NBCT,NXP,
     1BSQD,HOL(9),NPT(20),THT(20),MXAS(20),ILHI(20),NRBP(20),DEGC(20),
     2WSTBA(18),WSTBB(18),CONCTA(18,10),LIMT(10),RIN(20),RAD(20),
     3ROUT(20),VOL(20),MTBL(20),REGV(20),FISD(20),HOLID(3,18),DUM7(40)
      COMMON ID,HOLA(9),BALT(18,4,5),FOIL(20,4,5),FOGX(4,6),
     1FOX(20,4),DUMB(20),OTGC(5),OTGA(30,6),DUM20(21)
      COMMON GRP(20),SOR(20),T(20,20),XT(20),V1(20),V2(20),V3(20)
     1,V4(20),V5(20),CP(20),CN(20),CP2(20),CN2(20),Y(21),DUM22(2779),
     2LOCR(20),DUM23(40)
      DIMENSION DZ(18),DATA(165),F1(20),T1(20),F2(20),TO(20),S2(20),
     1QO(20),Q1(20),FX(20),CT(18,10)
      EQUIVALENCE(GRP(1),DZ(1),DATA(1)),(XT(1),F1(1),T1(1)),
     1(V1(1),F2(1),TO(1)),(V2(1),S2(1),QO(1)),(V3(1),Q1(1))
      EQUIVALENCE (FX(1),FISD(1)),(CT(1,1),CONCTA(1,1)),(LIB2,NLIB2)
      COMMON IX,SIGY(18,54),GNU(18,54),SIGA(18,54),P(18,54),PF(18,54),
     1F(20,54),DEL(54),FS(54),SSC(10),S1(10),SIGABS(10),SIGIN(10),
     2SIGX(10),C(10),AN(10),SD(10),PROB(25,10),NRIG(18),
     3ER(200),GMN(200),GMGM(200),GMF(200),SPIN(200),AMASS(18),
     4SIGP(18),JONE(18),JTWO(18),DZERO(18),DONE(18),DTWO(18),ETA(20),
     5Q(20),ESC,MDONE(18),KEY,MCURR,PZ(1001),PZ1(1001),DELSIG,A1(18),
     6EBK(55),TEMP(18),SIGEFY(18),NDONE,NLIB,THFLX(630),ANH(10),
     7SDH(10),S1H(10),DUM41(865),PS(18,54),OSE0(18,54),OS0(18,54),
     8OS1(18,54),OXS0(18,54),XL(18,54)
      COMMON/NITRAB/ INO
      COMMON/CADY/CDYC(10),IGCDY,ICADY
C
C     THIS UPDATED VERSION READS IN THE RESOLVED RESONANCE GROUPS AN
C     ADDITIONAL RECORD FOR ISOTOPES WITH RESONANCE PROFILE TABULATIONS.
C     CONSEQUENTLY THE END OF DATA FOR A GROUP IS REACHED WHEN WDX IS
C     NEGATIVE.
C
      ISOX=ISOX+ISOXE
      ICADY=LUM5(1)
C
      DO5I=1,348
    5 SSC(I)=0.
      DO 6 I=1,30
    6 ANH(I)=0.0
      NRED=0
      NL=0
      MPR=0
      KST=0
      ICAL=0
      DO 7 L=1,3
      WDXPR(L)=0.0
    7 LPR(L)=0
   10 NRED=NRED+1
      READ(LIB2)IFL,WDX,NIN,NR ,(DATA(I),I=1,IFL)
      IPREAD=0
      IFLM=IFL
      IF(IG.EQ.1)IFLM=IFL-9
      IF(WDX)150,150,20
   20 DO110I=1,ISOX
      IF(WDX.NE.WSTBA(I)) GO TO 110
      IF(NR.EQ.1.AND.DATA(IFLM).LT.0.0)GO TO 21
      GO TO 22
   21 READ(LIB2)LST,(DPR(KST+L),L=1,LST)
      IPREAD=1
      IF(INO.GE.4) GOTO 22
      MPR=MPR+1
      IF(MPR.GT.3)GO TO 9000
      KPR(MPR)=KST+1
      WDXPR(MPR)=WDX
      KST=KST+LST
      LPR(MPR)=LST
      NPR(MPR)=4
      IF(DATA(IFLM).EQ.-1.0) NPR(MPR) = 3
   22 CONTINUE
   30 SIGY(I,IG)=DATA(5)
      GNU(I,IG)=DATA(8)
      SIGA(I,IG)=DATA(5)+DATA(3)
      OSE0(I,IG)=DATA(2)
      XL(I,IG)=DATA(6)
      OS0(I,IG)=DATA(2)+DATA(4)
      OS1(I,IG)=DATA(7)
      OXS0(I,IG)=DATA(9)
      NRIG(I)=NR
      IF(NR)31,34,31
   31 NRP=IABS(NR)
      LOCR(I)=NL
      DO33N=1,NRP
      NL=NL+1
      IF(NL-200)36,36,35
   35 NRIG(I)=ISIGN(N-1,NRIG(I))
      GO TO 34
   36 LOC=NIN+10+(N-1)*5
      ER(NL)=DATA(LOC)
      GMN(NL)=DATA(LOC+1)
      GMGM(NL)=DATA(LOC+2)
      GMF(NL)=DATA(LOC+3)
   33 SPIN(NL)=DATA(LOC+4)
   34 AMASS(I)=DATA(1)
      SIGP(I)=DATA(2)
      DO100M=1,MX
      IF(CT(I,M))40,100,40
   40 SSC(M)=SSC(M)+DATA(2)*CT(I,M)
      SIGABS(M)=SIGABS(M)+(DATA(3)+DATA(5))*CT(I,M)
      SIGIN(M)=SIGIN(M)+DATA(4)*CT(I,M)
      SIGX(M)=SIGX(M)+DATA(5)*CT(I,M)*DATA(8)
      WDP = AMOD(WDX,10000.)
      IF(WDP.NE.1001.) GO TO 60
   50 C(M)=C(M)+DATA(2)*CT(I,M)
      ANH(M)=ANH(M)+DATA(6)*DATA(9)*CT(I,M)
      SDH(M)=SDH(M)+DATA(9)*CT(I,M)
      S1H(M)=S1H(M)+DATA(7)*CT(I,M)
      GOTO70
   60 AN(M)=AN(M)+DATA(6)*DATA(9)*CT(I,M)
      SD(M)=SD(M)+DATA(9)*CT(I,M)
   70 S1(M)=S1(M)+DATA(7)*CT(I,M)
      IF(NIN)100,100,80
   80 LOW=IG-NIN+1
      DO90N=LOW,IG
   90 PROB(N,M)=PROB(N,M)+DATA(N+9)*CT(I,M)
  100 CONTINUE
  110 CONTINUE
      IF(NR.EQ.1.AND.DATA(IFLM).LT.0.0.AND.IPREAD.EQ.0)READ(LIB2)
      GOTO10
  150 ISOX=ISOX-ISOXE
      DO 160 M=1,MX
      IF(ANH(M).GT..0001)
     1CDYC(M)=SDH(M)**2/ANH(M)
      IF(ANH(M).LE..0001) CDYC(M)=0.0
  160 CONTINUE
      IF(IG.LT.53) RETURN
      IF(ICADY.NE.1) RETURN
      WRITE(NTOUT,1114) IG
      WRITE(NTOUT,1112) (CDYC(M),M=1,MX)
      RETURN
 9000 WRITE(NTOUT,9001)
      STOP
 1112 FORMAT(4X,6(1H.),4X,1P9E11.4)
 1114 FORMAT(//,4X,'IG=',I3,4X,'CDYC(M)  M=1,MX')
 9001 FORMAT(1X,44H MORE THAN THREE PROFILE ISOTOPES IN LATTICE)
      END
      SUBROUTINE ZUTIN
CE          HAMNDP2.FOR
      COMMON /CNTRL/ IDBCH,NCASE,NFLOG,BTTL(9),NTIN,NTOUT,NTPUN,
     1NCHAIN,LIB1,LIB2,LIB3,INT1,INT2,NSC1,LNK(10),NTHCS,NEPCS,KLIB1,
     2KLIB2,KLIB3,DUM1(32),NTHGP,IBNDRY(12),EPCUT,DUM2(45),NCPRN,NCPPT,
     3DUM3(10),NTHRN,NTHPT,NTHPN,DUM4(9),NEPRN,NEPPT,NEPPN,NEPSG,NEPAG,
     4DUM5(19),NEDRN,NEDPT,NEDPN,NEDNB,NEDFW,NEDRB,NEDAX,NEDNU,DUM6(16)
      COMMON /LIMP/ IDENT,NX,MX,NRX,ISOX,ISOXE,NGEOM,NP1B1,NBCT,NXP,
     1BSQD,HOL(9),NPT(20),THT(20),MXAS(20),ILHI(20),NRBP(20),DEGC(20),
     2WSTBA(18),WSTBB(18),CONCTA(18,10),LIMT(10),RIN(20),RAD(20),
     3ROUT(20),VOL(20),MTBL(20),REGV(20),FISD(20),HOLID(3,18),DUM7(40)
      COMMON ID,HOLA(9),BALT(18,4,5),FOIL(20,4,5),FOGX(4,6),
     1FOX(20,4),DUMB(20),OTGC(5),OTGA(30,6),DUM20(21)
      COMMON GRP(20),SOR(20),T(20,20),XT(20),V1(20),V2(20),V3(20)
     1,V4(20),V5(20),CP(20),CN(20),CP2(20),CN2(20),Y(21),DUM21(2839)
      DIMENSION DZ(18),DATA(165),F1(20),T1(20),F2(20),TO(20),S2(20),
     1QO(20),Q1(20),FX(20),CT(18,10)
      EQUIVALENCE(GRP(1),DZ(1),DATA(1)),(XT(1),F1(1),T1(1)),
     1(V1(1),F2(1),TO(1)),(V2(1),S2(1),QO(1)),(V3(1),Q1(1))
      EQUIVALENCE (FX(1),FISD(1)),(CT(1,1),CONCTA(1,1)),(LIB2,NLIB2)
      COMMON IX,SIGY(18,54),GNU(18,54),SIGA(18,54),P(18,54),PF(18,54),
     1F(20,54),DEL(54),FS(54),SSC(10),S1(10),SIGABS(10),SIGIN(10),
     2SIGX(10),C(10),AN(10),SD(10),PROB(25,10),NRIG(18),
     3ER(200),GMN(200),GMGM(200),GMF(200),SPIN(200),AMASS(18),
     4SIGP(18),JONE(18),JTWO(18),DZERO(18),DONE(18),DTWO(18),ETA(20),
     5Q(20),ESC,MDONE(18),KEY,MCURR,PZ(1001),PZ1(1001),DELSIG,A1(18),
     6EBK(55),TEMP(18),SIGEFY(18),NDONE,NLIB,DUMMY(7863)
      DO160I=1,ISOX
      VT=0.
      T2=0.
      JONE(I)=0
      JTWO(I)=0
      DONE(I)=0.
      DTWO(I)=0.
      DO10J=1,ISOX
   10 DZ(J)=0.
      DO40N=1,NRX
      M=MXAS(N)
      IF(CT(I,M))20,40,20
   20 VT=VT+REGV(N)
      T2 = T2 + REGV(N)*DEGC(N)
      DO30J=1,ISOX
   30 DZ(J)=DZ(J)+REGV(N)*CT(J,M)
   40 CONTINUE
      IF(VT)50,50,60
   50 DZERO(I)=0.
      GOTO160
   60 DO70J=1,ISOX
   70 DZ(J)=DZ(J)/VT
      DZERO(I)=DZ(I)
      TEMP(I)=T2/VT+273.2
      JSML=0
      JBIG=0
      SMALL=500.
      BIG=0.
      DO120J=1,ISOX
      IF(DZ(J))75,120,75
   75 IF(I-J)80,120,80
   80 IF(AMASS(J)-SMALL)90,120,120
   90 JSML=J
      SMALL=AMASS(J)
  120 CONTINUE
      DO125J=1,ISOX
      IF(DZ(J))85,125,85
   85 IF((I-J)*(J-JSML))100,125,100
  100 IF(DZ(J)-BIG)125,110,110
  110 JBIG=J
      BIG=DZ(J)
  125 CONTINUE
      IF(JSML)140,140,130
  130 DONE(I)=DZ(JSML)
      JONE(I)=JSML
  140 IF(JBIG)160,160,150
  150 DTWO(I)=DZ(JBIG)
      JTWO(I)=JBIG
  160 CONTINUE
      RETURN
      END
      SUBROUTINE PTBL(IG,J)
CPTBL  ======HAMMER===BNL-SRL LATTICE ANALYSIS PROGRAM============HAMLET
CPTBL
      COMMON /CNTRL/ IDBCH,NCASE,NFLOG,BTTL(9),NTIN,NTOUT,NTPUN,
     1NCHAIN,LIB1,LIB2,LIB3,INT1,INT2,NSC1,LNK(10),NTHCS,NEPCS,KLIB1,
     2KLIB2,KLIB3,DUM1(32),NTHGP,IBNDRY(12),EPCUT,DUM2(45),NCPRN,NCPPT,
     3DUM3(10),NTHRN,NTHPT,NTHPN,DUM4(9),NEPRN,NEPPT,NEPPN,NEPSG,NEPAG,
     4DUM5(19),NEDRN,NEDPT,NEDPN,NEDNB,NEDFW,NEDRB,NEDAX,NEDNU,DUM6(16)
      COMMON /LIMP/ IDENT,NX,MX,NRX,ISOX,ISOXE,NGEOM,NP1B1,NBCT,NXP,
     1BSQD,HOL(9),NPT(20),THT(20),MXAS(20),ILHI(20),NRBP(20),DEGC(20),
     2WSTBA(18),WSTBB(18),CONCTA(18,10),LIMT(10),RIN(20),RAD(20),
     3ROUT(20),VOL(20),MTBL(20),REGV(20),FISD(20),HOLID(3,18),DUM7(40)
      COMMON ID,HOLA(9),BALT(18,4,5),FOIL(20,4,5),FOGX(4,6),
     1FOX(20,4),DUMB(20),OTGC(5),OTGA(30,6),DUM20(21)
      COMMON GRP(20),SOR(20),T(20,20),XT(20),V1(20),V2(20),V3(20)
     1,V4(20),V5(20),CP(20),CN(20),CP2(20),CN2(20),Y(21),DUM21(2839)
      DIMENSION DZ(18),DATA(165),F1(20),T1(20),F2(20),TO(20),S2(20),
     1QO(20),Q1(20),FX(20),CT(18,10)
      EQUIVALENCE(GRP(1),DZ(1),DATA(1)),(XT(1),F1(1),T1(1)),
     1(V1(1),F2(1),TO(1)),(V2(1),S2(1),QO(1)),(V3(1),Q1(1))
      EQUIVALENCE (FX(1),FISD(1)),(CT(1,1),CONCTA(1,1)),(LIB2,NLIB2)
      COMMON IX,SIGY(18,54),GNU(18,54),SIGA(18,54),P(18,54),PF(18,54),
     1F(20,54),DEL(54),FS(54),SSC(10),S1(10),SIGABS(10),SIGIN(10),
     2SIGX(10),C(10),AN(10),SD(10),PROB(25,10),NRIG(18),
     3ER(200),GMN(200),GMGM(200),GMF(200),SPIN(200),AMASS(18),
     4SIGP(18),JONE(18),JTWO(18),DZERO(18),DONE(18),DTWO(18),ETA(20),
     5Q(20),ESC,MDONE(18),KEY,MCURR,PZ(1001),PZ1(1001),DELSIG,A1(18),
     6EBK(55),TEMP(18),SIGEFY(18),NDONE,NLIB,DUMMY(7863)
      COMMON/CADY/CDYC(10),IGCDY,ICADY
      IGCDY=IG
      SIGPZ=SIGP(J)
      J1=JONE(J)
      IF(J1)20,10,20
   10 SIGM1=0.
      GOTO30
   20 SIGM1=SIGP(J1)*DONE(J )/DZERO(J)
   30 J2=JTWO(J)
      IF(J2)50,40,50
   40 SIGM2=0.
      GOTO60
   50 SIGM2=SIGP(J2)*DTWO(J )/DZERO(J)
   60 SIGT=(SIGPZ+SIGM1+SIGM2)*DZERO(J)
      FLX=0.
      VO=0.
      DO110N=1,NX
      QO(N)=0.
      M=MTBL(N)
      IF(CT(J,M))80,70,80
   70 XT(N)=SSC(M)
      IF(IG.GE.53.AND.ICADY.EQ.1) XT(N)=CDYC(M)
      GOTO110
   80 XT(N)=SIGT
      DO90NR=1,NRX
      IF(N-NRBP(NR))100,100,90
   90 CONTINUE
      NR=NRX
  100 RMAX=THT(NR)
      QO(N)=VOL(N)
      VO=VO+VOL(N)
  130 FLX=FLX+VOL(N)*F(N,IG)
  110 CONTINUE
      IF(NRIG(J))160,160,200
  160 CALLPZCALC
      PO=0.
      P1=0.
      DO120N=1,NX
      IF(QO(N))170,180,170
  170 PO=PO+TO(N)
      GOTO120
  180 P1=P1+TO(N)*F(N,IG)
  120 CONTINUE
      PO=PO/VO
      IF(KEY)121,122,121
  121 P1=1.-PO
      GOTO123
  122 P1=P1/FLX
  123 A1(J)=P1+PO
      SIGEFY(J)=SIGT*(P1/PO)
       GOTO415
  200 TEST=RMAX-THT(1)
      DELSIG=0.02/RMAX
      IGO=2
      CALLDANC(C1)
      SIG=0.
      PZ1(1)=1.
      PZ(1)=0.
      DO 310 N=IGO,1001
      SIG =SIG +DELSIG
      IF(KEY)210,230,210
  210 IF(TEST)230,220,230
  220 ARG=SIG*RMAX
      IF(NGEOM-1) 221,221,222
  221 ARG=ARG+ARG
      CALLESCAPE(1.,   ARG,P1,PO)
      PZ1(N)=P1+P1
      GOTO223
  222 CALL ESCAPE(0.0,ARG,P1,PO)
      PZ1(N)=P1
  223 PZ1(N)=PZ1(N)*(1.-C1)/(1.-(1.-2.*ARG*PZ1(N))*C1)
      GOTO310
  230 DO250K=1,NX
      IF(QO(K))240,250,240
  240 XT(K)=SIG
  250 CONTINUE
  260 CALLPZCALC
      PZ(N)=0.
  270 PZ1(N)=0.
      IF(KEY)305,275,305
  275 DO300K=1,NX
      IF(QO(K))290,280,290
  280 PZ1(N)=PZ1(N)+TO(K)*F(K,IG)
      GOTO300
  290 PZ(N)=PZ(N)+TO(K)
  300 CONTINUE
      PZ1(N)=PZ1(N)/FLX
      PZ(N)=PZ(N)/VO
      GOTO310
  305 DO307K=1,NX
      IF(QO(K))306,307,306
  306 PZ(N)=PZ(N)+TO(K)
  307 CONTINUE
      PZ(N)=PZ(N)/VO
      PZ1(N)=1.-PZ(N)
  310 CONTINUE
      CALL PCALC(P1,PO,SIGT)
      IF(KEY)190,320,190
  190 A1(J)=1.
      SIGEFY(J)=SIGT*(1.-PO)/PO
      GOTO334
  320 A1(J)=PO+P1
  330 SIGEFY(J)=SIGT*P1/PO
  334 NDONE=NDONE+1
  335 DO370I=1,ISOX
      DO360M=1,MX
      IF(CT(J,M))350,340,350
  340 IF(CT(I,M))370,360,370
  350 IF(CT(I,M))360,370,360
  360 CONTINUE
      IF(NRIG(J))367,367,365
  365 MDONE(I)=NDONE
  367 CONTINUE
      SIGEFY(I)=SIGEFY(J)
      A1(I)=A1(J)
  370 CONTINUE
      IF(NRIG(J))415,375,375
  375 MC=MCURR
      ND=NDONE
      IF(MC+1-ND)380,400,400
  380 MD=MDONE(1)
      M1=ND-1-MD
      DO390M=1,M1
  390  READ(NSC1)
  400 MCURR=NDONE
      IF(KEY)420,410,420
  410  WRITE(NSC1) DELSIG,PZ1,PZ
  415 RETURN
  420  WRITE(NSC1) DELSIG,PZ1
      RETURN
      END
      SUBROUTINE DANC(C1)
CDANC  ======HAMMER===BNL-SRL LATTICE ANALYSIS PROGRAM============HAMLET
CDANC DANCOFF CORRECTION FOR SINGLE RODS
      COMMON /CNTRL/ IDBCH,NCASE,NFLOG,BTTL(9),NTIN,NTOUT,NTPUN,
     1NCHAIN,LIB1,LIB2,LIB3,INT1,INT2,NSC1,LNK(10),NTHCS,NEPCS,KLIB1,
     2KLIB2,KLIB3,DUM1(32),NTHGP,IBNDRY(12),EPCUT,DUM2(45),NCPRN,NCPPT,
     3DUM3(10),NTHRN,NTHPT,NTHPN,DUM4(9),NEPRN,NEPPT,NEPPN,NEPSG,NEPAG,
     4DUM5(19),NEDRN,NEDPT,NEDPN,NEDNB,NEDFW,NEDRB,NEDAX,NEDNU,DUM6(16)
      COMMON /LIMP/ IDENT,NX,MX,NRX,ISOX,ISOXE,NGEOM,NP1B1,NBCT,NXP,
     1BSQD,HOL(9),NPT(20),THT(20),MXAS(20),ILHI(20),NRBP(20),DEGC(20),
     2WSTBA(18),WSTBB(18),CONCTA(18,10),LIMT(10),RIN(20),RAD(20),
     3ROUT(20),VOL(20),MTBL(20),REGV(20),FISD(20),HOLID(3,18),DUM7(40)
      COMMON ID,HOLA(9),BALT(18,4,5),FOIL(20,4,5),FOGX(4,6),
     1FOX(20,4),DUMB(20),OTGC(5),OTGA(30,6),DUM20(21)
      COMMON GRP(20),SOR(20),T(20,20),XT(20),V1(20),V2(20),V3(20)
     1,V4(20),V5(20),CP(20),CN(20),CP2(20),CN2(20),Y(21),DUM21(2839)
      COMMON IX,SIGY(18,54),GNU(18,54),SIGA(18,54),P(18,54),PF(18,54),
     1F(20,54),DEL(54),FS(54),SSC(10),S1(10),SIGABS(10),SIGIN(10),
     2SIGX(10),C(10),AN(10),SD(10),PROB(25,10),NRIG(18),
     3ER(200),GMN(200),GMGM(200),GMF(200),SPIN(200),AMASS(18),
     4SIGP(18),JONE(18),JTWO(18),DZERO(18),DONE(18),DTWO(18),ETA(20),
     5Q(20),ESC,MDONE(18),KEY,MCURR,PZ(1001),PZ1(1001),DELSIG,A1(18),
     6EBK(55),TEMP(18),SIGEFY(18),NDONE,NLIB,DUMMY(7863)
      COMMON/CADY/CDYC(10),IGCDY,ICADY
      IG=IGCDY
      IF(NRX.LE.1) GO TO 200
      IF(NGEOM-2)10,10,20
   10 C2=0.95231261
      C3=0.12
      GOTO30
   20 C2=0.8862269
      C3=0.08
   30 LOW=NPT(1)+1
      SL=0.0
      IF(LOW-NX)35,35,45
   35 DO40N=LOW,NX
      M=MTBL(N)
      IF(IG.LT.53.OR.ICADY.NE.1)
     1SL=SL+     (ROUT(N)-ROUT(N-1))*(SSC(M)+SIGIN(M)+SIGABS(M))
      IF(IG.GE.53.AND.ICADY.EQ.1)
     1SL=SL+(ROUT(N)-ROUT(N-1))*(CDYC(M)+
     2SIGIN(M)+SIGABS(M))
   40 CONTINUE
   45 IF(NGEOM-1)70,70,73
   70 SL=SL*2.
      IF(SL-1.)71,71,72
   71 C1=1.-SL*(2.+SL*(ALOG(SL)-.9228-SL*(.332-.0354*SL)))
      GOTO111
   72 C1=EXP(-SL)*(2.+6.16/(SL+3.)**2)/(SL+3.)
      GOTO111
   73 CONTINUE
      VMOF=(ROUT(NX)/ROUT(LOW-1))
      SL=SL*2.*(VMOF+1.)
      VMOF=VMOF**2-1.
      VMOF=(C2*SQRT(VMOF+1.)-1.)/VMOF-C3
      IF(VMOF)51,51,52
   52 C2=VMOF*SL
      IF(C2-20.)50,60,60
   51 C2=0.
   50 C1=EXP(-C2)/(1.+SL-C2)
      GOTO111
   60 C1=0.
  111 IF(NEPPT)110,113,110
  110 WRITE(NTOUT,112)C1
  112 FORMAT(1H ,75X,2HC=,1PE14.6)
  113 RETURN
  200 C1=1.0
      GOTO111
      END
      SUBROUTINE PZCALC
CPZCALC
CPZCAL ======HAMMER===BNL-SRL LATTICE ANALYSIS PROGRAM============HAMLET
      COMMON /CNTRL/ IDBCH,NCASE,NFLOG,BTTL(9),NTIN,NTOUT,NTPUN,
     1NCHAIN,LIB1,LIB2,LIB3,INT1,INT2,NSC1,LNK(10),NTHCS,NEPCS,KLIB1,
     2KLIB2,KLIB3,DUM1(32),NTHGP,IBNDRY(12),EPCUT,DUM2(45),NCPRN,NCPPT,
     3DUM3(10),NTHRN,NTHPT,NTHPN,DUM4(9),NEPRN,NEPPT,NEPPN,NEPSG,NEPAG,
     4DUM5(19),NEDRN,NEDPT,NEDPN,NEDNB,NEDFW,NEDRB,NEDAX,NEDNU,DUM6(16)
      COMMON /LIMP/ IDENT,NX,MX,NRX,ISOX,ISOXE,NGEOM,NP1B1,NBCT,NXP,
     1BSQD,HOL(9),NPT(20),THT(20),MXAS(20),ILHI(20),NRBP(20),DEGC(20),
     2WSTBA(18),WSTBB(18),CONCTA(18,10),LIMT(10),RIN(20),RAD(20),
     3ROUT(20),VOL(20),MTBL(20),REGV(20),FISD(20),HOLID(3,18),DUM7(40)
      COMMON ID,HOLA(9),BALT(18,4,5),FOIL(20,4,5),FOGX(4,6),
     1FOX(20,4),DUMB(20),OTGC(5),OTGA(30,6),DUM20(21)
      COMMON GRP(20),SOR(20),T(20,20),XT(20),V1(20),V2(20),V3(20)
     1,V4(20),V5(20),CP(20),CN(20),CP2(20),CN2(20),Y(21),DUM21(2839)
      DIMENSION DZ(18),DATA(165),F1(20),T1(20),F2(20),TO(20),S2(20),
     1QO(20),Q1(20),FX(20),CT(18,10)
      EQUIVALENCE(GRP(1),DZ(1),DATA(1)),(XT(1),F1(1),T1(1)),
     1(V1(1),F2(1),TO(1)),(V2(1),S2(1),QO(1)),(V3(1),Q1(1))
      EQUIVALENCE (FX(1),FISD(1)),(CT(1,1),CONCTA(1,1)),(LIB2,NLIB2)
      COMMON IX,SIGY(18,54),GNU(18,54),SIGA(18,54),P(18,54),PF(18,54),
     1F(20,54),DEL(54),FS(54),SSC(10),S1(10),SIGABS(10),SIGIN(10),
     2SIGX(10),C(10),AN(10),SD(10),PROB(25,10),NRIG(18),
     3ER(200),GMN(200),GMGM(200),GMF(200),SPIN(200),AMASS(18),
     4SIGP(18),JONE(18),JTWO(18),DZERO(18),DONE(18),DTWO(18),ETA(20),
     5Q(20),ESC,MDONE(18),KEY,MCURR,PZ(1001),PZ1(1001),DELSIG,A1(18),
     6EBK(55),TEMP(18),SIGEFY(18),NDONE,NLIB,DUMMY(7863)
      EQUIVALENCE (R,ROUT),(D,VOL),(X,XT),(U,QO),(S,TO),(NX,NPTS)
      DIMENSION AV1(20),AV2(20)
C     R=OUTER RADII, D=VOLUMES
C     NX=NO. POINTS, X=CROSS SECTIONS, S=COLL. PROB.
      DIMENSION R(1),D(1),X(1),S( 1),U( 1)
      REFL=1.
      DO 100N=1,NX
      IF(NGEOM-1)11,11,15
   11 A2=1.
      AY=X (N)*VOL(N)
      AX=4.*VOL(N)*X (N)
      GOTO25
   15 AY=X(N)*(R(N)-RIN(N))
      A2=RIN(N)/R(N)
      AX = 0.0
      IF(N-1)25,25,19
   19 AX=0.63662*D(N)*X(N)/RIN(N)
   25 CALL ESCAPE(A2,AY,PA,PI)
      AV1(N)=PI
      V5(N)=1.-AX*PI
      AV2(N)=A2*V5(N)
      V3(N)=PA
  100 V4(N)=1.-A2*(1.+AX*(PA-PI))
      IF(NGEOM-1)101,101,102
  101  PA1=AV1(1)*(1.+V5(1))
      CN1=V5(1)**2
      GOTO103
  102 PA1=V3(1)
      CN1=   (1.-0.63662*D(1)*X(1)*PA1/R(1))
  103 CONTINUE
      NM1=NPTS-1
      CN2(NX)=0.
      DO20N=1,NM1
      L=NX-N
   20 CN2(L)=AV1(L+1)*U(L+1)+AV2(L+1)*CN2(L+1)
      CP2(1)=PA1*U(1)+CN1*CN2(1)
      DO30N=2,NX
   30 CP2(N)=V3(N)*U(N)+V4(N)*CN2(N)+V5(N)*CP2(N-1)
      CN(NX)=1.
      DO40N=1,NM1
      L=NX-N
   40 CN (L)=AV1(L+1)*U(L+1)+AV2(L+1)*CN (L+1)
      CP (1)=PA1*U(1)+CN1*CN (1)
      DO50N=2,NX
   50 CP (N)=V3(N)*U(N)+V4(N)*CN (N)+V5(N)*CP (N-1)
      CP(NX)=CP2(NX)/(1.-REFL*(CP(NX)-CP2(NX)))
      CN(NX)=REFL*CP(NX)
      DO60N=1,NM1
      CP(N)=CP2(N)+CN(NX)*(CP(N)-CP2(N))
   60 CN(N)=CN2(N)+CN(NX)*(CN(N)-CN2(N))
      S(1)   =(U(1)+CN(1)-CP(1))
  175 DO 200 N=2,NX
  200 S(N)   =(U(N  )+CN(N)-CP(N)+CP(N-1)-CN(N-1))
  300 CONTINUE
      RETURN
      END
      SUBROUTINE PCALC (PC,PO,SIGT)
CPCALC ======HAMMER===BNL-SRL LATTICE ANALYSIS PROGRAM============HAMLET
CPCALC
      COMMON DUMY(12182),KEY(2),PZ(1001),PZ1(1001),DELSIG
      RN=SIGT/DELSIG
       IF(RN-999.)7,40,40
    7 IN=RN
      RN=RN-FLOAT(IN)
    5  IF(IN)15,15,10
   15  PC=(PZ1(1)*(1.-RN)*(2.-RN)*(3.-RN)+RN*(PZ1(4)*(1.-RN)*(2.-RN)
     1 +3.*(3.-RN)*(PZ1(2)*(2.-RN)-PZ1(3)*(1.-RN))))/6.
       PO=(PZ (1)*(1.-RN)*(2.-RN)*(3.-RN)+RN*(PZ (4)*(1.-RN)*(2.-RN)
     1 +3.*(3.-RN)*(PZ (2)*(2.-RN)-PZ (3)*(1.-RN))))/6.
       IF(KEY(1))30,35,30
   10 PC=PZ1(IN+1)+RN*(PZ1(IN+2)-PZ1(IN+1))-RN*(RN-1.)/4.*(PZ1(IN+2)
     1+PZ1(IN+1)-PZ1(IN)-PZ1(IN+3))
      IF(KEY(1))30,20,30
   20 PO=PZ(IN+1)+RN*(PZ(IN+2)-PZ(IN+1))-RN*(RN-1.)/4.*(PZ(IN+2)
     1+PZ(IN+1)-PZ(IN)-PZ(IN+3))
      RETURN
   30 PO=1.-PC
   35  RETURN
   40 IF(PZ1(951))41,41,45
   41 PC=0.
      GOTO49
   45 AP=PZ1(1001)/PZ1(951)/0.95
      XP=950.*DELSIG/SIGT
      BP=(AP-1.)/(AP-0.9025)
      PC=PZ1(951)*XP*(1.-BP*XP*XP)/(1.-BP)
   49 IF(KEY(1))30,50,30
   50 IF(PZ1(951)-1.)55,51,51
   51 PO=1.0
      GOTO60
   55 AP=(PZ(1001)-1.)/(PZ(951)-1.)/0.95
      BP=(AP-1.)/(AP-0.9025)
      PO=1.+(PZ(951)-1.)*XP*(1.-BP*XP*XP)/(1.-BP)
   60 RETURN
      END
      SUBROUTINE ESCAPE(VKP,XP,PA,PI)
      X=XP
      VK=VKP
      IF(X)7,2,7
    2 GIX=1.0
      GOX=.63662
      SOX=1.
      SIX=GIX
      GO TO 21
    7 IF(X-1.0)8,8,13
    8 XLOG=ALOG(X)
      GIX=1.+.5*X*(XLOG-.9228)-.1660*X**2+.0177*X**3
      GOX=.63662-0.5*X+.10610*X**2*(1.94926-XLOG)+.00265*X**4*(1.89926-
     1     XLOG)
      SOX=1.-1.33333*X-X**2*((.03243*X**2+.49872)*XLOG-.05505*X**2-
     1    .68542)
      SIX=GIX
      GO TO 21
   13 X3=X+3.0
      X4=4.0*X+13.0
      GIX=(.5-EXP(-X)*(1.+3.08/X3**2)/X3)/X
      GOX=(.5-EXP(-X)*SQRT(2.54647/X4)*(1.+18.75/X4**2))/X
      T=1.0/X**2
      SOX=((((-.12032*T+.26569)*T-.13533)*T-.19625)*T+1.0)/(X*2.)
      SIX=GIX
   21 IF(VK)24,22,24
   22 BLAM=0.0
      GO TO 29
   24 IF(VK-1.0)27,25,27
   25 BLAM=1.0
      GO TO 29
   27 ROOT=SQRT(1.0-VK**2)
      BLAM=(((ROOT+ATAN(VK/ROOT)/VK-1.5708*VK)/(1.0-VK))-2.0)*.87597
   29 VKNU=1.8+.3/((1.01-VK)*(1.+4.*X ))
      ALPHA=VK-(VK-BLAM)*EXP(-VKNU*X)
      G=(1.0-ALPHA)*GOX+ALPHA*GIX
      BARK=1.0-VK
      BIGL=VK*BARK*((6.0*X-3.0)/(2.0*X+1.0))
      S=((BARK-BIGL)*SOX+VK*SIX)/(1.0-BIGL)
      PI=G*VK/(1.0+VK)
      PA=S-PI
      RETURN
      END
      SUBROUTINE RESC(IG)
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
CE    VERSAO MODIFICADA
CE
C* RESC   * HAMMER   VERSION /JB-1077/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      COMMON /CNTRL/ IDBCH,NCASE,NFLOG,BTTL(9),NTIN,NTOUT,NTPUN,
     1NCHAIN,LIB1,LIB2,LIB3,INT1,INT2,NSC1,LNK(10),NTHCS,NEPCS,KLIB1,
     2KLIB2,KLIB3,DUM1(32),NTHGP,IBNDRY(12),EPCUT,DUM2(45),NCPRN,NCPPT,
     3DUM3(10),NTHRN,NTHPT,NTHPN,DUM4(9),NEPRN,NEPPT,NEPPN,NEPSG,NEPAG,
     4DUM5(19),NEDRN,NEDPT,NEDPN,NEDNB,NEDFW,NEDRB,NEDAX,NEDNU,DUM6(16)
      COMMON /LIMP/ IDENT,NX,MX,NRX,ISOX,ISOXE,NGEOM,NP1B1,NBCT,NXP,
     1BSQD,HOL(9),NPT(20),THT(20),MXAS(20),ILHI(20),NRBP(20),DEGC(20),
     2WSTBA(18),WSTBB(18),CONCTA(18,10),LIMT(10),RIN(20),RAD(20),
     3ROUT(20),VOL(20),MTBL(20),REGV(20),FISD(20),HOLID(3,18),DUM7(40)
      COMMON ID,HOLA(9),BALT(18,4,5),FOIL(20,4,5),FOGX(4,6),
     1FOX(20,4),DUMB(20),OTGC(5),OTGA(30,6),DUM20(21)
      COMMON GRP(20),SOR(20),T(20,20),XT(20),V1(20),V2(20),V3(20)
     1,V4(20),V5(20),CP(20),CN(20),CP2(20),CN2(20),Y(21),DUM22(2779),
     2LOCR(20),ERIT(20),RIT(20)
      DIMENSION CT(18,10),FX(20),FT(20)
      EQUIVALENCE (FX(1),FISD(1)),(CT(1,1),CONCTA(1,1)),(LIB2,NLIB2)
      COMMON IX,SIGY(18,54),GNU(18,54),SIGA(18,54),P(18,54),PF(18,54),
     1F(20,54),DEL(54),FS(54),SSC(10),S1(10),SIGABS(10),SIGIN(10),
     2SIGX(10),C(10),AN(10),SD(10),PROB(25,10),NRIG(18),
     3ER(200),GMN(200),GMGM(200),GMF(200),SPIN(200),AMASS(18),
     4SIGP(18),JONE(18),JTWO(18),DZERO(18),DONE(18),DTWO(18),ETA(20),
     5Q(20),ESC,MDONE(18),KEY,MCURR,PZ(1001),PZ1(1001),DELSIG,A1(18),
     6EBK(55),TEMP(18),SIGEFY(18),NDONE,NLIB,DUM70(1525),PS(18,54),
     7OSE0(18,54),OS0(18,54),OS1(18,54),OXS0(18,54),XL(18,54),DUM50(506)
      COMMON/CEDIT/N1,N2,N3
      DIMENSION RESA(3),RESF(3),RESE(3),TRSA(3),TRSF(3),TRSE(3)
      COMMON/DJD/EPILL,RESLL
      COMMON/PROFIL/ EBY(2),WDXPR(3),JPR(3),LPR(3),KPR(3),NPR(3),
     1 ICAL,DPR(1)
      COMMON/PROHAM/TSRS(18),TURS(18),WNAME(18),IGH(18),IGL(18),TAP(18),
     1 TSP(18),QZ(54),CCJC(18,54),CCJF(18,54),CCJS(18,54),IGMC,ITIK
      EQUIVALENCE (ITIK,TIK)
      COMMON/NITRAB/ INO,MSHPR,LXPR,IGRP,DUPR,EPS,TPR(3),TTPR(3),
     1 TFPR(3),TTFPR(3),TSPR(3),TTSPR(3),WNAM(3),LOC(3)
      COMMON/RABDAT/ ISI,ISO,NXR,NFR,NIS,NIQ,NBV,MIBV,MICP,ITRM,NGE,IMR,
     1 ITR,IIF(3)
      COMMON/RABLOC/ ISTRT,LIR,LOF,LIF,LOM,LIM,LRI,LRO,LVL,LBY,LAI,LEF,
     1 LNB,LAP,LKC,LCO,LXS,LXA,LXF,LMT,LVW,LNM,LFW,LRD,LII,LBI,LNH,LFL,
     2 LXT,LBV,LF1,LF2,LF3,LAF,LCV,LSR,LST,LS1,LS2,LS3,LS4,LS5,LAB,LLB,
     3 LUV,LV1,LV2,LV3,LV4,LV5,LN1,LN2,LP1,LP2,NLAST
      COMMON/QQFF/QQ(54),FF(54)
      COMMON/CADY/CDYC(10),IGCDY,ICADY
      COMMON/NITDAT/ APR(3),SPR(3),DENPR(3),FABS(3)
CE
CE  COMMON INSERIDO
CE
      COMMON /WSTBCM/ WSTB
C
      IT=ESC
      IF(IT.EQ.2) GOTO 38
      IF(IG-1)1,1,22
    1 READ(NTIN,1000)C1,C2,N1,N2,N3,MSHPR,LXPR,INO,IRSC
      WRITE(NTOUT,2010)
      WRITE(NTOUT,2000)C1,C2,N1,N2,N3,MSHPR,LXPR,INO,ICADY,IRSC
      DO 14 I1=1,IX
      QZ(I1)=0.
      DO 15 I2=1,ISOX
      CCJC(I2,I1)=0.
      CCJF(I2,I1)=0.
      CCJS(I2,I1)=0.
      P(I2,I1)=0.
      PF(I2,I1)=0.
   15 PS(I2,I1)=0.
   14 CONTINUE
      IGMC=IG
      IF(INO.GE.4) CALL OZMA(IGP)
      IF(INO.LE.1.OR.INO.GE.4) GOTO 12
      ISI=NTIN
      ISO=NTOUT
      ISTRT=1
      CALL RABMEM
   12 EEE=0.
      DO 13 I=1,ISOX
      TSRS(I)=0.
      TURS(I)=0.
      TAP(I)=0.
      TSP(I)=0.
      IGL(I)=0
   13 IGH(I)=0
      IF(INO.GE.4) GOTO 38
      WRITE(NTOUT,2020)
   22 CONTINUE
CE    ITIK = ZA02AS(DUMMY)
      ITIK = 0
      IGRP=IG
   38 CONTINUE
      QGRP=0.
      FLXX=0.
      DO 98 N=1,NX
      FT(N)=F(N,IG)*VOL(N)
      FLXX=FLXX+FT(N)
   98 QGRP=QGRP+(Q(N)+ETA(N))*VOL(N)
      FF(IG)=FLXX*DEL(IG)
      QQ(IG)=QGRP
      DO 709 N=1,NX
  709 FT(N)=FT(N)/FLXX
      ESC=1.
      NL=0
      NFT=0
      DO310JX=1,ISOX
      J=JX
      IF(IT.EQ.2) GOTO 402
      IF(INO.GE.4) GOTO 5
      DO 1101 LL=1,3
      DENPR(LL)=0.
      APR(LL)=0.
      WNAM(LL)=0.
      RESA(LL)=0.
      TRSA(LL)=0.
      RESF(LL)=0.
      TRSF(LL)=0.
      RESE(LL)=0.
      TRSE(LL)=0.
      LOC(LL)=0
      IIF(LL)=0
 1101 SPR(LL)=0.
C     THE LOWER ENERGY LIMIT USED IN THE CALCULATION OF TAIL CONTRIBU-
C     TIONS TO THE RESONANCE INTEGRAL IS CHANGED TO THE HIGHER OF
C     EITHER EPILL OR THE END OF THE RESONANCE REGION AS DETERMINED BY
C     ENDFB-4. (D.J.D.)
      RESLL = EPILL
      WSTB=AMOD(WSTBA(JX),100000.)
      IF(WSTB.EQ.92235..OR.WSTB.EQ.92238.) RESLL=1.0
      IF(WSTB.EQ.992235..OR.WSTB.EQ.992238.) RESLL=1.0
      IF(WSTB.EQ.192238.) RESLL=1.0
      IF(WSTB.EQ.94239..OR.WSTB.EQ.94242.) RESLL=1.0
      IF(WSTB.EQ.94241.) RESLL=1.8
      IF(DZERO(J)) 5,310,5
    5 NRJ=NRIG(J)
      IF(NRJ.LE.0) GOTO 731
      IF(INO.LT.4) GOTO 731
C * *
C * * ENTER REACTION FRACTIONS PRODUCED BY THE  O Z M A - 1  CODE
C * *
      IF(INO.EQ.4) CALL OZMAGO(IG)
C * *
C * * ENTER REACTION FRACTIONS PRODUCED BY THE  R E P C      CODE
C * *
      IF(INO.EQ.5) CALL REPCGO(IG)
      GOTO 732
  731 CONTINUE
      IF(NRJ) 160,310,10
   10 IF(INO.GT.1) GOTO 160
      NU=LOCR(J)
      DO 20N=1,NRJ
      NU=NU+1
      IF(SPIN(NU))30,20,30
   20 CONTINUE
      NRIG(J)=-NRJ
      GOTO160
   40 CALLPTBL(IG,J)
      GOTO160
   30 IF(MDONE(J))50,40,50
   50 IF(MCURR-MDONE(J))70,160,100
   70 M1=MDONE(J)-MCURR-1
      IF(M1)120,120,80
   80 DO90M=1,M1
   90 READ(NSC1)
      GOTO120
  100 M1=MCURR-MDONE(J)+1
      DO110M=1,M1
  110 BACKSPACENSC1
  120 IF(KEY)140,130,140
  130 READ(NSC1) DELSIG,PZ1,PZ
      GOTO150
  140 READ(NSC1) DELSIG,PZ1
  150 MCURR=MDONE(J)
  160 SIGPZ=SIGP(J)
C * * TEST FOR RESONANCE PROFILE NUCLIDES. IF PRESENT TREAT THEM
C * * TOGETHER. THE ISOTOPE OF HIGHEST ATOM DENSITY IS CHOSEN (NITPRO)
C * * ARBITRARILY AS PRINCIPAL ABSORBER. (J.B.)
      JPR(1)=0
      NU=LOCR(J)+1
      IF(NRJ.EQ.1.AND.SPIN(NU).LT.0.0)GO TO 161
      GO TO 164
  161 DO 162 LL=1,3
      IF(WSTBA(J).EQ.WDXPR(LL))GO TO 163
  162 CONTINUE
      WRITE(NTOUT,185) WSTBA(J),IG
      STOP
  163 JPR(1)=LL
      WNAM(1)=WSTBA(J)
      IF(INO.LE.1) GOTO 1231
      IIF(1)=J
      GOTO 164
 1231 SPR(1)=SIGPZ
      APR(1)=AMASS(J)
      DENPR(1)=DZERO(J)
      FABS(1)=SIGA(J,IG)
  164 CONTINUE
      JPR(2)=0
      J1=JONE(J)
      IF(J1)180,170,180
  170 SIGM1=0.
      GOTO190
  180 SIGM1=SIGP(J1)/DZERO(J)*DONE(J)
      AMOD1=AMASS(J1)
      IF(JPR(1).EQ.0) GOTO 187
      NU=LOCR(J1)+1
      IF(NRIG(J1).EQ.1.AND.SPIN(NU).LT.0.0) GOTO 181
      GOTO 186
  181 IF(DONE(J).LT.DZERO(J)) GOTO 182
      IF(DONE(J).EQ.DZERO(J).AND.J1.GT.J) GOTO 182
      GOTO 310
  182 DO 183 LL=1,3
      IF(WSTBA(J1).EQ.WDXPR(LL)) GOTO 184
  183 CONTINUE
      WRITE(NTOUT,185) WSTBA(J1),IG
      STOP
  184 JPR(2)=LL
  186 CONTINUE
      WNAM(2)=WSTBA(J1)
      IF(INO.LE.1) GOTO 1232
      IIF(2)=J1
      GOTO 187
 1232 SPR(2)=SIGM1
      APR(2)=AMOD1
      DENPR(2)=DONE(J)
      FABS(2)=SIGA(J1,IG)
  187 CONTINUE
  190 J2=JTWO(J)
      JPR(3)=0
      IF(J2)210,200,210
  200 SIGM2=0.
      GOTO220
  210 SIGM2=SIGP(J2)/DZERO(J)*DTWO(J)
      AMOD2=AMASS(J2)
      IF(JPR(1).EQ.0) GOTO 217
      NU=LOCR(J2)+1
      IF(NRIG(J2).EQ.1.AND.SPIN(NU).LT.0.0) GOTO 211
      GOTO 216
  211 IF(DTWO(J).LT.DZERO(J)) GOTO 212
      IF(DTWO(J).EQ.DZERO(J).AND.J2.GT.J) GOTO 212
      GOTO 310
  212 DO 213 LL= 1,3
      IF(WSTBA(J2).EQ.WDXPR(LL)) GOTO 214
  213 CONTINUE
      WRITE(NTOUT,185) WSTBA(J2),IG
      STOP
  214 JPR(3)=LL
  216 CONTINUE
      WNAM(3)=WSTBA(J2)
      IF(INO.LE.1) GOTO 1233
      IIF(3)=J2
      GOTO 217
 1233 SPR(3)=SIGM2
      APR(3)=AMOD2
      DENPR(3)=DTWO(J)
      FABS(3)=SIGA(J2,IG)
  217 CONTINUE
  220 EL=EBK(IG+1)
      EU=EBK(IG)
      FLX=0.
      DO225N=1,NX
      M1=MTBL(N)
      IF(CT(J,M1))221,225,221
  221 FLX=FLX+F(N,IG)*VOL(N)
  225 CONTINUE
      RIG=0.
      RIIG=0.
      NRJ=IABS(NRJ)
      NL=LOCR(J)
      ESCX=1.0
      TZAR=0.
      DO300N=1,NRJ
      IF(JPR(1).GE.1) GOTO 231
      NL=NL+1
      IF(SPIN(NL))240,230,240
  230 SAVE = SIGP(J)
      SIGP(J)=1.570795*ER(NL)+SIGP(J)
      CALL PTBL(IG,J)
      SIGP(J)=SAVE
      SIGT=      SIGM1+SIGM2+SIGEFY(J)/DZERO(J)
      TOT=GMN(NL)/(SQRT(ER(NL)/SIGT+1.))*1.570795 *A1(J)
      RII=GMN(NL)*1.570795
      GOTO270
  231 CONTINUE
C * * RESONANCE PROFILE TREATMENT INITIALISING THE ASYMPTOTIC COLLISION
C * * DENSITY IN EVERY RESOLVED RESONANCE GROUP WHEN  INO=0,2 OR IN
C * * HIGHEST ENERGY GROUP ONLY IF  INO=1,3  (J.B.)
      ESCY=ESC
      EBY(1)=EL
      EBY(2)=EU
      DUPR=DEL(IG)
      IF(EEE.EQ.0.0.OR.ABS(EEE-EU).LT.1.0E-10) GO TO 239
      EBY(2)=EEE
      DUPR=ALOG(EBY(2)/EBY(1))
  239 IF(NEPPT.EQ.0) GOTO 8
      IF(NFT.EQ.0) WRITE(NTOUT,967) IG,EU,EBY(2)
      NFT=1
    8 IF(INO.LE.1) CALL NITPRO
      IF(INO.GT.1) CALL RABPRO
      IF(IG.EQ.IGMC.AND.INO.GE.2) QNOR=QQ(IGMC)/QZ(IGMC)
      EEE=EBY(1)
      IF(NEPPT.NE.0) WRITE(NTOUT,7) WSTBA(J)
      JP=J
      DO 237 LLL=1,3
      IF(JPR(LLL).EQ.0) GOTO 237
      LL=LOC(LLL)
      GOTO (233,234,235),LLL
  233 JJ=J
      RAT=1.0
      GOTO 236
  234 JJ=J1
      RAT=DZERO(J)/DONE(J)
      GOTO 236
  235 JJ=J2
      RAT=DZERO(J)/DTWO(J)
  236 CONTINUE
      FAC=FLX*DZERO(J)/QGRP/RAT
      IF(INO.LE.1) GOTO 1236
      P(JJ,IG)=TPR(LL)
      PF(JJ,IG)=TFPR(LL)
      PS(JJ,IG)=TSPR(LL)
      TPR(LL)=-ALOG(1.-TPR(LL))/FAC
      TFPR(LL)=-ALOG(1.-TFPR(LL))/FAC
      TSPR(LL)=-ALOG(1.-TSPR(LL))/FAC
      TRSA(LL)=(CCJC(JJ,IG)+CCJF(JJ,IG))*QNOR
      RESA(LL)=TRSA(LL)-FAC*SIGA(JJ,IG)*QGRP
      TRSF(LL)=CCJF(JJ,IG)*QNOR
      RESF(LL)=TRSF(LL)-FAC*SIGY(JJ,IG)*QGRP
      TRSE(LL)=CCJS(JJ,IG)*QNOR
      RESE(LL)=TRSE(LL)-FAC*OSE0(JJ,IG)*QGRP
      GOTO 237
 1236 CONTINUE
      P(JJ,IG)=TPR(LL)*FAC
      PF(JJ,IG)=TFPR(LL)*FAC
      PS(JJ,IG)=TSPR(LL)*FAC
      ESC=ESC-P(JJ,IG)
  237 CONTINUE
      IF(INO.GT.1) GOTO 1238
      ZZ=ESCY-ESC
      ESC=ESCY
      ZZ=(1.0-EXP(-ZZ))/ZZ
 1238 DO 238 LLL=1,3
      IF(JPR(LLL).EQ.0) GOTO 238
      LL=LOC(LLL)
      IF(LLL.EQ.1) JJ=J
      IF(LLL.EQ.2) JJ=J1
      IF(LLL.EQ.3) JJ=J2
      IF(INO.GT.1) GOTO 1239
      P(JJ,IG)=P(JJ,IG)*ZZ
      PF(JJ,IG)=PF(JJ,IG)*ZZ
      PS(JJ,IG)=PS(JJ,IG)*ZZ
 1239 IF(NEPPT.EQ.0) GOTO 1247
      RIT(JJ)=RIT(JJ)+TTPR(LL)
      ERIT(JJ)=ERIT(JJ)+TPR(LL)
      TAP(JJ)=TAP(JJ)+TRSA(LL)
      TSP(JJ)=TSP(JJ)+TRSE(LL)
      TSRS(JJ)=TSRS(JJ)+TSPR(LL)
      TURS(JJ)=TURS(JJ)+TTSPR(LL)
      IF(LLL.GT.1)WRITE(NTOUT,7)WSTBA(JJ)
      WRITE(NTOUT,321) TPR(LL),TTPR(LL),P(JJ,IG),RESA(LL),TRSA(LL)
      WRITE(NTOUT,421) TSPR(LL),TTSPR(LL),PS(JJ,IG),RESE(LL),TRSE(LL)
      IF(TTFPR(LL).EQ.0.) GOTO 1247
      WRITE(NTOUT,322) TFPR(LL),TTFPR(LL),PF(JJ,IG),RESF(LL),TRSF(LL)
 1247 IF(INO.LE.1) GOTO 1248
      P(JJ,IG)=RESA(LL)/QGRP
      PF(JJ,IG)=RESF(LL)/QGRP
      PS(JJ,IG)=PS(JJ,IG)*QNOR*QZ(IG)/QGRP
 1248 ESC=ESC-P(JJ,IG)
  238 CONTINUE
      GO TO 310
  240 IF(NRIG(J))250,250,260
  250 CONTINUE
      ESTAR=SQRT(EL*EU)
      SAVE=SIGP(J)
CE
CE  COMANDOS COPIADOS DO HAMMER   VELHO
CE
      IF (WSTB .NE. 92238. )   GO  TO 8889
      RII=3.14159*2.604E+06*GMN(NL)*GMGM(NL)*SPIN(NL)/ER(NL)/(GMGM(NL)+
     1GMF(NL)+GMN(NL)*SQRT(SQRT(EL*EU)))*(1./SQRT(EL)-1./SQRT(EU))
      SIGP(J)= RII/(GMGM(NL)+GMF(NL)+GMN(NL)*SQRT(ESTAR))/DEL(IG)*
     1ER(NL)+SIGP(J)
      CALL PTBL(IG,J)
      SIGP(J)=SAVE
      HM= GMGM(NL)
      GOTO 265
CE
8889  CONTINUE
CE
      HM=GMGM(NL)+GMF(NL)
      EZERO=0.0
      IF(N.GT.1) EZERO=2.604E+06*(1.0+1.0/AMASS(J))**2/SIGP(J)
      CALL TUZ(0.0,1.0E6,0.0,0.0,1.0,AMASS(J),TEMP(J),HM,SPIN(NL),
     1ER(NL),GMN(NL),EL,EU,EZERO,RII)
      SIGP(J)=RII*ER(NL)/(GMGM(NL)+GMF(NL)+GMN(NL)*SQRT(ESTAR))/DEL(IG)
     1+SIGP(J)
      CALL PTBL(IG,J)
      SIGP(J)=SAVE
CE
 265  CONTINUE
      CALL TUZ(SIGEFY(J),SIGPZ,SIGM1,SIGM2,DZERO(J),AMASS(J),TEMP(J),
     1HM,SPIN(NL),ER(NL),GMN(NL),EL,EU,EZERO,TOT)
CE
      TOT=TOT*A1(J)
      IF (WSTB .EQ. 92238.)      GOTO 270
      GOTO 269
  260 CALLNIT(ER(NL),GMN(NL),GMGM(NL),GMF(NL),0.,
     1SPIN(NL),TEMP(J),AMASS(J),SIGPZ,AMOD1,SIGM1,AMOD2,
     2SIGM2,DZERO(J),TOT,SIGEFY(J))
      HM=GMGM(NL)+GMF(NL)
      RII=3.14159*1.302E+06*GMN(NL)*HM      *SPIN(NL)/ER(NL)**2
     1/(GMGM(NL)+GMF(NL)+GMN(NL))
  269 IF(J.EQ.1)TOT=TOT*(1.-C1)
      IF(J.EQ.2)TOT=TOT*(1.-C2)
  270 PIGJ=TOT*FLX*DZERO(J)/QGRP
      PIGJ=1.-EXP(-PIGJ)
      RI=TOT
       RIG=RIG+RI
       RIIG=RIIG+RII
      IF(NEPPT)330,330,340
  340 IF(NFT)3,4,3
    4 NFT=1
      WRITE(NTOUT,2) IG,QGRP,FF(IG)
      WRITE(NTOUT,7) WSTBA(J)
      JP=J
    3 CONTINUE
      IF(J.NE.JP) WRITE(NTOUT,7) WSTBA(J)
      JP=J
      TEM1=PIGJ*QGRP
      TZAR=TZAR+TEM1
      WRITE(NTOUT,320) RI,RII,PIGJ,TEM1,SIGEFY(J)
  330 CONTINUE
      PIGJ=PIGJ*ESCX
      ESCX=ESCX-PIGJ
      P(J,IG)=P(J,IG)+PIGJ
      IF(SPIN(NL ))290,280,290
  280 PF(J,IG)=PIGJ*GMGM(NL)+PF(J,IG)
      GOTO300
  290 PF(J,IG)=PIGJ*GMF(NL)/(GMF(NL)+GMGM(NL))+PF(J,IG)
  300 CONTINUE
      IF(NEPPT)400,401,400
  400 RIT(J)=RIT(J)+RIIG
       ERIT(J)=ERIT(J)+RIG
      TEM1=P(J,IG)*QGRP
      TZAR=TZAR+FLX*DZERO(J)*SIGA(J,IG)*DEL(IG)
      WRITE(NTOUT,311) RIG,RIIG,P(J,IG),TEM1,TZAR
      TAP(J)=TAP(J)+TZAR
  401 P(J,IG)=P(J,IG)*ESC
      PF(J,IG)=PF(J,IG)*ESC
  402 ESC=ESC-P(J,IG)
  310 CONTINUE
  732 CONTINUE
      IF(IT.EQ.2) GOTO 370
      IF(ISOXE.LE.0) GOTO 366
      DO365J=1,ISOXE
      K=J+ISOX
      P(K,IG)=0.
      PF(K,IG)=0.
      NRJ=IABS(NRIG(K))
      IF(NRJ)365,365,355
  355 NL=LOCR(K)
      DO360N=1,NRJ
      NL=NL+1
      IF(SPIN(NL))356,359,356
  356 IF(NRIG(K))357,357,358
  357 GMN(NL)=5.208E+06*GMN(NL)*(GMGM(NL)+GMF(NL))*SPIN(NL)/ER(NL)/(GMGM
     1(NL)+GMF(NL)+GMN(NL)*SQRT(SQRT(EBK(IG)*EBK(IG+1))))*(1./SQRT(EBK(I
     2G+1))-1./SQRT(EBK(IG)))
      GOTO3591
  358 GMN(NL)=2.604E+06*GMN(NL)*(GMGM(NL)+GMF(NL))*SPIN(NL)/ER(NL)**2/(G
     1MGM(NL)+GMF(NL)+GMN(NL))
 3591 GMGM(NL)=GMF(NL)/(GMF(NL)+GMGM(NL))
  359 PF(K,IG)=PF(K,IG)+GMN(NL)*GMGM(NL)*1.570795
  360 P(K,IG)=P(K,IG)+GMN(NL)*1.570795
  365 CONTINUE
  366 CONTINUE
      IF(IRSC.EQ.0) GOTO 370
C * * RESC - NITPRO/RABPRO/OZMA-1/REPC 0 RESONANCE SCATTERING TREATMENT
C     ONE MIXTURE ONLY ALLOWED TO CONTAIN RESONANCE ISOTOPES
      DO 705 J=1,ISOX
      IF(PS(J,IG).EQ.0.) GOTO 705
      B=0.
      DO 701 N=1,NX
      M=MTBL(N)
  701 B=B+CT(J,M)*FT(N)
      PS(J,IG)=QGRP*PS(J,IG)
      RSCS=PS(J,IG)/FF(IG)
      RSCSO=OSE0(J,IG)*B
      FACT=RSCS/RSCSO
      OS0(J,IG)=OS0(J,IG)+OSE0(J,IG)*(FACT-1.)
      DO 703 M=1,MX
      IF(CT(J,M).NE.0.) GOTO 704
  703 CONTINUE
  704 RANO=XL(J,IG)*OXS0(J,IG)*B
      RAN=RANO*FACT
      AN(M)=AN(M)+RAN-RANO
      RSDO=OXS0(J,IG)*CT(J,M)
      RSD=RSDO*FACT
      SD(M)=SD(M)+RSD-RSDO
      OXS0(J,IG)=OXS0(J,IG)*FACT
      SSC(M)=SSC(M)+OSE0(J,IG)*CT(J,M)*(FACT-1.)
      OSE0(J,IG)=OSE0(J,IG)*FACT
      S1(M)=S1(M)+OS1(J,IG)*CT(J,M)*(FACT-1.)
      OS1(J,IG)=OS1(J,IG)*FACT
  705 CONTINUE
  370 RETURN
    2 FORMAT(/,1H0,I9,20X,'QQ=',1PE11.4,3X,'FF=',1PE11.4,/)
    7 FORMAT(F20.0)
  185 FORMAT(1X,5(1H*),2X,'PROFILE DATA FOR ISOTOPE ',F10.0,1X,
     1 'NOT FOUND IN GROUP ',I2,/,8X,'EXECUTION STOPS...')
  311 FORMAT(20X,5(14H  ------------)/20X,1P5E14.6,/)
  320 FORMAT(20X,1P4E14.6,14X,1PE14.6)
  321 FORMAT(5X,10HABSORPTION,5X,1P5E14.6)
  322 FORMAT(5X,7HFISSION,8X,1P5E14.6)
  421 FORMAT(5X,'SCATTERING',5X,1P5E14.6)
  967 FORMAT(/,1H0,I9,71X,'EU=',1PE14.6,3X,'EBY(2)=',1PE14.6,/)
 1000 FORMAT(2E10.5,7I5)
 2000 FORMAT(//,2X,'C1=',1PE11.4,2X,'C2=',1PE11.4,2X,'N1=',I3,4X,'N2=',
     1 I3,4X,'N3=',I3,5X,'MSHPR=',I5,3X,'LXPR=',I3,3X,'INO=',I2,3X,
     2 'ICADY=',I2,3X,'IRSC=',I2,//)
 2010 FORMAT(///,1X,21(1H=),56X,47(1H=),/,1X,' RESONANCE INTEGRALS ',
     1 58X,'**  H A M M E R  **',8X,'VERSION /JB-1077/',/,1X,21(1H=),
     2 56X,47(1H=),//)
 2020 FORMAT(5X,'GROUP',3X,'ISOTOPE',12X,'RI',3X,'INFINITE RI',6X,
     1 'FRACTION',4X,'RESON.RATE',4X,'TOTAL RATE',4X,'GEOM.XSEC.',/,
     2 5X,5(1H=),3X,7(1H=),12X,2(1H=),3X,11(1H=),6X,8(1H=),4X,10(1H=),
     3 4X,10(1H=),4X,10(1H=),//)
      END
      SUBROUTINE OZMA(IGP)
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* OZMA   * HAMMER   VERSION /JB-1077/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      COMMON /CNTRL/ DUM1(12),NTIN,NTOUT
      COMMON /LIMP/ IDENT,NX,DUM2(138),WSTBA(18),DUM3(18),DEN(18,10),
     1 DUM4(70),VOL(20),MTBL(20)
      COMMON DUM5(1100)
      COMMON DUM6(3460),ERIT(20),RIT(20)
      COMMON IX,XF(18,54),DUM7(972),XA(18,54),P(18,54),PF(18,54),
     1 FL(20,54),DEL(54),DUM8(1568),ESC,DUM9(2041),EBK(55),DMY1(1563),
     2 PS(18,54),XS(18,54)
      COMMON /QQFF/ QQ(54),FF(54)
      COMMON/NITRAB/ INO
      COMMON/PROHAM/TSRS(18),TURS(18),WNAME(18),IGH(18),IGL(18),TAP(18),
     1 TSP(18),QZ(54),CCJC(18,54),CCJF(18,54),CCJS(18,54),IGMC,ITIK
C
C     TEST CODE
      IF(INO.EQ.5) GOTO 10
C     ENTER OZMA-1 CODE RUN PARAMETERS AND OPTIONS
      READ(NTIN,1010) NIG,NIP,NR,NSN,NRR,EPSI,MICP,MIBV,IMOD,IGEO,ISCT,
     1 IBCG,IBCR,IBCL,IFLX
      WRITE(NTOUT,1020) NIG,NIP,NR,NSN,NRR,EPSI,MICP,MIBV
      WRITE(NTOUT,1021) IMOD,IGEO,ISCT,IBCG,IBCR,IBCL,IFLX
      GOTO 20
C     ENTER REPC CODE RUN PARAMEYERS AND OPTIONS
   10 CONTINUE
      WRITE(NTOUT,1110)
      READ(NTIN,1111) IGMC,QZ(IGMC),NIP
      WRITE(NTOUT,1116) NIP,IGMC,QZ(IGMC)
      DO 14 J=1,NIP
      READ(NTIN,1112) (CCJC(J,K),K=IGMC,53)
      WRITE(NTOUT,1113) WSTBA(J),(CCJC(J,K),K=1,54)
      READ(NTIN,1112) (CCJF(J,K),K=IGMC,53)
      WRITE(NTOUT,1114) (CCJF(J,K),K=1,54)
   14 CONTINUE
      WRITE(NTOUT,1115)
C     PRINT HAMMER HEADING
   20 WRITE(NTOUT,2010)
      ICAL=0
      RETURN
C
      ENTRY OZMAGO
      READ(NTIN,1030) IGR,NI,EU,EH,QZ(IGP),NSEQ
      IF(IGR.NE.IGP) GOTO 901
      IF(ICAL.NE.0) GOTO 61
      ICAL=1
      IGMC=IGP
      GOTO 62
   61 IF(IBCG.NE.1) GOTO 60
   62 QNOR=QQ(IGP)/QZ(IGP)
   60 WRITE(NTOUT,967) IGP,QZ(IGP),QQ(IGP),FF(IGP),EU,EH
      DO 50 I=1,NI
      READ(NTIN,1031) AIS,AII,FIS,FII,SIS,SII,JWSTB,J,IG,NSEQ
      IF(IG.NE.IGP) GOTO 902
      WSTBJ=JWSTB
      IF(WSTBJ.NE.WSTBA(J)) GOTO 903
      WRITE(NTOUT,7) WSTBJ
      READ(NTIN,1032) P(J,IG),PF(J,IG),PS(J,IG)
      CCJF(J,IGP)=PF(J,IGP)*QZ(IGP)
      CCJC(J,IGP)=P(J,IGP)*QZ(IGP)-CCJF(J,IGP)
      CCJS(J,IGP)=PS(J,IGP)*QZ(IGP)
      SA=0.
      DO 51 N=1,NX
      M1=MTBL(N)
   51 SA=SA+FL(N,IGP)*VOL(N)*DEN(J,M1)
      SF=SA*XF(J,IGP)*DEL(IGP)
      SE=SA*XS(J,IGP)*DEL(IGP)
      SA=SA*XA(J,IGP)*DEL(IGP)
      RESA=(CCJC(J,IGP)+CCJF(J,IGP))*QNOR-SA
      RESF=CCJF(J,IGP)*QNOR-SF
      RESE=CCJS(J,IGP)*QNOR-SE
      TEM1=RESA+SA
      WRITE(NTOUT,321) AIS,AII,P(J,IG),RESA,TEM1
      ERIT(J)=ERIT(J)+AIS
      RIT(J)=RIT(J)+AII
      TAP(J)=TAP(J)+TEM1
      P(J,IGP)=RESA/QQ(IGP)
      ESC=ESC-P(J,IGP)
      IGH(J)=IG
      IF(IGL(J).NE.0) GOTO 52
      IGL(J)=IG
      WNAME(J)=WSTBJ
   52 TEM1=RESE+SE
      WRITE(NTOUT,421) SIS,SII,PS(J,IG),RESE,TEM1
      TSP(J)=TSP(J)+TEM1
      PS(J,IGP)=TEM1/QQ(IGP)
      TSRS(J)=TSRS(J)+SIS
      TURS(J)=TURS(J)+SII
      IF(FIS.EQ.0.) GOTO 50
      TEM1=RESF+SF
      WRITE(NTOUT,322) FIS,FII,PF(J,IG),RESF,TEM1
      PF(J,IGP)=RESF/QQ(IGP)
   50 CONTINUE
      RETURN
C
      ENTRY REPCGO
      IF(ICAL.NE.0) GOTO 80
      QNOR=QQ(IGP)/QZ(IGP)
      ICAL=1
      AII=0.
      FII=0.
   80 IF(IGP.NE.IGMC) QZ(IGP)=QQ(IGP)/QNOR
      EH=EBK(IGP)
      EL=EBK(IGP+1)
      WRITE(NTOUT,967) IGP,QZ(IGP),QQ(IGP),FF(IGP),EU,EH
      DO 70 J=1,NIP
      IF(CCJC(J,IGP).EQ.0.) GOTO 70
      WRITE(NTOUT,7) WSTBA(J)
      SA=0.
      FLX=0.
      DO 71 N=1,NX
      M1=MTBL(N)
      CON=DEN(J,M1)
      IF(CON.EQ.0.) GOTO 71
      TEM=FL(N,IGP)*VOL(N)
      FLX=FLX+TEM
      SA=SA+TEM*CON
   71 CONTINUE
      FAC=FLX*DEN(J,1)/QQ(IGP)
      SF=SA*XF(J,IGP)*DEL(IGP)
      SA=SA*XA(J,IGP)*DEL(IGP)
      RESA=(CCJC(J,IGP)+CCJF(J,IGP))*QNOR-SA
      RESF=CCJF(J,IGP)*QNOR-SF
      TEM1=RESA+SA
      TEM2=TEM1/QQ(IGP)
      AIS=-ALOG(1.-TEM2)/FAC
      ERIT(J)=ERIT(J)+AIS
      P(J,IGP)=RESA/QQ(IGP)
      WRITE(NTOUT,321) AIS,AII,TEM2,RESA,TEM1
      TAP(J)=TAP(J)+TEM1
      ESC=ESC-P(J,IGP)
      IGH(J)=IGP
      IF(IGL(J).NE.0) GOTO 72
      IGL(J)=IGP
      WNAME(J)=WSTBA(J)
   72 IF(CCJF(J,IGP).EQ.0.) GOTO 70
      TEM1=RESF+SF
      TEM2=TEM1/QQ(IGP)
      FIS=-ALOG(1.-TEM2)/FAC
      PF(J,IGP)=RESF/QQ(IGP)
      WRITE(NTOUT,322) FIS,FII,TEM2,RESF,TEM1
   70 CONTINUE
      RETURN
  901 ISTOP=901
      GOTO 990
  902 ISTOP=902
      GOTO 990
  903 ISTOP=903
  990 WRITE(NTOUT,4010) ISTOP
      STOP
    7 FORMAT(F20.0)
  321 FORMAT(5X,10HABSORPTION,5X,1P5E14.6)
  322 FORMAT(5X,7HFISSION,8X,1P5E14.6)
  421 FORMAT(5X,'SCATTERING',5X,1P5E14.6)
  967 FORMAT(/,1H0,I9,3X,'QZ=',1PE11.4,3X,'QQ=',1PE11.4,3X,'FF=',
     1 1PE11.4,14X,'EU=',1PE14.6,3X,'EBY(2)=',1PE14.6,/)
 1010 FORMAT(I3,4I2,E11.4,2I4,7I2)
 1020 FORMAT(///,1X,'O Z M A - 1  INPUT SPECIFICATIONS',/,1X,33(1H=),//,
     1 4X,'NIG  =',I5,3X,'GROUPS IN THE RESONANCE REGION',23X,'NIP  =',
     2 I4,3X,'NUMBER OF PROFILE ISOTOPES',/,
     3 4X,'NR   =',I5,3X,'TOTAL NUMBER OF SUBREGIONS',27X,'NSN  =',I4,
     4 3X,'ANGULAR QUADRATURE',/,
     5 4X,'NRR  =',I5,3X,'SUBREGIONS CONTAINING RESONANCE MATERIALS',
     6 12X,'EPSI =',7X,'POINT CONVERGENCE WAS',1X,F8.5,/,
     7 4X,'MICP =',I5,3X,'COLLISION PROBABILITIES TABULATION POINTS',
     8 12X,'MIBV =',I4,3X,'MAXIMUM BACKVALUE STORAGE',//)
 1021 FORMAT(1X,'PROBLEM OPTIONS',/,1X,15(1H=),//,
     1 4X,'IMOD =',I2,3X,'TRANSPORT THEORY    1/2  = INTEGRAL / INTEGRO-
     2DIFFERENTIAL        ',/,4X,'IGEO =',I2,3X,'LATTICE GEOMETRY    1/2
     3/3/4/5  = SLAB/CYLINDRICAL/SPHERICAL/HEXAGONAL/SQUARE',/,4X,
     4 'ISCT =',I2,3X,'SCATTERING ANISOTROPY',/,4X,'IBCG =',I2,3X,
     5 'ASYMPTOTIC COLLISION DENSITY INITIALIZATION    1/2  = EACH / HIG
     6HEST  GROUP',/,4X,'IBCR =',I2,3X,'RIGHT BOUNDARY CONDITION    1/2/
     73/4  = VACUUM/REFLECTIVE/PERIODIC/WHITE',/,4X,'IBCL =',I2,3X,
     8 'LEFT BOUNDARY CONDITION     1/2/3/4  = AS FOR IBCR',/,4X,
     9 'IFLX =',I2,3X,'FLUX COMPUTATION SCHEME     0/1/2/3  = STEP-CC/DI
     AAMOND-SN/STEP-SN/COMBINATORIAL-SN',///)
 1030 FORMAT(2I5,3(1X,E14.6),22X,I3)
 1031 FORMAT(6E11.4,I6,I2,2I3)
 1032 FORMAT(3E11.4)
 1110 FORMAT(1X,'REPC  MONTE-CARLO  RESOLVED RESONANCE REACTION RATES',
     1 /,53(1H=),//)
 1111 FORMAT(I5,5X,E10.0,I5)
 1112 FORMAT(7E10.0)
 1113 FORMAT(///,3X,'ISOTOPE',F10.0,5X,'CCJC',/,(1X,9E13.6))
 1114 FORMAT(//,25X,'CCJF',/,(1X,9E13.6))
 1115 FORMAT(///)
 1116 FORMAT(3X,'NIP  =',I3,/,3X,'IGMC =',I3,3X,'QZ(IGMC) =',1PE11.4,//)
 2010 FORMAT(5X,'GROUP',3X,'ISOTOPE',12X,'RI',3X,'INFINITE RI',6X,
     1 'FRACTION',4X,'RESON.RATE',4X,'TOTAL RATE',4X,'GEOM.XSEC.',/,
     2 5X,5(1H=),3X,7(1H=),12X,2(1H=),3X,11(1H=),6X,8(1H=),4X,10(1H=),
     3 4X,10(1H=),4X,10(1H=),//)
 4010 FORMAT(//,1X,5(1H*),' ERROR DETECTED IN OZMA INPUT STREAM
     1 STOP =',I4,2X,10(1H*))
      END
      SUBROUTINE RABPRO
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* RABPRO * HAMMER   VERSION /JB-1077/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      DIMENSION ZC(3,6,10), FL(20), T(5)
      COMMON/PROFIL/ EBY(2),WDXPR(3),JPR(3),LPR(3),KPR(3),NPR(3),
     1 ICAL,DPR(1)
      COMMON/PROHAM/TSRS(18),TURS(18),WNAME(18),IGH(18),IGL(18),TAP(18),
     1 TSP(18),QZ(54),CCJC(18,54),CCJF(18,54),CCJS(18,54),IGMC,ITIK
      EQUIVALENCE (ITIK,TIK)
      COMMON/NITRAB/ INO,MSHPR,LXPR,IG,DUPR,EPS,TRI(3,6),WNAM(3),LOCO(3)
      COMMON/RABLOC/ ISTRT,LIR,LOF,LIF,LOM,LIM,LRI,LRO,LVL,LBY,LAI,LEF,
     1 LNB,LAP,LKC,LCO,LXS,LXA,LXF,LMT,LVW,LNM,LFW,LRD,LII,LBI,LNH,LFL,
     2 LXT,LBV,LF1,LF2,LF3,LAF,LCV,LSR,LST,LS1,LS2,LS3,LS4,LS5,LAB,LLB,
     3 LUV,LV1,LV2,LV3,LV4,LV5,LN1,LN2,LP1,LP2,NLAST
      COMMON/RABDAT/ ISI,ISO,NXR,NFR,NIS,NIQ,NBV,MIBV,MICP,ITRM,NGE,IMR,
     1 ITR,IIF(3)
      COMMON /QQFF/ QQ(54),FF(54)
      COMMON/RABSTO/ BC(1)
      DIMENSION NC(1)
      EQUIVALENCE(BC(1),NC(1))
      DIMENSION XA(3),XF(3),XS(3),B(2),LOC(3)
      DATA INIT/0/,CVPI/0.001/,CVSI/0.0001/
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C * * THE  R A B P R O  PROCEDURE DEVELOPPED BY J.BARHEN-W.ROTHENSTEIN
C * * REPRESENTS AN EXTENSION OF THE RABBLE TREATMENT TO RESONANCE PRO-
C * * FILE NUCLIDES.THE COLLISION DENSITIES IN COARSE REGIONS ARE COMPU-
C * * TED USING THE COSINE CURRENTS APPROXIMATION. THE SOURCE IS OBTAI-
C * * NED BY PARTIAL SIMPSON INTEGRATION AND AN ITERATION ALGORITHM.
C * *
C * * ROUTINES INCLUDED IN THE COMPUTATIONAL PATH0
C * *      - RTBLIB
C * *      - RESC - RABMEM
C * *             - RABPRO - HAMRAB - GETIT
C * *                      - CXPR
C * *                      - TRANCC - PIJINT
C * *                      - GETLOC
C * *                      - SUMPS - SUMHS
C * *      - SLODON
C * *
C * * ALTOUGH VARIABLE DIMENSIONS ARE USED,THE PRESENT DEFAULT VERSION
C * * OF RABPRO ALLOWS ONLY (HAMMER INTERFACE) FOR UP TO THREE PROFILE
C * * NUCLIDES IN EACH FUEL REGION.
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      IF(INO.EQ.2) INIT=0
      HSM=MSHPR*DUPR+1
      MSH=HSM
      IF(INIT.NE.0) GOTO 9
      EPS=DUPR/(MSH-1)
      ITR=1
      DEPS=EPS
      NIF=NC(LIR+2)
C
C
C
      CALL HAMRAB(2)
C
      T(1) = EXP(-DEPS)
      T(5)=1./T(1)
C     SETUP BACKVALUES,GUESS CURRENT LETHARGY POINT CONTRIBUTION TO
C     SOURCE,INITIALIZE SUMPS
      QSR=0.
      DO 210 N=1,NXR
      BC(LS3+N)=0.
      BC(LS4+N)=0.
      JJ=NC(LIR+N)
      NIR=NC(LIR+N+1)-JJ
      JP=NC(LNH+N)
      IA=NC(LBI+N)
      IC=IA+1
      JH=0
      TEMP=0.
      DO 211 J=1,NIR
      I=NC(LII+JJ+J)
      IF(BC(LAI+I).EQ.1.) JH=1
      IVL=NC(LNB+I)
      SIG=BC(LXS+I)*BC(LRD+JJ+J)
      XSI=1.
      IF(IVL.NE.0) XSI=XSI+(1./BC(LAP+I)-1.)*ALOG(1.-BC(LAP+I))
      T(4)=SIG/EBY(2)
      TEMP=TEMP+SIG*XSI
      IF(IVL.EQ.0) GOTO 214
      IVL=IVL+1
      MEF=NC(LEF+I)
      T(2) = EXP(-DEPS*MEF)
      T(3) = EXP(+DEPS*MEF)
      IB=(J-JH-1)*MIBV
      DO 212 M=1,IVL
      T(3)=T(3)*T(2)
  212 BC(LBV+IA+IB+M)=T(4)*T(3)
C
      BC(LS3+N)=BC(LS3+N)+BC(LBV+IC+IB)*BC(LCO+I)*MEF/3.
      JS=JJ-JP+J-JH
      PINK=SUMPS(2,JS,1,BUD,EBY(1))
      GOTO 216
  214 CONTINUE
      X=T(4)/(T(5)-T(1))
      SH1=X
      SH2=X*T(1)
      IH=JP+1
      PINK=SUMHS(SH1,SH2,IH,2)
      BC(LS4+N)=T(4)
  216 CONTINUE
  211 CONTINUE
      QSR=QSR+TEMP*BC(LVL+N)
  210 CONTINUE
      DO 12 J=1,NIS
      IF(J.LE.NIF) WNAME(J)=WNAM(J)
   12 NC(LKC+J)=0
      DO 217 J=1,NIQ
  217 BC(LAB+J)=0.
    9 IF(HSM.EQ.FLOAT(MSH)) GO TO 10
      MSH=MSH+1
      DUPR=EPS*(MSH-1)
      EBY(1)=EBY(2)*EXP(-DUPR)
   10 CONTINUE
      DO 213 N=1,NXR
      FL(N)=0.0
      IF(N.GT.NFR)GO TO 213
      DO 215 J=1,3
      DO 215 K=1,6
      ZC(J,K,N)=0.0
  215 CONTINUE
  213 CONTINUE
      LM=0
      DO 11 J=1,NIF
      IF(LPR(J).NE.0) LM=MAX0(LM,LPR(J)/NPR(J))
   11 CONTINUE
      LEX=(LM/MSH+1)*LXPR
      CALL GETLOC(WNAME,WNAM,LOC,NIF)
      IF(IGMC.EQ.1) IGMC=IG
      DO 13 J=1,NIF
      I=LOC(J)
      IF(LPR(I).EQ.0) GOTO 13
      IGH(I)=IG
      IF(IGL(I).EQ.0) IGL(I)=IG
   13 CONTINUE
      IF(INIT.EQ.0) GOTO 80
C
C
      CALL HAMRAB(3)
C
   80 CONTINUE
      MR=MSH
      EF=EBY(2)
      T(5) = EXP(DEPS/LEX)
      B(1)=EPS/LEX
      DO 77 IT=1,ITRM
   77 NC(LCV+IT)=0
      CVIP=0.
      CVIS=0.
      DO 30 N=1,MR
      DO 31 J=1,NIS
   31 NC(LKC+J)=NC(LKC+J)+1
      DO 76 IR=1,NXR
      BC(LS1+IR)=0.
   76 BC(LSR+IR)=0.
      EIF=EF
      EBD=EF
      EF=EF*T(1)
      CALL CXPR(EIF,2,XS,XF,XA)
      DO 32 I=1,NIF
      J1=JPR(I)
      IF(J1.EQ.0) GOTO 32
      J2=IIF(I)
      BC(LXS+J2)=XS(J1)
      BC(LXA+J2)=XA(J1)
      BC(LXF+J2)=XF(J1)
   32 CONTINUE
C     PARTIAL SOURCE COMPONENT; TOTAL REGION CROSS SECTION
      DO 40 IR=1,NXR
      JJ=NC(LIR+IR)
      NIR=NC(LIR+IR+1)-JJ
      JP=NC(LNH+IR)
      IA=NC(LBI+IR)+1
      JH=0
      SIGT=0.
      DO 41 J=1,NIR
      I=NC(LII+JJ+J)
      SIGT=SIGT+(BC(LXS+I)+BC(LXA+I))*BC(LRD+JJ+J)
      IF(INIT.EQ.1.AND.N.EQ.1) GO TO 41
      IVL=NC(LNB+I)
      IF(IVL.NE.0) GOTO 43
      JH=1
      IH=JP+1
      SH2=BC(LS4+IR)
      TEMP=SUMHS(SH1,SH2,IH,1)
      BC(LS2+IR)=TEMP*BC(LCO+I)
      GOTO 41
   43 MEF=NC(LEF+I)
      IF(INIT.NE.0.AND.MEF.NE.1.AND.NC(LKC+I).NE.2) GOTO 41
      IB=(J-JH-1)*MIBV
      JS=JJ-JP+J-JH
      TEMP=SUMPS(1,JS,IVL,BUD,BC(LBV+IA+IB))
      BC(LST+JJ+J)=TEMP*BC(LCO+I)*MEF
      BC(LLB+JJ+J)=BUD
   41 CONTINUE
      BC(LXT+IR)=SIGT
      DO 48 J=1,NIR
   48 BC(LS1+IR)=BC(LS1+IR)+BC(LST+JJ+J)
   40 CONTINUE
      STMB=BC(LXT+1)
C     START SOURCE ITERATION;FIRST FORM TOTAL SOURCE.
      IF(INIT.EQ.1.AND.N.EQ.1) GO TO 924
  921 CONTINUE
      DO 922 IR=1,NXR
      BC(LSR+IR)=BC(LS1+IR)+BC(LS2+IR)+BC(LS3+IR)+BC(LS4+IR)*EPS/3.
      BC(LS5+IR)=BC(LS3+IR)
  922 CONTINUE
C
C     COLLISION DENSITY TRANSPORT CALCULATION
C
      CALL TRANCC
C
C     UPDATE CURRENT LETHARGY POINT SOURCE
      CNIP=0.
      CNIS=0.
      DO 42 IR=1,NXR
      BC(LS3+IR)=0.
      BC(LS4+IR)=0.
      JJ=NC(LIR+IR)
      NIR=NC(LIR+IR+1)-JJ
      JP=NC(LNH+IR)
      IA=NC(LBI+IR)+1
      JH=0
      DO 44 J=1,NIR
      I=NC(LII+JJ+J)
      TEMP=BC(LXS+I)*BC(LRD+JJ+J)*BC(LF1+IR)/BC(LXT+IR)
      IF(BC(LAI+I).GT.1.) GOTO 45
      BC(LS4+IR)=TEMP
      JH=1
      GOTO 44
   45 MEF=NC(LEF+I)
      IB=(J-JH-1)*MIBV
      IF(INIT.NE.0) GOTO 46
      BC(LS3+IR)=BC(LS3+IR)+TEMP*BC(LCO+I)*MEF/3.
      BC(LBV+IA+IB)=TEMP
      GOTO 44
   46 K=NC(LKC+I)-1
      IF(K.EQ.0) K=MEF
      TEMP=TEMP+(K-1)*BC(LAB+JJ+J)
      BC(LS3+IR)=BC(LS3+IR)+(TEMP+(MEF-K)*BC(LLB+JJ+J))*BC(LCO+I)/3.
      BC(LAB+JJ+J)=TEMP/K
      IF(NC(LKC+I).EQ.1) BC(LBV+IA+IB)=BC(LAB+JJ+J)
   44 CONTINUE
      IF(IR.GT.NFR) GOTO 42
      TEMP=BC(LS3+IR)-BC(LS5+IR)
      CNI=TEMP/BC(LS5+IR)
      ACNI=ABS(CNI)
      IF(ACNI.LE.CNIP) GOTO 931
      CNIP=ACNI
  931 CNI=TEMP/BC(LSR+IR)
      ACNI=ABS(CNI)
      IF(ACNI.LE.CNIS) GOTO 42
      CNIS=ACNI
   42 CONTINUE
      IF(CNIP.LE.CVPI.AND.CNIS.LE.CVSI) GOTO 924
      IF(ITR.EQ.ITRM) GOTO 924
      ITR=ITR+1
      GOTO 921
  924 CONTINUE
      IF(INIT.EQ.0) INIT=1
C     CONVERGENCE REACHED OR FORCED
      NC(LCV+ITR)=NC(LCV+ITR)+1
      IF(CVIP.LT.CNIP) CVIP=CNIP
      IF(CVIS.LT.CNIS) CVIS=CNIS
      ITR=1
      EB=EBD
      DO 50 L=1,LEX
      IF(L.EQ.1) GOTO 73
      EBD=EBD*T(5)
      EB=EBD
      CALL CXPR(EB,1,XS,XF,XA)
C     TOTAL CROSS SECTION IN FUEL
      SIGT=0.
      DO 52 I=1,NIF
      J1=JPR(I)
      J2=IIF(I)
      IF(J1.EQ.0) GOTO 53
      SIGT=SIGT+(XS(J1)+XA(J1))*BC(LRD+J2)
      GOTO 52
   53 SIGT=SIGT+(BC(LXS+J2)+BC(LXA+J2))*BC(LRD+J2)
   52 CONTINUE
      STMB=SIGT
   73 CONTINUE
      DO 72 IR=1,NXR
      IF(IR.GT.NFR) STMB=BC(LXT+IR)
      IF(L.EQ.1) GOTO 520
      BC(LF2+IR)=BC(LF1+IR)+(EB-EIF)*(BC(LF3+IR)-BC(LF1+IR))/(EI-EIF)
      GOTO 530
  520 BC(LF2+IR)=BC(LF1+IR)
  530 BC(LAF+IR)=BC(LF2+IR)*EB*B(1)/STMB
      B(2)=B(1)
      IF(N.EQ.1)GO TO 540
      IF(N.EQ.MR.AND.L.EQ.1)GO TO 540
      GO TO 550
  540 BC(LAF+IR)=BC(LAF+IR)/2.
      B(2)=B(2)/2.
  550 CONTINUE
      FL(IR)=FL(IR)+BC(LAF+IR)
      IF(IR.GT.NFR)GO TO 72
      DO 54 I=1,NIF
      J1=JPR(I)
      IF(J1.EQ.0) GOTO 54
      J2=IIF(I)
      J=LOC(I)
      DO 55 K=1,6
      KG=(K-1)/2+1
      IF(KG.EQ.1) X=XA(J1)
      IF(KG.EQ.2) X=XF(J1)
      IF(KG.EQ.3) X=XS(J1)
      FAC=BC(LAF+IR)
      IF(MOD(K,2).EQ.0) FAC=B(2)
   55 ZC(J,K,IR)=ZC(J,K,IR)+X*FAC
   54 CONTINUE
   72 CONTINUE
      IF(N.EQ.1)GO TO 590
   50 CONTINUE
  590 CONTINUE
      DO 591 IR=1,NXR
  591 BC(LF3+IR)=BC(LF1+IR)
      EI=EIF
      DO 37 J=1,NIS
      IF(NC(LKC+J).EQ.NC(LEF+J)) NC(LKC+J)=0
   37 CONTINUE
   30 CONTINUE
      DO 60 I=1,NIF
      J2=IIF(I)
      LOCO(I)=LOC(I)
      J=LOC(I)
      DO 61 K=1,5,2
      TRM=0.
      DO 62 IR=1,NFR
      TRM=TRM+ZC(J,K,IR)*BC(LVL+IR)
   62 CONTINUE
      TEMP=TRM*BC(LRD+J2)
      IF(K-3) 64,65,66
   64 CCJC(J2,IG)=TEMP
      TRI(J,K)=TEMP/QSR
      GOTO 61
   65 CCJF(J2,IG)=TEMP
      CCJC(J2,IG)=CCJC(J2,IG)-TEMP
      TRI(J,K)=TEMP/QSR
      GOTO 61
   66 CCJS(J2,IG)=TEMP
      TRI(J,K)=TEMP/QSR
   61 TRI(J,K+1)=ZC(J,K+1,1)
   60 CONTINUE
      TEMP=0.
      DO 940 IR=1,NXR
      FGI=FL(IR)
      IF(IR.GT.NFR)GO TO 920
      DO 910 I=1,NIF
      IF(JPR(I).EQ.0)GO TO 900
      IF(IR.GT.1) GOTO 910
      J=LOC(I)
      TEMP=TEMP+TRI(J,1)*QSR
      GO TO 910
  900 J2=IIF(I)
      TEMP=TEMP+BC(LXA+J2)*BC(LRD+J2)*BC(LVL+IR)*FGI
  910 CONTINUE
      GO TO 940
  920 JJ=NC(LIR+IR)
      NIR=NC(LIR+IR+1)-JJ
      DO 930 J=1,NIR
      I=NC(LII+JJ+J)
      TEMP=TEMP+BC(LXA+I)*BC(LRD+JJ+J)*BC(LVL+IR)*FGI
  930 CONTINUE
  940 CONTINUE
      QZ(IG)=QSR
CE    ITAK = ZA02AS(DUMMY)
      ITAK = 0
      TOK=(ITAK-ITIK)
      WRITE(ISO,1010) QSR,QQ(IG),FF(IG),TOK,(NC(LCV+I),I=1,ITRM)
      QSR=QSR-TEMP
      RETURN
 1010 FORMAT(1H+,5X,4(1H0),3X,'QR=',1PE11.4,3X,'QQ=',1PE11.4,3X,'FF=',
     1 1PE11.4,3X,'TIK=',1PE11.4,3X,'IT=',5I5,5X,13(1H0))
      END
      SUBROUTINE RABMEM
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* RABMEM *   HAMMER   VERSION /04-77/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      COMMON/RABLOC/ ISTRT,LIR,LOF,LIF,LOM,LIM,LRI,LRO,LVL,LBY,LAI,LEF,
     1 LNB,LAP,LKC,LCO,LXS,LXA,LXF,LMT,LVW,LNM,LFW,LRD,LII,LBI,LNH,LFL,
     2 LXT,LBV,LF1,LF2,LF3,LAF,LCV,LSR,LST,LS1,LS2,LS3,LS4,LS5,LAB,LLB,
     3 LUV,LV1,LV2,LV3,LV4,LV5,LN1,LN2,LP1,LP2,NLAST,ISIZ
      COMMON/RABDAT/ ISI,ISO,NXR,NFR,NIS,NIQ,NBV,MIBV,MICP,ITRM,NGE,IMR,
     1 ITR
C
      READ(ISI,1010) NXR,NFR,MIBV,MICP,ITRM
      LIR=ISTRT
      LOF=LIR+NXR+1
      LIF=LOF+MICP*NFR
      LOM=LIF+MICP*NFR
      LIM=LOM+NXR-NFR
      LRI=LIM+NXR-NFR
      LRO=LRI+NXR
      LVL=LRO+NXR
      LBY=LVL+NXR
C
C     RABPRO-HAMMER INTERFACE
C
      CALL HAMRAB(1)
C
      LFL=LNH+NXR+1
      LXT=LFL+NXR
      LBV=LXT+NXR
      LF1=LBV+NBV
      LF2=LF1+NXR
      LF3=LF2+NXR
      LAF=LF3+NXR
      LCV=LAF+NXR
      LSR=LCV+ITRM
      LST=LSR+NXR
      LS1=LST+NIQ
      LS2=LS1+NXR
      LS3=LS2+NXR
      LS4=LS3+NXR
      LS5=LS4+NXR
      LAB=LS5+NXR
      LLB=LAB+NIQ
      LUV=LLB+NIQ
      LV1=LUV+NXR
      LV2=LV1+NXR
      LV3=LV2+NXR
      LV4=LV3+NXR
      LV5=LV4+NXR
      LN1=LV5+NXR
      LN2=LN1+NXR
      LP1=LN2+NXR
      LP2=LP1+NXR
      NLAST=LP2+NXR
      WRITE(ISO,2010) ISIZ,NLAST
      IF(ISIZ.LE.NLAST) STOP
      IF(MICP.NE.1001) STOP
      RETURN
 1010 FORMAT(5I5)
 2010 FORMAT(//,2X,'ISIZ=',I5,4X,'NLAST=',I5,/,1X,30(1H*),///)
      END
      SUBROUTINE HAMRAB(IGO)
C
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* HAMRAB *   HAMMER   VERSION /04-77/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C
      COMMON/LIMP/ IDENT,NX,MX,NRX,ISOX,ISOXE,NGEOM,DM0,NBCT,DM1(167),
     1 CT(18,10),DM2(10),RIN(20),DM3(20),ROUT(20),VOL(20),MTBL(20)
      COMMON DM4(6545),SIGA(18,54),DM5(1944),FL(20,54),DM6(1456),
     1 AMASS(18),DM7(4780),OSE0(18,54)
      COMMON/PROFIL/ EBY(2),WDXPR(3),JPR(3),LPR(3),KPR(3),NPR(3),
     1 ICAL,DPR(1)
      COMMON/RABLOC/ ISTRT,LIR,LOF,LIF,LOM,LIM,LRI,LRO,LVL,LBY,LAI,LEF,
     1 LNB,LAP,LKC,LCO,LXS,LXA,LXF,LMT,LVW,LNM,LFW,LRD,LII,LBI,LNH,LFL,
     2 LXT,LBV,LF1,LF2,LF3,LAF,LCV,LSR,LST,LS1,LS2,LS3,LS4,LS5,LAB,LLB,
     3 LUV,LV1,LV2,LV3,LV4,LV5,LN1,LN2,LP1,LP2,NLAST
      COMMON/NITRAB/ INO,MSHPR,LXPR,IG,DUPR,EPS,TRI(3,6)
      COMMON/RABDAT/ ISI,ISO,NXR,NFR,NIS,NIQ,NBV,MIBV,MICP,ITRM,NGE,IMR,
     1 ITR
      COMMON/RABSTO/ BC(1)
      DIMENSION NC(1)
      EQUIVALENCE(BC(1),NC(1))
      DATA PI/3.141592/,INIT/0/
C
      GOTO (100,200,200),IGO
C     HAMMER-RABPRO INTERFACE
  100 NGE=NGEOM
      NIS=ISOX
      IF(INO.EQ.3) INIT=1
      IF(NBCT.EQ.1) NIS=NIS-1
      IMR=NFR+1
      NIQ=0
      NRH=0
      READ(ISI,1010) (NC(LBY+N),N=1,NXR)
      LAI=LBY+NXR
      LEF=LAI+NIS
      LNB=LEF+NIS
      LAP=LNB+NIS
      LKC=LAP+NIS
      LCO=LKC+NIS
      LXS=LCO+NIS
      LXA=LXS+NIS
      LXF=LXA+NIS
      LMT=LXF+NIS
      LVW=LMT+(MX-1)*NXR
      LNM=LVW+(MX-1)*NXR
      LFW=LNM+NXR
      NI=1
      DO 600 N=1,NXR
      NO=NC(LBY+N)
      BC(LRI+N)=RIN(NI)
      BC(LRO+N)=ROUT(NO)
      DO 601 KI=NI,NO
  601 BC(LVL+N)=BC(LVL+N)+VOL(KI)
C     MIXTURE LOOP
      MM=1
      IM=LMT+(N-1)*(MX-1)
      IW=LVW+(N-1)*(MX-1)
      NC(IM+MM)=MTBL(NI)
      NCI=NI
      IEND=0
      DO 610 NN=NI,NO
      BC(LFW+NN)=VOL(NN)/BC(LVL+N)
      IF(NC(IM+MM).EQ.MTBL(NN)) GOTO 620
      NCO=NN-1
      GOTO 630
  620 IF(NN.LT.NO) GOTO 610
      NCO=NN
      IEND=1
      IF(MM.NE.1) GOTO 630
      BC(IW+MM)=1.
      MM=MM+1
      GOTO 610
  630 TEMP=0.
      DO 631 KI=NCI,NCO
  631 TEMP=TEMP+VOL(KI)
      BC(IW+MM)=TEMP/BC(LVL+N)
      MM=MM+1
      IF(IEND.EQ.1) GOTO 610
      NCI=NN
      NC(IM+MM)=MTBL(NN)
      IF(NN.NE.NO) GOTO 610
      IEND=1
      NCO=NN
      GOTO 630
  610 CONTINUE
      NC(LNM+N)=MM-1
  600 NI=NO+1
C     TRANSFER ISOTOPE MASSES
      DO 760 J=1,NIS
      BC(LAI+J)=AMASS(J)
C     CORRECT FOR ERRONEOUS HYDROGEN MASS ON HELP-LIB TAPE
      IF(ABS(BC(LAI+J)-1.).LT.0.01) BC(LAI+J)=1.
  760 CONTINUE
C
C     DETERMINE NUMBER OF ISOTOPES IN EACH COARSE REGION
      I=0
      DO 700 N=1,NXR
      NMX=NC(LNM+N)
      DO 710 J=1,NIS
      DO 720 NN=1,NMX
      IM=LMT+(N-1)*(MX-1)+NN
      M=NC(IM)
      IF(CT(J,M).EQ.0.) GOTO 720
      NC(LIR+N+1)=NC(LIR+N+1)+1
      I=I+1
      NC(LOF+I)=J
      GOTO 710
  720 CONTINUE
  710 CONTINUE
      NIQ=NIQ+NC(LIR+N+1)
  700 NC(LIR+N+1)=NIQ
C
      LRD=LFW+NX
      LII=LRD+NIQ
      LBI=LII+NIQ
      LNH=LBI+NXR+1
C
C     ISOTOPE REGION DENSITIES
      I=0
      DO 730 N=1,NXR
      NMX=NC(LNM+N)
      JJ=NC(LIR+N)
      NIR=NC(LIR+N+1)-JJ
      MS=(N-1)*(MX-1)
      NHT=0
      DO 740 J=1,NIR
      I=I+1
      JI=NC(LOF+I)
      NC(LOF+I)=0
      NC(LII+JJ+J)=JI
      IF(BC(LAI+JI).EQ.1.) NHT=1
      DO 750 NN=1,NMX
      IM=LMT+MS+NN
      M=NC(IM)
      IF(CT(JI,M).EQ.0.) GOTO 750
      IW=LVW+MS+NN
      BC(LRD+JJ+J)=BC(LRD+JJ+J)+CT(JI,M)*BC(IW)
  750 CONTINUE
  740 CONTINUE
      NC(LBI+N+1)=NC(LBI+N)+(NIR-NHT)*MIBV
      NRH=NRH+NHT
      NC(LNH+N+1)=NRH
  730 CONTINUE
      NBV=(NIQ-NRH)*MIBV
C
C     FUEL MULTIREGION INNER-OUTER ESCAPE PROBABILITIES
      DOP=20./(MICP-1)
      DO 202 N=1,NFR
      RO=BC(LRO+N)
      RI=BC(LRI+N)
      DLR=RO-RI
      DLS=DOP/DLR
      RAT=RI/RO
      RA=1.-RAT**2
      II=LIF+(N-1)*MICP
      IO=LOF+(N-1)*MICP
CE    BC(II+1)=(2.*(ARSIN(RAT)+RAT*SQRT(RA))/PI+RA-1.)/(2.*RA)
      BC(II+1)=(2.*( ASIN(RAT)+RAT*SQRT(RA))/PI+RA-1.)/(2.*RA)
      BC(IO+1)=1.-BC(II+1)
      SIG=0.
      DO 203 NN=2,MICP
      SIG=SIG+DLS
      ARG=SIG*DLR
      IF(NGE.GT.1) GOTO 222
      IF(N.EQ.1) ARG=ARG+ARG
      CALL ESCAPE(1.,ARG,PEO,PEI)
      IF(N.NE.1) GOTO 224
      PEO=PEO+PEO
      PEI=0.
      GOTO 224
  222 CALL ESCAPE(RAT,ARG,PEO,PEI)
  224 BC(II+NN)=PEI
      BC(IO+NN)=PEO
  203 CONTINUE
  202 CONTINUE
      IF(INIT.EQ.0) GOTO 778
C     FOR PRINT ONLY
      EPS=1./MSHPR
      GOTO 777
  778 CONTINUE
C     PRINT COARSE GEOMETRY OPTIONS AND SLOWING DOWN PARAMETERS
      WRITE(ISO,1020) NXR,NFR,NIS,NIQ,ITRM,MIBV,NBV
      CALL GETIT(4H LBY,LBY,NXR,2)
      CALL GETIT(4H LAI,LAI,NIS,1)
      IF(INIT.EQ.0) GOTO 779
      CALL GETIT(4H LEF,LEF,NIS,2)
      CALL GETIT(4H LNB,LNB,NIS,2)
      CALL GETIT(4H LAP,LAP,NIS,1)
  779 CALL GETIT(4H LNM,LNM,NXR,2)
      CALL GETIT(4H LII,LII,NIQ,2)
      CALL GETIT(4H LRD,LRD,NIQ,1)
C
      RETURN
C
C
C     TRANSFER MICROSCOPIC CROSS SECTIONS
  200 CONTINUE
      DO 770 J=1,NIS
      BC(LXS+J)=OSE0(J,IG)
  770 BC(LXA+J)=SIGA(J,IG)
      IF(IGO.EQ.3) GOTO 170
  777 CONTINUE
C     DETERMINE NUMBER OF BACKVALUES PER ISOTOPE AND ALPHA CORRECTIONS
      DO 120 J=1,NIS
      AJ=BC(LAI+J)
      IF(AJ.EQ.1.) GOTO 130
      ALF=4.*AJ/(1.+AJ)**2
      IVL=1.-ALOG(1.-ALF)/EPS
      MEF=IVL/(MIBV-3)+1
      IF(MEF.EQ.1) GOTO 160
      IVL=1.-ALOG(1.-ALF)/(MEF*EPS)
  160 NC(LEF+J)=MEF
      MR=1+MOD(IVL,2)
      GOTO (140,150),MR
  140 IVL=IVL+1
  150 NC(LNB+J)=IVL
      BC(LAP+J)=1.-EXP(-EPS*MEF*(IVL-1))
      BC(LCO+J)=EPS/BC(LAP+J)
      GOTO 120
  130 BC(LAP+J)=1.
      BC(LCO+J)=EPS
  120 CONTINUE
      IF(IGO.EQ.1) GOTO 778
  170 CONTINUE
C     WEIGHT INTEGRAL TRANSPORT FLUX FOR COARSE REGIONS
      NI=1
      DO 780 N=1,NXR
      BC(LFL+N)=0.
      NO=NC(LBY+N)
      DO 790 NN=NI,NO
  790 BC(LFL+N)=BC(LFL+N)+FL(NN,IG)*BC(LFW+NN)
  780 NI=NO+1
C     NON-FUEL MULTIREGION INNER-OUTER ESCAPE PROBABILITIES
      DO 810 N=IMR,NXR
      RAT=BC(LRI+N)/BC(LRO+N)
      DLR=BC(LRO+N)-BC(LRI+N)
      JJ=NC(LIR+N)
      NIR=NC(LIR+N+1)-JJ
      TEMP=0.
      DO 820 J=1,NIR
      I=NC(LII+JJ+J)
  820 TEMP=TEMP+(BC(LXS+I)+BC(LXA+I))*BC(LRD+JJ+J)
      ARG=TEMP*DLR
      IF(NGE.GT.1) GOTO 830
      IF(N.EQ.NXR) ARG=ARG+ARG
      CALL ESCAPE(1.,ARG,PEO,PEI)
      IF(N.NE.NXR) GOTO 840
      PEI=PEI+PEI
      GOTO 840
  830 CALL ESCAPE(RAT,ARG,PEO,PEI)
  840 CONTINUE
      BC(LOM+N-NFR)=PEO
      BC(LIM+N-NFR)=PEI
  810 CONTINUE
      RETURN
 1010 FORMAT(20I3)
 1020 FORMAT(1X,'RABRO-COARSE GEOMETRY OPTIONS:',/,1X,30(1H*),//,2X,
     1'NXR=',I3,4X,'NFR=',I3,4X,'NIS=',I2,4X,'NIQ=',I3,4X,'ITRM=',I2,
     2 4X,'MIBV=',I5,4X,'NBV=',I5,//)
      END
      SUBROUTINE NITPRO
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* NITPRO * HAMMER   VERSION /JB-1077/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      DIMENSION ZC(3,6), ZP(3,6), T(6)
      COMMON/PROFIL/ EBY(2),WDXPR(3),JPR(3),LPR(3),KPR(3),NPR(3),
     1 ICAL,DPR(1)
      COMMON/PROHAM/TSRS(18),TURS(18),WNAME(18),IGH(18),IGL(18)
      COMMON/NITRAB/ INO,MSHPR,LXPR,IG,DUPR,EPS,TRI(3,6),WNAM(3),LOCO(3)
      COMMON/NITDAT/ A(3),SGM(3),D(3),FABS(3)
      COMMON / EXTRA / BVL(1001,1,3)
      DIMENSION IVL(3),ISW(3),TRM(3),ALP(3),LOC(3),
     1 CO(3),DO(3),F(3),B(2),XA(3),XF(3),XS(3)
      DATA MIBV/1000/,INIT/0/
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C * * THE  N I T P R O  PROCEDURE DEVELOPPED BY J.BARHEN-W.ROTHENSTEIN
C * * REPRESENTS AN EXTENSION OF THE NORDHEIM INTEGRAL TREATMENT TO
C * * RESONANCE PROFILE NUCLIDES.THE PRESENT DEFAULT VERSION ALLOWS FOR
C * * UP TO THREE NUCLIDES IN THE FUEL AT LEAST ONE OF WHICH HAS RESO-
C * * NANCE PROFILE TABULATIONS.
C * *
C * * THE NITPRO COMPUTATIONAL PATH INVOLVES SUBROUTINES0
C * *      - RTBLIB
C * *      - RESC - NITPRO - CXPR
C * *                      - SUMPS
C * *                      - GETLOC
C * *                      - PCALC
C * *      - SLODON
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C
      IF(INO.EQ.0) INIT=0
      HSM=MSHPR*DUPR+1
      MSH=HSM
      IF(INIT.NE.0) GOTO 9
      EPS=DUPR/(MSH-1)
      TRM(3)=0.
      IVLM=0
      DO 12 J=1,3
      WNAME(J)=WNAM(J)
      ALP(J)=1.
      IF(SGM(J).NE.0.0) GOTO 110
      ISW(J)=1
      IVL(J)=0
      GOTO 120
  110 IF(A(J).EQ.1.0) GOTO 130
      ALF=4.*A(J)/(1.+A(J))**2
      IVL(J)=1.-ALOG(1.-ALF)/EPS
      MR=1+MOD(IVL(J),2)
      ISW(J)=2
      GOTO (140,150),MR
  140 IVL(J)=IVL(J)+1
  150 ALP(J)=1.-EXP(-EPS*(IVL(J)-1))
      IF(IVL(J).LE.MIBV) GOTO 120
  130 ISW(J)=3
      IVL(J)=0
      ALP(J)=1.
      TRM(3)=TRM(3)+SGM(J)
  120 IF(IVLM.LE.IVL(J)) IVLM=IVL(J)
   12 CONTINUE
      MR=IVLM
      MR1=MR+1
      DEPS=EPS
      T(1) = EXP(-DEPS)
      T(2)=1.0
      DO 14 J=1,3
   14 T(J+2)=SGM(J)/EBY(2)
      IF(MR*(MIBV-MR+1).LE.0) GOTO 210
      DO 16 N=2,MR1
      T(2)=T(2)*T(1)
      DO 18 J=1,3
   18 BVL(N,1,J)=T(J+2)*T(2)
   16 CONTINUE
  210 CONTINUE
      DO 20 J=1,3
      DO(J)=D(J)/D(1)
      CO(J)=EPS/(3.*ALP(J))
      PINK=SUMPS(2,J,1,BUD,EBY(1))
      DO 22 K=1,6
      ZC(J,K)=0.
   22 ZP(J,K)=0.
   20 CONTINUE
    9 IF(HSM.EQ.FLOAT(MSH)) GO TO 10
      MSH=MSH+1
      DUPR=EPS*(MSH-1)
      EBY(1)=EBY(2)*EXP(-DUPR)
   10 CONTINUE
      LM=0
      DO 11 J=1,3
      IF(LPR(J).NE.0) LM=MAX0(LM,LPR(J)/NPR(J))
   11 CONTINUE
      LEX=(LM/MSH+1)*LXPR
      CALL GETLOC(WNAME,WNAM,LOC,3)
      DO 13 J=1,3
      I=LOC(J)
      IF(LPR(I).EQ.0) GOTO 13
      IGH(I)=IG
      IF(IGL(I).EQ.0) IGL(I)=IG
   13 CONTINUE
      IF(INIT.EQ.0) GOTO 80
      TRM(3)=0.
      DO 82 J=1,3
      I=LOC(J)
      LGO=ISW(I)
      GOTO (82,83,84),LGO
   84 TRM(3)=TRM(3)+SGM(I)
   83 DO(J)=D(J)/D(1)
   82 CONTINUE
   80 CONTINUE
      MR=MSH
      EF=EBY(2)
      T(6) = EXP(DEPS/LEX)
      B(1)=EPS/LEX
      DO 30 N=1,MR
      EIF=EF
      EBD=EF
      EF=EF*T(1)
      CALL CXPR(EIF,2,XS,XF,XA)
      SIGT=0.
      DO 32 I=1,3
      J=LOC(I)
      JJ=JPR(I)
      IF(JJ.GT.0) GOTO 240
      SIGT=SIGT+SGM(J)*D(1)+FABS(J)*D(J)
      GOTO 32
  240 SIGT=SIGT+(XS(JJ)+XA(JJ))*D(I)
   32 CONTINUE
      IF(INIT.EQ.1.AND.N.EQ.1) GO TO 43
      CALL PCALC(PZ,PC,SIGT)
      DO 34 J=1,2
   34 TRM(J)=0.
      DO 40 I=1,3
      J=LOC(I)
      JJ=JPR(I)
      IF(ISW(J).NE.2) GOTO 40
      TEMP=SUMPS(1,J,IVL(J),BUD,BVL(1,1,J))
      TRM(1)=TRM(1)+TEMP/ALP(J)
      CX=CO(J)*SGM(J)
      IF(JJ.GT.0) CX=CO(J)*XS(JJ)*DO(I)
      TRM(2)=TRM(2)+CX
   40 CONTINUE
      STM=SIGT/D(1)
      STMB=STM
      F(1)=(PC*EPS*TRM(1)+(PC*TRM(3)+PZ*STM)/EIF)/(1.-PC*TRM(2)/STM)
      DO 42 I=1,3
      J=LOC(I)
      JJ=JPR(I)
      CX=SGM(J)
      IF(JJ.GT.0) CX=XS(JJ)*DO(I)
   42 BVL(1,1,J)=F(1)*CX/STM
   43 CONTINUE
      STMB = SIGT/D(1)
      IF(INIT.EQ.0) INIT = 1
      EB=EBD
      DO 50 L=1,LEX
      IF(L.EQ.1) GOTO 520
      EBD=EBD*T(6)
      EB=EBD
      CALL CXPR(EB,1,XS,XF,XA)
      SIGT=0.
      DO 52 I=1,3
      J=LOC(I)
      JJ=JPR(I)
      IF(JJ.GT.0) GOTO 640
      SIGT=SIGT+SGM(J)*D(1)+FABS(J)*D(J)
      GOTO 52
  640 SIGT=SIGT+(XS(JJ)+XA(JJ))*D(I)
   52 CONTINUE
      STMB=SIGT/D(1)
      F(2)=F(1)+(EB-EIF)*(F(3)-F(1))/(EI-EIF)
      GOTO 530
  520 F(2)=F(1)
  530 AMR=F(2)*EB*B(1)/STMB
      B(2)=B(1)
      IF(N.EQ.1)GO TO 540
      IF(N.EQ.MR.AND.L.EQ.1)GO TO 540
      GO TO 550
  540 AMR=AMR/2.
      B(2)=B(2)/2.
  550 CONTINUE
      DO 54 I=1,3
      J=LOC(I)
      JJ=JPR(I)
      IF(JJ.EQ.0) GOTO 54
      DO 55 K=1,6
      KG=(K-1)/2+1
      IF(KG.EQ.1) X=XA(JJ)
      IF(KG.EQ.2) X=XF(JJ)
      IF(KG.EQ.3) X=XS(JJ)
      FAC=AMR
      IF(MOD(K,2).EQ.0) FAC=B(2)
   55 ZC(J,K)=ZC(J,K)+X*FAC
   54 CONTINUE
      IF(N.EQ.1)GO TO 590
   50 CONTINUE
  590 F(3)=F(1)
      EI=EIF
   30 CONTINUE
      DO 60 I=1,3
      LOCO(I)=LOC(I)
      J=LOC(I)
      DO 61 K=1,6
      TRI(J,K)=ZC(J,K)-ZP(J,K)
   61 ZP(J,K)=ZC(J,K)
   60 CONTINUE
      RETURN
      END
      SUBROUTINE CXPR(EE,IND,XS,XF,XA)
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* CXPR   *   HAMMER   VERSION /04-77/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      COMMON/PROFIL/ EBY(2),WDXPR(3),JPR(3),LPR(3),KPR(3),NPR(3),
     1 ICAL,DPR(1)
      DIMENSION XS(3),XF(3),XA(3),IBL(3),IBR(3),ILC(3)
C * *
C * * RESONANCE PROFILE TABULATIONS DRIVER ROUTINE
C * *
      E=EE
      IX=0
      IF(ICAL.NE.0)GO TO 15
      ICAL=1
      K=0
      DO 10 J=1,3
      IF(LPR(J).EQ.0)GO TO 10
      ILC(J)=2
      K=K+LPR(J)
      IBR(J) = K - NPR(J) + 1
      IBL(J)=K-LPR(J)+1
   10 CONTINUE
   15 CONTINUE
      IF(E.LT.EBY(1))IX=1
      IF(E.GT.EBY(2))IX=2
      DO 20 I=1,3
      J=JPR(I)
      IF(J.EQ.0) GOTO 20
      XS(J)=0.
      XF(J)=0.
      XA(J)=0.
      IF(IX.EQ.0)GO TO 300
      GO TO(200,100),IX
  100 IF(IND.EQ.2)GO TO 110
      KC=IBL(J)
      KP=KC+NPR(J)
      GO TO 35
  110 KP=IBL(J)
      KC=KP+NPR(J)
      GO TO 35
  200 IF(IND.EQ.2)GO TO 210
      KP=IBR(J)
      KC=KP-NPR(J)
      GO TO 35
  210 KC=IBR(J)
      KP=KC-NPR(J)
      GO TO 35
  300 CONTINUE
      IF(IND.NE.ILC(J))GO TO 310
      MOD=0
      GO TO 305
  310 ILC(J)=IND
      MOD=1
  305 GO TO(320,330),IND
  320 KF=KPR(J)
      IF(MOD.EQ.1)KF=KF+NPR(J)
      KI=IBL(J)
      GO TO340
  330 KF=IBR(J)
      KI=KPR(J)
      IF(MOD.EQ.1)KI=KI-NPR(J)
  340 NPRX=NPR(J)
      DO 30 K=KI,KF,NPRX
      GO TO(350,360),IND
  350 KC=KF-K+IBL(J)
      KP=KC+NPR(J)
      GO TO370
  360 KC=K
      KP=KC-NPR(J)
      IF(E.LT.DPR(KC))GO TO 30
      GO TO 35
  370 IF(E.GT.DPR(KC))GO TO 30
      GO TO 35
   30 CONTINUE
   35 ND=NPR(J)-1
      DO 40 N=1,ND
      IF(DPR(KC).NE.DPR(KP)) GOTO 90
      X=DPR(KP+N)
      WRITE(6,1010) EE,IND,KC,KP,DPR(KP),MOD
      GOTO 95
   90 CONTINUE
      X=DPR(KP+N)+(DPR(KC+N)-DPR(KP+N))*(E-DPR(KP))/(DPR(KC)-DPR(KP))
   95 CONTINUE
      GOTO (41,42,43),N
   41 XS(J)=X
      IF(XS(J).LT.0.0)XS(J)=0.0
      GOTO 40
   42 IF(ND.EQ.2) GOTO 43
      XF(J)=X
      GOTO 40
   43 XA(J)=X+XF(J)
   40 CONTINUE
      KPR(J)=KP
   20 CONTINUE
      RETURN
 1010 FORMAT(1X,E14.6,3I6,E14.6,I6)
      END
      SUBROUTINE TRANCC
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* TRANCC *   HAMMER   VERSION /04-77/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      COMMON/RABLOC/ ISTRT,LIR,LOF,LIF,LOM,LIM,LRI,LRO,LVL,LBY,LAI,LEF,
     1 LNB,LAP,LKC,LCO,LXS,LXA,LXF,LMT,LVW,LNM,LFW,LRD,LII,LBI,LNH,LFL,
     2 LXT,LBV,LF1,LF2,LF3,LAF,LCV,LSR,LST,LS1,LS2,LS3,LS4,LS5,LAB,LLB,
     3 LUV,LV1,LV2,LV3,LV4,LV5,LN1,LN2,LP1,LP2,NLAST
      COMMON/NITRAB/ INO,MSHPR,LXPR,IG,DUPR,EPS,TRI(3,6)
      COMMON/RABDAT/ ISI,ISO,NXR,NFR,NIS,NIQ,NBV,MIBV,MICP,ITRM,NGE,IMR,
     1 ITR
      COMMON/RABSTO/ BC(1)
      DIMENSION NC(1)
      EQUIVALENCE(BC(1),NC(1))
C * *
C * * TRANSPORT EQUATION SOLVED IN COSINE CURRENTS APPROXIMATION
C * *
      DO 13 N=1,NXR
   13 BC(LUV+N)=BC(LSR+N)*BC(LVL+N)
      IF(ITR.NE.1) GOTO 103
      REFL=1.
      NM1=NXR-1
      DOP=20./(MICP-1)
      DO 100 N=1,NXR
      IF(NGE.GT.1) GOTO 15
      A2=1.
      AY=BC(LXT+N)*BC(LVL+N)
      AX=4.*AY
      GOTO 25
   15 AY=BC(LXT+N)*(BC(LRO+N)-BC(LRI+N))
      A2=BC(LRI+N)/BC(LRO+N)
      AX=0.
      IF(N.EQ.1) GOTO 25
      AX=0.63662*BC(LVL+N)*BC(LXT+N)/BC(LRI+N)
   25 CONTINUE
      DLS=DOP/(BC(LRO+N)-BC(LRI+N))
      IF(N.GT.NFR) GOTO 210
      NN=(N-1)*MICP+1
      CALL PIJINT(N,DLS,BC(LXT+1),BC(LOF+NN),PEX)
      PA=PEX
      CALL PIJINT(N,DLS,BC(LXT+1),BC(LIF+NN),PEX)
      PI=PEX
      GOTO 220
  210 PA=BC(LOM+N-NFR)
      PI=BC(LIM+N-NFR)
  220 CONTINUE
      BC(LV1+N)=PI
      BC(LV5+N)=1.-AX*PI
      BC(LV2+N)=A2*BC(LV5+N)
      BC(LV3+N)=PA
  100 BC(LV4+N)=1.-A2*(1.+AX*(PA-PI))
      IF(NGE.GT.1) GOTO 102
      PA1=BC(LV1+1)*(1.+BC(LV5+1))
      CN1=BC(LV5+1)**2
      GOTO 103
  102 PA1=BC(LV3+1)
      CN1=1.-.63662*BC(LVL+1)*BC(LXT+1)*PA1/BC(LRO+1)
  103 CONTINUE
      BC(LN2+NXR)=0.
      DO 20 N=1,NM1
      L=NXR-N
   20 BC(LN2+L)=BC(LV1+L+1)*BC(LUV+L+1)+BC(LV2+L+1)*BC(LN2+L+1)
      BC(LP2+1)=PA1*BC(LUV+1)+CN1*BC(LN2+1)
      DO 30 N=2,NXR
   30 BC(LP2+N)=BC(LV3+N)*BC(LUV+N)+BC(LV4+N)*BC(LN2+N)+BC(LV5+N)*BC(LP2
     1 +N-1)
      BC(LN1+NXR)=1.
      DO 40 N=1,NM1
      L=NXR-N
   40 BC(LN1+L)=BC(LV1+L+1)*BC(LUV+L+1)+BC(LV2+L+1)*BC(LN1+L+1)
      BC(LP1+1)=PA1*BC(LUV+1)+CN1*BC(LN1+1)
      DO 50 N=2,NXR
   50 BC(LP1+N)=BC(LV3+N)*BC(LUV+N)+BC(LV4+N)*BC(LN1+N)+BC(LV5+N)*BC(LP1
     1 +N-1)
      BC(LP1+NXR)=BC(LP2+NXR)/(1.-REFL*(BC(LP1+NXR)-BC(LP2+NXR)))
      BC(LN1+NXR)=REFL*BC(LP1+NXR)
      DO 60 N=1,NM1
      BC(LP1+N)=BC(LP2+N)+BC(LN1+NXR)*(BC(LP1+N)-BC(LP2+N))
   60 BC(LN1+N)=BC(LN2+N)+BC(LN1+NXR)*(BC(LN1+N)-BC(LN2+N))
      BC(LF1+1)=(BC(LUV+1)+BC(LN1+1)-BC(LP1+1))/BC(LVL+1)
      DO 200 N=2,NXR
      BC(LF1+N)=BC(LUV+N)+BC(LN1+N)-BC(LP1+N)+BC(LP1+N-1)-BC(LN1+N-1)
  200 BC(LF1+N)=BC(LF1+N)/BC(LVL+N)
      RETURN
      END
      SUBROUTINE PIJINT(IR,DLS,XT,X,PEX)
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* PIJINT *   HAMMER   VERSION /04-77/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      DIMENSION X(1),XT(1)
C * *
C * * INTERPOLATION ROUTINE FOR FUEL MULTIREGION INNER/OUTER ESCAPE
C * * PROBABILITIES.
C * *
CE      INSERIDO PARA RISC
       I951 = 951
       I1001= 1001
       I1   = 1
       I2   = 2
       I3   = 3
       I4   = 4
CE      FIM
      RN=XT(IR)/DLS
      IF(RN.GE.999.) GOTO 40
      IN=RN
      RN=RN-FLOAT(IN)
      IF(IN.GT.0) GOTO 10
CE      PEX=(X(1)*(1.-RN)*(2.-RN)*(3.-RN)+RN*(X(4)*(1.-RN)*(2.-RN)
CE     1 +3.*(3.-RN)*(X(2)*(2.-RN)-X(3)*(1.-RN))))/6.
      PEX=(X(I1)*(1.-RN)*(2.-RN)*(3.-RN)+RN*(X(I4)*(1.-RN)*(2.-RN)
     1 +3.*(3.-RN)*(X(I2)*(2.-RN)-X(I3)*(1.-RN))))/6.
      RETURN
   10 PEX=X(IN+1)+RN*(X(IN+2)-X(IN+1))-RN*(RN-1.)/4.*(X(IN+2)
     1 +X(IN+1)-X(IN)-X(IN+3))
      RETURN
CE 40 IF(X(951).GT.0.) GOTO 45
   40 IF(X(I951).GT.0.) GOTO 45
      PEX=0.
      RETURN
CE 45 AP=X(1001)/X(951)/0.95
   45 AP=X(I1001)/X(I951)/0.95
      XP=950.*DLS/XT(IR)
      BP=(AP-1.)/(AP-0.9025)
CE    PEX=X(951)*XP*(1.-BP*XP*XP)/(1.-BP)
      PEX=X(I951)*XP*(1.-BP*XP*XP)/(1.-BP)
      RETURN
      END
      FUNCTION SUMPS (ICAL,I,NBV,BUD,BV)
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* SUMPS  *   HAMMER   VERSION /04-77/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      DIMENSION JFK(30),NEX(30),NST(30),LRQ(30),S1(30),S2(30)
      DIMENSION BV(1)
C * *
C * * THE PRESENT DEFAULT VERSION OF THE TECHNION'S <GLORIFIED> PARTIAL
C * * SIMPSON INTEGRATION ROUTINE ALLOWS FOR UP TO  NIQ=30 NON HYDROGEN
C * * ISOTOPES.
C * *
      GOTO (50,60),ICAL
   50 IF(JFK(I).NE.0) GOTO 30
      JFK(I)=1
      NEX(I)=NBV
      NST(I)=NBV-1
      LRQ(I)=-1
      BUD=BV(NBV)
      S1(I)=0.
      S2(I)=0.
      DO 10 JS=2,NBV,2
   10 S1(I)=S1(I)+BV(JS)
      DO 20 JS=3,NBV,2
   20 S2(I)=S2(I)+BV(JS)
   40 SUMPS=(2.*S2(I)+4.*S1(I)-BUD)/3.
      RETURN
   30 LRQ(I)=LRQ(I)+1
      LRT=LRQ(I)+1
      K=NEX(I)-MOD(LRQ(I),NST(I))
      L=NEX(I)-MOD(LRT,NST(I))
      SAS=S2(I)-BV(K)+BV(1)
      BV(K)=BV(1)
      BUD=BV(L)
      S2(I)=S1(I)
      S1(I)=SAS
      GOTO 40
   60 JFK(I)=0
      RETURN
      END
      FUNCTION SUMHS(SH1,SH2,I,IGO)
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* SUMHS  *   HAMMER   VERSION /04-77/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      DIMENSION S1(10), S2(10), IND(10)
C * *
C * * PARTIAL SIMPSON INTEGRATION ROUTINE FOR HYDROGEN.THE PRESENT
C * * DEFAULT VERSION ALLOWS FOR HYDROGEN PRESENCE IN UP TO 10 COARSE
C * * REGIONS.
C * *
      GOTO (20,10),IGO
   10 S1(I)=SH1
      S2(I)=SH2
      IND(I)=0
      RETURN
   20 IF(IND(I).NE.0) GOTO 30
      IND(I)=1
      GOTO 40
   30 SH1=S1(I)
      S1(I)=S2(I)+SH2
      S2(I)=SH1
   40 SUMHS=(4.*S1(I)+2.*S2(I))/3.
      RETURN
      END
      SUBROUTINE GETLOC(WNAME,WNAM,LOC,NN)
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* GETLOC *   HAMMER   VERSION /04-77/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      DIMENSION WNAME(1),WNAM(1),LOC(1)
      K=0
      DO 10 I=1,NN
      DO 20 J=1,NN
      IF(WNAME(J).NE.WNAM(I)) GOTO 20
      LOC(I)=J
      K=K+1
      IF(K.EQ.NN) RETURN
   20 CONTINUE
   10 CONTINUE
      END
      SUBROUTINE GETIT(HOL,LL,NL,IMOD)
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* GETIT  *   HAMMER   VERSION /04-77/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      COMMON/RABSTO/ BC(1)
      DIMENSION NC(1)
      EQUIVALENCE(BC(1),NC(1))
      GOTO (10,20),IMOD
   10 WRITE(6,100) HOL,(BC(LL+I),I=1,NL)
      RETURN
   20 WRITE(6,110) HOL,(NC(LL+I),I=1,NL)
      RETURN
  100 FORMAT(/,1X,A4,/,(10(1X,1PE11.4)))
  110 FORMAT(/,1X,A4,/,(10(1X,I5)))
      END
      SUBROUTINE NIT(EZX,GNZX,GGZX,GFZX,RZX,SPINZX,T,A0,S0,A1,S1,A2,S2,D
     1ZX,TOT,SIGEFY)
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* NIT    *   HAMMER   VERSION /04-77/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      COMMON DUMY(1100)
      COMMON MMSH,MIBV,NPG,SLABT,CYLT,HEAD,TEMP,IGEOM,ABAR,C,S,AZERO,
     1SIGPZ,G,NRR,IABS,DZERO,AMOD1,SIGM1,IMOD1,AMOD2,SIGM2,IMOD2,
     2EZERO(1),GAMN(1),GMGM(1),GFG(1),R(1),GAMMA(1),EONE(1),EPSIL(1),
     3SIGOH(1),XI(1),MESH(1),ALPHA(3),TERM(3),IVAL(3),BVAL(1001,3),
     4SIGAZ(5),SIGSZ(5),F(5),AMU(5),SUB(5),I,DINK,SPIN(1),RI(1),DRI(1),
     5TAPS(1),RBAR,Z2,S3,S4,T1,T2,T3,T4
C * *
C * * STANDARD NORDHEIM INTEGRAL TREATMENT (RESONANCE INTEGRALS) FOR
C * * NON-PROFILE ISOTOPES.
C * *
C     STORAGE ALLOCATION CONSTANTS
      MMSH=501
      MIBV=1000
      EZERO(1)=EZX
      GAMN(1)=GNZX
      GMGM(1)=GGZX
      GFG(1)=GFZX
      R(1)=RZX
      SPIN(1)=SPINZX
      DINK=SIGEFY
      I=1
      NRR=1
      S=5.
      IABS=1
      DZERO=DZX
      AZERO=A0
      SIGPZ=S0
      AMOD1=A1
      SIGM1=S1
      AMOD2=A2
      SIGM2=S2
      TEMP=T
C     COMPUTE MESH NEEDED FOR CROSS SECTION SETS
   70 CALL GRID (CA)
      CUT=CA
C
C     CALCULATE RESOLVED RESONANCE INTEGRALS AND WING CORRECTIONS
  170 CALL RESOL (CUT)
      GFG(I)=GFG(I)*GMGM(I)
  499 GMGM(I)=GMGM(I)-GFG(I)
      TOT=RI(1)
      RETURN
      END
      SUBROUTINE GRID (CUT)
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* GRID   *   HAMMER   VERSION /04-77/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      COMMON /CNTRL/ DUMY1(13),NOUT,DUMY2(186)
      COMMON DUMY(1100)
      COMMON MMSH,MIBV,NPG,SLABT,CYLT,HEAD,TEMP,IGEOM,ABAR,C,S,AZERO,
     1SIGPZ,G,NRR,IABS,DZERO,AMOD1,SIGM1,IMOD1,AMOD2,SIGM2,IMOD2,
     2EZERO(1),GAMN(1),GMGM(1),GFG(1),R(1),GAMMA(1),EONE(1),EPSIL(1),
     3SIGOH(1),XI(1),MESH(1),ALPHA(3),TERM(3),IVAL(3),BVAL(1001,3),
     4SIGAZ(5),SIGSZ(5),F(5),AMU(5),SUB(5),I,DINK,SPIN(1),RI(1),DRI(1),
     5TAPS(1),RBAR,S2,S3,S4,T1,T2,T3,T4
      COMMON/DJD/EPILL,RESLL
      COMMON/CADY/CDYC(10),IGCDY,ICADY
C * *
C * *  Z U T  PROCEDURE0 GRID COMPUTES MESH NEEDED FOR CROSS SECTION
C * * CALCULATION.
C * *
      NNX=1
      SAP=S
C
C       THE CONSTANT 8.6164E-5 DEFINES KAPPA
C       THE CONSTANT 273.0 DEFINES THE MESH REFERENCE TEMPERATURE TZERO
C
      B1=8.6164E-5*273.0/AZERO
      B2=1.0/(B1*AZERO*AZERO)
      JG=1
      IG=JG
      GAMMA(JG)=GAMN(JG)+GMGM(JG)+GFG(JG)
      GMGM(JG)=GMGM(JG)+GFG(JG)
      GFG(JG)=GFG(JG)/GMGM(JG)
      IF(R(JG))70,70,60
   60 RP=R(JG)
      GO TO 80
   70 RP=5.0+0.5*SQRT(B1*EZERO(JG))/GAMMA(JG)
   80 NSN=0.5*RP*SQRT(B2*EZERO(JG))+1.0
      FNSN=NSN
      EPSIL(JG)=2.0/(AZERO*FNSN)
      IF(IGCDY.EQ.53) EPSIL(JG)=0.5*EPSIL(JG)
      SIGOH(JG)=2.6E+6*SPIN(JG)/EZERO(JG)*GAMN(JG)/GAMMA(JG)
      XONE=S*SQRT(SIGOH(JG)/SIGPZ)
      XI(JG)=GAMMA(JG)/(2.0*SQRT(8.6164E-5*EZERO(JG)*TEMP/AZERO))
       IF(10.0/XI(IG)-XONE/2.0)100,100,120
  100 EONE(JG)=EZERO(JG)+GAMMA(JG)*XONE/2.0
      SAP=777.0
      GO TO 140
  120 EONE(JG)=EZERO(JG)+10.0*GAMMA(JG)/XI(JG)
  140 ZONE=(EONE(JG)-EZERO(JG))/EZERO(JG)
      CUT = AMAX1(RESLL/EZERO(JG),0.42857142857)
      IF (ZONE- (1.0-CUT)) 160,160,180
  160 MESH(IG)=1+2* INT(0.5*(ALOG(EONE(IG)/(2.*EZERO(IG)-EONE(IG)))
     1  /EPSIL(IG)   ))
      EONE(IG)=2.*EZERO(IG)/(1.+EXP(-EPSIL(IG)*FLOAT(MESH(IG)-1)))
      GO TO 200
  180 MESH(IG)=1+2* INT(0.5*(ALOG(1.0/CUT    *EONE(IG)/EZERO(IG))
     1  /EPSIL(IG)   ))
      EONE(IG)=EZERO(IG)*EXP(EPSIL(IG)*FLOAT(MESH(IG)-1))*CUT
  200 IF (MMSH-MESH(IG)) 220,320,320
C
C     MESH EXCEEDS STORAGE LIMITS
  220 CONTINUE
      ITEMP=1
      IF(ITEMP.EQ.1) GO TO 316
      GO TO (221,222),NNX
  316 IF(MESH(IG).GT.MMSH) WRITE(NOUT,317) MESH(IG)
      GO TO 320
  221 R(JG)=RP
      WRITE(NOUT,223)EZERO,GAMN,GMGM,GFG,SPIN,R,S
      NNX=2
  222 IF(R(JG)-2.)300,300,500
  500 R(JG)=R(JG)-1.
      GOTO60
  300 MESH(IG)=MMSH
      IF(ZONE-0.57142857)301,301,302
  301 EPSIL(IG)=ALOG(EONE(IG)/(2.*EZERO(IG)-EONE(IG)))/(FLOAT(MMSH-3))
      GOTO320
  302 EPSIL(IG)=ALOG(2.33333333*EONE(IG)/EZERO(IG))/(FLOAT(MMSH-3))
  320 CONTINUE
      RETURN
  223 FORMAT(14H0RESONANCE AT ,E20.8,14H, WITH WIDTHS ,3E20.8/6H SPIN ,
     1E20.8,4H, R ,E20.8,4H, S ,E20.8/30H CANNOT BE PROCESSED PROPERLY./
     2/)
  317 FORMAT('0 NUMBER OF MESH PTS FOR THIS RESONANCE =',I20)
      END
      SUBROUTINE RESOL (CUT)
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* RESOL  *   HAMMER   VERSION /04-77/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      COMMON DUMY(1100)
      COMMON MMSH,MIBV,NPG,SLABT,CYLT,HEAD,TEMP,IGEOM,ABAR,C,S,AZERO,
     1SIGPZ,G,NRR,IABS,DZERO,AMOD1,SIGM1,IMOD1,AMOD2,SIGM2,IMOD2,
     2EZERO(1),GAMN(1),GMGM(1),GFG(1),R(1),GAMMA(1),EONE(1),EPSIL(1),
     3SIGOH(1),XI(1),MESH(1),ALPHA(3),TERM(3),IVAL(3),BVAL(1001,3),
     4SIGAZ(5),SIGSZ(5),F(5),AMU(5),SUB(5),I,DINK,SPIN(1),RI(1),DRI(1),
     5TAPS(1),RBAR,S2,S3,S4,T1,T2,T3,T4
      COMMON DUM42(7999),PZ(1001),PZ1(1001),DELSIG
      COMMON/DJD/EPILL,RESLL
C * *
C * *  Z U T  PROCEDURE0 RESOL COMPUTES RESOLVED RESONANCE INTEGRAL AND
C * * WING CORRECTION.
C * *
      I=1
       JR=I
C     COMPUTE RESONANCE PARAMETERS
   60 ALPHA(1)=4.0*AZERO/((AZERO+1.0)*(AZERO+1.0))
C
      TERM(3)=0.
C     ABSORBER TERM -
      IABQ=IABS
C     /INTEGRAL FORM/
  100 IVAL(1)=1.5+4.0/(AZERO*EPSIL(I))
      IF(IVAL(1)-MIBV)160,160,103
  103 IABQ=2
C     /NARROW RESONANCE FORM/
  120 IVAL(1)=0
      TERM(3)=TERM(3)+SIGPZ
C
C     FIRST MODERATOR TERM -
  160 IF(SIGM1)180,180,200
C     /TERM ABSENT/
  180 IVAL(2)=0
      SGM1=0.
      IMOD1=1
      IMOD1Q=IMOD1
      GO TO 280
C     /INTEGRAL FORM/
  200  IF(AMOD1-1.)163,163,201
  201  ALFA=4.0*AMOD1/(1.+AMOD1)**2
      IVAL(2)=1.-ALOG(1.-ALFA)/EPSIL(I)
      MR=1+MOD(IVAL(2),2)
      IMOD1=2
      IMOD1Q=2
      GO TO (220,240),MR
  220 IVAL(2)=IVAL(2)+1
  240 ALPHA(2)=1.-EXP(-EPSIL(I)*FLOAT(IVAL(2)))
      SGM1=SIGM1*ALPHA(2)/ALFA
      IF(IVAL(2)-MIBV)280,280,163
  163 IMOD1Q=3
      NEX=1
C     /ASYMPTOTIC FORM/
  260 IVAL(2)=0
      ALPHA(2)=1.
      SGM1=SIGM1
      TERM(3)=TERM(3)+SGM1
C
C     SECOND MODERATOR TERM -
  280 IF(SIGM2)300,300,320
C     /TERM ABSENT/
  300 IVAL(3)=0
      ALPHA(3)=1.
      SGM2=0.
      IMOD2=1
      IMOD2Q=IMOD2
      GO TO 400
C     /INTEGRAL FORM/
  320  IF(AMOD2-1.)303,303,321
  321  ALFA=4.0*AMOD2/(1.+AMOD2)**2
      IVAL(3)=1.-ALOG(1.-ALFA)/EPSIL(I)
      MR=MOD(IVAL(3),2)
      MR=MR+1
      IMOD2=2
      IMOD2Q=2
      GO TO (340,360),MR
  340 IVAL(3)=IVAL(3)+1
  360 ALPHA(3)=1.-EXP(-EPSIL(I)*FLOAT(IVAL(3)))
      SGM2=SIGM2*ALPHA(3)/ALFA
      IF(IVAL(3)-MIBV)400,400,303
  303 IMOD2Q=3
      NEX=2
C     /ASYMPTOTIC FORM/
  380 IVAL(3)=0
      SGM2=SIGM2
      TERM(3)=TERM(3)+SGM2
C
  400 CALL SCALC(SIGM,SGM1,SGM2)
C     CALCULATE CONSTITUENT INTEGRAND BACK VALUES
  520 MR=MAX0(IVAL(1),IVAL(2),IVAL(3))
C
      T1=EXP(-EPSIL(I))
      T2=1.0
      T3=SIGPZ   /EONE(I)
      T4=SGM1/EONE(I)
      T5=SGM2/EONE(I)
      MR1=MR+1
C     BACK VALUE TABLES RUN FROM BVAL(2) TO BVAL(MESH)
      MR1=MR+1
      IF(MR*(MIBV-MR+1))600,600,560
  560 DO 580 NR=2,MR1
      T2=T2*T1
      BVAL(NR,1)=T3*T2
      BVAL(NR,2)=T4*T2
      BVAL(NR,3)=T5*T2
  580 CONTINUE
C     RESONANCE ABSORPTION LOOP
  600 MR=MESH(I)
      TSIG=SGM1+SGM2
      CO1=EPSIL(I)/(3.0*ALPHA(1))
      CO2=EPSIL(I)*SGM1/3.0/ALPHA(2)
      CO3=EPSIL(I)*SGM2/3.0/ALPHA(3)
C
      PINK=SAMPS(2,I,EONE(1))
      PINK=SEMPS(2,I,EONE(1))
      PINK=SOMPS(2,I,EONE(1))
      S2=SIGOH(I)*GMGM(I)*SQRT(EZERO(I)/EONE(I))/GAMMA(I)
      S3=GAMN(I)*SIGOH(I)/GAMMA(I)
      S4=SQRT(SPIN(I)*SIGPZ   *S3)
      T1=1.0
      T2=EXP(EPSIL(I))
      T3=2.0*EONE(I)/GAMMA(I)
      T4=2.0*EZERO(I)/GAMMA(I)
      B=(EONE(I)*EPSIL(I))
      SUB1=0.
      NR=1
      TOT=0.
      DO 1100 N=1,MR
      CALL CROSS
      SIGT=SIGAZ(NR+2)+SIGSZ(NR+2)+TSIG
      CALL PCALC(PZERO,PC,SIGT*DZERO)
C
C     CALCULATE COLLISION DENSITY
  940 TERM(1)=0.
      TERM(2)=0.
C     ABSORBER TERM -
      GO TO (960,1000,980),IABQ
C     /INTEGRAL FORM/
  960 TERM(1)=TERM(1)+SAMPS(1,IVAL(1),BVAL(1,1))/ALPHA(1)
      TERM(2)=TERM(2)+SIGSZ(NR+2)*CO1
      GO TO 1000
C     /INFINITE MASS FORM/
  980 TERM(2)=TERM(2)+SIGSZ(NR+2)
C
C     FIRST MODERATOR TERM -
 1000 GO TO (1040,1020,1040),IMOD1Q
C     /INTEGRAL FORM/
 1020 TERM(1)=TERM(1)+SEMPS(1,IVAL(2),BVAL(1,2))/ALPHA(2)
      TERM(2)=TERM(2)+CO2
C
C     SECOND MODERATOR TERM -
 1040 GO TO (1080,1060,1080),IMOD2Q
C     /INTEGRAL FORM/
 1060 TERM(1)=TERM(1)+SOMPS(1,IVAL(3),BVAL(1,3))/ALPHA(3)
      TERM(2)=TERM(2)+CO3
C
 1080 F(NR)=(PC*EPSIL(I)*TERM(1)+(PC*TERM(3)+PZERO*SIGT)*
     1AMU(NR+2)/EONE(I))/(1.0-PC*TERM(2)/SIGT)
C
C     CALCULATE CONSTITUENT AND RESONANCE INTEGRANDS
      BVAL(1,1)=F(NR)*SIGSZ(NR+2)/SIGT
      BVAL(1,2)=F(NR)*SGM1/SIGT
      BVAL(1,3)=F(NR)*SGM2/SIGT
C     CALCULATE RESONANCE INTEGRAL
C
      SUB(NR)=F(NR)*SIGAZ(NR+2)/AMU(NR+2)/SIGT
      IF(N-1)1085,1085,1090
 1085 TOT=SUB(1)*B/2.
      GOTO1100
 1090 TOT=TOT+SUB(1)*B
 1100 CONTINUE
      TOT=TOT-SUB(1)*B/2.
C     CALCULATE WING CORRECTION
      ER=EZERO(I)
      T1=EONE(I)-ER
      XONE=2.0*T1/GAMMA(I)
      ZONE=T1/ER
      X1=XONE
      Z1=AMIN1((1.-CUT),ZONE)
      ZC = (ER-RESLL)/ER
      SRGA=SIGOH(I)*GMGM(I)
      Y=SRGA*GAMMA(I)/4.0
      A1=1.5707963*SRGA/ER
      Y1=SQRT(1.-Z1)
      YC=SQRT(1.-ZC)
      GAMM=(1.5*ALOG((1.+Y1)/(1.-Y1)*(1.-YC)/(1.+YC))
     1+(1.-3.*Z1)/Z1/Y1-(1.-3.*ZC)/ZC/YC)*Y/ER**2
     2-2.0*SQRT(ER/RESLL)*Y/(ER-0.0253)**2
      Z1=ZONE
      Y1=SQRT(1.+Z1)
      GAMP=((1.+3.*Z1)/Z1/Y1-1.5*ALOG((Y1+1.)/(Y1-1.)))*Y/ER**2
      DRI(JR)=GAMM+GAMP
 1260 CONTINUE
      TOT=TOT+DRI(JR)
      RI(1)=TOT
 2120 CONTINUE
 2140 RETURN
      END
      SUBROUTINE CROSS
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* CROSS  *   HAMMER   VERSION /04-77/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      COMMON DUMY(1100)
      COMMON MMSH,MIBV,NPG,SLABT,CYLT,HEAD,TEMP,IGEOM,ABAR,C,S,AZERO,
     1SIGPZ,G,NRR,IABS,DZERO,AMOD1,SIGM1,IMOD1,AMOD2,SIGM2,IMOD2,
     2EZERO(1),GAMN(1),GMGM(1),GFG(1),R(1),GAMMA(1),EONE(1),EPSIL(1),
     3SIGOH(1),XI(1),MESH(1),ALPHA(3),TERM(3),IVAL(3),BVAL(1001,3),
     4SIGAZ(5),SIGSZ(5),F(5),AMU(5),SUB(5),I,DINK,SPIN(1),RI(1),DRI(1),
     5TAPS(1),RBAR,S2,S3,S4,T1,T2,T3,T4
C * *
C * *  Z U T  PROCEDURE0 CROSS COMPUTES REQUIRED CROSS SECTION DATA.
C * *
      JC=3
C     CALCULATE MU AND X
      AMU(JC)=T1
      T1=T1*T2
      X    =T3/AMU(JC)-T4
C
C     CALCULATE PSI(X,XI) AND CHI(X,XI)
C     SHALL WE USE ASYMPTOTIC OR CONVERGENT SERIES
C     USE CONVERGENT SERIES IF
C   1 0.0(X)1.2   AND 0.275X*X +0.05(4THETA)     NOTE ABSOLUTE X=(X)
C   2 1.2(X)10.0  AND 0.12 X*X +0.28(4THETA)
C   3 10.0(X)100.0 AND 0.105X*X+1.75(4THETA)
C   4 100.0(X)200.0 AND 0.095X*X+100.0(4THETA)
C     4THETA IS 1.0/XI(I)  ROOT-OF
      THE=4.0/(XI(I)*XI(I))
      AXI=ABS(X    )
      IF(AXI-1.2)21,12,12
   12 IF(AXI-10.0)23,14,14
   14 IF(AXI-100.0)25,16,16
   16 IF(AXI-200.0)27,59,59
   21 IF(0.275*AXI*AXI+0.05-THE  )78,78,59
   23 IF(0.12*AXI*AXI +0.28-THE  )78,78,59
   25 IF(0.105*AXI*AXI+1.75-THE  )78,78,59
   27 IF(0.095*AXI*AXI+100.0-THE ) 78,78,59
C     TO 59 FOR ASYMPTOTIC SERIES
   59 SQ=X    *X    +1.0
      SR=SQRT(1.0/SQ)
      TEP=1.0/SQ
      TEC=X    /SQ
      S2A=2.0*TEC
      C2A=(X    *X    -1.0)/SQ
      SA=SR
      CA=SR*X
      COE=SR
      T5=THE/2.0/SQ
      T6=1.0
      T7=2.0
       DO 63 KZ=1,8
      SAT=S2A*CA+C2A*SA
      CA=C2A*CA-S2A*SA
      SA=SAT
      COE=T6*COE*T5
      T6=T6+T7
      TEP=TEP+COE*SA
   63 TEC=TEC+COE*(X*SA-T5*T6*(X*SA+CA))
      PSI    =TEP
      CHI    =TEC*2.0
      GO TO 164
C     TO 78 FOR CONVERGENT SERIES
C     CALCULATE GAMMA INCOMPLETE(0)
   78 TT=1.0/THE
      IF(TT-8.4)81,81,82
   81 CALL GAMINC(TT,FR)
      GO TO 83
   82 FR=0.0
   83 RAT= X    /THE*X    /THE
      G1C=FR*EXP(TT)/SQRT(THE)
      G2C= 2.0*(1.0-G1C)
      C1=1.0
      TEP=G1C
      TEC=G2C
      TH1=1.0
      FQ=0.0
      C2=X    /THE
      C3=EXP(-X    *C2)
      T9=1.0
      S1=2.0
      IF(THE-2.8)310,310,300
  300 MAXKZ=85./ALOG(THE)
      GOTO320
  310 MAXKZ=100
  320  DO 91 KZ=1,MAXKZ
      FQ=FQ+1.0
      TH1=TH1*THE
      G1C=G2C
      T9=T9+S1
      G2C=2.0*(TH1-G1C)/T9
      C1=C1*RAT/FQ
      TEP=TEP+C1*G1C
      TR=C1*G2C
      TEC=TEC+TR
      IF(ABS(TR/TEC)-0.00001)93,93,91
   91 CONTINUE
   93 PSI    =C3*TEP
      CHI    =C2*C3*TEC*2.0
  164 CONTINUE
C
C     CALCULATE CROSS SECTIONS
  140 SIGAZ(JC)=S2*PSI    *SQRT(AMU(JC))
  180 SIGSZ(JC)=PSI    *S3+SIGPZ   +CHI    *S4
  200 CONTINUE
      RETURN
      END
      SUBROUTINE TUZ (GEOM,SIGPZ,SIGM1,SIGM2,DZERO,AZERO,TEMP,GMGM,
     1G,D,GAMNO,EL,EU,EZERO,TOT)
CE
CE
CE   TUZ    VERSAO  MODIFICADA                               31/10/85
CE
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* TUZ    *   HAMMER   VERSION /04-77/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      COMMON /CNTRL/ IDBCH,NCASE,NFLOG,BTTL(9),NTIN,NTOUT,NTPUN,
     1NCHAIN,LIB1,LIB2,LIB3,INT1,INT2,NSC1,LNK(10),NTHCS,NEPCS,KLIB1,
     2KLIB2,KLIB3,DUM1(32),NTHGP,IBNDRY(12),EPCUT,DUM2(45),NCPRN,NCPPT,
     3DUM3(10),NTHRN,NTHPT,NTHPN,DUM4(9),NEPRN,NEPPT,NEPPN,NEPSG,NEPAG,
     4DUM5(19),NEDRN,NEDPT,NEDPN,NEDNB,NEDFW,NEDRB,NEDAX,NEDNU,DUM6(16)
      COMMON /LIMP/ IDENT,NX,MX,NRX,ISOX,ISOXE,NGEOM,NP1B1,NBCT,NXP,
     1BSQD,HOL(9),NPT(20),THT(20),MXAS(20),ILHI(20),NRBP(20),DEGC(20),
     2WSTBA(18),WSTBB(18),CONCTA(18,10),LIMT(10),RIN(20),RAD(20),
     3ROUT(20),VOL(20),MTBL(20),REGV(20),FISD(20),HOLID(3,18),DUM7(40)
      COMMON ID,HOLA(9),BALT(18,4,5),FOIL(20,4,5),FOGX(4,6),
     1FOX(20,4),DUMB(20),OTGC(5),OTGA(30,6),DUM20(21)
      COMMON DATA(14),EN(6),UNR(6)
      COMMON A,ANS,AUV,B,EK,FIN,PART,SIGP,STA,XIL,IU
CE
CE  COMMON INSERIDO
CE
      COMMON /WSTBCM/ WSTB
CE
      EXTERNAL BARJ
C * *
C * *  T U Z  PROCEDURE0 UNRESOLVED RESONANCE ABSORPTION CALCULATION
C * * BY G.F.KUNCIR,EXTENDED TO INCLUDE P-WAWE PARAMETERS (W.R-J.B)
C * *
CE
CE
      IF ( WSTB    .EQ. 92238. )  GO TO 92238
CE
      ABAR = 0.0
      C = 0.0
      EC = 0.0
      DATA(1)=AZERO
      DATA(2)=G
      DATA(3)=SIGPZ
      DATA(4)=TEMP
      DATA(5)=EC
      DATA(6)=D
      DATA(7)=GAMNO
      DATA(8)=GMGM
      DATA(9)=GEOM
      DATA(10)=ABAR
      DATA(11)=C
      DATA(12)=DZERO
      DATA(13)=SIGM1
      DATA(14)=SIGM2
C
      SIGP=SIGPZ+SIGM1+SIGM2+GEOM/DZERO
C
C     UNRESOLVED RESONANCE CALCULATION
C
      A=SQRT(AZERO/8.6164E-5/TEMP)
      KS=1
      IF(EZERO.NE.0.0) KS=4
      IU=1
      EN(1)=SQRT(EL*EU)
      VL=EN(1)/(EN(1)+EZERO)
      ELP=EL
      EUP=EU
      GAMNOP=GAMNO
      ERAT=EU/EL
      IF(EZERO.NE.0.0) ERAT=(EU/EL)**0.25
      TOT=0.0
      UP=1.0
      IF(EZERO.NE.0.0) UP=0.2
      DO 2 K=1,KS
      EU=EL*ERAT
      EN(1)=SQRT(EL*EU)
      GAMNO=GAMNOP*EN(1)/VL/(EN(1)+EZERO)
      DATA(7)=GAMNO
      B=A*GMGM/SQRT(EN(IU))/2.
      XIL=B+0.00025
      ANS=0.
      DO 1 JU=1,10
      STA=XIL+FLOAT(JU-1)*(UP-XIL)/10.
      FIN=XIL+FLOAT(JU)*(UP-XIL)/10.
      CALL SIMPS(STA,FIN,BARJ,PART,1.0E-3)
      ANS=ANS+PART
    1 CONTINUE
      EK=(ALOG(3.84184E-7*SIGP*EN(IU)*XIL/G/0.00025)
     1  +11.512925)/0.69314718
      UNR(IU)=ALOG(EU/EL)*GMGM*SIGP*(ANS+0.01054093*FJ(XIL,EK))/D/SQRT(
     13.1415927*A*GAMNO)
C
      TOT=UNR(IU)+TOT
      EL=EU
    2 CONTINUE
      EL=ELP
      EU=EUP
      GAMNO=GAMNOP
C     DEFINITION OF CONSTANTS -
C       8.6164E-5     KAPPA
C       0.00025       DELTA XI
C       0.01054093      2./3.*SQRT(0.00025)
C       0.69314718    ALOG(2.0)
C       11.512925     5.*ALOG(10.0)
C
CE
      RETURN
CE  COMANDOS ADICIONAIS PARA O DESVIO   SE   WSTB= 92238
CE
92238 CONTINUE
      DATA(1)=AZERO
      DATA(2)=G
      DATA(3)=SIGPZ
      DATA(4)=TEMP
      DATA(5)=EC
      DATA(6)=D
      DATA(7)=GAMNO
      DATA(8)=GMGM
      DATA(9)=GEOM
      DATA(10)=ABAR
      DATA(11)=C
      DATA(12)=DZERO
      DATA(13)=SIGM1
      DATA(14)=SIGM2
C
      SIGP=SIGPZ+SIGM1+SIGM2+GEOM/DZERO
C
C     UNRESOLVED RESONANCE CALCULATION
C
      A=SQRT(AZERO/8.6164E-5/TEMP)
      IU=1
      EN(1)=SQRT(EL*EU)
      B=A*GMGM/SQRT(EN(IU))/2.
      XIL=B+0.00095
      ANS=0.
      DO 9 JU=1,10
      STA=XIL+FLOAT(JU-1)*(1.-XIL)/10.
      FIN=XIL+FLOAT(JU)*(1.-XIL)/10.
      CALL SIMPS(STA,FIN,BARJ,PART,1.0E-2)
      ANS=ANS+ PART
    9 CONTINUE
      EK=(ALOG(3.84184E-7*SIGP*EN(IU)*XIL/G/0.00095)
     1  +11.512925)/0.69314718
      UNR(IU)=ALOG(EU/EL)*GMGM*SIGP*(ANS+0.06164414*FJ(XIL,EK))/D/SQRT(
     13.1415927*A*GAMNO)
C
      TOT=UNR(IU)
C     DEFINITION OF CONSTANTS -
C       8.6164E-5     KAPPA
C       0.00095       DELTA XI
C       0.06164414      2./3.*SQRT(0.00095)
C       0.69314718    ALOG(2.0)
C       11.512925     5.*ALOG(10.0)
      RETURN
      END
      FUNCTION BARJ(AXI)
CBARJ
C     /COMPUTES INTEGRAND OF FUNCTION JBAR/
C
      COMMON DUMY(1100),AZERO,G,SIGPZ,TEMP,EC,D,GAMNO,GMGM,GEOM,
     1ABAR,C,DZERO,SIGM1,SIGM2,EN(6),UNR(6)
      COMMON A,ANS,AUV,B,EK,FIN,PART,SIGP,STA,XIL,IU
C
      AK=(ALOG(3.84184E-7*SIGP*EN(IU)*AXI/G/(AXI-B))
     1  +11.512925)/0.69314718
      BARJ=(FJ(AXI,AK)/SQRT(AXI-B))*EXP((B-AXI)/A/GAMNO)
      RETURN
      END
      FUNCTION FJ(AXI,AK)
CFJ
C     /INTERPOLATES FOR THE FUNCTION J(XI,K)/
      DIMENSION AJ(2),AKA(2),TAB(4)
C
C     /LENGTHS OF XI AND K TABLES/
      LXI=23
      LK=44
C
C     POSITION ARGUEMENTS OF FUNCTION J(XI,K) -
C     /LOCATION OF STARTING ARGUEMENT XI(I)/
      DO 1 JXI=1,LXI
      IXI=JXI
      IF (TXI(IXI)-AXI) 1,2,2
    1 CONTINUE
    2 IF (1+(LXI+IXI-6)/(4-LXI)) 3,4,5
    3 IXI=LXI-3
      GO TO 5
    4 IXI=IXI-1
C     /LOCATION OF STARTING ARGUEMENT K(I)/
    5 DO 8 JAK=1,LK
      KAK=JAK
      IF (AK-TK(KAK)) 6,6,8
    6 IF (1-KAK) 7,9,9
    7 KAK=KAK-1
      GO TO 9
    8 CONTINUE
      KAK=LK-1
C
C     INTERPOLATE FOR J(AXI,K(KAK)),J(AXI,K(KAK+1))
C     /FOUR POINT DIVIDED DIFFERENCE INTERPOLATION/
    9 DO 13 I=1,2
      J=I+KAK-1
      AKA(I)=TK(J)
      DO 10 K=1,4
      L=K+IXI-1
      TAB(K)=TJ(L,J)
   10 CONTINUE
      AJ(I)=TAB(1)
      DO 12 J=1,3
      K=4-J
      DO 11 L=1,K
      M=5-L
      IA=J+IXI-1
      IB=M+IXI-1
      IC=K+IXI-L
      TAB(M)=(TAB(M)-TAB(M-1))*(AXI-TXI(IA))/(TXI(IB)-TXI(IC))
   11 CONTINUE
      AJ(I)=AJ(I)+TAB(J+1)
   12 CONTINUE
   13 CONTINUE
C
C     INTERPOLATE FOR J(AXI,AK)
C     /ASSUME J(AXI,K)=C1*EXP(-C2*K) FROM K(KAK) TO K(KAK+1)/
      FJ=AJ(1)*EXP((AKA(1)-AK)*ALOG(AJ(2)/AJ(1))/(AKA(1)-AKA(2)))
      RETURN
      END
      FUNCTION TJ(I,J)
CE          HAMNDP3.FOR
      DIMENSION ZJ(1012),ZJ1(95),ZJ2(95),ZJ3(95),ZJ4(95),ZJ5(95),
     1ZJ6(95),ZJ7(95),ZJ8(95),ZJ9(95),ZJ10(95),ZJ11(62)
      EQUIVALENCE (ZJ(1),ZJ1(1)),(ZJ(96),ZJ2(1)),(ZJ(191),ZJ3(1)),
     1(ZJ(286),ZJ4(1)),(ZJ(381),ZJ5(1)),(ZJ(476),ZJ6(1)),
     2(ZJ(571),ZJ7(1)),(ZJ(666),ZJ8(1)),(ZJ(761),ZJ9(1)),
     3(ZJ(856),ZJ10(1)),(ZJ(951),ZJ11(1))
      DATA ZJ1/
     1 9.81750E+03, 7.28970E+02, 4.00720E+02, 2.80310E+02, 2.38600E+02,
     1 1.85600E+02, 1.61300E+02, 1.50100E+02, 1.30700E+02, 1.26900E+02,
     1 1.25700E+02, 1.25100E+02, 1.24800E+02, 1.24600E+02, 1.24500E+02,
     1 1.24500E+02, 1.24400E+02, 1.24300E+02, 1.24300E+02, 1.24300E+02,
     1 1.24200E+02, 1.24200E+02, 1.24200E+02, 6.94200E+03, 6.89890E+02,
     1 3.83030E+02, 2.69100E+02, 2.22900E+02, 1.70400E+02, 1.45500E+02,
     1 1.33500E+02, 1.12000E+02, 1.07700E+02, 1.06200E+02, 1.05500E+02,
     1 1.05200E+02, 1.05000E+02, 1.04800E+02, 1.04800E+02, 1.04700E+02,
     1 1.04600E+02, 1.04560E+02, 1.04540E+02, 1.04490E+02, 1.04470E+02,
     1 1.04400E+02, 4.90870E+03, 6.45410E+02, 3.64490E+02, 2.57400E+02,
     1 2.08600E+02, 1.57300E+02, 1.32400E+02, 1.19800E+02, 9.66700E+01,
     1 9.16800E+01, 8.99300E+01, 8.91400E+01, 8.87200E+01, 8.84700E+01,
     1 8.83100E+01, 8.82000E+01, 8.81200E+01, 8.80200E+01, 8.79600E+01,
     1 8.79200E+01, 8.79000E+01, 8.78800E+01, 8.78000E+01, 3.47100E+03,
     1 5.47700E+02, 3.44940E+02, 2.45140E+02, 1.95100E+02, 1.45900E+02,
     1 1.21200E+02, 1.08300E+02, 8.40000E+01, 7.83600E+01, 7.63400E+01,
     1 7.54100E+01, 7.49100E+01, 7.46200E+01, 7.44300E+01, 7.43000E+01,
     1 7.42100E+01, 7.40990E+01, 7.40260E+01, 7.39800E+01, 7.39480E+01,
     1 7.39210E+01, 7.38200E+01, 2.45440E+03, 5.16240E+02, 3.22540E+02/
      DATA ZJ2/
     1 2.32230E+02, 1.82100E+02, 1.35500E+02, 1.11600E+02, 9.86300E+01,
     1 7.35500E+01, 6.73300E+01, 6.50100E+01, 6.39300E+01, 6.33500E+01,
     1 6.30100E+01, 6.27800E+01, 6.26300E+01, 6.25200E+01, 6.23800E+01,
     1 6.23000E+01, 6.22500E+01, 6.22100E+01, 6.21800E+01, 6.20700E+01,
     1 1.73550E+03, 4.58970E+02, 2.88480E+02, 2.18560E+02, 1.69200E+02,
     1 1.25700E+02, 1.03000E+02, 9.02200E+01, 6.49100E+01, 5.81900E+01,
     1 5.55900E+01, 5.43600E+01, 5.36900E+01, 5.32800E+01, 5.30200E+01,
     1 5.28400E+01, 5.27200E+01, 5.25680E+01, 5.25690E+01, 5.24070E+01,
     1 5.23600E+01, 5.23240E+01, 5.21900E+01, 1.22720E+03, 4.02990E+02,
     1 2.58120E+02, 1.95960E+02, 1.56300E+02, 1.16400E+02, 9.50800E+01,
     1 8.27300E+01, 5.77200E+01, 5.06300E+01, 4.77700E+01, 4.63800E+01,
     1 4.56200E+01, 4.51500E+01, 4.48500E+01, 4.46400E+01, 4.45000E+01,
     1 4.43000E+01, 4.41900E+01, 4.41200E+01, 4.40700E+01, 4.40300E+01,
     1 4.38800E+01, 8.67750E+02, 3.47700E+02, 2.29490E+02, 1.75510E+02,
     1 1.43100E+02, 1.07300E+02, 8.76100E+01, 7.58800E+01, 5.16600E+01,
     1 4.43600E+01, 4.12800E+01, 3.97500E+01, 3.88900E+01, 3.83600E+01,
     1 3.80100E+01, 3.77700E+01, 3.76000E+01, 3.74030E+01, 3.72680E+01,
     1 3.71790E+01, 3.71160E+01, 3.70700E+01, 3.68900E+01, 6.13590E+02,
     1 2.93920E+02, 2.01490E+02, 1.56190E+02, 1.29600E+02, 9.80900E+01/
      DATA ZJ3/
     1 8.03600E+01, 6.94400E+01, 4.64700E+01, 3.91100E+01, 3.58900E+01,
     1 3.42300E+01, 3.32800E+01, 3.26900E+01, 3.23000E+01, 3.20300E+01,
     1 3.18300E+01, 3.15800E+01, 3.14300E+01, 3.13300E+01, 3.12600E+01,
     1 3.12100E+01, 3.10100E+01, 4.33880E+02, 2.42510E+02, 1.73850E+02,
     1 1.37490E+02, 1.15800E+02, 8.88100E+01, 7.31900E+01, 6.32300E+01,
     1 4.19100E+01, 3.46800E+01, 3.13900E+01, 2.96400E+01, 2.86100E+01,
     1 2.79600E+01, 2.75300E+01, 2.72200E+01, 2.70100E+01, 2.67450E+01,
     1 2.65630E+01, 2.64440E+01, 2.63610E+01, 2.63040E+01, 2.60600E+01,
     1 3.06800E+02, 1.95420E+02, 1.46960E+02, 1.19010E+02, 1.01800E+02,
     1 7.94000E+01, 6.60000E+01, 5.71300E+01, 3.78100E+01, 3.08800E+01,
     1 2.75900E+01, 2.57900E+01, 2.47100E+01, 2.40100E+01, 2.35400E+01,
     1 2.32100E+01, 2.29700E+01, 2.26500E+01, 2.24500E+01, 2.23200E+01,
     1 2.22300E+01, 2.21700E+01, 2.19000E+01, 2.16940E+02, 1.53860E+02,
     1 1.21260E+02, 1.00100E+02, 8.77100E+01, 6.98800E+01, 5.87600E+01,
     1 5.10700E+01, 3.40300E+01, 2.75400E+01, 2.43500E+01, 2.25500E+01,
     1 2.14400E+01, 2.07100E+01, 2.02100E+01, 1.98500E+01, 1.95900E+01,
     1 1.92620E+01, 1.90350E+01, 1.88860E+01, 1.87830E+01, 1.87100E+01,
     1 1.83900E+01, 1.53400E+02, 1.18560E+02, 9.77100E+01, 8.36600E+01,
     1 7.39900E+01, 6.03700E+01, 5.15000E+01, 4.50400E+01, 3.04500E+01/
      DATA ZJ4/
     1 2.45400E+01, 2.15300E+01, 1.97700E+01, 1.86700E+01, 1.79200E+01,
     1 1.74100E+01, 1.70300E+01, 1.67500E+01, 1.63800E+01, 1.61400E+01,
     1 1.59800E+01, 1.58700E+01, 1.57900E+01, 1.54400E+01, 1.08470E+02,
     1 8.96440E+01, 7.69290E+01, 6.76870E+01, 6.09900E+01, 5.10700E+01,
     1 4.42900E+01, 3.90700E+01, 2.70100E+01, 2.17900E+01, 1.90300E+01,
     1 1.73700E+01, 1.62900E+01, 1.55600E+01, 1.50400E+01, 1.46600E+01,
     1 1.43700E+01, 1.39850E+01, 1.37300E+01, 1.35620E+01, 1.34390E+01,
     1 1.33520E+01, 1.29600E+01, 7.66990E+01, 6.67120E+01, 5.92820E+01,
     1 5.34970E+01, 4.90900E+01, 4.22300E+01, 3.73000E+01, 3.32500E+01,
     1 2.36700E+01, 1.92100E+01, 1.67600E+01, 1.52300E+01, 1.42300E+01,
     1 1.35200E+01, 1.30100E+01, 1.26400E+01, 1.23500E+01, 1.19400E+01,
     1 1.16800E+01, 1.15100E+01, 1.13800E+01, 1.12900E+01, 1.08700E+01,
     1 5.42340E+01, 4.90150E+01, 4.48220E+01, 4.13700E+01, 3.86100E+01,
     1 3.41100E+01, 3.07000E+01, 2.77000E+01, 2.04300E+01, 1.67600E+01,
     1 1.46600E+01, 1.33100E+01, 1.23900E+01, 1.17400E+01, 1.12600E+01,
     1 1.09000E+01, 1.06200E+01, 1.02150E+01, 9.95460E+00, 9.77650E+00,
     1 9.64470E+00, 9.54930E+00, 9.09900E+00, 3.83500E+01, 3.56530E+01,
     1 3.33560E+01, 3.13730E+01, 2.97300E+01, 2.69100E+01, 2.46800E+01,
     1 2.25700E+01, 1.73100E+01, 1.44200E+01, 1.26800E+01, 1.15400E+01/
      DATA ZJ5/
     1 1.07400E+01, 1.01500E+01, 9.71800E+00, 9.38200E+00, 9.11900E+00,
     1 8.73900E+00, 8.48400E+00, 8.30400E+00, 8.17400E+00, 8.07700E+00,
     1 7.60700E+00, 2.71170E+01, 2.57360E+01, 2.45070E+01, 2.34050E+01,
     1 2.24600E+01, 2.07800E+01, 1.93900E+01, 1.79700E+01, 1.43600E+01,
     1 1.21900E+01, 1.08300E+01, 9.88800E+00, 9.21700E+00, 8.71800E+00,
     1 8.33700E+00, 8.03900E+00, 7.80200E+00, 7.43290E+00, 7.19800E+00,
     1 7.02910E+00, 6.90500E+00, 6.81130E+00, 6.34500E+00, 1.91750E+01,
     1 1.84720E+01, 1.78260E+01, 1.72300E+01, 1.67100E+01, 1.57400E+01,
     1 1.49100E+01, 1.40000E+01, 1.16500E+01, 1.01100E+01, 9.08200E+00,
     1 8.35200E+00, 7.81500E+00, 7.40600E+00, 7.08700E+00, 6.83400E+00,
     1 6.62900E+00, 6.32200E+00, 6.10700E+00, 5.95000E+00, 5.83300E+00,
     1 5.74400E+00, 5.27600E+00, 1.35590E+01, 1.32030E+01, 1.28680E+01,
     1 1.25520E+01, 1.22700E+01, 1.17400E+01, 1.12600E+01, 1.07000E+01,
     1 9.24000E+00, 8.19900E+00, 7.47000E+00, 6.93000E+00, 6.52100E+00,
     1 6.20200E+00, 5.94800E+00, 5.74300E+00, 5.57400E+00, 5.28550E+00,
     1 5.10540E+00, 4.97150E+00, 4.87000E+00, 4.79150E+00, 4.36900E+00,
     1 9.58740E+00, 9.40800E+00, 9.23610E+00, 9.07140E+00, 8.92200E+00,
     1 8.63400E+00, 8.37000E+00, 8.03300E+00, 7.17300E+00, 6.50700E+00,
     1 6.01500E+00, 5.63700E+00, 5.34200E+00, 5.10600E+00, 4.91400E+00/
      DATA ZJ6/
     1 4.75600E+00, 4.62400E+00, 4.41900E+00, 4.26800E+00, 4.15400E+00,
     1 4.06600E+00, 3.99700E+00, 3.59700E+00, 6.77930E+00, 6.68900E+00,
     1 6.60150E+00, 6.51660E+00, 6.43900E+00, 6.28600E+00, 6.14500E+00,
     1 5.94600E+00, 5.46100E+00, 5.05600E+00, 4.74000E+00, 4.48900E+00,
     1 4.28700E+00, 4.12200E+00, 3.98500E+00, 3.87000E+00, 3.77300E+00,
     1 3.58660E+00, 3.47290E+00, 3.38540E+00, 3.31700E+00, 3.26250E+00,
     1 2.94000E+00, 4.79370E+00, 4.74840E+00, 4.70400E+00, 4.66060E+00,
     1 4.62000E+00, 4.54100E+00, 4.46700E+00, 4.35100E+00, 4.08800E+00,
     1 3.85300E+00, 3.65900E+00, 3.50100E+00, 3.37100E+00, 3.26100E+00,
     1 3.16900E+00, 3.09000E+00, 3.02200E+00, 2.91100E+00, 2.82600E+00,
     1 2.75900E+00, 2.70600E+00, 2.66300E+00, 2.38100E+00, 3.38970E+00,
     1 3.36690E+00, 3.34450E+00, 3.32250E+00, 3.30200E+00, 3.26100E+00,
     1 3.22300E+00, 3.15500E+00, 3.01800E+00, 2.88700E+00, 2.77300E+00,
     1 2.67800E+00, 2.59800E+00, 2.52900E+00, 2.47000E+00, 2.41800E+00,
     1 2.37300E+00, 2.27690E+00, 2.21940E+00, 2.17330E+00, 2.13660E+00,
     1 2.10630E+00, 1.90700E+00, 2.39680E+00, 2.38550E+00, 2.37420E+00,
     1 2.36300E+00, 2.35200E+00, 2.33200E+00, 2.31200E+00, 2.27200E+00,
     1 2.20400E+00, 2.13300E+00, 2.06800E+00, 2.01300E+00, 1.96600E+00,
     1 1.92500E+00, 1.88900E+00, 1.85700E+00, 1.82900E+00, 1.78100E+00/
      DATA ZJ7/
     1 1.74300E+00, 1.71200E+00, 1.68700E+00, 1.66600E+00, 1.50800E+00,
     1 1.69480E+00, 1.68910E+00, 1.68350E+00, 1.67780E+00, 1.67300E+00,
     1 1.66200E+00, 1.65200E+00, 1.62800E+00, 1.59600E+00, 1.55800E+00,
     1 1.52200E+00, 1.49200E+00, 1.46500E+00, 1.44100E+00, 1.42000E+00,
     1 1.40200E+00, 1.38500E+00, 1.34520E+00, 1.32150E+00, 1.30210E+00,
     1 1.28610E+00, 1.27270E+00, 1.17500E+00, 1.19840E+00, 1.19560E+00,
     1 1.19270E+00, 1.18990E+00, 1.18700E+00, 1.18200E+00, 1.17700E+00,
     1 1.16200E+00, 1.14800E+00, 1.12900E+00, 1.10900E+00, 1.09200E+00,
     1 1.07800E+00, 1.06500E+00, 1.05300E+00, 1.04200E+00, 1.03300E+00,
     1 1.01600E+00, 1.00200E+00, 9.90400E-01, 9.80500E-01, 9.72200E-01,
     1 9.02600E-01, 8.47410E-01, 8.45980E-01, 8.44560E-01, 8.43140E-01,
     1 8.41900E-01, 8.39300E-01, 8.36900E-01, 8.27600E-01, 8.21700E-01,
     1 8.12200E-01, 8.01700E-01, 7.92700E-01, 7.84900E-01, 7.77800E-01,
     1 7.71300E-01, 7.65500E-01, 7.60100E-01, 7.46710E-01, 7.38640E-01,
     1 7.31850E-01, 7.26030E-01, 7.21060E-01, 6.83000E-01, 5.99210E-01,
     1 5.98500E-01, 5.97780E-01, 5.97070E-01, 5.96400E-01, 5.95200E-01,
     1 5.94000E-01, 5.88100E-01, 5.86200E-01, 5.81700E-01, 5.76000E-01,
     1 5.71200E-01, 5.67100E-01, 5.63300E-01, 5.59900E-01, 5.56700E-01,
     1 5.53900E-01, 5.48800E-01, 5.44500E-01, 5.40800E-01, 5.37600E-01/
      DATA ZJ8/
     1 5.34800E-01, 5.09800E-01, 4.23710E-01, 4.23350E-01, 4.22990E-01,
     1 4.22640E-01, 4.22300E-01, 4.21700E-01, 4.21200E-01, 4.17300E-01,
     1 4.17100E-01, 4.15000E-01, 4.12000E-01, 4.09500E-01, 4.07300E-01,
     1 4.05400E-01, 4.03600E-01, 4.01900E-01, 4.00400E-01, 3.96390E-01,
     1 3.94000E-01, 3.91900E-01, 3.90120E-01, 3.88550E-01, 3.76000E-01,
     1 2.99610E-01, 2.99430E-01, 2.99250E-01, 2.99070E-01, 2.98900E-01,
     1 2.98600E-01, 2.98400E-01, 2.97800E-01, 2.96300E-01, 2.95400E-01,
     1 2.93700E-01, 2.92400E-01, 2.91300E-01, 2.90300E-01, 2.89400E-01,
     1 2.88500E-01, 2.87700E-01, 2.86300E-01, 2.85100E-01, 2.84000E-01,
     1 2.83100E-01, 2.82300E-01, 2.74600E-01, 2.11850E-01, 2.11760E-01,
     1 2.11670E-01, 2.11590E-01, 2.11500E-01, 2.11400E-01, 2.11300E-01,
     1 2.11200E-01, 2.10200E-01, 2.09800E-01, 2.08900E-01, 2.08200E-01,
     1 2.07700E-01, 2.07100E-01, 2.06700E-01, 2.06200E-01, 2.05800E-01,
     1 2.04730E-01, 2.04090E-01, 2.03490E-01, 2.02960E-01, 2.02530E-01,
     1 1.98900E-01, 1.49800E-01, 1.49760E-01, 1.49710E-01, 1.49670E-01,
     1 1.49600E-01, 1.49600E-01, 1.49500E-01, 1.49300E-01, 1.49000E-01,
     1 1.48900E-01, 1.48300E-01, 1.48000E-01, 1.47700E-01, 1.47400E-01,
     1 1.47200E-01, 1.47000E-01, 1.46800E-01, 1.46400E-01, 1.46100E-01,
     1 1.45800E-01, 1.45500E-01, 1.45300E-01, 1.43100E-01, 7.49010E-02/
      DATA ZJ9/
     1 7.48900E-02, 7.48790E-02, 7.48680E-02, 7.40300E-02, 7.40300E-02,
     1 7.40300E-02, 7.40300E-02, 7.40300E-02, 7.40300E-02, 7.40300E-02,
     1 7.40300E-02, 7.40300E-02, 7.40300E-02, 7.40300E-02, 7.40300E-02,
     1 7.40300E-02, 7.40300E-02, 7.39500E-02, 7.38800E-02, 7.38100E-02,
     1 7.37500E-02, 7.37500E-02, 3.74510E-02, 3.74480E-02, 3.74450E-02,
     1 3.74420E-02, 3.72300E-02, 3.72300E-02, 3.72300E-02, 3.72300E-02,
     1 3.72300E-02, 3.72300E-02, 3.72300E-02, 3.72300E-02, 3.72300E-02,
     1 3.72300E-02, 3.72300E-02, 3.72300E-02, 3.72300E-02, 3.72300E-02,
     1 3.72100E-02, 3.71900E-02, 3.71800E-02, 3.71600E-02, 3.71600E-02,
     1 1.87250E-02, 1.87250E-02, 1.87240E-02, 1.87230E-02, 1.86700E-02,
     1 1.86700E-02, 1.86700E-02, 1.86700E-02, 1.86700E-02, 1.86700E-02,
     1 1.86700E-02, 1.86700E-02, 1.86700E-02, 1.86700E-02, 1.86700E-02,
     1 1.86700E-02, 1.86700E-02, 1.86700E-02, 1.86700E-02, 1.86600E-02,
     1 1.86600E-02, 1.86500E-02, 1.86500E-02, 9.36270E-03, 9.36250E-03,
     1 9.36230E-03, 9.36220E-03, 9.34900E-03, 9.34900E-03, 9.34900E-03,
     1 9.34900E-03, 9.34900E-03, 9.34900E-03, 9.34900E-03, 9.34900E-03,
     1 9.34900E-03, 9.34900E-03, 9.34900E-03, 9.34900E-03, 9.34900E-03,
     1 9.34900E-03, 9.34800E-03, 9.34600E-03, 9.34500E-03, 9.34400E-03,
     1 9.34400E-03, 4.68130E-03, 4.68130E-03, 4.68130E-03, 4.68120E-03/
      DATA ZJ10/
     1 4.67800E-03, 4.67800E-03, 4.67800E-03, 4.67800E-03, 4.67800E-03,
     1 4.67800E-03, 4.67800E-03, 4.67800E-03, 4.67800E-03, 4.67800E-03,
     1 4.67800E-03, 4.67800E-03, 4.67800E-03, 4.67800E-03, 4.67800E-03,
     1 4.67700E-03, 4.67700E-03, 4.67700E-03, 4.67700E-03, 2.34070E-03,
     1 2.34070E-03, 2.34070E-03, 2.34060E-03, 2.34000E-03, 2.34000E-03,
     1 2.34000E-03, 2.34000E-03, 2.34000E-03, 2.34000E-03, 2.34000E-03,
     1 2.34000E-03, 2.34000E-03, 2.34000E-03, 2.34000E-03, 2.34000E-03,
     1 2.34000E-03, 2.34000E-03, 2.34000E-03, 2.34000E-03, 2.34000E-03,
     1 2.34000E-03, 2.34000E-03, 1.17030E-03, 1.17030E-03, 1.17030E-03,
     1 1.17030E-03, 1.17000E-03, 1.17000E-03, 1.17000E-03, 1.17000E-03,
     1 1.17000E-03, 1.17000E-03, 1.17000E-03, 1.17000E-03, 1.17000E-03,
     1 1.17000E-03, 1.17000E-03, 1.17000E-03, 1.17000E-03, 1.17000E-03,
     1 1.17000E-03, 1.17000E-03, 1.17000E-03, 1.17000E-03, 1.17000E-03,
     1 5.85170E-04, 5.85170E-04, 5.85170E-04, 5.85170E-04, 5.85100E-04,
     1 5.85100E-04, 5.85100E-04, 5.85100E-04, 5.85100E-04, 5.85100E-04,
     1 5.85100E-04, 5.85100E-04, 5.85100E-04, 5.85100E-04, 5.85100E-04,
     1 5.85100E-04, 5.85100E-04, 5.85100E-04, 5.85100E-04, 5.85100E-04,
     1 5.85100E-04, 5.85100E-04, 5.85100E-04, 2.92600E-04, 2.92600E-04,
     1 2.92600E-04, 2.92600E-04, 2.92600E-04, 2.92600E-04, 2.92600E-04/
      DATA ZJ11/
     1 2.92600E-04, 2.92600E-04, 2.92600E-04, 2.92600E-04, 2.92600E-04,
     1 2.92600E-04, 2.92600E-04, 2.92600E-04, 2.92600E-04, 2.92600E-04,
     1 2.92600E-04, 2.92600E-04, 2.92600E-04, 2.92600E-04, 2.92600E-04,
     1 2.92600E-04, 1.46300E-04, 1.46300E-04, 1.46300E-04, 1.46300E-04,
     1 1.46300E-04, 1.46300E-04, 1.46300E-04, 1.46300E-04, 1.46300E-04,
     1 1.46300E-04, 1.46300E-04, 1.46300E-04, 1.46300E-04, 1.46300E-04,
     1 1.46300E-04, 1.46300E-04, 1.46300E-04, 1.46300E-04, 1.46300E-04,
     1 1.46300E-04, 1.46300E-04, 1.46300E-04, 1.46300E-04, 7.31500E-05,
     1 7.31500E-05, 7.31500E-05, 7.31500E-05, 7.31500E-05, 7.31500E-05,
     1 7.31500E-05, 7.31500E-05, 7.31500E-05, 7.31500E-05, 7.31500E-05,
     1 7.31500E-05, 7.31500E-05, 7.31500E-05, 7.31500E-05, 7.31500E-05,
     1 7.31500E-05, 7.31500E-05, 7.31400E-05, 7.31400E-05, 7.31400E-05,
     1 7.31400E-05, 7.31400E-05/
      IJ = I + 23*(J-1)
      TJ = ZJ(IJ)
      RETURN
      END
      SUBROUTINE SLODON
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* SLODON * HAMMER   VERSION /JB-1077/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      COMMON /CNTRL/ IDBCH,NCASE,NFLOG,BTTL(9),NTIN,NTOUT,NTPUN,
     1NCHAIN,LIB1,LIB2,LIB3,INT1,INT2,NSC1,LNK(10),NTHCS,NEPCS,KLIB1,
     2KLIB2,KLIB3,DUM1(32),NTHGP,IBNDRY(12),EPCUT,DUM2(45),NCPRN,NCPPT,
     3DUM3(10),NTHRN,NTHPT,NTHPN,DUM4(9),NEPRN,NEPPT,NEPPN,NEPSG,NEPAG,
     4DUM5(19),NEDRN,NEDPT,NEDPN,NEDNB,NEDFW,NEDRB,NEDAX,NEDNU,DUM6(16)
      COMMON /LIMP/ IDENT,NX,MX,NRX,ISOX,ISOXE,NGEOM,NP1B1,NBCT,NXP,
     1BSQD,HOL(9),NPT(20),THT(20),MXAS(20),ILHI(20),NRBP(20),DEGC(20),
     2WSTBA(18),WSTBB(18),CONCTA(18,10),LIMT(10),RIN(20),RAD(20),
     3ROUT(20),VOL(20),MTBL(20),REGV(20),FISD(20),HOLID(3,18),DUM7(40)
      COMMON ID,HOLA(9),BALT(18,4,5),FOIL(20,4,5),FOGX(4,6),
     1FOX(20,4),DUMB(20),OTGC(5),OTGA(30,6),DUM20(21)
      DIMENSION CT(18,10),DELTA(54)
      COMMONGNRFP(18,54),GNFRCP(18,54),SIGA(54),T(54),S(54),PA(54),PF(54
     1),F(54),GAMMA(54),Q(54),AMBDA(54),ETA(54),RHO(54),A(54),DUM30(868)
     2,ERIT(20),RIT(20)
      COMMON IX,ES(18,54),TEE(18,54),BA(18,54),RCP(18,54),RFCP(18,54),
     1 FX(20,54),DEL(54),X(54),SSC(10),S1(10),SIGABS(10),SIGIN(10),
     2 SIGX(10),C(10),AN(10),SD(10),DUM40(3568),NLIB,THFLX(630),ANH(10),
     3 SDH(10),S1H(10),CAY1(54),CAY2(54),CAY3(54),CAY4(54),CAY5(54),
     4 CAY6(54),CAY7(54),A11(54),A22(54),PROX(325),D(54),PS(18,54),
     5 OSE0(18,54),OS0(18,54),OS1(18,54),OXS0(18,54),XL(18,54)
      EQUIVALENCE (DEL,DELTA),(CT,CONCTA)
      COMMON/PROHAM/TSRS(18),TURS(18),WNAME(18),IGH(18),IGL(18),TAP(18),
     1 TSP(18),QZ(54),CCJC(18,54),CCJF(18,54),CCJS(18,54),IGMC,ITIK
      COMMON/NITRAB/ INO
      DIMENSION TEET(18,54),BAT(18,54)
      COMMON/QQFF/QQ(54),FF(54)
      DIMENSION SSMTHA(18),SSMTHF(18),SMCA(18),SMCF(18),INDXL(18),
     1 ISOXPR(18),SPRA(18),SPRF(18)
      EQUIVALENCE (GNFRCP(1,1),TEET(1,1)),
     1                        (BAT(1,1),DUM40(1945))
      COMMON/ABFG/HH(54),AA(54),GG(54),BB(54),EE(54),RR(54),TT(54),
     1GAMMX(20,3)
      COMMON/CLSL/SIGTT(54),GT(54)
C
C     RESONANCE REACTION PROBABILITIES TRANSFORMED ITERATIVELY TO SMOOTH
C     ABSORPTION AND FISSION CELL CROSS SECTIONS WHICH PRESERVE THE
C     REACTION  RATES WITH THE MUFT FLUX AT ZERO BUCKLING. ITERATION
C     COUNT ITCNT=1,2,3...(MAX 50) IF RESONANCE MATERIALS ARE PRESENT.
C     ITCNT=0 IF NO RESONANCE MATERIALS ARE PRESENT. AFTER CONVERGENCE
C     AT ZERO BUCKLING SIGN OF ITCNT IS CHANGED FOR A RUN AT BUCKLING
C     1.0E-10 WHEN RESONANCE ISOTOPES ARE PRESENT.
C     FINAL RUN WITH ITCNT=51 AT INPUT BUCKLING.
C
      DO 13 J=1,ISOX
      ISOXPR(J)=0
      DO 12 I=1,ISOX
      IF (WSTBA(J).EQ.WNAME(I)) ISOXPR(J)=I
  12  CONTINUE
      INDXL(J)=0
      DO 9 N=1,IX
      IF (RCP(J,N).EQ.0.0) GOTO 9
      IF (INDXL(J).EQ.0) INDXL(J)=N
   9  CONTINUE
   13 CONTINUE
      ITCNT=1
    8 DO 11 J=1,ISOX
      SSMTHA(J)=0.0
      SSMTHF(J)=0.0
      SMCA(J)=0.0
      SMCF(J)=0.0
      SPRA(J)=0.
      SPRF(J)=0.
   11 CONTINUE
C
      IF(ITCNT.EQ.0.OR.ITCNT.GT.50)GO TO 1540
      BSQDT=BSQD
      BSQD=0.0
      IF(NEPPT)1,2,1
    1 WRITE(NTOUT,200)
      DO210J=1,ISOX
      IF(ERIT(J))230,210,230
  230 WRITE(NTOUT,220)WSTBA(J),ERIT(J),RIT(J),TAP(J)
      I=ISOXPR(J)
      IF(I.EQ.0) GOTO 210
      IF(TURS(J).EQ.0.) GOTO 210
      WRITE(NTOUT,221) TSRS(J),TURS(J),TSP(J)
  210 CONTINUE
       DO3N=1,NX,10
      NUP=MIN0(NX,N+9)
      WRITE(NTOUT,31)IDENT,HOL
      WRITE(NTOUT,32)(N1,N1=N,NUP)
      DO6IG=1,IX
    6 WRITE(NTOUT,33)IG,(FX(N1,IG),N1=N,NUP)
    3 CONTINUE
    2 CONTINUE
      DO 20 I=1,IX
      FLX=0.
      DO 10 N=1,NX
      FX(N,I)=FX(N,I)*VOL(N)
   10 FLX=FLX+FX(N,I)
      DO 20 N=1,NX
   20 FX(N,I)=FX(N,I)/FLX
      ITCNT=-1
      DO 500 N=1,IX
      DO 500 I=1,ISOX
      IF(RCP(I,N).EQ.0.0)GO TO 500
      IGRG=N
      ITCNT=0
      QMC=QZ(IGMC)
      IF(INO.GE.2) GOTO 510
      IGMC=N
      QMC=QQ(N)
      GOTO 510
  500 CONTINUE
  510 ITCNT=ITCNT+1
      IF(ITCNT.GT.50)GO TO 511
      IF(ITCNT.GT.0)GO TO 513
      BSQD=1.0E-10
      GO TO 513
  511 BSQD=BSQDT
      GO TO 91
  513 CONTINUE
      DO 70 N=1,IX
      PA(N)=1.
      PF(N)=1.
      DO 70 I=1,ISOX
      IF (ITCNT.EQ.0.OR.ITCNT.EQ.1) TEET(I,N)=TEE(I,N)
      TEE(I,N)=TEET(I,N)*ES(I,N)
  70  CONTINUE
      IF(ITCNT.LT.0.OR.ITCNT.GT.1)GO TO 91
      DO 90 N=1,IX
      DO 90 I=1,ISOX
      B=0.
      DO 80 M1=1,NX
      M=MTBL(M1)
   80 B=B+CT(I,M)*FX(M1,N)
C     MICROSCOPIC FISSION CROSS  SECTION ES TRANSFERRED TO GNRFP
C     AND LATER UPDATED FOR RESONANCE FISSION.
      GNRFP(I,N)=ES(I,N)
      ES(I,N)=ES(I,N)*B
      IF(INDXL(I).EQ.0.OR.N.LT.INDXL(I)) GOTO 131
      IF(INO.LE.1) GOTO 132
      IF(QZ(N).NE.0.) GOTO 131
  132 CCJF(I,N)=RFCP(I,N)*QQ(N)+ES(I,N)*FF(N)
  131 CONTINUE
C     MICROSCOPIC ABSORPTION BA TRANSFERRED TO RFCP
C     AND LATER UPDATED FOR RESONANCE ABSORPTION.
      RFCP(I,N)=BA(I,N)
      BA(I,N)=BA(I,N)*B
      IF(INDXL(I).EQ.0.OR.N.LT.INDXL(I)) GOTO 90
      IF(INO.LE.1) GOTO 133
      IF(QZ(N).NE.0.) GOTO 90
  133 CCJC(I,N)=RCP(I,N)*QQ(N)+BA(I,N)*FF(N)-CCJF(I,N)
   90 TEE(I,N)=TEE(I,N)*B
   91 CONTINUE
      DO 99 N=1,IX
      DO 92 I=1,ISOX
      IF(ITCNT.LE.1)BAT(I,N)=BA(I,N)
      A11(N)=A11(N)+BA(I,N)-BAT(I,N)
      SIGTT(N)=SIGTT(N)+BA(I,N)-BAT(I,N)
      BAT(I,N)=BA(I,N)
   92 CONTINUE
      SIGT=SIGTT(N)
      G=GT(N)
      IF(NP1B1.GT.0)GO TO 93
      GA=1.0
      GO TO 98
   93 EPSLON=-1.0
      IF(BSQD.GT.0.0)EPSLON=1.0
      B=SQRT(ABS(BSQD))
      Z=B/SIGT
      X2=Z*Z*EPSLON
      IF(Z.GT.0.2)GO TO 94
      A0=1.0+X2*(-0.33333333+X2*(0.2-X2*0.14285714))
      A2=0.33333333+X2*(-0.2+X2*(0.14285714-X2*0.11111111))
      GO TO 97
   94 IF(BSQD.LE.0.0)GO TO 95
      A0=ATAN(Z)/Z
      GO TO 96
   95 A0=0.5*ALOG((1.+Z)/(1.-Z))/Z
   96 A2=(1.-A0)/X2
   97 GA=A0/(3.0*A2)
   98 G=GA*SIGT-G
      A22(N)=3.0*G+2.0*CAY5(N)*NEPSG
      D(N)=A11(N)*A22(N)+BSQD
   99 CONTINUE
      DO 100 N=1,IX
      S(N)=0.
      T(N)=0.
      SIGA(N)=0.
      DO 100 I=1,ISOX
      S(N)=S(N)+ES(I,N)
      T(N)=T(N)+TEE(I,N)
  100 SIGA(N)=SIGA(N)+BA(I,N)
      IF(BSQD  )30,35,35
   30 EPSLON=-1.0
      GO TO 40
   35 EPSLON=1.0
   40 F(1)=X(1)*A22(1)/D(1)
      GAMMA(1) =F(1)*DELTA(1)
      A(1)=X(1)*SQRT(ABS(BSQD  ))/D(1)
       AMBDA(1)=A(1)*DELTA(1)
      ETA(1)=CAY1(1)*GAMMA(1)
      RHO(1)=CAY5(1)* AMBDA(1)
      Q(1)=CAY2(1)*GAMMA(1)
   50 DO 24 N=2,IX
      OMEGA =0.0
      IF(N-25)4,4,16
    4 NNX=N-1
      IF(NNX.EQ.0)GO TO 16
      DO15M=1,NNX
      LOC=(N*(N-1))/2+M
   15 OMEGA=OMEGA+PROX(LOC)*GAMMA(M)/DELTA(N)
   16 A13=X(N)+OMEGA+(ETA(N-1)+Q(N-1)-CAY3(N)*ETA(N-1)-CAY4(N)*Q(N-1))/
     1 DELTA(N)
      A23=CAY6(N)*RHO(N-1)
      F(N)=(A13*A22(N)-EPSLON*SQRT(ABS(BSQD  ))*A23)/D(N)
      A(N)=(A11(N)*A23+A13* SQRT(ABS(BSQD  )))/D(N)
      GAMMA(N)=F(N)*DELTA(N)
       AMBDA(N)=A(N)*DELTA(N)
      ETA(N)=CAY3(N)*ETA(N-1)+CAY1(N)*GAMMA(N)
      RHO(N)=CAY7(N)*RHO(N-1)+CAY5(N)*AMBDA(N)
   24 Q(N)=CAY4(N)*Q(N-1)+CAY2(N)*GAMMA(N)
      IF(ITCNT.GT.0)GO TO 26
      DO 25 N=1,54
      HH(N)=F(N)
      AA(N)=A(N)
      GG(N)=GAMMA(N)
      BB(N)=AMBDA(N)
      EE(N)=ETA(N)
      RR(N)=RHO(N)
      TT(N)=Q(N)
   25 CONTINUE
      GO TO 544
   26 CONTINUE
      IF(ITCNT.EQ.0.OR.ITCNT.GT.50)GO TO 8
      QNRR=(Q(IGMC-1)+ETA(IGMC-1))/QMC
      QNUR=(Q(IGRG-1)+ETA(IGRG-1))/QQ(IGRG)
      ICRIT=0
      DO 520 N=2,IX
      DO 520 J=1,ISOX
      IF (INDXL(J).NE.0.AND.N.GE.INDXL(J)) GOTO 521
      GOTO 520
  521 JJ=ISOXPR(J)
      QCOR=QNUR
      IF(JJ.EQ.0) GOTO 523
      IF(N.GE.IGL(JJ).AND.N.LE.IGH(JJ)) QCOR=QNRR
  523 RAT=ABS(BA(J,N)*GAMMA(N)/((CCJC(J,N)+CCJF(J,N))*QCOR)-1.0)
      IF(RAT.LT.0.0001) GOTO 518
      ICRIT=1
      GOTO 520
  518 IF(CCJF(J,N).EQ.0.) GOTO 520
      RAT=ABS(ES(J,N)*GAMMA(N)/(CCJF(J,N)*QCOR)-1.0)
      IF(RAT.LT.0.0001) GOTO 520
      ICRIT=1
  520 CONTINUE
      IF(ICRIT.EQ.0.AND.ITCNT.NE.1)GO TO 540
      DO 530 N=2,IX
      DO 530 J=1,ISOX
      IF (INDXL(J).NE.0.AND.N.GE.INDXL(J)) GOTO 531
      GOTO 530
  531 JJ=ISOXPR(J)
      QCOR=QNUR
      IF(JJ.EQ.0) GOTO 533
      IF(N.GE.IGL(JJ).AND.N.LE.IGH(JJ)) QCOR=QNRR
  533 BA(J,N)=(CCJC(J,N)+CCJF(J,N))*QCOR/GAMMA(N)
      RCP(J,N)=0.
      ES(J,N)=CCJF(J,N)*QCOR/GAMMA(N)
      B=0.
      DO 532 M1=1,NX
      M=MTBL(M1)
  532 B=B+CT(J,M)*FX(M1,N)
      RFCP(J,N)=BA(J,N)/B
      GNRFP(J,N)=ES(J,N)/B
  530 CONTINUE
      IF(ITCNT.EQ.50)GO TO 550
      GO TO 510
  540 WRITE(NTOUT,600)ITCNT
 1540 DO 541 N=2,IX
      IF(N.EQ.IGRG.AND.ITCNT.LT.51) WRITE(NTOUT,1310)
      IF(N.EQ.IGRG.AND.ITCNT.EQ.51) WRITE(NTOUT,1320)
      IF(N.EQ.IGRG)WRITE(NTOUT,1300)
      DO 541 J=1,ISOX
      IF (INDXL(J).EQ.0.OR.N.LT.INDXL(J)) GOTO 541
      SMTHA=BA(J,N)*GAMMA(N)
      SMTHF=ES(J,N)*GAMMA(N)
C
      SSMTHA(J)=SSMTHA(J)+SMTHA
      SSMTHF(J)=SSMTHF(J)+SMTHF
      WRITE(NTOUT,9210) WSTBA(J),N,SMTHF,SMTHA
      JJ=ISOXPR(J)
      IF(JJ.EQ.0) GOTO 548
      IF(N.LT.IGL(JJ).OR.N.GT.IGH(JJ)) GOTO 548
      SPRA(J)=SPRA(J)+SMTHA
      SPRF(J)=SPRF(J)+SMTHF
  548 CONTINUE
      IF(ITCNT.EQ.0.OR.ITCNT.GT.50) GOTO 541
      QCOR=QNUR
      IF(JJ.EQ.0) GOTO 547
      IF(N.GE.IGL(JJ).AND.N.LE.IGH(JJ)) QCOR=QNRR
  547 CONTINUE
      SMCA(J)=SMCA(J)+(CCJC(J,N)+CCJF(J,N))*QCOR
      SMCF(J)=SMCF(J)+CCJF(J,N)*QCOR
  541 CONTINUE
      DO 542 J=1,ISOX
      IF (INDXL(J).EQ.0) GOTO 542
      JJ=ISOXPR(J)
      IF (JJ.EQ.0) GOTO 551
      WRITE(NTOUT,9220) WSTBA(J),IGL(JJ),IGH(JJ),SPRF(J),SPRA(J)
  551 CONTINUE
      WRITE(NTOUT,9230) WSTBA(J),INDXL(J),IX,SSMTHF(J),SSMTHA(J)
      IF(ITCNT.EQ.0.OR.ITCNT.GT.50)GO TO 1542
      QGRP=Q(IGMC-1)+ETA(IGMC-1)
      IF(INO.LE.1.AND.JJ.NE.0) WRITE(NTOUT,9231)
      IF(INO.LE.1.AND.JJ.EQ.0) WRITE(NTOUT,9233)
      IF(INO.GE.2) WRITE(NTOUT,9232)
      WRITE(NTOUT,9300)QGRP,IGMC,SMCF(J),SMCA(J)
 1542 CONTINUE
  542 CONTINUE
      IF(ITCNT.EQ.0.OR.ITCNT.GT.50)GO TO 560
      ITCNT=-ITCNT
      GO TO 510
  544 CONTINUE
      ITCNT=50
      GO TO 510
  550 WRITE(NTOUT,610)
      GO TO 1540
  560 CONTINUE
      CALL EDIT 12
      CALL EDIT 3
      CALL EDIT4
      IF(NTHGP.EQ.1) CALL XTRAED(NRX)
      RETURN
   31 FORMAT(5H1CASE,I6,7X,9A4   )
   32 FORMAT(21H0ZERO BUCKLING FLUXES/6H GROUP,10(5H   PT,I3,3X))
   33 FORMAT(I5,1P10E11.4)
  200 FORMAT(10H0   TOTALS/10H    ------10X,5(14H  ------------))
  220 FORMAT(F8.0,2X,'ABSORPTION',1P2E14.6,28X,1PE14.6)
  221 FORMAT(10X,'SCATTERING',1P2E14.6,28X,1PE14.6)
  600 FORMAT(21H0 SLODON CONVERGED IN,I3,12H ITERATIONS.)
  610 FORMAT(42H0SLODON DID NOT CONVERGE IN 50 ITERATIONS.)
 1300 FORMAT(73X,'TOT.FISS',8X,'TOT.ABS',/)
 1310 FORMAT(1H0//,45H THE FOLLOWING RESULTS REFER TO ZERO BUCKLING)
 1320 FORMAT(1H0//,46H THE FOLLOWING RESULTS REFER TO INPUT BUCKLING)
 1999 FORMAT(6E10.0)
 2999 FORMAT(///,1X ,'OZMA SOURCES 0',/,(9E13.5))
 9210 FORMAT(20X,'ISOTOPE ',F10.0,'  IN GROUP  ',I3,17X,F12.8,3X,F12.8)
 9220 FORMAT(//,1X,'        TOTALS FOR ISOTOPE ',F10.0,'  FROM GROUP',
     1 I3,'  TO GROUP',I3,4X,F12.8,3X,F12.8)
 9230 FORMAT(9X,'TOTALS FOR ISOTOPE ',F10.0,'  FROM GROUP',I3,
     1 '  TO GROUP',I3,4X,F12.8,3X,F12.8)
 9231 FORMAT(1X,'* * * * * CORRESPONDING  INTEGRAL TRANSPORT PROFILE TOT
     1ALS,')
 9232 FORMAT(1X,'* * * * * CORRESPONDING  RABPRO/OZMA/REPC  PROFILE  TOT
     1ALS,')
 9233 FORMAT(1X,'* * * * * CORRESPONDING  INTEGRAL TRANSPORT   ZUT   TOT
     1ALS,')
 9300 FORMAT( 1X,'BUT RENORMALIZED TO SLODON SOURCE =',F9.6,'  INTO GROU
     1P',I3,10X,F12.8,3X,F12.8)
      END
      SUBROUTINE EDIT3
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* EDIT3  *   HAMMER   VERSION /04-77/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      COMMON /CNTRL/ IDBCH,NCASE,NFLOG,BTTL(9),NTIN,NTOUT,NTPUN,
     1NCHAIN,LIB1,LIB2,LIB3,INT1,INT2,NSC1,LNK(10),NTHCS,NEPCS,KLIB1,
     2KLIB2,KLIB3,DUM1(32),NTHGP,IBNDRY(12),EPCUT,DUM2(45),NCPRN,NCPPT,
     3DUM3(10),NTHRN,NTHPT,NTHPN,DUM4(9),NEPRN,NEPPT,NEPPN,NEPSG,NEPAG,
     4DUM5(19),NEDRN,NEDPT,NEDPN,NEDNB,NEDFW,NEDRB,NEDAX,NEDNU,DUM6(16)
      COMMON /LIMP/ IDENT,NX,MX,NRX,ISOX,ISOXE,NGEOM,NP1B1,NBCT,NXP,
     1BSQD,HOL(9),NPT(20),THT(20),MXAS(20),ILHI(20),NRBP(20),DEGC(20),
     2WSTBA(18),WSTBB(18),CONCTA(18,10),LIMT(10),RIN(20),RAD(20),
     3ROUT(20),VOL(20),MTBL(20),REGV(20),FISD(20),HOLID(3,18),DUM7(40)
      COMMON ID,HOLA(9),BALT(18,4,5),FOIL(20,4,5),FOGX(4,6),
     1FOX(20,4),DUMB(20),OTGC(5),OTGA(30,6),DUM20(21)
      COMMONGNRFP(18,54),GNFRCP(18,54),SIGA(54),T(54),S(54),PA(54),PF(54
     1),F(54),GAMMA(54),Q(54),AMBDA(54),ETA(54),RHO(54),A(54),NGR(3),
     2DUM31(20),NED(1),DUM34(180),GAMM(20,3),D(20,3),SR(20,3),
     3 DUM35(464),NBP(20,3)
      COMMONIX,ES(18,54),TEE(18,54),BA(18,54),RCP(18,54),RFCP(18,54),FX(
     120,54),DEL(54),X(54),ALPHA(20,3),BETA(20,3),XIA(20,3),XIR(20,3),
     2XIF(20,3),SASI(20,3),SARI(20,3),SFI(20,3),SFIR(20,3),GNSFI(20,3),
     3ALP(54),BET(54),XA(54),XR(54),XF(54),DUM47(2778),NLIB
      DIMENSION             ASIG(18,54),FRCP(18,54),GNFCP(18,54)
      EQUIVALENCE               (BA,ASIG),(RFCP,FRCP),(GNRFP,GNFCP)
      DIMENSION CT(18,10),DELTA(54),NEDITS(1),NBR(20,3)
      COMMON/ABFG/FF(54),AA(54),GG(54),BB(54),EE(54),RR(54),QQ(54),
     1GAMMX(20,3)
      DIMENSION GT(54), ET(54), QT(54)
      DIMENSION GAMMT(20,3)
      EQUIVALENCE (DEL,DELTA),(CT,CONCTA)
      EQUIVALENCE (NED,NEDITS),(NBP(1,1),NBR(1,1))
      DO 10 I=1,ISOX
      DO 60 IT=1,2
      IF(IT.EQ.2)GO TO 61
      DO 51 N=1,3
      DO 51 NN=1,20
      GAMMT(NN,N)=GAMM(NN,N)
   51 GAMM(NN,N)=GAMMX(NN,N)
      GT(1)=GAMMA(1)
      GAMMA(1)=GG(1)
      GO TO 62
   61 GAMMA(1)=GT(1)
      DO 52 N=1,3
      DO 52 NN=1,20
   52 GAMM(NN,N)=GAMMT(NN,N)
   62 CONTINUE
    1 ALP(1)=TEE(I,1)*GAMMA(1)
      BET(1)=ES(I,1)*GAMMA(1)
      XA(1)=ASIG(I,1)*GAMMA(1)
      XR(1)=0
      XF(1)=0.
      DO 3 N=2,IX
      IF(IT.EQ.2)GO TO 63
      GT(N)=GAMMA(N)
      ET(N-1)=ETA(N-1)
      QT(N-1)=Q(N-1)
      GAMMA(N)=GG(N)
      ETA(N-1)=EE(N-1)
      Q(N-1)=QQ(N-1)
      Q(N-1)=QQ(N-1)
      GO TO 64
   63 GAMMA(N)=GT(N)
      ETA(N-1)=ET(N-1)
      Q(N-1)=QT(N-1)
      Q(N-1)=QT(N-1)
   64 CONTINUE
      ALP(N)=TEE(I,N)*GAMMA(N)
      BET(N)=ES(I,N)*GAMMA(N)
    3 XA(N)=ASIG(I,N)*GAMMA(N)
      DO 8 NEDIT=1,3
      NUPPER=NGR(NEDIT)
      DO 8  NG=1,NUPPER
      IF(NG-1)4,4,5
    4 NL=1
      GO TO 6
    5 NL=NBR(NG-1,NEDIT)+1
    6 NU=NBR(NG,NEDIT)
      ALPHA(NG,NEDIT)=0.
      BETA(NG,NEDIT)=0.
      XIA(NG,NEDIT)=0.
      XIR(NG,NEDIT)=0.
      XIF(NG,NEDIT)=0.
      DO 7 N=NL,NU
      ALPHA(NG,NEDIT)=ALPHA(NG,NEDIT)+ALP(N)
      BETA(NG,NEDIT)=BETA(NG,NEDIT)+BET(N)
    7 XIA(NG,NEDIT)=XIA(NG,NEDIT)+XA(N)
      SASI(NG,NEDIT)=XIA(NG,NEDIT)/GAMM(NG,NEDIT)
      SARI(NG,NEDIT)=XIR(NG,NEDIT)/GAMM(NG,NEDIT)
      SFI(NG,NEDIT)=BETA(NG,NEDIT)/GAMM(NG,NEDIT)
      SFIR(NG,NEDIT)=XIF(NG,NEDIT)/GAMM(NG,NEDIT)
    8 GNSFI(NG,NEDIT)=ALPHA(NG,NEDIT)/GAMM(NG,NEDIT)
    9 CALL ED3P(I,IT)
   60 CONTINUE
      DO 50 N=1,3
      BALT(I,N,1)=SASI(N,3)+SARI(N,3)
      BALT(I,N,2)=SFI(N,3)
      BALT(I,N,3)=GNSFI(N,3)
      BALT(I,N,4)=SARI(N,3)
   50 BALT(I,N,5)=SFIR(N,3)
   10 CONTINUE
      IF(ISOXE)100,210,100
  100 DO150I=1,ISOXE
      J=I+ISOX
      DO150N=1,NX
      DO150NG=1,3
      FOIL(N,NG,I)=0.
      IF(NG-1)140,140,130
  140 NL=1
      GOTO120
  130 NL=NBR(NG-1,3)+1
  120 NU=NBR(NG,3)
      DO150K=NL,NU
      IF(NEPPN)148,148,149
  148 FOIL(N,NG,I)=FOIL(N,NG,I)+FX(N,K)*(RCP(J,K)-FRCP(J,K)+(ASIG(J,K
     1)-ES(J,K))*DELTA(K))/FOX(N,NG)
      GOTO150
  149 FOIL(N,NG,I)=FOIL(N,NG,I)+FX(N,K)/X(K)*(RCP(J,K)-FRCP(J,K)+
     1(ASIG(J,K)-ES(J,K))*DELTA(K))/GAMM(NG,3)*DUMB(NG+9)/FOX(N,NG)
  150 CONTINUE
      WRITE(NTOUT,31)IDENT,HOL
      L1=1
      L2=MIN0(2,ISOXE)
  155 I1=L1+ISOX
      I2=L2+ISOX
      WRITE(NTOUT,170)(WSTBA(L),L=I1,I2)
      WRITE(NTOUT,180)
      DO200N=1,NX
      WRITE(NTOUT,190)N,((FOIL(N,NG,L),NG=1,4),L=L1,L2)
  200 CONTINUE
      L1=L2+1
      L2=MIN0(L1+1,ISOXE)
      IF(L2-L1)210,155,155
  210 CONTINUE
C     DEFAULT USER ROUTINE.PRINTS SOME ADDITIONAL QUANTITIES.
      CALL EDBEN(BALT,BSQD,SR,GAMM,FOGX,WSTBA,ISOX)
      RETURN
   31 FORMAT(5H1CASE,I6,7X,9A4   )
  170 FORMAT(1H0,24X,4HFOIL,F8.0,48X,4HFOIL,F8.0)
  180 FORMAT(4H+ PT/
     1       1H ,2(8X,7HGROUP 1,7X,7HGROUP 2,7X,7HGROUP 3,7X,
     27HGROUP 4,3X))
  190 FORMAT(I4,1P4E14.6,4X,4E14.6)
      END
      SUBROUTINE EDIT4
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* EDIT4  *   HAMMER   VERSION /04-77/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      COMMON /CNTRL/ IDBCH,NCASE,NFLOG,BTTL(9),NTIN,NTOUT,NTPUN,
     1NCHAIN,LIB1,LIB2,LIB3,INT1,INT2,NSC1,LNK(10),NTHCS,NEPCS,KLIB1,
     2KLIB2,KLIB3,DUM1(32),NTHGP,IBNDRY(12),EPCUT,DUM2(45),NCPRN,NCPPT,
     3DUM3(10),NTHRN,NTHPT,NTHPN,LUM4(9),NEPRN,NEPPT,NEPPN,NEPSG,NEPAG,
     4DUM5(19),NEDRN,NEDPT,NEDPN,NEDNB,NEDFW,NEDRB,NEDAX,NEDNU,DUM6(16)
      COMMON /LIMP/ IDENT,NX,MX,NRX,ISOX,ISOXE,NGEOM,NP1B1,NBCT,NXP,
     1BSQD,HOL(9),NPT(20),THT(20),MXAS(20),ILHI(20),NRBP(20),DEGC(20),
     2WSTBA(18),WSTBB(18),CONCTA(18,10),LIMT(10),RIN(20),RAD(20),
     3ROUT(20),VOL(20),MTBL(20),REGV(20),FISD(20),HOLID(3,18),DUM7(40)
      COMMON ID,HOLA(9),BALT(18,4,5),FOIL(20,4,5),FOGX(4,6),
     1FOX(20,4),DUMB(20),OTGC(5),OTGA(30,6),DUM20(21)
      COMMONGNRFP(18,54),GNFRCP(18,54),SIGA(54),T(54),S(54),PA(54),PF(54
     1),F(54),GAMMA(54),Q(54),AMBDA(54),ETA(54),RHO(54),A(54),NGR(3),
     2DUM31(20),NED(1),DUM34(180),GAMM(20,3),DUM35(584),NBP(20,3)
      COMMONIX,ES(18,54),TEE(18,54),BA(18,54),RCP(18,54),RFCP(18,54),FX(
     120,54),DEL(54),X(54),ALPHA(20,3),BETA(20,3),XIA(20,3),XIR(20,3),
     2XIF(20,3),SASI(20,3),SARI(20,3),SFI(20,3),SFIR(20,3),GNSFI(20,3),
     3ALP(54),BET(54),XA(54),XR(54),XF(54),DUM47(2778),NLIB,DUM49(1525),
     4PS(18,54),OSE0(18,54),OS0(18,54),OS1(18,54),OXS0(18,54),XL(18,54),
     5DUM50(506)
      DIMENSION             ASIG(18,54),FRCP(18,54),GNFCP(18,54)
      EQUIVALENCE               (BA,ASIG),(RFCP,FRCP),(GNRFP,GNFCP)
      DIMENSION CT(18,10),DELTA(54),NEDITS(1),NBR(20,3)
      EQUIVALENCE (NED,NEDITS),(NBP(1,1),NBR(1,1))
      EQUIVALENCE (DEL,DELTA),(CT,CONCTA)
      DIMENSION DATA(26),PSTG(10)
      COMMON/PDAT/PSTG
C***********************************************************************
C
C**DEFINITIONS OF X-SECTS DEFINED BY REGION(NREG) AND MACROGROUP(NG)
C   RGFS - FISSION        RGS0 - P0 SCATTERING     RGTR - TRANSPORT
C   RGNF - NU*FISSION     RGS1 - P1 SCATTERING     RGIN - IN GROUP SCATT
C   RGAB - ABSORPTION     RGXS - XI*SCATTERING     RGRV - REMOVAL
C   RGDF - DIFFUSION COEFFICIENT     RGFV - FLUX*VOLUME*DU INTEGRAL
C
      COMMON/FBEDIT/RGFS(20,4),RGNF(20,4),RGAB(20,4),RGDF(20,4),
     $          RGS0(20,4)
     1,RGS1(20,4),RGXS(20,4),RGTR(20,4),RGIN(20,4),RGRV(20,4),RGFV(20,4)
     $ ,RGVOL(20)
      COMMON/DAVE/RXREM(20,3)
C
C--9/13/79--REGIONWISE REMOVAL CROSS-SECTIONS ARE NOW
C           ADJUSTED SO THAT FLUX-VOL WEIGHTING THEM
C           YIELDS THE CORRECT CELL-REMOVAL CORRECTED
C           FOR LEAKAGE  ,  FBB
C**LOOP OVER MACROGROUPS NG (FAST GROUPS ONLY#####FBB,5,17/79
      DO 10 NG=1,3
      DO 110 NREG=1,NRX
      RGFS(NREG,NG) = 0.0
      RGNF(NREG,NG) = 0.0
      RGAB(NREG,NG) = 0.0
      RGDF(NREG,NG) = 0.0
      RGS0(NREG,NG) = 0.0
      RGS1(NREG,NG) = 0.0
      RGXS(NREG,NG) = 0.0
      RGRV(NREG,NG) = 0.0
      RGFV(NREG,NG) = 0.0
      RGTR(NREG,NG) = 0.0
      RGIN(NREG,NG) = 0.0
  110 CONTINUE
      GO TO (11,12,12,10),NG
   11 NL = 1
      GO TO 14
   12 NL = NBR(NG-1,3) + 1
   14 NU = NBR(NG,3)
      NRSAB = 0
      NRSFS = 0
      N = 0
C
C**LOOP OVER REGIONS NREG
      DO 20 NREG=1,NRX
      NPRG = NPT(NREG)
C
C**LOOP OVER SPACE POINTS NN IN REGION
      DO 30 NN=1,NPRG
      N = N+1
      IF(NN.EQ.1) M=MTBL(N)
C
C**LOOP OVER MICROGROUPS K IN MACROGROUP
      DO 40 K=NL,NU
      FVD = FX(N,K)*VOL(N)*DELTA(K)
      RGFV(NREG,NG) = RGFV(NREG,NG) + FVD
      RGRV(NREG,NG) = RGRV(NREG,NG) + RXREM(N,NG)*FVD
C
C**LOOP OVER ISOTOPES I
      DO 50 I=1,ISOX
      IF(CT(I,M).EQ.0.0) GO TO 50
      C = CT(I,M)
C**TEST FOR RESONANCE MATERIAL IN THIS REGION (MUST BE IN 1 REGION ONLY)
C  IF PRESENT, ABSORPTION AND/OR FISSION HAS TO BE CORRECTED BELOW
      IF(RCP(I,K).NE.0.0) NRSAB=NREG
      IF(FRCP(I,K).NE.0.0) NRSFS=NREG
C
      RGAB(NREG,NG)=RGAB(NREG,NG)+C*RFCP(I,K)*FVD
      RGFS(NREG,NG)=RGFS(NREG,NG)+C*GNRFP(I,K)*FVD
      RGNF(NREG,NG)=RGNF(NREG,NG)+C*GNRFP(I,K)*GNFRCP(I,K)*FVD
      RGS0(NREG,NG) = RGS0(NREG,NG) + C*OS0(I,K)*FVD
      RGS1(NREG,NG) = RGS1(NREG,NG) + C*OS1(I,K)*FVD
      CC = 1.0
      IF(OS0(I,K).GT.1.0E-30) CC=1.0-OS1(I,K)/OS0(I,K)
      RGXS(NREG,NG) = RGXS(NREG,NG) + C*CC*OXS0(I,K)*FVD
      RGTR(NREG,NG) = RGTR(NREG,NG) +
     1                C*(RFCP(I,K)+OS0(I,K)-OS1(I,K))*FVD
   50 CONTINUE
   40 CONTINUE
   30 CONTINUE
C
      RGAB(NREG,NG) = RGAB(NREG,NG)/RGFV(NREG,NG)
      RGFS(NREG,NG) = RGFS(NREG,NG)/RGFV(NREG,NG)
      RGNF(NREG,NG) = RGNF(NREG,NG)/RGFV(NREG,NG)
      RGS0(NREG,NG) = RGS0(NREG,NG)/RGFV(NREG,NG)
      RGS1(NREG,NG) = RGS1(NREG,NG)/RGFV(NREG,NG)
      RGXS(NREG,NG) = RGXS(NREG,NG)/RGFV(NREG,NG)
      RGRV(NREG,NG) = RGRV(NREG,NG)/RGFV(NREG,NG)
      RGTR(NREG,NG) = RGTR(NREG,NG)/RGFV(NREG,NG)
   20 CONTINUE
C
C     CORRECTIONS FOR RESONANCE REGION NOT APPLICABLE FOR NEW VERSION
C                  T E C H N I O N - 1 9 7 7
C     SINCE REACTION RATES (SMOOTH + RESONANCE) HAVE BEEN CONVERTED TO
C     EQUIVALENT SMOOTH CROSS SECTIONS @ J.BARHEN & W.ROTHENSTEIN 01-77@
C**NORMALIZING TRANSPORT SIGMA TO CELL VALUE
C--ALSO NORMALIZE REMOVAL TO LEAKAGE-CORRECTED CELL VALUE, FBB 9/13/79
      TTR = 0.0
      TFV = 0.0
      TREM= 0.0
      DO 18 NREG=1,NRX
      TFV = TFV + RGFV(NREG,NG)
      TTR = TTR + RGTR(NREG,NG)*RGFV(NREG,NG)
      TREM=TREM+ RGRV(NREG,NG)*RGFV(NREG,NG)
   18 CONTINUE
      TRNORM = (1.0/(3.0*FOGX(NG,1)))/(TTR/TFV)
      RVNORM = FOGX(NG,4)/ (TREM/TFV)
      DO 19 NREG=1,NRX
      RGTR(NREG,NG) = TRNORM*RGTR(NREG,NG)
      RGDF(NREG,NG) = 1.0/(3.0*RGTR(NREG,NG))
      RGRV(NREG,NG) = RGRV(NREG,NG)* RVNORM
      RGIN(NREG,NG) = RGTR(NREG,NG) - RGAB(NREG,NG) - RGRV(NREG,NG)
   19 CONTINUE
   10 CONTINUE
C
C
C**PRINT RESULTS
      WRITE(NTOUT,1)
      DO 100 NREG=1,NRX
      WRITE(NTOUT,2) NREG
      WRITE(NTOUT,3) (NG,RGFS(NREG,NG),RGAB(NREG,NG),RGNF(NREG,NG)
     1,RGS0(NREG,NG),RGS1(NREG,NG),RGXS(NREG,NG),RGFV(NREG,NG)
     2,RGDF(NREG,NG),RGTR(NREG,NG),RGIN(NREG,NG),RGRV(NREG,NG),NG=1,3)
  100 CONTINUE
C**WRITING OF NTG+3 GROUP REGIONWISE CROSS SECTIONS
      IF(NTHPN.EQ.0) GO TO 200
      NTG = 1
      IF(LUM4(1).NE.0) NTG=NTHGP
      GO TO (201,202),NTHPN
  201 NADD = 2*NTG
      NTDP = NADD + 6
      WRITE(NTOUT,210)
      NN = 0
      DO 206 NREG=1,NRX
      NN = NN + NPT(NREG)
      M = MTBL(NN)
      NS = 0
      DO 207 I=1,ISOX
      IF(CT(I,M).EQ.0.0) GO TO 207
      AIDP = AMOD(WSTBA(I),10000.)
      IF(AIDP.EQ.1001.) NS=1
  207 CONTINUE
      WRITE(NTOUT,211) NREG,HOL
      WRITE(NTPUN,213) NREG,HOL
      DO 205 NG=1,3
      DATA(1) = RGFS(NREG,NG)
      DATA(2) = 0.0
      DATA(3) = RGTR(NREG,NG)
      DATA(4) = RGAB(NREG,NG)
      DATA(5) = RGNF(NREG,NG)
      DATA(6) = DATA(3)
      DO 203 K=1,NADD
  203 DATA(K+6) = 0.0
      DATA(NTG+6) = RGIN(NREG,NG)
      IF(NG.NE.1) DATA(NTG+7) = RGRV(NREG,NG-1)
      WRITE(NTOUT,212) (DATA(N),N=1,NTDP)
      WRITE(NTPUN,214) (DATA(N),N=1,NTDP)
  205 CONTINUE
      DO 204 NG=1,NTG
      READ(12) (DATA(N),N=1,NTDP)
      NDUM = NTG + 6 + NG
      IF(NG.EQ.1) DATA(NDUM) = RGRV(NREG,3)
      IF(NS.EQ.1) DATA(NDUM) = RGRV(NREG,3)*PSTG(NG)
      WRITE(NTOUT,212) (DATA(N),N=1,NTDP)
      WRITE(NTPUN,214) (DATA(N),N=1,NTDP)
  204 CONTINUE
  206 CONTINUE
      GO TO 200
  202 CONTINUE
  200 CONTINUE
      RETURN
    1 FORMAT(1H1,30X,'  REGIONWISE EPITHERMAL CROSS SECTIONS   '/)
    2 FORMAT(1H0,'  REGION NUMBER ',I2//1X,'GROUP',4X,'XF',8X,'XA',
     X7X,'NU-XF',6X,
     1'XS0',7X,'XS1',5X,'XI-XS0   FLUX-VOL',6X,'D',8X,'XTR',6X,'XSGG',
     X7X,'XR')
    3 FORMAT(1X,I3,1X,11F10.6)
  210 FORMAT(1H1,23X,'PUNCHED OUTPUT FOR TWOT AN'/)
  211 FORMAT(1H0,'REGION',I3,2X,9A4   )
  212 FORMAT(6F15.6)
  213 FORMAT(1H ,'REGION',I3,2X,9A4   )
  214 FORMAT(1P6E12.5)
      END
      SUBROUTINE ED12P(NEDIT,IT)
CED12P
      COMMON /CNTRL/ IDBCH,NCASE,NFLOG,BTTL(9),NTIN,NTOUT,NTPUN,
     1NCHAIN,LIB1,LIB2,LIB3,INT1,INT2,NSC1,LNK(10),NTHCS,NEPCS,KLIB1,
     2KLIB2,KLIB3,DUM1(32),NTHGP,IBNDRY(12),EPCUT,DUM2(45),NCPRN,NCPPT,
     3DUM3(10),NTHRN,NTHPT,NTHPN,LUM4(9),NEPRN,NEPPT,NEPPN,NEPSG,NEPAG,
     4DUM5(19),NEDRN,NEDPT,NEDPN,NEDNB,NEDFW,NEDRB,NEDAX,NEDNU,DUM6(16)
      COMMON /LIMP/ IDENT,NX,MX,NRX,ISOX,ISOXE,NGEOM,NP1B1,NBCT,NXP,
     1BSQD,HOL(9),NPT(20),THT(20),MXAS(20),ILHI(20),NRBP(20),DEGC(20),
     2WSTBA(18),WSTBB(18),CONCTA(18,10),LIMT(10),RIN(20),RAD(20),
     3ROUT(20),VOL(20),MTBL(20),REGV(20),FISD(20),HOLID(3,18),DUM7(40)
      COMMON ID,HOLA(9),BALT(18,4,5),FOIL(20,4,5),FOGX(4,6),
     1FOX(20,4),DUMB(20),OTGC(5),OTGA(30,6),DUM20(21)
      COMMONGNRFP(18,54),GNFRCP(18,54),SIGA(54),T(54),S(54),PA(54),PF(54
     1),F(54),GAMMA(54),Q(54),AMBDA(54),ETA(54),RHO(54),A(54),NGR(3),
     2DUM31(20),NED(1),BETTA(20),AMB(20),XY(20),UPSLN(20),SA(20),SX(20),
     3GNUSX(20),P(20),TAU(20),GAMM(20,3),D(20,3),SR(20,3),ALPH(20),
     4AL(20,3),BE(20,3),YX(20,3),U(20,3),FL(20,3),B(20),DUM33(124),
     5NBP(20,3)
      COMMONIX,ES(18,54),TEE(18,54),BA(18,54),RCP(18,54),RFCP(18,54),FX(
     120,54),DEL(54),X(54),DUM40(3648),NLIB
      DIMENSION CT(18,10),DELTA(54),NEDITS(1),NBR(20,3),C(54)
      EQUIVALENCE (NED,NEDITS),(NBP(1,1),NBR(1,1)),(C,A)
      EQUIVALENCE (DEL,DELTA),(CT,CONCTA)
      COMMON/VDAT/ VINV(54),VAV(3)
      DIMENSION DATA(26),PSTG(10)
      COMMON/PDAT/PSTG
      NU=NGR(NEDIT)
      IF(NEDIT-1)3,3,8
    3 WRITE(NTOUT,31)IDENT,HOL
   31 FORMAT(5H1CASE,I6,7X,9A4   )
      WRITE(NTOUT,5)
      IF(IT.EQ.1) WRITE(NTOUT,6)
    6 FORMAT (90H                                       OVERALL FEW GROU
     1P DATA AT BUCKLING EQUAL TO 1.0E-10)
      IF(IT.EQ.2) WRITE(NTOUT,66)
   66 FORMAT (79H                                       OVERALL FEW GROU
     1P DATA AT INPUT BUCKLING)
    5 FORMAT (1H )
      WRITE(NTOUT,7)
    7 FORMAT('0OUTPUT GRP MUFT GRPS   SIGMA-A  SIGMA-R  SIGMA-F NU SIG-F
     1',5X,'P',6X,'AGE',6X,'D',5X,'1/V (S/M)    1/3   SIG-S(GG)')
      GO TO 9
    8 WRITE(NTOUT,5)
    9 DO 13 J=1,NU
      IF(J-1)11,10,11
   10 NL=1
      WRITE(NTOUT,22)
      GO TO 12
   11 NL=NBR(J-1,NEDIT)+1
   12 NUP=NBR(J,NEDIT)
      STR = 1.0/(3.0*D(J,NEDIT))
      SSG = STR - SA(J) -SR(J,NEDIT)
CE 13 WRITE(NTOUT,14)J,NU,NL,NUP,
CE   1(SA(J),SR(J,NEDIT),SX(J),GNUSX(J),
CE   2P(J),TAU(J),D(J,NEDIT),VAV(J),STR,SSG)
   13 WRITE(NTOUT,14)J,NU,NL,NUP,
     1 SA(J),SR(J,NEDIT),SX(J),GNUSX(J),
     2P(J),TAU(J),D(J,NEDIT),VAV(J),STR,SSG
   14 FORMAT(1H ,I3,3H OF,I2,I6,3H TO,I3,F10.6,4F9.6,F7.3,F9.6,1PE12.5,
     10P2F9.6)
C  WRITING OF NTG+3 GROUP CELL CROSS SECTIONS
      IF(NTHPN.EQ.0) GO TO 100
      IF(NEDIT.NE.3) GO TO 100
      NTG = 1
      IF(LUM4(1).NE.0) NTG=NTHGP
      READ(12) (PSTG(JG),JG=1,NTG)
      GO TO (101,102),NTHPN
  101 NADD = 2*NTG
      NTDP = NADD + 6
      WRITE(NTOUT,110)
  110 FORMAT(1H0,23X,'PUNCHED OUTPUT FOR TWOTRAN'/)
      WRITE(NTOUT,111) HOL
      WRITE(NTPUN,111) HOL
  111 FORMAT(1H ,9A4)
      DO 105 J=1,3
      DATA(1) = SX(J)
      DATA(2) = 0.0
      DATA(3) = 1.0/(3.0*D(J,NEDIT))
      DATA(4) = SA(J)
      DATA(5) = GNUSX(J)
      DATA(6) = DATA(3)
      DO 103 K=1,NADD
  103 DATA(K+6) = 0.0
      DATA(NTG+6) = DATA(6) - SA(J) - SR(J,NEDIT)
      IF(J.NE.1) DATA(NTG+7) = SR(J-1,NEDIT)
      WRITE(NTOUT,113) (DATA(N),N=1,NTDP)
      WRITE(NTPUN,112) (DATA(N),N=1,NTDP)
  105 CONTINUE
  113 FORMAT(6F15.6)
  112 FORMAT(1P6E12.5)
      DO 104 NG=1,NTG
      READ(12) (DATA(N),N=1,NTDP)
      NDUM = NTG + 6 + NG
      DATA(NDUM) = PSTG(NG)*SR(3,NEDIT)
      WRITE(NTOUT,113) (DATA(N),N=1,NTDP)
      WRITE(NTPUN,112) (DATA(N),N=1,NTDP)
  104 CONTINUE
      GO TO 100
  102 CONTINUE
  100 CONTINUE
C
   15 DO 17 N=1,NU
      AL(N,NEDIT)=ALPH(N)
      BE(N,NEDIT)=BETTA(N)
      YX(N,NEDIT)=XY(N)
      U(N,NEDIT)=UPSLN(N)
   17 FL(N,NEDIT)=AMB(N)
      IF(NEPPT)30,30,40
   40 IF(NEDIT-NEDITS(1))30,18,18
  18  WRITE(NTOUT,16)
   16 FORMAT (62H0                                      INTERMEDIATE INT
     1EGRALS )
      WRITE(NTOUT,19)
   19 FORMAT (87H0OUTPUT GROUP   MUFT GROUPS  ABS0RBTION   FLUX    FISSI
     1ON  NU-FISSION  SOURCE   CURRENT)
      DO 26 N=1,NEDIT
      IF(N-1)20,21,20
   20 WRITE(NTOUT,22)
   22 FORMAT (1H )
   21 KUPPER=NGR(N)
      DO 26 K=1,KUPPER
      IF(K-1)24,23,24
   23 NL=1
      GO TO 25
   24 NL=NBR(K-1,N)+1
   25 NUP=NBR(K,N)
CE 26 WRITE(NTOUT,41)K,KUPPER,NL,NUP,
CE   1(YX(K,N),GAMM(K,N),BE(K,N),AL(K,N),U(K,N),FL(K,N))
   26 WRITE(NTOUT,41)K,KUPPER,NL,NUP,
     1 YX(K,N),GAMM(K,N),BE(K,N),AL(K,N),U(K,N),FL(K,N)
   41 FORMAT (1H ,I4,4H OF ,I2,I8,4H TO ,I2,F12.6,F11.6,F9.6,3F10.6)
      WRITE(NTOUT,31)IDENT,HOL
      WRITE(NTOUT,27)
   27 FORMAT (57H                                            54 GROUP ED
     1IT)
      WRITE(NTOUT,28)
   28 FORMAT( 75H                            GR0UP    FLUX    CURRENT
     1 ETA     RHO       Q)
      WRITE(NTOUT,22)
      WRITE(NTOUT,29)    (N,F(N),C(N),ETA(N),RHO(N),Q(N),N=1,IX)
   29 FORMAT (1H ,I30,F12.6,4F9.6)
   30 RETURN
      END
      SUBROUTINE ED3P(I,IT)
CED3P
      COMMON /CNTRL/ IDBCH,NCASE,NFLOG,BTTL(9),NTIN,NTOUT,NTPUN,
     1NCHAIN,LIB1,LIB2,LIB3,INT1,INT2,NSC1,LNK(10),NTHCS,NEPCS,KLIB1,
     2KLIB2,KLIB3,DUM1(32),NTHGP,IBNDRY(12),EPCUT,DUM2(45),NCPRN,NCPPT,
     3DUM3(10),NTHRN,NTHPT,NTHPN,DUM4(9),NEPRN,NEPPT,NEPPN,NEPSG,NEPAG,
     4DUM5(19),NEDRN,NEDPT,NEDPN,NEDNB,NEDFW,NEDRB,NEDAX,NEDNU,DUM6(16)
      COMMON /LIMP/ IDENT,NX,MX,NRX,ISOX,ISOXE,NGEOM,NP1B1,NBCT,NXP,
     1BSQD,HOL(9),NPT(20),THT(20),MXAS(20),ILHI(20),NRBP(20),DEGC(20),
     2WSTBA(18),WSTBB(18),CONCTA(18,10),LIMT(10),RIN(20),RAD(20),
     3ROUT(20),VOL(20),MTBL(20),REGV(20),FISD(20),HOLID(3,18),DUM7(40)
      COMMON ID,HOLA(9),BALT(18,4,5),FOIL(20,4,5),FOGX(4,6),
     1FOX(20,4),DUMB(20),OTGC(5),OTGA(30,6),DUM20(21)
      COMMONGNRFP(18,54),GNFRCP(18,54),SIGA(54),T(54),S(54),PA(54),PF(54
     1),F(54),GAMMA(54),Q(54),AMBDA(54),ETA(54),RHO(54),A(54),NGR(3),
     2DUM31(20),NED(1),DUM36(824),NBP(20,3)
      COMMONIX,ES(18,54),TEE(18,54),BA(18,54),RCP(18,54),RFCP(18,54),FX(
     120,54),DEL(54),X(54),DUM41(300),SAS(20,3),SAR(20,3),SFIS(20,3),
     2SFIR(20,3),GNUSX(20,3),C(54),B(54),XA(54),XR(54),XF(54),
     3DUM47(2778),NLIB
      DIMENSION CT(18,10),DELTA(54),NEDITS(1),NBR(20,3)
      EQUIVALENCE (NED,NEDITS),(NBP(1,1),NBR(1,1))
      EQUIVALENCE (DEL,DELTA),(CT,CONCTA)
      IF(NEPPT)14,14,15
   15 IF(IT.EQ.1) WRITE(NTOUT,7) WSTBA(I)
      IF(IT.EQ.2) WRITE(NTOUT,77) WSTBA(I)
    7 FORMAT(1H0,36X,14HELEMENT NUMBER,F8.0,44H FEW GROUP DATA AT BUCKLI
     1NG EQUAL TO 1.0E-10)
   77 FORMAT(1H0,36X,14HELEMENT NUMBER,F8.0,33H FEW GROUP DATA AT INPUT
     1BUCKLING)
      WRITE(NTOUT,8)
    8 FORMAT(116H0OUTPUT GROUP   MUFT GROUP    SMOOTH SIGMA-A  RESONANCE
     1 SIGMA-A TOTAL SIGMA-F  RESONANCE SIGMA-F          NU SIGMA-F)
      DO 13 NE=1,3
      NU=NGR(NE)
      DO13 J=1,NU
      IF(J-1)10,10,11
   10 NLO=1
      WRITE(NTOUT,22)
   22 FORMAT (1H )
      GO TO 12
   11 NLO=NBR(J-1,NE)+1
   12 NUP=NBR(J,NE)
    9 FORMAT (1H ,I4,4H OF ,I2,I8,4H TO ,I2,2X,E14.7,4(4X,E14.7))
CE 13 WRITE(NTOUT ,9)J,NU,NLO,NUP,
CE   1                                  (SAS(J,NE),SAR(J,NE),SFIS(J,NE),
CE   1SFIR(J,NE),GNUSX(J,NE) )
   13 WRITE(NTOUT ,9)J,NU,NLO,NUP,
     1                                   SAS(J,NE),SAR(J,NE),SFIS(J,NE),
     1SFIR(J,NE),GNUSX(J,NE)
   14 RETURN
      END
      SUBROUTINE SORE(IG)
CSORE
      COMMON /CNTRL/ IDBCH,NCASE,NFLOG,BTTL(9),NTIN,NTOUT,NTPUN,
     1NCHAIN,LIB1,LIB2,LIB3,INT1,INT2,NSC1,LNK(10),NTHCS,NEPCS,KLIB1,
     2KLIB2,KLIB3,DUM1(32),NTHGP,IBNDRY(12),EPCUT,DUM2(45),NCPRN,NCPPT,
     3DUM3(10),NTHRN,NTHPT,NTHPN,DUM4(9),NEPRN,NEPPT,NEPPN,NEPSG,NEPAG,
     4DUM5(19),NEDRN,NEDPT,NEDPN,NEDNB,NEDFW,NEDRB,NEDAX,NEDNU,DUM6(16)
      COMMON /LIMP/ IDENT,NX,MX,NRX,ISOX,ISOXE,NGEOM,NP1B1,NBCT,NXP,
     1BSQD,HOL(9),NPT(20),THT(20),MXAS(20),ILHI(20),NRBP(20),DEGC(20),
     2WSTBA(18),WSTBB(18),CONCTA(18,10),LIMT(10),RIN(20),RAD(20),
     3ROUT(20),VOL(20),MTBL(20),REGV(20),FISD(20),HOLID(3,18),DUM7(40)
      COMMON ID,HOLA(9),BALT(18,4,5),FOIL(20,4,5),FOGX(4,6),
     1FOX(20,4),DUMB(20),OTGC(5),OTGA(30,6),DUM20(21)
      COMMON GRP(20),SOR(20),T(20,20),XT(20),V1(20),V2(20),V3(20)
     1,V4(20),V5(20),CP(20),CN(20),CP2(20),CN2(20),Y(21),DUM21(2839)
      DIMENSION FX(20),CT(18,10)
      EQUIVALENCE (FX(1),FISD(1)),(CT(1,1),CONCTA(1,1)),(LIB2,NLIB2)
      COMMON IX,SIGY(18,54),GNU(18,54),SIGA(18,54),P(18,54),PF(18,54),
     1F(20,54),DEL(54),FS(54),SSC(10),S1(10),SIGABS(10),SIGIN(10),
     2SIGX(10),C(10),AN(10),SD(10),PROB(25,10),NRIG(18),
     3ER(200),GMN(200),GMGM(200),GMF(200),SPIN(200),AMASS(18),
     4SIGP(18),JONE(18),JTWO(18),DZERO(18),DONE(18),DTWO(18),ETA(20),
     5Q(20),ESC,MDONE(18),KEY,MCURR,PZ(1001),PZ1(1001),DELSIG,A1(18),
     6EBK(55),TEMP(18),SIGEFY(18),NDONE,NLIB,THFLX(630),ANH(10),SDH(10),
     7S1H(10)
      DIMENSION AMH(10),AMBH(10),SDH1(10)
      DIMENSION              AMB(10),AM(10),C1(10),SD1(10)
      COMMON/DAVE/RXREM(20,3)
      DIMENSION FSUM(20),ENNP(20)
      IF(IG-1)10,10,30
   10 A=0.
       DO11N=1,NX
   11  A=A+FX(N)*VOL(N)
       IF(A)12,12,14
   12 A=0.
      DO13N=1,NX
   13 A=A+VOL(N)
      DO 18N=1,NX
   18 FX(N)=1./A
       GOTO16
   14  DO15N=1,NX
   15  FX(N)=FX(N)/A
   16  DO20N=1,NX
      Q(N)=0.
      ETA(N)=0.
      SOR(N)=FS(1)*FX(N)
      M=MTBL(N)
      IF(SD(M))100,101,100
  101 AMB(M)=0.0
      GO TO 402
  100 AMB(M)=AN(M)/SD(M)
  402 CONTINUE
      IF(SDH(M)) 400,401,400
  401 AMBH(M)=0.0
      GO TO 102
  400 AMBH(M)=ANH(M)/SDH(M)
  102 C1(M)=C(M)
      SDH1(M)=SDH(M)
      SD1(M)=SD(M)
   20 GRP(N)=-2.*SDH(M)/(2.*AMBH(M)+DEL(1))+SSC(M)-S1(M)-SD(M)/(AMB(M)
     1+DEL(1)/2.)+PROB(1,M)
      DO 1011 N=1,NX
      FSUM(N) = 0.0
 1011 ENNP(N) = 0.0
      RETURN
   30 DO40N=1,NX
      M=MTBL(N)
C * * SKIP IN SECOND ITERATION
      IF(ESC.LT.0.0)GO TO 31
      ESCT=ESC
      ESC=1.0
      ETA(N)=ESC*ETA(N)*(2.*AMBH(M)-DEL(IG-1))/(2.*AMBH(M)+DEL(IG-1))
     1+2.*DEL(IG-1)*SDH1(M)*F(N,IG-1)/(2.*AMBH(M)+DEL(IG-1))
      Q(N)=ESC*Q(N)*(2.*AMB(M)-DEL(IG-1))/(2.*AMB(M)+DEL(IG-1))
     1+2.*DEL(IG-1)*SD1(M)*F(N,IG-1)/(2.*AMB(M)+DEL(IG-1))
      ESC=ESCT
   31 CONTINUE
      IF(IG.EQ.55) GO TO 40
      IF(SD(M))200,201,200
  201 AM(M)=0.0
      GO TO 302
  200 AM(M)=AN(M)/SD(M)
  302 CONTINUE
      IF(SDH(M)) 300,301,300
  301 AMH(M)=0.0
      GO TO 202
  300 AMH(M)=ANH(M)/SDH(M)
  202 GRP(N)=SSC(M)-S1(M)-2.*SDH(M)/(2.*AMH(M)+DEL(IG))-SD(M)/(AM(M)+
     1DEL(IG)/2.)
      SOR(N)=ETA(N)*2./(2.*AMH(M)+DEL(IG))+Q(N)/(AM(M)+DEL(IG)/2.)
     1+FS(IG)*FX(N)
   40 CONTINUE
      IF(IG.LT.11) GO TO 1001
      IF(IG.GT.25) GO TO 1002
      DO 1003 N=1,NX
      M = MTBL(N)
      DO 1004 J=1,10
      ENNP(N) = ENNP(N) + PROB(J,M)*F(N,J)*DEL(J)
      IF(IG.NE.11) GO TO 1004
      FSUM(N) = FSUM(N) + F(N,J)*DEL(J)
 1004 CONTINUE
      IF(IG.NE.11) GO TO 1003
      RXREM(N,1) = (Q(N)+ETA(N))/FSUM(N)
 1003 CONTINUE
      GO TO 1001
 1002 IF(IG.GT.26) GO TO 1005
      DO 1006 N=1,NX
 1006 RXREM(N,1) = RXREM(N,1)+ENNP(N)/FSUM(N)
      DO 1012 N=1,NX
      FSUM(N) = 0.0
      DO 1007 J=11,25
 1007 FSUM(N) = FSUM(N) + F(N,J)*DEL(J)
 1012 RXREM(N,2) = (Q(N)+ETA(N))/FSUM(N)
 1005 IF(IG.EQ.55) GO TO 1008
      GO TO 1001
 1008 DO 1009 N=1,NX
      FSUM(N) = 0.0
      DO 1010 J=26,54
 1010 FSUM(N) = FSUM(N) + F(N,J)*DEL(J)
 1009 RXREM(N,3) = (Q(N)+ETA(N))/FSUM(N)
      GO TO 80
 1001 CONTINUE
      DO50M=1,MX
      AMB(M)=AM(M)
      C1(M)=C(M)
      AMBH(M)=AMH(M)
      SDH1(M)=SDH(M)
   50 SD1(M)=SD(M)
      IF(IG-25)60,60,80
   60 IG1=IG-1
      DO70N=1,NX
      M=MTBL(N)
      GRP(N)=GRP(N)+PROB(IG,M)
      DO70I=1,IG1
   70 SOR(N)=SOR(N)+PROB(I,M)*F(N,I)/DEL(IG)*DEL(I)
C     SOURCE CORRECTED FOR RESONANCE ABSORPTION IN SECOND ITERATION.
   80 IF(ESC.GT.0.0)GO TO 82
      DO 81 N=1,NX
      SOR(N)=SOR(N)-(1.0+ESC)*(Q(N)+ETA(N))/DEL(IG)
   81 CONTINUE
   82 RETURN
      END
      SUBROUTINE GEOMH(IG)
CPROB  ======HAMMER===BNL-SRL LATTICE ANALYSIS PROGRAM============HAMLET
CPROB GEOMETRY ROUTINE FOR BROAD GROUP COLL. PROB.
      COMMON /CNTRL/ IDBCH,NCASE,NFLOG,BTTL(9),NTIN,NTOUT,NTPUN,
     1NCHAIN,LIB1,LIB2,LIB3,INT1,INT2,NSC1,LNK(10),NTHCS,NEPCS,KLIB1,
     2KLIB2,KLIB3,DUM1(32),NTHGP,IBNDRY(12),EPCUT,DUM2(45),NCPRN,NCPPT,
     3DUM3(10),NTHRN,NTHPT,NTHPN,DUM4(9),NEPRN,NEPPT,NEPPN,NEPSG,NEPAG,
     4DUM5(19),NEDRN,NEDPT,NEDPN,NEDNB,NEDFW,NEDRB,NEDAX,NEDNU,DUM6(16)
      COMMON /LIMP/ IDENT,NX,MX,NRX,ISOX,ISOXE,NGEOM,NP1B1,NBCT,NXP,
     1BSQD,HOL(9),NPT(20),THT(20),MXAS(20),ILHI(20),NRBP(20),DEGC(20),
     2WSTBA(18),WSTBB(18),CONCTA(18,10),LIMT(10),RIN(20),RAD(20),
     3ROUT(20),VOL(20),MTBL(20),REGV(20),FISD(20),HOLID(3,18),DUM7(40)
      COMMON ID,HOLA(9),BALT(18,4,5),FOIL(20,4,5),FOGX(4,6),
     1FOX(20,4),DUMB(20),OTGC(5),OTGA(30,6),DUM20(21)
      COMMON GRP(20),SOR(20),T(20,20),XT(20),V1(20),V2(20),V3(20)
     1,V4(20),V5(20),CP(20),CN(20),CP2(20),CN2(20),Y(21),DUM21(2839)
      COMMON IX,SIGY(18,54),GNU(18,54),SIGA(18,54),P(18,54),PF(18,54),
     1F(20,54),DEL(54),FS(54),SSC(10),S1(10),SIGABS(10),SIGIN(10),
     2SIGX(10),C(10),AN(10),SD(10),PROB(25,10),NRIG(18),
     3ER(200),GMN(200),GMGM(200),GMF(200),SPIN(200),AMASS(18),
     4SIGP(18),JONE(18),JTWO(18),DZERO(18),DONE(18),DTWO(18),ETA(20),
     5Q(20),ESC,MDONE(18),KEY,MCURR,PZ(1001),PZ1(1001),DELSIG,A1(18),
     6EBK(55),TEMP(18),SIGEFY(18),NDONE,NLIB
      DIMENSION XS(20)
      DO 10 N=1,NX
      M=MTBL(N)
   10 XS(N)=SSC(M)-S1(M) +SIGABS(M) +SIGIN(M)
      REFL=1.0
      AX=0.0
      DO 100N=1,NX
      IF(NGEOM-1)11,11,15
   11 A2=1.
      AY=XS(N)*VOL(N)
      AX=4.*VOL(N)*XS(N)
      GOTO20
   15 AY=XS(N)*(ROUT(N)-RIN(N))
      A2=RIN(N)/ROUT(N)
      IF(N-1)20,20,19
   19 AX=0.63662*VOL(N)*XS(N)/RIN(N)
   20 CALL ESCAPE(A2,AY,PA,PI)
      V1(N)=PI
      V5(N)=1.-AX*PI
      V2(N)=A2*V5(N)
      V3(N)=PA
  100 V4(N)=1.-A2*(1.+AX*(PA-PI))
      IF(NGEOM-1)101,101,102
  101  PA1=V1(1)*(1.+V5(1))
      CN1=V5(1)**2
      GOTO103
  102 PA1=V3(1)
      CN1=1.-0.63662*VOL(1)*XS(1)*PA1/ROUT(1)
  103 CONTINUE
      NM1=NX-1
      NP1=NX+1
      DO 110 N=1,NP1
  110 Y(N)=0.
      DO 300 NQ=1,NX
      Y(NQ)=0.
      Y(NQ+1)=VOL(NQ)
      CN(NX)=1.
      CN2(NX)=0.
      DO 120 N=1,NM1
      L=NX-N
      CN(L)=V2(L+1)*CN(L+1)
  120 CN2(L)=V1(L+1)*Y(L+2)+V2(L+1)*CN2(L+1)
      CP(1)=CN1*CN(1)
      CP2(1)=PA1*Y(2)+CN1*CN2(1)
      DO 130 N=2,NX
      CP(N)=V4(N)*CN(N)+V5(N)*CP(N-1)
  130 CP2(N)=V3(N)*Y(N+1)+V4(N)*CN2(N)+V5(N)*CP2(N-1)
      CP(NX)=CP2(NX)/(1.-REFL*CP(NX))
      CN(NX)=REFL*CP(NX)
      DO 160 N=1,NM1
      CP(N)=CP2(N)+CN(NX)*CP(N)
  160 CN(N)=CN2(N)+CN(NX)*CN(N)
      T(1,NQ)=(Y(2)+CN(1)-CP(1))/VOL(1)/XS(1)
      DO 170 NZ=2,NX
      CNDIF=CN(NZ)-CN(NZ-1)
      CPDIF=CP(NZ-1)-CP(NZ)
      YVAL=Y(NZ+1)
      VOLM=VOL(NZ)
      XSES=XS(NZ)
  170 T(NZ,NQ)=(YVAL+CNDIF+CPDIF)/VOLM/XSES
  300 CONTINUE
      RETURN
      END
      SUBROUTINE FLUXH(IG)
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* FLUX   *   HAMMER   VERSION /04-77/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      COMMON /CNTRL/ IDBCH,NCASE,NFLOG,BTTL(9),NTIN,NTOUT,NTPUN,
     1NCHAIN,LIB1,LIB2,LIB3,INT1,INT2,NSC1,LNK(10),NTHCS,NEPCS,KLIB1,
     2KLIB2,KLIB3,DUM1(32),NTHGP,IBNDRY(12),EPCUT,DUM2(45),NCPRN,NCPPT,
     3DUM3(10),NTHRN,NTHPT,NTHPN,DUM4(9),NEPRN,NEPPT,NEPPN,NEPSG,NEPAG,
     4DUM5(19),NEDRN,NEDPT,NEDPN,NEDNB,NEDFW,NEDRB,NEDAX,NEDNU,DUM6(16)
      COMMON /LIMP/ IDENT,NX,MX,NRX,ISOX,ISOXE,NGEOM,NP1B1,NBCT,NXP,
     1BSQD,HOL(9),NPT(20),THT(20),MXAS(20),ILHI(20),NRBP(20),DEGC(20),
     2WSTBA(18),WSTBB(18),CONCTA(18,10),LIMT(10),RIN(20),RAD(20),
     3ROUT(20),VOL(20),MTBL(20),REGV(20),FISD(20),HOLID(3,18),DUM7(40)
      COMMON ID,HOLA(9),BALT(18,4,5),FOIL(20,4,5),FOGX(4,6),
     1FOX(20,4),DUMB(20),OTGC(5),OTGA(30,6),DUM20(21)
      COMMON GRP(20),SOR(20),T(20,20),XT(20),V1(20),V2(20),V3(20)
     1,V4(20),V5(20),CP(20),CN(20),CP2(20),CN2(20),Y(21),DUM21(2839)
      DIMENSION DZ(18),DATA(165),F1(20),T1(20),F2(20),TO(20),S2(20),
     1QO(20),Q1(20),FX(20),CT(18,10)
      EQUIVALENCE(GRP(1),DZ(1),DATA(1)),(XT(1),F1(1),T1(1)),
     1(V1(1),F2(1),TO(1)),(V2(1),S2(1),QO(1)),(V3(1),Q1(1))
      COMMON IX,SIGY(18,54),GNU(18,54),SIGA(18,54),P(18,54),PF(18,54),
     1F(20,54),DEL(54),FS(54),SSC(10),S1(10),SIGABS(10),SIGIN(10),
     2SIGX(10),C(10),AN(10),SD(10),PROB(25,10),NRIG(18),
     3ER(200),GMN(200),GMGM(200),GMF(200),SPIN(200),AMASS(18),
     4SIGP(18),JONE(18),JTWO(18),DZERO(18),DONE(18),DTWO(18),ETA(20),
     5Q(20),ESC,MDONE(18),KEY,MCURR,PZ(1001),PZ1(1001),DELSIG,A1(18),
     6EBK(55),TEMP(18),SIGEFY(18),NDONE,NLIB
      EQUIVALENCE (FX(1),FISD(1)),(CT(1,1),CONCTA(1,1)),(LIB2,NLIB2)
      ITCNT=0
      XNORM=0.
      DO9999N=1,NX
      XNORM=XNORM+SOR(N)*VOL(N)
      M=MTBL(N)
      Q1(N)=(SSC(M)-S1(M)+SIGIN(M)+SIGABS(M)-GRP(N))*VOL(N)
 9999 CONTINUE
      IF(IG-1) 5,1,5
 1    ITMX=0
      RMX=1.
      IGI=1
      IGR=1
      EPSF=0.1
      ITMAX=100
      EPS=1.E-3
      DO 3 N=1,NX
 3    F1(N)=SOR(N)
      GO TO 20
 5    DO 6 N=1,NX
 6    F1(N)=F(N,IG-1)
 20   RNORM=0.0
      DO 30 N=1,NX
 30   RNORM=RNORM+Q1(N)*F1(N)
      RNORM=XNORM/RNORM
      DO 40 N=1,NX
      F1(N)=F1(N)*RNORM
      S2(N)=SOR(N)+F1(N)*GRP(N)
   40 CONTINUE
 45   RNORM=0.0
      DO  53 N=1,NX
      F2(N)=0.0
      DO 50 M=1,NX
 50   F2(N)=F2(N)+T(N,M)*S2(M)
 53   RNORM=RNORM+Q1(N)*F2(N)
      RNORM=XNORM/RNORM
      DO 55 N=1,NX
 55   F2(N)=F2(N)*RNORM
      DO 60 N=1,NX
      IF(ABS((F1(N)-F2(N))/F2(N))-EPS) 60,60,70
 60   CONTINUE
      GO TO 90
 70   DO 80 N=1,NX
      S2(N)=SOR(N)+F2(N)*GRP(N)
      F1(N)=F2(N)
   80 CONTINUE
      ITCNT=ITCNT+1
      IF(ITCNT-ITMAX) 45,90,90
   90 IF(ITCNT-ITMX)92,92,91
   91 ITMX=ITCNT
      IGI=IG
   92 IF(ABS(RNORM-1.)-ABS(RMX-1.))94,94,93
   93 RMX=RNORM
      IGR=IG
   94 CONTINUE
      DO100N=1,NX
  100 F(N,IG)=F2(N)
      KEY=0
 105  IF(NX-1) 125,125,110
  110 DO120N=2,NX
      IF(ABS(F2(N)/F2(1)-1.)-EPSF)120,120,130
  120 CONTINUE
 125  KEY=1
  130 DO140I=1,ISOX
      SIGEFY(I)=0.
  140 MDONE(I)=0
      MCURR=0
      NDONE=0
      REWINDNSC1
  150 IF(54-IG)152,151,152
  151 WRITE(NTOUT,160)ITMX,IGI,RMX,IGR
  160 FORMAT(59H0MAXIMUM ITERATIONS ON THE  FLUX SHAPE IN ANY MACRO GROU
     1P = ,I5,6H GROUP,I2/39H MAXIMUM RENORMALIZATION IN ANY GROUP = ,
     1F9.5,6H GROUP,I2)
  152 RETURN
      END
      SUBROUTINE CLAPS(IG)
CCLAPSCOLLAPSE MANY REGION CROSS SECTIONS
      COMMON /CNTRL/ IDBCH,NCASE,NFLOG,BTTL(9),NTIN,NTOUT,NTPUN,
     1NCHAIN,LIB1,LIB2,LIB3,INT1,INT2,NSC1,LNK(10),NTHCS,NEPCS,KLIB1,
     2KLIB2,KLIB3,DUM1(32),NTHGP,IBNDRY(12),EPCUT,DUM2(45),NCPRN,NCPPT,
     3DUM3(10),NTHRN,NTHPT,NTHPN,DUM4(9),NEPRN,NEPPT,NEPPN,NEPSG,NEPAG,
     4DUM5(19),NEDRN,NEDPT,NEDPN,NEDNB,NEDFW,NEDRB,NEDAX,NEDNU,DUM6(16)
      COMMON /LIMP/ IDENT,NX,MX,NRX,ISOX,ISOXE,NGEOM,NP1B1,NBCT,NXP,
     1BSQD,HOL(9),NPT(20),THT(20),MXAS(20),ILHI(20),NRBP(20),DEGC(20),
     2WSTBA(18),WSTBB(18),CONCTA(18,10),LIMT(10),RIN(20),RAD(20),
     3ROUT(20),VOL(20),MTBL(20),REGV(20),FISD(20),HOLID(3,18),DUM7(40)
      COMMON ID,HOLA(9),BALT(18,4,5),FOIL(20,4,5),FOGX(4,6),
     1FOX(20,4),DUMB(20),OTGC(5),OTGA(30,6),DUM20(21)
      COMMON GRP(20),SOR(20),T(20,20),XT(20),V1(20),V2(20),V3(20)
     1,V4(20),V5(20),CP(20),CN(20),CP2(20),CN2(20),Y(21),DUM21(2839)
      COMMON IX,SIGY(18,54),GNU(18,54),SIGA(18,54),P(18,54),PF(18,54),
     1F(20,54),DEL(54),FS(54),SSC(10),S1(10),SIGABS(10),SIGIN(10),
     2SIGX(10),C(10),AN(10),SD(10),PROB(25,10),NRIG(18),
     3ER(200),GMN(200),GMGM(200),GMF(200),SPIN(200),AMASS(18),
     4SIGP(18),JONE(18),JTWO(18),DZERO(18),DONE(18),DTWO(18),ETA(20),
     5Q(20),ESC,MDONE(18),KEY,MCURR,PZ(1001),PZ1(1001),DELSIG,A1(18),
     6EBK(55),TEMP(18),SIGEFY(18),NDONE,NLIB,THFLX(630),ANH(10),SDH(10),
     7S1H(10),CAY1(54),CAY2(54),CAY3(54),CAY4(54),CAY5(54),CAY6(54),
     8CAY7(54),A11(54),A22(54),PROX(325),D(54),PS(18,54),OSE0(18,54),
     9OS0(18,54),OS1(18,54),OXS0(18,54),XL(18,54),DUM50(506)
      COMMON/CLSL/SIGTT(54),GT(54)
      FLX=0.
      DELTA1=NEPSG
      DELTA2=NEPAG
      B1=NP1B1
      H=0.
      G=0.
      SH=0.
      SHL=0.0
      SHX=0.0
      SH1=0.0
      FLAMDA=0.
      EMM=0.
      SIGT=0.
      DO10N=1,NX
      M=MTBL(N)
      FLX1=F(N,IG)*VOL(N)
      H=H+(SIGABS(M)+SIGIN(M))*FLX1
      IF(IG.LE.25)H=H-PROB(IG,M)*FLX1
      SIGT=SIGT+(SIGABS(M)+SIGIN(M)+SSC(M))*FLX1
      SH=SH+C(M)*FLX1
      SHL=SHL+ANH(M)*FLX1
      SHX=SHX+SDH(M)*FLX1
      SH1=SH1+S1H(M)*FLX1
      FLAMDA=FLAMDA+AN(M)*FLX1
      EMM=EMM+SD(M)*FLX1
      FLX=FLX+FLX1
   10 G=G+S1(M)*FLX1
      H=H/FLX
      SIGT=SIGT/FLX
      SIGTT(IG)=SIGT
      SH=SH/FLX
      IF(SHX)14,14,12
   12 SHL=SHL/SHX
      SHX=SHX/FLX
      SH1=SH1/FLX
   14 G=G/FLX
      GT(IG)=G
      FLAMDA=FLAMDA/EMM*DELTA2
   20 EMM=EMM/FLX
      CAY1(IG)=SHX/(SHL+0.5*DEL(IG))
      CAY2(IG)=EMM/(FLAMDA+0.5*DEL(IG))
      CAY3(IG)=(SHL-0.5*DEL(IG))/(SHL+0.5*DEL(IG))
      CAY4(IG)=(FLAMDA-0.5*DEL(IG))/(FLAMDA+0.5*DEL(IG))
      CAY5(IG)=1.5*SH1/(DELTA1+0.75*DEL(IG))
      CAY6(IG)=3.0*DELTA1/(DELTA1+0.75*DEL(IG))
      CAY7(IG)=(DELTA1-0.75*DEL(IG))/(DELTA1+0.75*DEL(IG))
      A11(IG)=H+CAY1(IG)+CAY2(IG)
      IF(NP1B1) 30, 30, 40
   30 GA=1.0
      GO TO 70
   40 IF(BSQD)1211,1211,1212
 1211 EPSLON=-1.
      GOTO1213
 1212 EPSLON=1.
 1213 B=SQRT(ABS(BSQD))
      X=B/SIGT
      X2=X*X*EPSLON
      IF(X-0.2)212,212,214
  212 A0=1.0+X2*(-0.33333333+X2*(0.2-X2*0.14285714))
      A2=0.33333333+X2*(-0.2+X2*(0.14285714-X2*0.11111111))
      GOTO216
  214 IF(BSQD)1215,1215,1214
 1214 A0=ATAN (X)/X
      GO TO1216
 1215 A0=0.5*ALOG((1.+X)/(1.-X))/X
 1216 A2=(1.-A0)/X2
  216 GA=A0/(3.0*A2)
   70 G=GA*SIGT-G
      A22(IG)=3.0*G+2.0*CAY5(IG)*DELTA1
      D(IG)=A11(IG)*A22(IG)+BSQD
      IF(IG-25)80,80,110
   80 IF(IG.GT.1)GOTO85
      PROX(1)=0.
      GOTO110
   85 IGX=IG-1
      DO 100 I=1,IGX
      LOC=(IG*(IG-1))/2+I
      PROX(LOC)=0.
      FLX=0.
      DO90N=1,NX
      M=MTBL(N)
      FLX1=F(N,I)*VOL(N)
      PROX(LOC)=PROX(LOC)+PROB(I,M)*FLX1
   90 FLX=FLX+FLX1
  100 PROX(LOC)=PROX(LOC)/FLX
      PROX(LOC+1)=0.
  110 CONTINUE
      RETURN
      END
      SUBROUTINE KEFC(FOGX,BMSQ,EIGEN,BGUES,EIGUES,FASY)
CKEFC
CKEFC  ======HAMMER===BNL-SRL LATTICE ANALYSIS PROGRAM============HAMLET
      DIMENSION FOGX(4,6),FASY(4),CHI(4)
   10 CHI(1)=FOGX(1,6)
      CHI(2)=FOGX(2,6)
      CHI(3)=FOGX(3,6)
      AL2=FOGX(1,4)/(FOGX(2,2)+FOGX(2,4))
      AL3=FOGX(2,4)/(FOGX(3,2)+FOGX(3,4))
      AL4=FOGX(3,4)/FOGX(4,2)
      B1=CHI(1)/(FOGX(1,2)+FOGX(1,4))
      B2=CHI(2)/(FOGX(2,2)+FOGX(2,4))
      B3=CHI(3)/(FOGX(3,2)+FOGX(3,4))
      C=FOGX(2,3)+AL3*(FOGX(3,3)+AL4*FOGX(4,3))
      EIGEN=B1*(FOGX(1,3)+C*AL2)+C*B2+B3*(FOGX(3,3)+AL4*FOGX(4,3))
      BS=BGUES
      KEY=0
   20 AL2=FOGX(1,4)/(FOGX(2,2)+FOGX(2,4)+BS*FOGX(2,1))
      AL3=FOGX(2,4)/(FOGX(3,2)+FOGX(3,4)+BS*FOGX(3,1))
      AL4=FOGX(3,4)/(FOGX(4,2)+BS*FOGX(4,1))
      B1=CHI(1)/(FOGX(1,2)+FOGX(1,4)+BS*FOGX(1,1))
      B2=CHI(2)/(FOGX(2,2)+FOGX(2,4)+BS*FOGX(2,1))
      B3=CHI(3)/(FOGX(3,2)+FOGX(3,4)+BS*FOGX(3,1))
      C=FOGX(2,3)+AL3*(FOGX(3,3)+AL4*FOGX(4,3))
      AK=B1*(FOGX(1,3)+C*AL2)+C*B2+B3*(FOGX(3,3)+AL4*FOGX(4,3))
      IF(KEY)30,30,40
   30 KEY=1
      EIGUES=AK
C**CHANGES MADE HERE TO AVOID A DIVIDE BY ZERO IF
C**         THE INPUT BUCKLING IS VERY SMALL ** FBB 5/6/79**
      IF(AK)50,50,31
   31 IF(ABS(EIGEN/AK-1.) .GT. 1.E-5) GO TO 35
      BS=SIGN( 1.E-5, EIGEN-1. )
      GO TO 36
   35 BS=(EIGEN-1.)/(EIGEN/AK-1.)*BS
   36 N=1
      DBS=1.0E-5
      CALL EXTRAP(BS,DBS,AK,1.E-5,DKDB,N)
      GOTO20
   40 N=2
      CALL EXTRAP(BS,DBS,AK,1.0E-5,DKDB,N)
      IF(N-1)50,50,20
   50 FASY(1)=B1
      FASY(2)=B2+AL2*FASY(1)
      FASY(3)=B3+AL3*FASY(2)
      FASY(4)=AL4*FASY(3)
      BMSQ=BS
      RETURN
      END
      SUBROUTINE EXTRAP(AKAP,DKAP,VAL,EPSV,SLOPE,N)
CEXTRAP
 10   GOTO(20,680),N
 20   VALA=0.
      VALB=0.
      VALC=0.
      AKAPB=0.
      AKAPC=0.
      INTA=0
      AKAPA=AKAP
 25   N=2
 30   RETURN
 680  VALA=VAL-1.
      IF(INTA)1180,1110,1180
 1110 IF(VALB)1130,1120,1130
 1120 VALB=VALA
      AKAPB=AKAPA
      AKAP=AKAP+DKAP
      GOTO1100
 1130 IF((VALA/VALB)-1.)1150,1150,1140
 1140 DKAP=-DKAP
      AKAP=AKAP+2.*DKAP
      GOTO1100
 1150 IF(VALA/VALB)1170,1160,1160
 1160 VALC=VALB
      VALB=VALA
      AKAPC=AKAPB
      AKAPB=AKAPA
      AKAP=AKAP+DKAP
      GOTO1100
 1170 INTA=1
 1180 IF(VALA/VALB)1190,1190,1200
 1190 VALC=VALA
      AKAPC=AKAPA
      GOTO1220
 1200 IF(VALA/VALC)1210,1210,1220
 1210 VALB=VALA
      AKAPB=AKAPA
 1220 SLOPE=(VALC-VALB)/(AKAPC-AKAPB)
      IF(ABS(VALA)-EPSV)1240,1240,1230
 1230 AKAP=AKAPC-(VALC/SLOPE)
      GOTO1100
 1240 CONTINUE
      N=1
      GOTO30
 1100 AKAPA=AKAP
      GOTO25
      END
      SUBROUTINE SCALC(SIGM,SGM1,SGM2)
CSCALC
      COMMON /CNTRL/ DUMY1(13),NINP,DUMY3,NOUT,DUMY2(184)
      COMMON DUMY(1100)
      COMMON MMSH,MIBV,NPG,SLABT,CYLT,HEAD,TEMP,IGEOM,ABAR,C,S,AZERO,
     1SIGPZ,G,NRR,IABS,DZERO,AMOD1,SIGM1,IMOD1,AMOD2,SIGM2,IMOD2,
     2EZERO(1),GAMN(1),GMGM(1),GFG(1),R(1),GAMMA(1),EONE(1),EPSIL(1),
     3SIGOH(1),XI(1),MESH(1),ALPHA(3),TERM(3),IVAL(3),BVAL(1001,3),
     4SIGAZ(5),SIGSZ(5),F(5),AMU(5),SUB(5),I,DINK,SPIN(1),RI(1),DRI(1),
     5TAPS(1),RBAR,S2,S3,S4,T1,T2,T3,T4
  500 SIGM=SGM1+SGM2+DINK/DZERO
  520 RETURN
      END
      SUBROUTINE GAMINC(X1,FR)
CGAMINC
C     CALCULATE INCOMPLETE GAMMA-FUNCTION , G(A,X)  FOR A=0.5)
      C=0.0
      EX=1.0
      SUM=1.0
      DO 20 K=1,20
      DO 15 J=1,5
      C=C+1.0
      EX=-X1*EX/C
      TERM=EX/(2.0*C+1.0)
   15 SUM=SUM+TERM
      IF(ABS(TERM/SUM)-1.0E-5)22,22,20
   20 CONTINUE
   22 FR=2.0*SQRT(X1)*SUM
      FR=1.7724539-FR
      RETURN
      END
      SUBROUTINE SIMPS(A,B,FUNC,ANS,ERR)
CSIMPS
      NDIV=1
      PREV = 0.0
      SONE=(B-A)*(FUNC(A)+FUNC(B))/2.
   10 NDIV=2*NDIV
      STWO=0.0
      DEL=(B-A)/FLOAT(NDIV)
      DO 20 I=1,NDIV,2
      X=A+DEL*FLOAT(I)
      STWO=STWO+FUNC(X)
   20 CONTINUE
      CUR=SONE+4.*DEL*STWO
      IF (ERR*ABS(CUR)-ABS(CUR-PREV)) 30,40,40
   30 PREV=CUR
      SONE=(SONE+CUR)/4.
      GO TO 10
   40 ANS=CUR/3.
      RETURN
      END
      FUNCTION SAMPS(IS,NPTS,BVAL)
CSAMPS
C     /SIMPSONS RULE/
      DIMENSION BVAL(1)
C
      GO TO (1,3),IS
    1  IF(JFK-1)21,21,31
   21 JFK=7
      NEX=NPTS
      NST=NPTS-1
      LRQ=-1
      BUD=BVAL(NPTS)
       SAV1=0.0
       SAV2=0.0
      DO 14 JS=2,NPTS,2
   14 SAV1=SAV1+BVAL(JS)
       DO 15 JS=3,NPTS,2
   15 SAV2=SAV2+BVAL(JS)
   17 SAMPS=(2.0*SAV2+4.0*SAV1-BUD)/3.0
      RETURN
   31 LRQ=LRQ+1
      LRT=LRQ+1
      JIM=NEX-MOD(LRQ,NST)
      LRT=NEX-MOD(LRT,NST)
      SAS=SAV2-BVAL(JIM)+BVAL(1)
      BVAL(JIM)=BVAL(1)
      BUD=BVAL(LRT)
      SAT=SAV1
      SAV1=SAS
      SAV2=SAT
       GO TO 17
C
    3 JFK=0
      RETURN
      END
      FUNCTION SEMPS(IS,NPTS,BVAL)
CSEMPS
C     /SIMPSONS RULE/
      DIMENSION BVAL(1)
C
      GO TO (1,3),IS
    1  IF(JFK-1)21,21,31
   21 JFK=7
      NEX=NPTS
      NST=NPTS-1
      LRQ=-1
      BUD=BVAL(NPTS)
       SAV1=0.0
       SAV2=0.0
      DO 14 JS=2,NPTS,2
   14 SAV1=SAV1+BVAL(JS)
       DO 15 JS=3,NPTS,2
   15 SAV2=SAV2+BVAL(JS)
   17 SEMPS=(2.0*SAV2+4.0*SAV1-BUD)/3.0
      RETURN
   31 LRQ=LRQ+1
      LRT=LRQ+1
      JIM=NEX -MOD(LRQ,NST)
      LRT=NEX-MOD(LRT,NST)
      SAS=SAV2-BVAL(JIM)+BVAL(1)
      BVAL(JIM)=BVAL(1)
      BUD=BVAL(LRT)
      SAT=SAV1
      SAV1=SAS
      SAV2=SAT
       GO TO 17
C
    3 JFK=0
      RETURN
      END
      FUNCTION SOMPS(IS,NPTS,BVAL)
C     /SIMPSONS RULE/
      DIMENSION BVAL(1)
C
      GO TO (1,3),IS
    1  IF(JFK-1)21,21,31
   21 JFK=7
      NEX=NPTS
      NST=NPTS-1
      LRQ=-1
      BUD=BVAL(NPTS)
       SAV1=0.0
       SAV2=0.0
      DO 14 JS=2,NPTS,2
   14 SAV1=SAV1+BVAL(JS)
       DO 15 JS=3,NPTS,2
   15 SAV2=SAV2+BVAL(JS)
   17 SOMPS=(2.0*SAV2+4.0*SAV1-BUD)/3.0
      RETURN
   31 LRQ=LRQ+1
      LRT=LRQ+1
      JIM=NEX-MOD(LRQ,NST)
      LRT=NEX-MOD(LRT,NST)
      SAS=SAV2-BVAL(JIM)+BVAL(1)
      BVAL(JIM)=BVAL(1)
      BUD=BVAL(LRT)
      SAT=SAV1
      SAV1=SAS
      SAV2=SAT
       GO TO 17
C
    3 JFK=0
      RETURN
      END
      FUNCTION TXI(L)
C
      DIMENSION XI(23)
C
      DATA XI( 1)/0.0/
      DATA XI( 2)/0.005/
      DATA XI( 3)/0.010/
      DATA XI( 4)/0.015/
      DATA XI( 5)/0.02/
      DATA XI( 6)/0.03/
      DATA XI( 7)/0.04/
      DATA XI( 8)/0.05/
      DATA XI( 9)/0.10/
      DATA XI(10)/0.15/
      DATA XI(11)/0.20/
      DATA XI(12)/0.25/
      DATA XI(13)/0.30/
      DATA XI(14)/0.35/
      DATA XI(15)/0.40/
      DATA XI(16)/0.45/
      DATA XI(17)/0.50/
      DATA XI(18)/0.60/
      DATA XI(19)/0.70/
      DATA XI(20)/0.80/
      DATA XI(21)/0.90/
      DATA XI(22)/1.00/
      DATA XI(23)/1.E10/
C
      TXI=XI(L)
C
      RETURN
      END
      FUNCTION TK(J)
      DIMENSION ZK(44)
C
      DATA ZK(1)/4.0/
      DATA ZK(2)/4.5/
      DATA ZK(3)/5.0/
      DATA ZK( 4)/ 5.5/
      DATA ZK( 5)/ 6.0/
      DATA ZK( 6)/ 6.5/
      DATA ZK( 7)/ 7.0/
      DATA ZK( 8)/ 7.5/
      DATA ZK( 9)/ 8.0/
      DATA ZK(10)/ 8.5/
      DATA ZK(11)/ 9.0/
      DATA ZK(12)/ 9.5/
      DATA ZK(13)/10.0/
      DATA ZK(14)/10.5/
      DATA ZK(15)/11.0/
      DATA ZK(16)/11.5/
      DATA ZK(17)/12.0/
      DATA ZK(18)/12.5/
      DATA ZK(19)/13.0/
      DATA ZK(20)/13.5/
      DATA ZK(21)/14.0/
      DATA ZK(22)/14.5/
      DATA ZK(23)/15.0/
      DATA ZK(24)/15.5/
      DATA ZK(25)/16.0/
      DATA ZK(26)/16.5/
      DATA ZK(27)/17.0/
      DATA ZK(28)/17.5/
      DATA ZK(29)/18.0/
      DATA ZK(30)/18.5/
      DATA ZK(31)/19.0/
      DATA ZK(32)/19.5/
      DATA ZK(33)/20.0/
      DATA ZK(34)/21.0/
      DATA ZK(35)/22.0/
      DATA ZK(36)/23.0/
      DATA ZK(37)/24.0/
      DATA ZK(38)/25.0/
      DATA ZK(39)/26.0/
      DATA ZK(40)/27.0/
      DATA ZK(41)/28.0/
      DATA ZK(42)/29.0/
      DATA ZK(43)/30.0/
      DATA ZK(44)/31.0/
      TK=ZK(J)
      RETURN
      END
      SUBROUTINE FLOUT
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* FLOUT  *   HAMMER   VERSION /04-77/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      COMMON /CNTRL/ IDBCH,NCASE,NFLOG,BTTL(9),NTIN,NTOUT,NTPUN,
     1NCHAIN,LIB1,LIB2,LIB3,INT1,INT2,NSC1,LNK(10),NTHCS,NEPCS,KLIB1,
     2KLIB2,KLIB3,DUM1(32),NTHGP,IBNDRY(12),EPCUT,DUM2(45),NCPRN,NCPPT,
     3DUM3(10),NTHRN,NTHPT,NTHPN,DUM4(9),NEPRN,NEPPT,NEPPN,NEPSG,NEPAG,
     4DUM5(19),NEDRN,NEDPT,NEDPN,NEDNB,NEDFW,NEDRB,NEDAX,NEDNU,DUM6(16)
      COMMON /LIMP/ IDENT,NX,MX,NRX,ISOX,ISOXE,NGEOM,NP1B1,NBCT,NXP,
     1BSQD,HOL(9),NPT(20),THT(20),MXAS(20),ILHI(20),NRBP(20),DEGC(20),
     2WSTBA(18),WSTBB(18),CONCTA(18,10),LIMT(10),RIN(20),RAD(20),
     3ROUT(20),VOL(20),MTBL(20),REGV(20),FISD(20),HOLID(3,18),DUM7(40)
      COMMON ID,HOLA(9),BALT(18,4,5),FOIL(20,4,5),FOGX(4,6),
     1FOX(20,4),DUMB(20),OTGC(5),OTGA(30,6),DUM20(21)
      COMMONGNRFP(18,54),GNFRCP(18,54),SIGA(54),T(54),S(54),PA(54),PF(54
     1),F(54),GAMMA(54),Q(54),AMBDA(54),ETA(54),RHO(54),A(54),NGR(3),
     2DUM31(20),NED(1),BETTA(20),AMB(20),XY(20),UPSLN(20),SA(20),SX(20),
     3GNUSX(20),P(20),TAU(20),GAMM(20,3),D(20,3),SR(20,3),ALPH(20),
     4DUM38(444),NBP(20,3)
      COMMONIX,ES(18,54),TEE(18,54),BA(18,54),RCP(18,54),RFCP(18,54),FX(
     120,54),DEL(54),X(54),DUM40(3648),NLIB,THFLX(630)
      DIMENSION THFL(20,30)
      DIMENSION LMP(600),LOUT(1100)
      EQUIVALENCE (IDENT,LMP(1)),(ID,LOUT(1))
      CHARACTER*4 BLNK
      DATA BLNK/'    '/
   10 DO30N=1,NX,10
      NUP=MIN0(NX,N+9)
      WRITE(NTOUT,31)IDENT,HOL
      WRITE(NTOUT,15)(N1,N1=N,NUP)
      DO20IG=1,IX
   20 WRITE(NTOUT,17)IG,(FX(N1,IG),N1=N,NUP)
   30 CONTINUE
      WRITE(NTOUT,31)IDENT,HOL
      WRITE(NTOUT,21)
      DO50N=1,NX ,10
      NUP=MIN0(NX ,N+9)
      WRITE(NTOUT,19)(BLNK,N1,N1=N,NUP)
      DO40IG=1,4
   40 WRITE(NTOUT,17)IG,(FOX(N1,IG),N1=N,NUP)
   50 CONTINUE
   60 IF(NTHRN)80,80,170
   70 WRITE (LIB3) (LMP(I),I=1,600),(LOUT(I),I=1,1100),THFLX,FX,F
      LMP(1)=-1
      WRITE (LIB3) (LMP(I),I=1,600),(LOUT(I),I=1,1100),THFLX,FX,F
      BACKSPACE LIB3
   80 RETURN
  170 Z= FOGX(3,4)*GAMM(3,3)
      DO 180 JJ=1,600
  180 THFLX(JJ)=THFLX(JJ)*Z
      JJ=0
      DO200IG=1,30
      DO190N=1,20
  190 THFL(N,IG)=THFLX(JJ+N)
  200 JJ=JJ+20
  100 DO130N=1,NX,10
      NUP=MIN0(NX,N+9)
      WRITE(NTOUT,15)(N1,N1=N,NUP)
      DO120IG=1,30
  120 WRITE(NTOUT,17)IG,(THFL(N1,IG),N1=N,NUP)
  130 CONTINUE
      GOTO70
   15 FORMAT(27H0LEAKAGE CORRECTED SPECTRUM/6H GROUP,10(5H   PT,I3,3X))
   17 FORMAT(I5,1P10E11.4)
   19 FORMAT(6H0GROUP,10(A3,2HPT,I3,3X))
   21 FORMAT(17H0FEW GROUP FLUXES)
   31 FORMAT(5H1CASE,I6,7X,9A4   )
      END
      SUBROUTINE LINK12
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* LINK12 *   HAMMER   VERSION /04-77/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      COMMON /CNTRL/ IDBCH,NCASE,NFLOG,BTTL(9),NTIN,NTOUT,NTPUN,
     1NCHAIN,LIB1,LIB2,LIB3,INT1,INT2,NSC1,LNK(10),NTHCS,NEPCS,KLIB1,
     2KLIB2,KLIB3,DUM1(32),NTHGP,IBNDRY(12),EPCUT,DUM2(45),NCPRN,NCPPT,
     3DUM3(10),NTHRN,NTHPT,NTHPN,DUM4(9),NEPRN,NEPPT,NEPPN,NEPSG,NEPAG,
     4DUM5(19),NEDRN,NEDPT,NEDPN,NEDNB,NEDFW,NEDRB,NEDAX,NEDNU,DUM6(16)
      COMMON /LIMP/ IDENT,NX,MX,NRX,ISOX,ISOXE,NGEOM,NP1B1,NBCT,NXP,
     1BSQD,HOL(9),NPT(20),THT(20),MXAS(20),ILHI(20),NRBP(20),DEGC(20),
     2WSTBA(18),WSTBB(18),CONCTA(18,10),LIMT(10),RIN(20),RAD(20),
     3ROUT(20),VOL(20),MTBL(20),REGV(20),FISD(20),HOLID(3,18),DUM7(40)
      COMMON ID,HOLA(9),BALT(18,4,5),FOIL(20,4,5),FOGX(4,6),
     1FOX(20,4),DUMB(20),OTGC(5),OTGA(30,6),DUM20(21)
      DIMENSION FT(630), FH(1134)
      REAL*8 DAT(2)
      COMMON DUMMY(22161)
      EQUIVALENCE (IDENT,LMP(1)),(ID,LOUT(1))
      DIMENSION  LMP(600),LOUT(1100)
C * *
C * * LATTICE LIBRARY TAPE EDIT
C * *
      IP=NEDPT
      CALL TIMEX(1)
   10 REWIND LIB3
CE    CALL ZA09AS(DAT(1))
CE    CALL ZA08AS(DAT(2))
      WRITE(NTOUT,20) DAT, IP
      NN=0
      IF(NEDPN)24,24,23
   23 CONTINUE
   24 IF(NEDRN-3)30,25,25
   25 LNK(5)=1
   30 READ(LIB3)(LMP(I),I=1,600),(LOUT(I),I=1,1100),
     1(FT(I),I=1,630),(FH(I),I=1,1134)
      IF(IDENT)50,50,40
   40 CALL LLED
      NN=NN+1
      GOTO30
   50 WRITE(NTOUT,60)NN
  100 CONTINUE
      IF(NEDPN)300,300,200
  200 STOP
  300 REWIND LIB3
      CALL TIMEX(2)
      RETURN
   20 FORMAT(15H1*HAMMER* EDIT2/34H0LISTING OF LATTICE LIBRARY AS OF ,
     1 7HRUN ON ,A8 ,4H AT ,A8 ,3X/12H0EDIT OPTION, I3)
   60 FORMAT(17H1LIBRARY CONTAINS,I5,9H LATTICES)
      END
      SUBROUTINE LLED
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* LLED   *   HAMMER   VERSION /04-77/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      COMMON /CNTRL/ IDBCH,NCASE,NFLOG,BTTL(9),NTIN,NTOUT,NTPUN,
     1NCHAIN,LIB1,LIB2,LIB3,INT1,INT2,NSC1,LNK(10),NTHCS,NEPCS,KLIB1,
     2KLIB2,KLIB3,DUM1(32),NTHGP,IBNDRY(12),EPCUT,DUM2(45),NCPRN,NCPPT,
     3DUM3(10),NTHRN,NTHPT,NTHPN,DUM4(9),NEPRN,NEPPT,NEPPN,NEPSG,NEPAG,
     4DUM5(19),NEDRN,NEDPT,NEDPN,NEDNB,NEDFW,NEDRB,NEDAX,NEDNU,DUM6(16)
      COMMON /LIMP/ IDENT,NX,MX,NRX,ISOX,ISOXE,NGEOM,NP1B1,NBCT,NXP,
     1BSQD,HOL(9),NPT(20),THT(20),MXAS(20),ILHI(20),NRBP(20),DEGC(20),
     2WSTBA(18),WSTBB(18),CONCTA(18,10),LIMT(10),RIN(20),RAD(20),
     3ROUT(20),VOL(20),MTBL(20),REGV(20),FISD(20),HOLID(3,18),DUM7(40)
      COMMON ID,HOLA(9),BALT(18,4,5),FOIL(20,4,5),FOGX(4,6),
     1FOX(20,4),DUMB(20),OTGC(5),OTGA(30,6),DUM20(21)
      DIMENSION XTR(4),XSG(4)
   10 FORMAT(1H1,'LATTICE NUMBER',I5,4X,'RUN ON ',2A4,4X,
     1 'BY  H A M M E R  VERSION/JB-1077/  TECHNION (ISRAEL INSTITUTE OF
     2TECHNOLOGY)',/,1X, 129(1H*))
   20 FORMAT(9H TITLE...,9A4   ,3H...)
   30 FORMAT(17H0THERMOS LIBRARY ,3A4,18H,  HAMLET LIBRARY , 4A4)
   40 FORMAT(25H0MISCELLANEOUS PARAMETERS/16H INPUT BUCKLING=4PF10.5,6H
     1(M-2),26X,4HETA=0PF10.5/16H  THERMAL UTIL.=F10.5,8X,28HFRACT. THER
     2MAL ABS. IN MOD,=F10.5/14X,2HP=F10.5,26X,10HNU*(1-PF)=F10.5/12X,
     34HAGE=F10.5,13X,23HMATERIAL BUCKLING(M-2)=4PF10.5/5X/11H KINFINITY
     4=0PF10.5,7X,29HEIGENVALUE AT INPUT BUCKLING=0PF10.5/
     528H FEW GROUP ASYMPTOTIC FLUXES/6H PHI1=1PE11.4,7H  PHI2=E11.4,7H
     6 PHI3=E11.4,7H  PHI4=E11.4)
   50 FORMAT(48H0FEW GROUP CROSS SECTIONS BY ISOTOPE, ARRAY BALT,13X,4HC
     1ASEI7/69H ISOTOPE GRP  XA(TOT)     XF(TOT)    NU*XF(TOT)   XA(RES)
     2     XF(RES)/13H ------- --- ,5(12H----------  ))
   60 FORMAT(F9.0,I2,1P5E12.4/(I11,1P5E12.4))
   70 FORMAT(48H0AVE FOIL CROSS SECTION BY GROUP AND MESH POINT ,13X,4HC
     1ASEI7/74H   FOIL   POINT    GROUP 1     GROUP 2     GROUP 3     GR
     2OUP 4     FISS/CC/16H -------- ------,5(12H  ----------))
   80 FORMAT(F9.0,I4,3X,1P4E12.4/(I13,3X,1P4E12.4))
   90 FORMAT(49H0FEW GROUP DATA FOR FLOG CALCULATIONS, ARRAY FOGX,12X,4H
     1CASEI7/6H GROUP,5X,'D',11X,'XA',8X,5HNU*XF,9X,'XR',10X,'XF',
     19X,'CHI',9X,'XTR',
     18X'XS(GG)'/101H --------------------------------------------------
     2--------------------------------------------------)
  100 FORMAT(I4,' ',1P8E12.5)
  110 FORMAT(54H0AVERAGE FLUX BY GROUP AND SPACE MESH POINT, ARRAY FOX,7
     1X,4HCASEI7/59H MESH POINT     GROUP 1     GROUP 2     GROUP 3
     2GROUP 4/61H ----------    ----------  ----------  ----------  ----
     3------)
  115 FORMAT(I6,1PE19.4,3E12.4)
  120 FORMAT(53H0OVERLAPPING THERMAL GROUP DATA, ARRAYS OTGC AND OTGA,8X
     1,4HCASEI7/10H AVE S(V)=1PE11.4,14H   AVE V*S(V)=E11.4/6H GROUP,5X,
     21HV,6X,9HV*N(V)*DV,4X,5HXA(V),6X,4HD(V),6X,8HNU*XF(V),2X,9HV*X-(V*
     3P)/72H ----- ---------- ---------- ---------- ---------- ---------
     4- ----------)
  130 FORMAT(I4,1PE13.4,5E11.4)
  140 FORMAT(30H0LATTICE INPUT DATA BLOCK LIMP,31X,4HCASEI7/13H MESH POI
     1NTS=I3,11H  MIXTURES=I3,10H  REGIONS=I3,11H  ISOTOPES=I3,8H  FOILS
     2=I3/10H GEOMETRY=I2,16H P1(0) OR B1(1)=I2,13H BOUND.COND.=I2,16H
     3MAT. BUCKLING=1PE11.4)
  150 FORMAT(12H0REGION DATA,49X,4HCASEI7/41H REGION THICKNESS PTS MIX H
     1-L BREAK  TEMP,6X,6HVOLUME,5X,         /55H ------ --------- --- -
     2-- --- ----- -------  ----------)
  160 FORMAT(I5,0PF11.5,3I4,I5,F10.2,1PE12.4)
  170 FORMAT(27H0ISOTOPE CONCENTRATION DATA34X,4HCASEI7/16H ISOTOPE   T/
     1M  ,5(8H MIXTUREI3)/16H -------  ----- ,5(11H ----------))
  175 FORMAT(0PF9.0,F7.0,1P5E11.4)
  180 FORMAT(16H0MESH POINT DATA,45X,4HCASEI7/31H POINT REGION MIXTURE
     1R(INNER),4X,6HR(AVE),6X,8HR(OUTER),4X,6HVOLUME/68H ----- ------ --
     2----- ----------  ----------  ----------  ----------)
  190 FORMAT(I4,2I7,1PE14.4,3E12.4)
      IP=NEDPT
  320 WRITE(NTOUT,10) IDENT, (HOLA(N),N=1,2)
      WRITE(NTOUT,20)HOL
  330 WRITE(NTOUT,30) (HOLA(N),N=3,9)
      WRITE(NTOUT,40)BSQD,(DUMB(N),N=1,13)
  340 WRITE(NTOUT,50)IDENT
      DO 350 I=1,ISOX
  350 WRITE(NTOUT,60)WSTBA(I),(N,(BALT(I,N,M),M=1,5),N=1,4)
      IF(ISOXE.EQ.0) GO TO 361
      WRITE(NTOUT,70)IDENT
      DO 360 J=1,ISOXE
      I=ISOX+J
  360 WRITE(NTOUT,80)WSTBA(I),(M,(FOIL(M,N,J),N=1,4),M=1,NX)
  361 CONTINUE
      WRITE(NTOUT,90)IDENT
      WRITE(NTOUT,90)IDENT
      DO 999 N=1,4
      XTR(N) = 1.0/(3.0*FOGX(N,1))
      XSG(N) = XTR(N) - FOGX(N,2) - FOGX(N,4)
  999 CONTINUE
      WRITE(NTOUT, 100)(N,(FOGX(N,J),J=1,6),XTR(N),XSG(N),
     1N=1,4)
      WRITE(NTOUT,110)IDENT
      WRITE(NTOUT,115)(J,(FOX(J,N),N=1,4),J=1,NX)
  370 WRITE(NTOUT,120)IDENT,OTGC(2),OTGC(3)
      IX=OTGC(1)
      WRITE(NTOUT,130)(I,(OTGA(I,J),J=1,6),I=1,IX)
  380 WRITE(NTOUT,140)IDENT,NX,MX,NRX,ISOX,ISOXE,NGEOM,NP1B1,
     1 NBCT,BSQD
      WRITE(NTOUT,150)IDENT
      WRITE(NTOUT,160)(N,THT(N),NPT(N),MXAS(N),ILHI(N),NRBP(N),
     1DEGC(N),REGV(N),        N=1,NRX)
      MI=1
      MF=5
  400 WRITE(NTOUT,170)IDENT,(M,M=MI,MF)
      WRITE(NTOUT,175)(WSTBA(I),WSTBB(I),(CONCTA(I,M),M=MI,MF),
     1I=1,ISOX)
      IF(MF-MX)410,420,420
  410 MI=MI+5
      MF=MF+5
      GOTO400
  420 CONTINUE
  430 WRITE(NTOUT,180)IDENT
      N=1
      DO 450 M=1,NRX
      KK=NPT(M)
      DO 440 K=1,KK
      WRITE(NTOUT,190)N,M,MXAS(M),RIN(N),RAD(N),ROUT(N),VOL(N)
  440 N=N+1
  450 CONTINUE
  460 RETURN
      END
      SUBROUTINE EDBEN(BALT,BSQD,SR,GAMM,FOGX,WSTBA,ISOX)
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C* EDBEN  * HAMMER   VERSION /JB-1077/ TECHNION-ISRAEL INSTITUTE OF TECH
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      DIMENSION XA(4,2),XF(4,2),FL(4),WB(2),IN(2)
      DIMENSION BALT(18,4,5),SR(20,3),GAMM(20,3),FOGX(4,6),WSTBA(18)
C     USER ROUTINE0 COMPUTES BENCHMARCK INTEGRAL PARAMETERS
C                   RHO-28   D-25   D-28   CON
CE    READ(5,1010,END=999) WB
      READ(55,1010,END=999) WB
      WRITE(6,1020) WB
      DO 10 I=1,ISOX
      IF(WSTBA(I).EQ.WB(1)) IN(1)=I
      IF(WSTBA(I).EQ.WB(2)) IN(2)=I
   10 CONTINUE
      DO 20 I=1,4
      DO 30 J=1,2
      K=IN(J)
      XA(I,J)=BALT(K,I,1)
      XF(I,J)=BALT(K,I,2)
   30 CONTINUE
      IF(I.EQ.4) GOTO 40
      FL(I)=GAMM(I,3)
      GOTO 20
   40 L=I-1
      FL(I)=SR(L,L)*FL(L)/(FOGX(I,2)+FOGX(I,1)*BSQD)
   20 CONTINUE
      WRITE(6,1030) WB
      DO 60 I=1,4
   60 WRITE(6,1040) I,FL(I),XA(I,1),XF(I,1),XA(I,2),XF(I,2)
      X1=0.
      X3=0.
      X4=0.
      DO 80 I=1,4
      X3=X3+XF(I,2)*FL(I)
      X4=X4+XF(I,1)*FL(I)
      IF(I.EQ.4) GOTO 81
      X1=X1+(XA(I,1)-XF(I,1))*FL(I)
      GOTO 80
   81 X2=(XA(I,1)-XF(I,1))*FL(I)
      X5=XF(I,2)*FL(I)
   80 CONTINUE
      R28=X1/X2
      D25=(X3-X5)/X5
      D28=X4/X3
      CON=(X1+X2)/X3
      WRITE(6,1050) R28,D25,D28,CON
 1010 FORMAT(2F10.0)
 1020 FORMAT(1H1,'REACTION  RATES  FOR  ISOTOPES  ',2(F10.0,2X),/,1X,
     1 32(1H*),2X,8(1H*),4X,8(1H*),///)
 1030 FORMAT(3X,'4 BROAD GROUP DATA  ',17X,F10.0,26X,F10.0,/,3X,
     1 20(1H-),20X,7(1H-),29X,7(1H-),//)
 1040 FORMAT(5X,'I=',I2,4X,'FL=',1PE11.4,4X,'XA=',1PE11.4,4X,'XF=',
     1 1PE11.4,4X,'XA=',1PE11.4,4X,'XF=',1PE11.4)
 1050 FORMAT(///1X,85(1H*),/,2X,'R28=',1PE12.5,4X,'D25=',1PE12.5,4X,
     1 'D28=',1PE12.5,4X,'CON=',1PE12.5,/,1X,85(1H*),///)
  999 RETURN
      END
C     SUBROUTINE LINV3F (A,B,IJOB,N,IA,D1,D2,WKAREA,IER)
C
C-LINV3F--------S/D-----LIBRARY 1---------------------------------------
C
C   FUNCTION            - MATRIX DECOMPOSITION, MATRIX INVERSION, LINEAR
C                           EQUATION SOLUTION, AND DETERMINANT
C                           EVALUATION
C   USAGE               - CALL LINV3F(A,B,IJOB,N,IA,D1,D2,WKAREA,IER)
C   PARAMETERS   A      - INPUT/OUTPUT MATRIX OF DIMENSION N BY N. SEE
C                           PARAMETER IJOB.
C                B      - INPUT/OUTPUT VECTOR OF LENGTH N WHEN IJOB =
C                           2 OR 3. ON INPUT, B CONTAINS THE RIGHT-HAND
C                           SIDE OF THE EQUATION AX = B. ON OUTPUT, THE
C                           SOLUTION X REPLACES B. OTHERWISE, B IS NOT
C                           USED.
C                IJOB   - INPUT OPTION PARAMETER. IJOB = I IMPLIES WHEN
C                           I = 1, INVERT MATRIX A. A IS REPLACED BY
C                             ITS INVERSE.
C                           I = 2, SOLVE THE EQUATION AX = B. A IS
C                             REPLACED BY THE LU DECOMPOSITION OF A
C                             ROWWISE PERMUTATION OF A, WHERE U IS
C                             UPPER TRIANGULAR AND L IS LOWER
C                             TRIANGULAR WITH UNIT DIAGONAL.
C                             THE UNIT DIAGONAL OF L IS NOT STORED.
C                           I = 3, SOLVE AX = B AND INVERT MATRIX A.
C                             A IS REPLACED BY ITS INVERSE.
C                           I = 4, COMPUTE THE DETERMINANT OF A.
C                             A IS REPLACED BY THE LU DECOMPOSITION
C                             OF A ROWWISE PERMUTATION OF A.
C                N      - ORDER OF A. (INPUT)
C                IA     - ROW DIMENSION OF A AS SPECIFIED IN THE CALLING
C                           PROGRAM. IA MUST BE GREATER THAN OR EQUAL
C                           TO N.(INPUT)
C                D1,D2  - IF D1 IS NON-NEGATIVE ON INPUT, THEN D1 AND
C                           D2 WILL BE COMPONENTS OF THE DETERMINANT ON
C                           OUTPUT SUCH THAT
C                           DETERMINANT(A) = D1*2**D2.
C                WKAREA - WORK AREA OF LENGTH AT LEAST 2*N WHEN IJOB
C                           = 1 OR 3.
C                         WORK AREA OF LENGTH AT LEAST N WHEN IJOB
C                           = 2 OR 4.
C                IER    - ERROR PARAMETER.
C                         WARNING WITH FIX = 64+N.
C                           N = 1 INDICATES THAT IJOB WAS LESS THAN 1
C                             OR GREATER THAN 4. IJOB IS ASSUMED TO
C                             BE 4.
C                         TERMINAL ERROR = 128+N.
C                           N = 2 INDICATES THAT MATRIX A IS
C                             ALGORITHMICALLY SINGULAR. (SEE THE CHAPTER
C                             L PRELUDE).
C   PRECISION           - SINGLE/DOUBLE
C   REQD. IMSL ROUTINES - LUDATF,LUELMF,UERTST
C   LANGUAGE            - FORTRAN
C-----------------------------------------------------------------------
C   LATEST REVISION     - APRIL 8,1974
C
      SUBROUTINE LINV3F (A,B,IJOB,N,IA,D1,D2,WKAREA,IER)
C
      DIMENSION          A(IA,1),B(1),WKAREA(1)
C*    DIMENSION          KP(2)
C*    DOUBLE PRECISION   A,B,WKAREA,C1,C2,D1,D2,WA,ZERO,ONE,SUM,WJP,C
      DIMENSION NAME(2)
      CHARACTER*4 NAME
C1    EQUIVALENCE        (WJP,KP(1))
      EQUIVALENCE        (WJP,JP)
C1    DATA               ZERO/0.0D0/,ONE/1.D0/
      DATA               ZERO/0.0/,ONE/1.0/
C                                  LU DECOMPOSITION OF A
      CALL LUDATF (A,A,N,IA,0,C1,C2,WKAREA,WKAREA,WA,IER)
      IF (D1 .LT. ZERO .AND. IJOB .GE. 1 .AND. IJOB .LT. 4) GO TO 5
      D1 = C1
      D2 = C2
    5 IF (IER .GE. 128) GO TO 60
      IF (IJOB .LE. 0 .OR. IJOB .GT. 4) GO TO 55
C                                  SOLVE AX = B
      IF (IJOB .EQ. 2 .OR . IJOB .EQ. 3) CALL LUELMF (A,B,WKAREA,N,IA,B)
      IF (IJOB .NE. 1 .AND. IJOB .NE. 3) GO TO 9005
C                                  MATRIX INVERSION
      A(N,N) = ONE/A(N,N)
      NM1 = N-1
      IF (NM1 .LT. 1) GO TO 9005
      DO 40 II=1,NM1
         L = N-II
         M = L+1
         DO 15 I=M,N
            SUM = ZERO
            DO 10 K=M,N
               SUM = SUM-A(I,K)*A(K,L)
   10       CONTINUE
            WKAREA(N+I) = SUM
   15    CONTINUE
         DO 20 I=M,N
            A(I,L) = WKAREA(N+I)
   20    CONTINUE
         DO 30 J=L,N
            SUM = ZERO
            IF (J .EQ. L) SUM = ONE
            DO 25 K=M,N
               SUM = SUM-A(L,K)*A(K,J)
   25       CONTINUE
            WKAREA(N+J) = SUM/A(L,L)
   30    CONTINUE
         DO 35 J=L,N
            A(L,J) = WKAREA(N+J)
   35    CONTINUE
   40 CONTINUE
C                                  PERMUTE COLUMNS OF A INVERSE
      DO 50 I=1,N
         J = N-I+1
C*       IJP = 1
C*       IF (MOD(J,2) .EQ. 0) IJP = 2
C*       L = (J+1)/2
C1       WJP = WKAREA(L)
         WJP = WKAREA(J)
C0       JP = KP(IJP)
         IF (J .EQ. JP) GO TO 50
         DO 45 K=1,N
            C = A(K,JP)
            A(K,JP) = A(K,J)
            A(K,J) = C
   45    CONTINUE
   50 CONTINUE
      GO TO 9005
   55 CONTINUE
C                                  WARNING WITH FIX - IJOB WAS SET
C                                  INCORRECTLY
      IER = 65
      GO TO 9000
C                                  TERMINAL ERROR - MATRIX A IS
C                                  ALGORITHMICALLY SINGULAR
   60 IER = 130
 9000 CONTINUE
CE    DIMENSION NAME(2)
      DATA  NAME/'LINV','3F  '/
      CALL UERTST(IER,NAME)
 9005 RETURN
      END
C     SUBROUTINE LUDATF (A,LU,N,IA,IDGT,D1,D2,IPVT,EQUIL,WA,IER)
C
C-LUDATF--------S/D-----LIBRARY 1---------------------------------------
C
C   FUNCTION            - L-U DECOMPOSITION BY THE CROUT ALGORITHM
C                           WITH OPTIONAL ACCURACY TEST.
C   USAGE               - CALL LUDATF(A,LU,N,IA,IDGT,D1,D2,IPVT,
C                                     EQUIL,WA,IER)
C   PARAMETERS   A      - INPUT MATRIX OF DIMENSION N BY N CONTAINING
C                           THE MATRIX TO BE DECOMPOSED
C                LU     - REAL OUTPUT MATRIX OF DIMENSION N BY N
C                           CONTAINING THE L-U DECOMPOSITION OF A
C                           ROWWISE PERMUTATION OF THE INPUT MATRIX.
C                           FOR A DESCRIPTION OF THE FORMAT OF LU, SEE
C                           EXAMPLE.
C                N      - INPUT SCALAR CONTAINING THE ORDER OF THE
C                           MATRIX A.
C                IA     - INPUT SCALAR CONTAINING THE ROW DIMENSION OF
C                           MATRICES A AND LU IN THE CALLING PROGRAM.
C                IDGT   - INPUT OPTION.
C                           IF IDGT IS GREATER THAN ZERO, THE NON-ZERO
C                           ELEMENTS OF A ARE ASSUMED TO BE CORRECT TO
C                           IDGT DECIMAL PLACES.  LUDATF PERFORMS AN
C                           ACCURACY TEST TO DETERMINE IF THE COMPUTED
C                           DECOMPOSITION IS THE EXACT DECOMPOSITION
C                           OF A MATRIX WHICH DIFFERS FROM THE GIVEN ONE
C                           BY LESS THAN ITS UNCERTAINTY.
C                         IF IDGT IS EQUAL TO ZERO, THE ACCURACY TEST IS
C                           BYPASSED.
C                D1     - OUTPUT SCALAR CONTAINING ONE OF THE TWO
C                           COMPONENTS OF THE DETERMINANT. SEE
C                           DESCRIPTION OF PARAMETER D2, BELOW.
C                D2     - OUTPUT SCALAR CONTAINING ONE OF THE
C                           TWO COMPONENTS OF THE DETERMINANT. THE
C                           DETERMINANT MAY BE EVALUATED AS (D1)(2**D2)
C                IPVT   - OUTPUT VECTOR OF LENGTH N CONTAINING THE
C                           PERMUTATION INDICES. SEE DOCUMENT
C                           (ALGORITHM).
C                EQUIL  - OUTPUT VECTOR OF LENGTH N CONTAINING
C                           RECIPROCALS OF THE ABSOLUTE VALUES OF
C                           THE LARGEST (IN ABSOLUTE VALUE) ELEMENT
C                           IN EACH ROW.
C                WA     - ACCURACY TEST PARAMETER, OUTPUT ONLY IF
C                           IDGT IS GREATER THAN ZERO.
C                           SEE ELEMENT DOCUMENTATION FOR DETAILS.
C                IER    - ERROR PARAMETER
C                         TERMINAL ERROR=128+N
C                           N = 1 INDICATES THAT MATRIX A IS
C                                 ALGORITHMICALLY SINGULAR. (SEE THE
C                                 CHAPTER L PRELUDE).
C                         WARNING ERROR=32+N
C                           N = 2 INDICATES THAT THE ACCURACY TEST
C                                 FAILED.
C                                 THE COMPUTED SOLUTION MAY BE IN ERROR
C                                 BY MORE THAN CAN BE ACCOUNTED FOR BY
C                                 THE UNCERTAINTY OF THE DATA.
C                                 THIS WARNING CAN BE PRODUCED ONLY IF
C                                 IDGT IS GREATER THAN 0 ON INPUT.
C                                 SEE CHAPTER L PRELUDE FOR FURTHER
C                                 DISCUSSION.
C   PRECISION           - SINGLE/DOUBLE
C   REQD. IMSL ROUTINES - UERTST
C   LANGUAGE            - FORTRAN
C-----------------------------------------------------------------------
C   LATEST REVISION     - AUGUST 15, 1973
C
      SUBROUTINE LUDATF (A,LU,N,IA,IDGT,D1,D2,IPVT,EQUIL,WA,IER)
C
      DIMENSION          A(IA,1),LU(IA,1),IPVT(1),EQUIL(1)
C*    DOUBLE PRECISION   A,LU,D1,D2,EQUIL,WA,ZERO,ONE,FOUR,SIXTN,SIXTH,
C1   *                   RN,WREL,BIGA,BIG,P,SUM,AI,WI,T,TEST,Q
      REAL               LU
C*    DATA               ZERO,ONE,FOUR,SIXTN,SIXTH/0.D0,1.D0,4.D0,
C1   *                   16.D0,.0625D0/
      DATA               ZERO,ONE,FOUR,SIXTN,SIXTH/0.0,1.,4.,16.,.0625/
C                                  INITIALIZATION
      IER = 0
      RN = N
      WREL = ZERO
      D1 = ONE
      D2 = ZERO
      BIGA = ZERO
      DO 10 I=1,N
         BIG = ZERO
         DO 5 J=1,N
            P = A(I,J)
            LU(I,J) = P
C1          P = DABS(P)
            P = ABS(P)
            IF (P .GT. BIG) BIG = P
    5    CONTINUE
         IF (BIG .GT. BIGA) BIGA = BIG
         IF (BIG .EQ. ZERO) GO TO 110
         EQUIL(I) = ONE/BIG
   10 CONTINUE
      DO 105 J=1,N
         JM1 = J-1
         IF (JM1 .LT. 1) GO TO 40
C                                  COMPUTE U(I,J), I=1,...,J-1
         DO 35 I=1,JM1
            SUM = LU(I,J)
            IM1 = I-1
            IF (IDGT .EQ. 0) GO TO 25
C                                  WITH ACCURACY TEST
C1          AI = DABS(SUM)
            AI = ABS(SUM)
            WI = ZERO
            IF (IM1 .LT. 1) GO TO 20
            DO 15 K=1,IM1
               T = LU(I,K)*LU(K,J)
               SUM = SUM-T
C1             WI = WI+DABS(T)
               WI = WI+ABS(T)
   15       CONTINUE
            LU(I,J) = SUM
C1 20       WI = WI+DABS(SUM)
   20       WI = WI+ABS(SUM)
            IF (AI .EQ. ZERO) AI = BIGA
            TEST = WI/AI
            IF (TEST .GT. WREL) WREL = TEST
            GO TO 35
C                                  WITHOUT ACCURACY
   25       IF (IM1 .LT. 1) GO TO 35
            DO 30 K=1,IM1
               SUM = SUM-LU(I,K)*LU(K,J)
   30       CONTINUE
            LU(I,J) = SUM
   35    CONTINUE
   40    P = ZERO
C                                  COMPUTE U(J,J) AND L(I,J), I=J+1,...,
         DO 70 I=J,N
            SUM = LU(I,J)
            IF (IDGT .EQ. 0) GO TO 55
C                                  WITH ACCURACY TEST
C1          AI = DABS(SUM)
            AI = ABS(SUM)
            WI = ZERO
            IF (JM1 .LT. 1) GO TO 50
            DO 45 K=1,JM1
               T = LU(I,K)*LU(K,J)
               SUM = SUM-T
C1             WI = WI+DABS(T)
               WI = WI+ABS(T)
   45       CONTINUE
            LU(I,J) = SUM
C1 50       WI = WI+DABS(SUM)
   50       WI = WI+ABS(SUM)
            IF (AI .EQ. ZERO) AI = BIGA
            TEST = WI/AI
            IF (TEST .GT. WREL) WREL = TEST
            GO TO 65
C                                  WITHOUT ACCURACY TEST
   55       IF (JM1 .LT. 1) GO TO 65
            DO 60 K=1,JM1
               SUM = SUM-LU(I,K)*LU(K,J)
   60       CONTINUE
            LU(I,J) = SUM
C1 65       Q = EQUIL(I)*DABS(SUM)
   65       Q = EQUIL(I)*ABS(SUM)
            IF (P .GE. Q) GO TO 70
            P = Q
            IMAX = I
   70    CONTINUE
C                                  TEST FOR ALGORITHMIC SINGULARITY
         IF (RN+P .EQ. RN) GO TO 110
         IF (J .EQ. IMAX) GO TO 80
C                                  INTERCHANGE ROWS J AND IMAX
         D1 = -D1
         DO 75 K=1,N
            P = LU(IMAX,K)
            LU(IMAX,K) = LU(J,K)
            LU(J,K) = P
   75    CONTINUE
         EQUIL(IMAX) = EQUIL(J)
   80    IPVT(J) = IMAX
         D1 = D1*LU(J,J)
C1 85    IF (DABS(D1) .LE. ONE) GO TO 90
   85    IF (ABS(D1) .LE. ONE) GO TO 90
         D1 = D1*SIXTH
         D2 = D2+FOUR
         GO TO 85
C1 90    IF (DABS(D1) .GE. SIXTH) GO TO 95
   90    IF (ABS(D1) .GE. SIXTH) GO TO 95
         D1 = D1*SIXTN
         D2 = D2-FOUR
         GO TO 90
   95    CONTINUE
         JP1 = J+1
         IF (JP1 .GT. N) GO TO 105
C                                  DIVIDE BY PIVOT ELEMENT U(J,J)
         P = LU(J,J)
         DO 100 I=JP1,N
            LU(I,J) = LU(I,J)/P
  100    CONTINUE
  105 CONTINUE
C                                  PERFORM ACCURACY TEST
      IF (IDGT .EQ. 0) GO TO 9005
      P = 3*N+3
      WA = P*WREL
C1    IF (WA+10.D0**(-IDGT) .NE. WA) GO TO 9005
      IF (WA+10.0**(-IDGT) .NE. WA) GO TO 9005
      IER = 34
      GO TO 9000
C                                  ALGORITHMIC SINGULARITY
  110 IER = 129
      D1 = ZERO
      D2 = ZERO
 9000 CONTINUE
C                                  PRINT ERROR
      CALL UERTST(IER,6HLUDATF)
 9005 RETURN
      END
C     SUBROUTINE LUELMF (A,B,IPVT,N,IA,X)
C
C-LUELMF--------S/D-----LIBRARY 1---------------------------------------
C
C   FUNCTION            - ELIMINATION PART OF SOLUTION OF AX=B -
C                           FULL STORAGE MODE
C   USAGE               - CALL LUELMF (A,B,IPVT,N,IA,X)
C   PARAMETERS   A      - THE RESULT, LU, COMPUTED IN THE SUBROUTINE
C                           'LUDATF', WHERE L IS A LOWER TRIANGULAR
C                           MATRIX WITH ONES ON THE MAIN DIAGONAL. U IS
C                           UPPER TRIANGULAR. L AND U ARE STORED AS A
C                           SINGLE MATRIX A, AND THE UNIT DIAGONAL OF
C                           L IS NOT STORED
C                B      - B IS A VECTOR OF LENGTH N ON THE RIGHT HAND
C                           SIDE OF THE EQUATION AX=B
C                IPVT   - THE PERMUTATION MATRIX RETURNED FROM THE
C                           SUBROUTINE 'LUDATF', STORED AS AN N LENGTH
C                           VECTOR
C                N      - ORDER OF A AND NUMBER OF ROWS IN B
C                IA     - NUMBER OF ROWS IN THE DIMENSION STATEMENT
C                           FOR A IN THE CALLING PROGRAM.
C                X      - THE RESULT X
C   PRECISION           - SINGLE/DOUBLE
C   LANGUAGE            - FORTRAN
C-----------------------------------------------------------------------
C   LATEST REVISION     - APRIL 11,1975
C
      SUBROUTINE LUELMF (A,B,IPVT,N,IA,X)
C
      DIMENSION          A(IA,1),B(1),IPVT(1),X(1)
C0    DOUBLE PRECISION   A,B,X,SUM
C                                  SOLVE LY = B FOR Y
      DO 5 I=1,N
    5 X(I) = B(I)
      IW = 0
      DO 20 I=1,N
         IP = IPVT(I)
         SUM = X(IP)
         X(IP) = X(I)
         IF (IW .EQ. 0) GO TO 15
         IM1 = I-1
         DO 10 J=IW,IM1
            SUM = SUM-A(I,J)*X(J)
   10    CONTINUE
         GO TO 20
   15    IF (SUM .NE. 0.) IW = I
   20 X(I) = SUM
C                                  SOLVE UX = Y FOR X
      DO 30 IB=1,N
         I = N+1-IB
         IP1 = I+1
         SUM = X(I)
         IF (IP1 .GT. N) GO TO 30
         DO 25 J=IP1,N
            SUM = SUM-A(I,J)*X(J)
   25   CONTINUE
   30 X(I) = SUM/A(I,I)
      RETURN
      END
C     SUBROUTINE UERTST (IER,NAME)
C
C-UERTST----------------LIBRARY 1---------------------------------------
C
C   FUNCTION            - ERROR MESSAGE GENERATION
C   USAGE               - CALL UERTST(IER,NAME)
C   PARAMETERS   IER    - ERROR PARAMETER. TYPE + N  WHERE
C                           TYPE= 128 IMPLIES TERMINAL ERROR
C                                  64 IMPLIES WARNING WITH FIX
C                                  32 IMPLIES WARNING
C                           N   = ERROR CODE RELEVANT TO CALLING ROUTINE
C                NAME   - INPUT VECTOR CONTAINING THE NAME OF THE
C                           CALLING ROUTINE AS A SIX CHARACTER LITERAL
C                           STRING.
C   LANGUAGE            - FORTRAN
C-----------------------------------------------------------------------
C   LATEST REVISION     - JANUARY 18, 1974
C
      SUBROUTINE UERTST(IER,NAME)
C
      DIMENSION          ITYP(5,4),IBIT(4)
      DIMENSION NAME(2)
      CHARACTER*4 ITYP
      INTEGER            WARN,WARF,TERM,PRINTR
      EQUIVALENCE        (IBIT(1),WARN),(IBIT(2),WARF),(IBIT(3),TERM)
      DATA     ITYP      /'WARN','ING ','    ','    ','    ',
     *                    'WARN','ING(','WITH',' FIX',')   ',
     *                    'TERM','INAL','    ','    ','    ',
     *                    'NON-','DEFI','NED ','    ','    '/,
     *         IBIT      / 32,64,128,0/
      DATA     PRINTR    / 6/
      IER2=IER
      IF (IER2 .GE. WARN) GO TO 5
C                                  NON-DEFINED
      IER1=4
      GO TO 20
   5  IF (IER2 .LT. TERM) GO TO 10
C                                  TERMINAL
      IER1=3
      GO TO 20
  10  IF (IER2 .LT. WARF) GO TO 15
C                                  WARNING(WITH FIX)
      IER1=2
      GO TO 20
C                                  WARNING
  15  IER1=1
C                                  EXTRACT 'N'
  20  IER2=IER2-IBIT(IER1)
C                                  PRINT ERROR MESSAGE
      WRITE (PRINTR,25) (ITYP(I,IER1),I=1,5),NAME,IER2,IER
  25  FORMAT(' *** I M S L(UERTST) ***  ',5A4,4X,3A2,4X,I2,
     *   ' (IER = ',I3,')')
      RETURN
      END
      SUBROUTINE XTRAED(NRX)
C***************************
C  EDIT ROUTINE TO COMBINE
C  SEVERAL HAMMER REGIONS &
C  COLLAPSE TO 2-GROUPS
C
C FBB, 6/1/79   (UPDATED 7/9/79--SIG-REMOVAL FIXED)
C FBB, 9/13/79  FIXED THE CALC. OF 1-FAST D & SIG-TR,
C               FIXED NORMALIZATION OF THERMAL FLUX-VOL
C                    SO THAT REGION SPECTRA ARE CORRECT
C               REGION SIG-REMOVAL'S ARE NOW CORRECTED
C                    IN EDIT4 TO GIVE LEAKAGE CORRECTED
C                    CELL REMOVAL CORRECTLY
C***************************
      REAL*4 NF,NFI,IN,INI,XXX(1)
      INTEGER*4 G
      COMMON/FBEDIT/ FS(20,4),NF(20,4),AB(20,4),DUM(320),
     $               TR(20,4),
     $               IN(20,4),RV(20,4),FV(20,4),VOL(20),
     $              REGNAM(20),NEDRG,NHRG,
     $               FSI(20,5),NFI(20,5),ABI(20,5),DFI(20,5),
     $               TRI(20,5),
     $               INI(20,5),RVI(20,5),FVI(20,5),VOLI(20),
     $               FAV(20,5),ABFR(20,5),FSFR(20,5),SPECT(20,5),
     $          KOLD(20,20),TOTFVG(5),TOTAB(5),TOTFS(5)
      COMMON/LIMP/IDENT,LDUM1(10),HOL(9),LDUM2(580)
      DIMENSION PRTAB(5),PRTNF(5),TTAB(5),TTNF(5)
      EQUIVALENCE (XXX(1),FS(1,1))
      NHRG=NRX
CE    READ(5,5,END=999,ERR=999) NEDRG
      READ(55,5,END=999,ERR=999) NEDRG
    5 FORMAT(I2)
      IF(NEDRG.LE.0 .OR. NEDRG.GT.20)RETURN
CE    READ(5,10,ERR=999,END=999) (REGNAM(I),
      READ(55,10,ERR=999,END=999)(REGNAM(I),
     $          (KOLD(I,K),K=1,20), I=1,NEDRG)
   10 FORMAT(A4,20I3)
      WRITE(6,80) (I,REGNAM(I),(KOLD(I,K),K=1,20),I=1,NEDRG)
   80 FORMAT('1',130('=')/'0*****SUPER REGION EDIT*****'//
     $ (5X,'SUPER REGION  "',I2,2X,A4,2X,'"  CONSISTS OF HAMMER',
     $ ' REGIONS:  ', 20I3))
C-FIX NORMALIZATION OF THERMAL FLUX-VOL  (9/13/79)
      DO 12 J=1,NHRG
   12 FV(J,4)= FV(J,4)*.6248
C
C--4-GROUP SCHEME
      TOTNF=0.0
      DO 20 G=1,4
      TOTFVG(G)= 0.
      TOTAB(G)=0.
      TOTFS(G)=0.
      DO 15 J=1,NHRG
      TOTNF=TOTNF + NF(J,G)*FV(J,G)
      TOTFVG(G)=TOTFVG(G) + FV(J,G)
      TOTFS(G)=TOTFS(G)+FS(J,G)*FV(J,G)
   15 TOTAB(G)=TOTAB(G)+AB(J,G)*FV(J,G)
      DO 20 I=1,NEDRG
      FSI(I,G)= 0.
      NFI(I,G)=0.
      ABI(I,G)= 0.
      TRI(I,G)= 0.
      INI(I,G)= 0.
      RVI(I,G)= 0.
      FVI(I,G)= 0.
      VOLI(I)= 0.
      DO 20 KK=1,20
      K= KOLD(I,KK)
      IF(K.LE.0 .OR. K.GT.NRX) GO TO 20
      FVK=FV(K,G)
      FSI(I,G)= FSI(I,G) + FS(K,G)*FVK
      NFI(I,G)= NFI(I,G) + NF(K,G)*FVK
      ABI(I,G)= ABI(I,G) + AB(K,G)*FVK
      TRI(I,G)= TRI(I,G) + TR(K,G)*FVK
      INI(I,G)= INI(I,G) + IN(K,G)*FVK
      RVI(I,G)= RVI(I,G) + RV(K,G)*FVK
      VOLI(I) = VOLI(I) + VOL(K)
      FVI(I,G)= FVI(I,G) + FV(K,G)
   20 CONTINUE
C
C -------------------------------------------------------------------
C
C --   NEUTRON  BALANCE EDIT BY SUPER-REGION,NORMALIZED TO 1000. SOURCE
C      NEUTRONS (NUFISSION*FLUX*VOL IN THE CELL),
C      '  HORACIO NAKATA, JULY,1983,AT I.P.E.N.- BRAZIL
C
C -------------------------------------------------------------------
C
CE    DIMENSION PRTAB(5),PRTNF(5),TTAB(5),TTNF(5)
      WRITE(6,19) ((G,G=1,4),K=1,2)
   19 FORMAT(////,1X,130('-')/'0 NEUTRON BALANCE EDIT FOR SUPER-REGIONS
     1, NORMALIZED TO 1000.SOURCE NEUTRONS '////
     2 T19,1X, 'NEUTRON PRODUCTION BY GROUP IN SUPER-REGIONS ',
     3T72,1X, 'NEUTRON ABSORPTION BY GROUP IN SUPER-REGIONS '/
     4' ', T19,1X,43('-'), T72,1X,43('-')/
     5 '0', T17,1X,4('  GROUP',I2),'    TOTAL',
     6T70,1X,4('  GROUP',I2),'    TOTAL'/
     7' ',T17,1X,5('  -------'),T70,1X,5('  -------'))
      DO 18 I=1,5
      TTAB(I)=0.0
      TTNF(I)=0.0
   18 CONTINUE
      F1000=1000./TOTNF
      DO 21 I=1,NEDRG
      PRTNF(5)=0.0
      PRTAB(5)=0.0
      DO 22 G=1,4
      PRTNF(G)=NFI(I,G)*F1000
      PRTAB(G)=ABI(I,G)*F1000
      PRTNF(5)=PRTNF(5)+PRTNF(G)
      PRTAB(5)=PRTAB(5)+PRTAB(G)
   22 CONTINUE
      WRITE(6,23) I,PRTNF,PRTAB
   23 FORMAT('0','SUPER-REGION',I2,T17,1X,5F9.2,T70,1X,5F9.2)
      DO 24 G=1,5
      TTAB(G)=TTAB(G)+PRTAB(G)
      TTNF(G)=TTNF(G)+PRTNF(G)
   24 CONTINUE
   21 CONTINUE
      WRITE(6,25) TTNF,TTAB
   25 FORMAT(1X,61('-'),T72,1X,43('-')/'0',' T  O  T  A  L',T17,1X,
     1 5F9.2,T70,1X,5F9.2/' ',61('='),T72,1X,43('='))
C
C  -  END OF  NEUTRON BALANCE EDIT - HORACIO NAKATA,JULY,83,IPEN-BR
C----------------------------------------------------------------------
C
      TOTVOL=0.
      DO 30 J=1,NHRG
   30 TOTVOL=TOTVOL+VOL(J)
      TOTFVG(5)=TOTFVG(1)+TOTFVG(2)+TOTFVG(3)
      TOTAB(5)=TOTAB(1)+TOTAB(2)+TOTAB(3)
      TOTFS(5)=TOTFS(1)+TOTFS(2)+TOTFS(3)
      DO 70 I=1,NEDRG
      TOTFI=0.
      DO 40 G=1,4
      F= FVI(I,G)
      FSFR(I,G)= FSI(I,G)/TOTFS(G)
      NFI(I,G)= NFI(I,G)/F
      ABFR(I,G)= ABI(I,G)/TOTAB(G)
      TRI(I,G)= TRI(I,G)/F
      INI(I,G)= INI(I,G)/F
      RVI(I,G)= RVI(I,G)/F
      DFI(I,G)= 1./(3.*TRI(I,G))
      FAV(I,G)=(F/VOLI(I))/(TOTFVG(G)/TOTVOL)
      FSI(I,G)=FSI(I,G)/F
      ABI(I,G)=ABI(I,G)/F
   40 TOTFI=TOTFI+F
      DO 50 G=1,4
      SPECT(I,G)=FVI(I,G)/TOTFI
   50 CONTINUE
C--ONE FAST
      FSI(I,5)=0.
      NFI(I,5)=0.
      ABI(I,5)=0.
      FVI(I,5)=FVI(I,1)+FVI(I,2)+FVI(I,3)
      SPECT(I,5)=SPECT(I,1)+SPECT(I,2)+SPECT(I,3)
C 9/13/79
      DFI(I,5)=0.
C
      DO 60 G=1,3
      SI=SPECT(I,G)/SPECT(I,5)
      FSI(I,5)=FSI(I,5)+FSI(I,G)*SI
      ABI(I,5)=ABI(I,5)+ABI(I,G)*SI
      NFI(I,5)=NFI(I,5)+NFI(I,G)*SI
C
      DFI(I,5)=DFI(I,5)+DFI(I,G)*SI
C
   60 CONTINUE
      FSFR(I,5)=FSI(I,5)*FVI(I,5)/TOTFS(5)
      ABFR(I,5)=ABI(I,5)*FVI(I,5)/TOTAB(5)
      FAV(I,5)=FVI(I,5)/VOLI(I)/(TOTFVG(5)/TOTVOL)
C
      TRI(I,5)=1./(3.*DFI(I,5))
C
      RVI(I,5)=RVI(I,3)*SPECT(I,3)/SPECT(I,5)
   70 INI(I,5)=TRI(I,5)-ABI(I,5)-RVI(I,5)
      JG=4
      JF=1
      JT=2
      DO 150 I=1,NEDRG
      VFRI=VOLI(I)/TOTVOL
      WRITE(6,90) I,REGNAM(I),VFRI
      WRITE(6,100)(G,JG,FSI(I,G),NFI(I,G),ABI(I,G),
     $   TRI(I,G),RVI(I,G),INI(I,G),DFI(I,G),
     $      G=1,4),JF,JT,FSI(I,5),NFI(I,5),ABI(I,5),
     $      TRI(I,5),RVI(I,5),INI(I,5),DFI(I,5),
     $      JT,JT,FSI(I,4),NFI(I,4),ABI(I,4),TRI(I,4),
     $      RVI(I,4),INI(I,4),DFI(I,4)
   90 FORMAT('1',130('-')/'0SUPER REGION #',I2,2X,A4,5X,
     $      'REGION VOLUME FRACTION=',F8.6//
     1 '  MACROSCOPIC CROSS-SECTIONS FOR THE SUPER-REGION  '/
     $      '0GROUP',T10,'FISSION',T25,'NU-FISSION',
     $    T40,'ABSORPTION',T55,'TRANSPORT',T70,'REMOVAL',T85,
     $    'IN-GP SCAT',T100,
     $    'DIFFUSION')
  100 FORMAT(2X,I1,' OF ',I1,T10,1PE13.5,T25,E13.5,T40,
     $     E13.5,T55,E13.5,T70,E13.5,T85,E13.5,T100,E13.5)
C
C*****TEMPORARY 2DB 2 GROUP CROSS-SECTION OUTPUT
C
      TEZ=1.000
C     WRITE(1,103) REGNAM(I),TEZ,TEZ,IDENT,HOL
C     WRITE(1,105) FSI(I,5),ABI(I,5),NFI(I,5),TRI(I,5),
C    $             INI(I,5),RVI(I,4),FSI(I,4),ABI(I,4),
C    $             NFI(I,4),TRI(I,4),INI(I,4),RVI(I,5)
  103 FORMAT(A4,2X,2F6.3,2X,'<HAMMER#',I5,2X,9A4,'>')
  105 FORMAT(1P6E12.5)
C
C*****
C
      WRITE(6,110)
  110 FORMAT(//////////' REGION/CELL RATIOS BY GROUP: '/
     $    ' GROUP',T10,'FLUX',T25,'FLUX*VOL',T40,'ABSORPTION',
     $    T55,'FISSION')
      FVI(I,5)=FVI(I,5)/TOTFVG(5)
      DO 120 G=1,4
      FVI(I,G)=FVI(I,G)/TOTFVG(G)
  120 WRITE(6,100) G,JG,FAV(I,G),FVI(I,G),ABFR(I,G),FSFR(I,G)
      WRITE(6,100)JF,JT,FAV(I,5),FVI(I,5),ABFR(I,5),FSFR(I,5)
      WRITE(6,100)JT,JT,FAV(I,4),FVI(I,4),ABFR(I,4),FSFR(I,4)
  150 WRITE(6,130) (SPECT(I,G),G=1,4)
  130 FORMAT('0NORMALIZED REGION SPECTRUM (1,2,3,4):',
     $    4G15.6/'0',130('-')//)
  999 RETURN
      END

      subroutine Inputcobra
      CHARACTER*76 HOL
      Character*3 HOL2
      Character*45 HOL3
      Character*65 HOL4
      Character*5 HOL5
      Character*10 HOL6
      Character*70 HOL7
      Character*20 HOL8
      Character*1 HOL9
      Character*54 HOL10
      INTEGER NI1,NI2,NI3,NI4,IREC,NLSC,I
	REAL S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,
     + S18,S19,S20,S21
C
	OPEN(UNIT=1,FILE='cbdatold.DAT',STATUS='OLD')
	OPEN(UNIT=2,FILE='DENS.OUT',STATUS='OLD')
      OPEN(UNIT=3,FILE='cbdat.DAT')
C
	REWIND(1)                                                       !zera o ponteiro para o arquivo definido como 1!
	REWIND(2)                                                       !zera o ponteiro para o arquivo definido como 2!
      I=0
C
1     I=I+1
      READ(1,1000)HOL

C
      Write(3,1000)HOL
      if(I.LT.5) go to 1
      I=0
2     I=I+1
      READ(2,1000)HOL

      if(I.LT.13) go to 2

      Read(1,1001) NI1,S1
      Write(3,1001) NI1,S1
      Read(1,1010) S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,HOL2
      Read(2,1003) NI1, S15,S2,S16,S18,S19
      Read(2,1003) NI1, S15,S4,S16,S18,S19
      Read(2,1003) NI1, S15,S6,S16,S18,S19
      Read(2,1003) NI1, S15,S8,S16,S18,S19
      Read(2,1003) NI1, S15,S10,S16,S18,S19
      Read(2,1003) NI1, S15,S12,S16,S18,S19
      Read(2,1003) NI1, S15,S14,S16,S18,S19
      Write(3,1010)S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,HOL2

      I=0
C
3     I=I+1
      Read(1,1009) S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14
      Read(2,1003) NI1, S15,S2,S16,S18,S19
      Read(2,1003) NI1, S15,S4,S16,S18,S19
      Read(2,1003) NI1, S15,S6,S16,S18,S19
      Read(2,1003) NI1, S15,S8,S16,S18,S19
      Read(2,1003) NI1, S15,S10,S16,S18,S19
      Read(2,1003) NI1, S15,S12,S16,S18,S19
      Read(2,1003) NI1, S15,S14,S16,S18,S19
      Write(3,1009)S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14
      if(I.LT.3) go to 3
      Read(1,1008) S1,S2,S3,S4
      Read(2,1003) NI1, S15,S2,S16,S18,S19
      Read(2,1003) NI1, S15,S4,S16,S18,S19
      Write(3,1008)S1,S2,S3,S4
      read(2,1015)HOL9
      read(2,1016)HOL10
      read(2,1015)HOL9
      S21=0
      I=0
301   I=I+1
      Read(2,1017) S1,S2,S3,S4,S5
      Read(2,1015)HOL9
      Read(2,1017) S6,S7,S8,S9,S10
      Read(2,1015)HOL9
      Read(2,1017) S11,S12,S13,S14,S15
      Read(2,1015)HOL9
      S16= (S1+16*S6+S11)/18
      S17= (S2+16*S7+S12)/18
      S18= (S3+16*S8+S13)/18
      S19= (S4+16*S9+S14)/18
      S20= (S5+16*S10+S15)/18
      if(S21.LT.S16) S21=S16
      if(S21.LT.S17) S21=S17
      if(S21.LT.S18) S21=S18
      if(S21.LT.S19) S21=S19
      if(S21.LT.S20) S21=S20
      if(I.LT.5) go to 301
      write(3,1018) S21
      Read(1,1004) S1


      I=0

4     I=I+1
      READ(1,1000)HOL
      Write(3,1000)HOL
      if(I.LT.2) go to 4
      READ(1,1005)HOL3
      Write(3,1005)HOL3
      I=0
5     I=I+1
      READ(1,1000)HOL
      Write(3,1000)HOL
      if(I.LT.2) go to 5
      READ(1,1006)HOL4
      Write(3,1006)HOL4
      READ(1,1007)HOL5
      Write(3,1007)HOL5
      READ(1,1011)HOL6
      Write(3,1011)HOL6
      READ(1,1007)HOL5
      Write(3,1007)HOL5
      READ(1,1012)HOL7
      Write(3,1012)HOL7
      READ(1,1011)HOL6
      Write(3,1011)HOL6
      READ(1,1013)HOL8
      Write(3,1013)HOL8
      READ(1,1013)HOL8
      Write(3,1013)HOL8
      READ(1,1007)HOL5
      Write(3,1007)HOL5
      READ(1,1007)HOL5
      Write(3,1007)HOL5
      READ(1,1000)HOL
      Write(3,1000)HOL
      Write(3,1014)
      Write(3,1014)
      Write(3,1014)
      Write(3,1014)
      Write(3,1014)
      Write(3,1014)


C      I=0
C5     I=I+1
C      READ(1,1005)
C      Write(3,1005)
C      if(I.LT.7) go to 4

 300  CLOSE(1)                                                          !Fechar arquivo 1!
      CLOSE(2)                                                        !Fechar arquivo 1!
      CLOSE(3)                                                        !Fechar arquivo 3!
C
1000  FORMAT(A76)                                                      !Formato 100 caracteres!
1001  FORMAT(3X,I2,F5.4)
1002  Format(7(F5.4,F5.3))
1003  FORMAT(2x,I2,6X,F5.3,6X,F5.3,6X,F5.3,6X,F5.3,6X,F5.3)
1010  Format(7(F5.4,F5.3),A3)
1009  Format(7(F5.4,F5.3))
1008  Format(F5.4,F5.3,F5.3,F5.3)
1004  Format(F5.3)
1005  Format(A45)
1006  Format(A65)
1007  Format(A5)
1011  Format(A10)
1012  Format(A70)
1013  Format(A20)
1014  Format('')
1015  Format(A1)
1016  Format(A54)
1017  Format(5(2X,F5.3))
1018  Format(F5.3)
C1005  Format(/)

      return
	END

